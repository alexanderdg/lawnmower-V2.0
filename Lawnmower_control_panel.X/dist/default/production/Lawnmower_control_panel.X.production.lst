

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Jul 13 17:04:12 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F25K83
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=4,class=CODE,delta=1
    13                           	psect	text5,global,reloc=4,class=CODE,delta=1
    14                           	psect	text6,global,reloc=4,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19  0000                     
    20                           ; Version 2.05
    21                           ; Generated 20/12/2018 GMT
    22                           ; 
    23                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F25K83 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     _TXB0DLCbits	set	14309
    55  0000                     _TXB0SIDH	set	14305
    56  0000                     _TXB0SIDLbits	set	14306
    57  0000                     _TXB0D7	set	14317
    58  0000                     _TXB0D6	set	14316
    59  0000                     _TXB0D5	set	14315
    60  0000                     _TXB0D4	set	14314
    61  0000                     _TXB0D3	set	14313
    62  0000                     _TXB0D2	set	14312
    63  0000                     _TXB0D1	set	14311
    64  0000                     _TXB0D0	set	14310
    65  0000                     _TXB0CONbits	set	14304
    66  0000                     _RXB1CONbits	set	14320
    67  0000                     _RXM1SIDLbits	set	14269
    68  0000                     _RXM1SIDH	set	14268
    69  0000                     _RXF1SIDLbits	set	14245
    70  0000                     _RXF1SIDH	set	14244
    71  0000                     _RXM0SIDLbits	set	14265
    72  0000                     _RXM0SIDH	set	14264
    73  0000                     _RXF0SIDLbits	set	14241
    74  0000                     _RXF0SIDH	set	14240
    75  0000                     _BRGCON1bits	set	14083
    76  0000                     _PIR5bits	set	14757
    77  0000                     _PIE5bits	set	14741
    78  0000                     _PIR1bits	set	14753
    79  0000                     _PIE1bits	set	14737
    80  0000                     _OSCCON1	set	14809
    81  0000                     _RB2PPS	set	14858
    82  0000                     _ANSELC	set	14944
    83  0000                     _ANSELBbits	set	14928
    84  0000                     _INT0PPS	set	15040
    85  0000                     _ANSELAbits	set	14912
    86  0000                     _ADRESL	set	16111
    87  0000                     _ADRESH	set	16112
    88  0000                     _ADCON0bits	set	16120
    89  0000                     _ADPCHbits	set	16113
    90  0000                     _CANSTATbits	set	16270
    91  0000                     _CANCONbits	set	16271
    92  0000                     _TRISBbits	set	16323
    93  0000                     _TRISC	set	16324
    94  0000                     _PORTCbits	set	16332
    95  0000                     _RXB0D0	set	16262
    96  0000                     _RXB0CONbits	set	16256
    97  0000                     _PORTBbits	set	16331
    98  0000                     _INTCON0bits	set	16338
    99  0000                     _TRISAbits	set	16322
   100                           
   101                           ; #config settings
   102  0000                     
   103                           	psect	cinit
   104  0002FC                     __pcinit:
   105                           	opt callstack 0
   106  0002FC                     start_initialization:
   107                           	opt callstack 0
   108  0002FC                     __initialization:
   109                           	opt callstack 0
   110                           
   111                           ; Clear objects allocated to COMRAM (11 bytes)
   112  0002FC  EE00  F01D         	lfsr	0,__pbssCOMRAM
   113  000300  0E0B               	movlw	11
   114  000302                     clear_0:
   115  000302  6AEE               	clrf	postinc0,c
   116  000304  06E8               	decf	wreg,f,c
   117  000306  E1FD               	bnz	clear_0
   118                           
   119                           ;
   120                           ; Setup IVTBASE
   121                           ;
   122  000308  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   123  00030A  6ED5               	movwf	213,c
   124  00030C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   125  00030E  6ED6               	movwf	214,c
   126  000310  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   127  000312  6ED7               	movwf	215,c
   128  000314                     end_of_initialization:
   129                           	opt callstack 0
   130  000314                     __end_of__initialization:
   131                           	opt callstack 0
   132  000314  0E00               	movlw	low (__Lmediumconst shr (0+16))
   133  000316  6EF8               	movwf	tblptru,c
   134  000318  0100               	movlb	0
   135  00031A  EFC1  F000         	goto	_main	;jump to C main() function
   136                           
   137                           	psect	bssCOMRAM
   138  00001D                     __pbssCOMRAM:
   139                           	opt callstack 0
   140  00001D                     _tick_count:
   141                           	opt callstack 0
   142  00001D                     	ds	2
   143  00001F                     _ADCvalueLow1:
   144                           	opt callstack 0
   145  00001F                     	ds	2
   146  000021                     _ADCvalueHigh1:
   147                           	opt callstack 0
   148  000021                     	ds	2
   149  000023                     _ADCvalueLow0:
   150                           	opt callstack 0
   151  000023                     	ds	2
   152  000025                     _ADCvalueHigh0:
   153                           	opt callstack 0
   154  000025                     	ds	2
   155  000027                     _status:
   156                           	opt callstack 0
   157  000027                     	ds	1
   158                           
   159                           	psect	cstackCOMRAM
   160  000001                     __pcstackCOMRAM:
   161                           	opt callstack 0
   162  000001                     sendCANmessage@id:
   163                           	opt callstack 0
   164                           
   165                           ; 2 bytes @ 0x0
   166  000001                     	ds	2
   167  000003                     sendCANmessage@message:
   168                           	opt callstack 0
   169                           
   170                           ; 2 bytes @ 0x2
   171  000003                     	ds	2
   172  000005                     sendCANmessage@length:
   173                           	opt callstack 0
   174                           
   175                           ; 2 bytes @ 0x4
   176  000005                     	ds	2
   177  000007                     ??_sendCANmessage:
   178                           
   179                           ; 1 bytes @ 0x6
   180  000007                     	ds	2
   181  000009                     ??_canRecInt:
   182                           
   183                           ; 1 bytes @ 0x8
   184  000009                     	ds	2
   185  00000B                     canRecInt@message:
   186                           	opt callstack 0
   187                           
   188                           ; 16 bytes @ 0xA
   189  00000B                     	ds	16
   190  00001B                     Lcd_Port@a:
   191                           	opt callstack 0
   192                           
   193                           ; 1 bytes @ 0x1A
   194  00001B                     	ds	1
   195  00001C                     ??_main:
   196                           
   197                           ; 1 bytes @ 0x1B
   198  00001C                     	ds	1
   199                           
   200 ;;
   201 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   202 ;;
   203 ;; *************** function _main *****************
   204 ;; Defined at:
   205 ;;		line 84 in file "MainCode.c"
   206 ;; Parameters:    Size  Location     Type
   207 ;;		None
   208 ;; Auto vars:     Size  Location     Type
   209 ;;		None
   210 ;; Return value:  Size  Location     Type
   211 ;;                  1    wreg      void 
   212 ;; Registers used:
   213 ;;		wreg, status,2, status,0, cstack
   214 ;; Tracked objects:
   215 ;;		On entry : 0/0
   216 ;;		On exit  : 0/0
   217 ;;		Unchanged: 0/0
   218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   219 ;;      Params:         0       0       0       0       0       0       0       0       0
   220 ;;      Locals:         0       0       0       0       0       0       0       0       0
   221 ;;      Temps:          1       0       0       0       0       0       0       0       0
   222 ;;      Totals:         1       0       0       0       0       0       0       0       0
   223 ;;Total ram usage:        1 bytes
   224 ;; Hardware stack levels required when called:    4
   225 ;; This function calls:
   226 ;;		_Lcd_Init
   227 ;;		_initCAN
   228 ;; This function is called by:
   229 ;;		Startup code after reset
   230 ;; This function uses a non-reentrant model
   231 ;;
   232                           
   233                           	psect	text0
   234  000182                     __ptext0:
   235                           	opt callstack 0
   236  000182                     _main:
   237                           	opt callstack 27
   238                           
   239                           ;incstack = 0
   240  000182  0E60               	movlw	96
   241  000184  0139               	movlb	57	; () banked
   242  000186  6FD9               	movwf	217,b	;volatile
   243                           
   244                           ; BSR set to: 57
   245  000188  EC0A  F001         	call	_initCAN	;wreg free
   246  00018C  013A               	movlb	58	; () banked
   247  00018E  9140               	bcf	64,0,b	;volatile
   248                           
   249                           ; BSR set to: 58
   250  000190  0E00               	movlw	0
   251  000192  6FC0               	movwf	192,b	;volatile
   252                           
   253                           ; BSR set to: 58
   254  000194  80C2               	bsf	16322,0,c	;volatile
   255                           
   256                           ; BSR set to: 58
   257  000196  0139               	movlb	57	; () banked
   258  000198  8191               	bsf	145,0,b	;volatile
   259                           
   260                           ; BSR set to: 57
   261  00019A  91A1               	bcf	161,0,b	;volatile
   262                           
   263                           ; BSR set to: 57
   264  00019C  90D2               	bcf	16338,0,c	;volatile
   265                           
   266                           ; BSR set to: 57
   267  00019E  8CD2               	bsf	16338,6,c	;volatile
   268                           
   269                           ; BSR set to: 57
   270  0001A0  8ED2               	bsf	16338,7,c	;volatile
   271                           
   272                           ; BSR set to: 57
   273  0001A2  9AD2               	bcf	16338,5,c	;volatile
   274                           
   275                           ; BSR set to: 57
   276  0001A4  8195               	bsf	149,0,b	;volatile
   277                           
   278                           ; BSR set to: 57
   279  0001A6  8395               	bsf	149,1,b	;volatile
   280                           
   281                           ; BSR set to: 57
   282  0001A8  0E00               	movlw	0
   283  0001AA  6E1E               	movwf	_tick_count+1,c	;volatile
   284  0001AC  0E04               	movlw	4
   285  0001AE  6E1D               	movwf	_tick_count,c	;volatile
   286                           
   287                           ; BSR set to: 57
   288  0001B0  8ED2               	bsf	16338,7,c	;volatile
   289                           
   290                           ; BSR set to: 57
   291  0001B2  0E00               	movlw	0
   292  0001B4  6E1E               	movwf	_tick_count+1,c	;volatile
   293  0001B6  0E05               	movlw	5
   294  0001B8  6E1D               	movwf	_tick_count,c	;volatile
   295                           
   296                           ; BSR set to: 57
   297  0001BA  EC8F  F001         	call	_Lcd_Init	;wreg free
   298  0001BE  0E00               	movlw	0
   299  0001C0  6E1E               	movwf	_tick_count+1,c	;volatile
   300  0001C2  0E06               	movlw	6
   301  0001C4  6E1D               	movwf	_tick_count,c	;volatile
   302  0001C6  0E00               	movlw	0
   303  0001C8  6E1E               	movwf	_tick_count+1,c	;volatile
   304  0001CA  0E07               	movlw	7
   305  0001CC  6E1D               	movwf	_tick_count,c	;volatile
   306  0001CE  0E00               	movlw	0
   307  0001D0  6E1E               	movwf	_tick_count+1,c	;volatile
   308  0001D2  0E08               	movlw	8
   309  0001D4  6E1D               	movwf	_tick_count,c	;volatile
   310  0001D6  0E00               	movlw	0
   311  0001D8  6E1E               	movwf	_tick_count+1,c	;volatile
   312  0001DA  0E0A               	movlw	10
   313  0001DC  6E1D               	movwf	_tick_count,c	;volatile
   314  0001DE                     l1050:
   315                           
   316                           ;MainCode.c: 142:         _delay((unsigned long)((1)*(64000000/4000.0)));
   317  0001DE  0E15               	movlw	21
   318  0001E0  6E1C               	movwf	??_main& (0+255),c
   319  0001E2  0EC6               	movlw	198
   320  0001E4                     u197:
   321  0001E4  2EE8               	decfsz	wreg,f,c
   322  0001E6  D7FE               	bra	u197
   323  0001E8  2E1C               	decfsz	??_main& (0+255),f,c
   324  0001EA  D7FC               	bra	u197
   325  0001EC  D000               	nop2	
   326                           
   327                           ;MainCode.c: 143:         _delay((unsigned long)((1)*(64000000/4000.0)));
   328  0001EE  0E15               	movlw	21
   329  0001F0  6E1C               	movwf	??_main& (0+255),c
   330  0001F2  0EC6               	movlw	198
   331  0001F4                     u207:
   332  0001F4  2EE8               	decfsz	wreg,f,c
   333  0001F6  D7FE               	bra	u207
   334  0001F8  2E1C               	decfsz	??_main& (0+255),f,c
   335  0001FA  D7FC               	bra	u207
   336  0001FC  D000               	nop2	
   337                           
   338                           ;MainCode.c: 144:         _delay((unsigned long)((1)*(64000000/4000.0)));
   339  0001FE  0E15               	movlw	21
   340  000200  6E1C               	movwf	??_main& (0+255),c
   341  000202  0EC6               	movlw	198
   342  000204                     u217:
   343  000204  2EE8               	decfsz	wreg,f,c
   344  000206  D7FE               	bra	u217
   345  000208  2E1C               	decfsz	??_main& (0+255),f,c
   346  00020A  D7FC               	bra	u217
   347  00020C  D000               	nop2	
   348                           
   349                           ;MainCode.c: 145:         tick_count ++;
   350  00020E  4A1D               	infsnz	_tick_count,f,c	;volatile
   351  000210  2A1E               	incf	_tick_count+1,f,c	;volatile
   352  000212  D7E5               	goto	l1050
   353  000214                     __end_of_main:
   354                           	opt callstack 0
   355                           
   356 ;; *************** function _initCAN *****************
   357 ;; Defined at:
   358 ;;		line 405 in file "MainCode.c"
   359 ;; Parameters:    Size  Location     Type
   360 ;;		None
   361 ;; Auto vars:     Size  Location     Type
   362 ;;		None
   363 ;; Return value:  Size  Location     Type
   364 ;;                  1    wreg      void 
   365 ;; Registers used:
   366 ;;		wreg, status,2, status,0
   367 ;; Tracked objects:
   368 ;;		On entry : 0/0
   369 ;;		On exit  : 0/0
   370 ;;		Unchanged: 0/0
   371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   372 ;;      Params:         0       0       0       0       0       0       0       0       0
   373 ;;      Locals:         0       0       0       0       0       0       0       0       0
   374 ;;      Temps:          0       0       0       0       0       0       0       0       0
   375 ;;      Totals:         0       0       0       0       0       0       0       0       0
   376 ;;Total ram usage:        0 bytes
   377 ;; Hardware stack levels used:    1
   378 ;; Hardware stack levels required when called:    2
   379 ;; This function calls:
   380 ;;		Nothing
   381 ;; This function is called by:
   382 ;;		_main
   383 ;; This function uses a non-reentrant model
   384 ;;
   385                           
   386                           	psect	text1
   387  000214                     __ptext1:
   388                           	opt callstack 0
   389  000214                     _initCAN:
   390                           	opt callstack 28
   391                           
   392                           ;MainCode.c: 410:     RB2PPS = 0b110011;
   393                           
   394                           ;incstack = 0
   395  000214  0E33               	movlw	51
   396  000216  013A               	movlb	58	; () banked
   397  000218  6F0A               	movwf	10,b	;volatile
   398                           
   399                           ; BSR set to: 58
   400                           ;MainCode.c: 412:     TRISBbits.TRISB2 = 0;
   401  00021A  94C3               	bcf	16323,2,c	;volatile
   402                           
   403                           ; BSR set to: 58
   404                           ;MainCode.c: 413:     TRISBbits.TRISB3 = 1;
   405  00021C  86C3               	bsf	16323,3,c	;volatile
   406                           
   407                           ; BSR set to: 58
   408                           ;MainCode.c: 415:     ANSELBbits.ANSELB2 = 0;
   409  00021E  9550               	bcf	80,2,b	;volatile
   410                           
   411                           ; BSR set to: 58
   412                           ;MainCode.c: 416:     ANSELBbits.ANSELB3 = 0;
   413  000220  9750               	bcf	80,3,b	;volatile
   414                           
   415                           ; BSR set to: 58
   416                           ;MainCode.c: 418:     CANCONbits.REQOP2 = 1;
   417  000222  8E8F               	bsf	16271,7,c	;volatile
   418                           
   419                           ; BSR set to: 58
   420                           ;MainCode.c: 419:     CANCONbits.REQOP1 = 0;
   421  000224  9C8F               	bcf	16271,6,c	;volatile
   422                           
   423                           ; BSR set to: 58
   424                           ;MainCode.c: 420:     CANCONbits.REQOP0 = 0;
   425  000226  9A8F               	bcf	16271,5,c	;volatile
   426  000228                     l916:
   427  000228  388E               	swapf	16270,w,c	;volatile
   428  00022A  32E8               	rrcf	wreg,f,c
   429  00022C  0B07               	andlw	7
   430  00022E  0A04               	xorlw	4
   431  000230  A4D8               	btfss	status,2,c
   432  000232  D7FA               	goto	l916
   433                           
   434                           ;MainCode.c: 424:     BRGCON1bits.BRP = 0b011111;
   435  000234  0137               	movlb	55	; () banked
   436  000236  5103               	movf	3,w,b	;volatile
   437  000238  0BC0               	andlw	-64
   438  00023A  091F               	iorlw	31
   439  00023C  6F03               	movwf	3,b	;volatile
   440                           
   441                           ;MainCode.c: 426:     RXF0SIDH = 0;
   442  00023E  0E00               	movlw	0
   443  000240  6FA0               	movwf	160,b	;volatile
   444                           
   445                           ;MainCode.c: 427:     RXF0SIDLbits.SID = 2;
   446  000242  51A1               	movf	161,w,b	;volatile
   447  000244  0B1F               	andlw	-225
   448  000246  0940               	iorlw	64
   449  000248  6FA1               	movwf	161,b	;volatile
   450                           
   451                           ; BSR set to: 55
   452                           ;MainCode.c: 428:     RXF0SIDLbits.EXIDEN = 0;
   453  00024A  97A1               	bcf	161,3,b	;volatile
   454                           
   455                           ; BSR set to: 55
   456                           ;MainCode.c: 429:     RXM0SIDH = 255;
   457  00024C  69B8               	setf	184,b	;volatile
   458                           
   459                           ;MainCode.c: 430:     RXM0SIDLbits.SID = 0b111;
   460  00024E  0EE0               	movlw	224
   461  000250  13B9               	iorwf	185,f,b	;volatile
   462                           
   463                           ; BSR set to: 55
   464                           ;MainCode.c: 431:     RXB0CONbits.RXM1 = 0;
   465  000252  9C80               	bcf	16256,6,c	;volatile
   466                           
   467                           ; BSR set to: 55
   468                           ;MainCode.c: 432:     RXB0CONbits.RXM0 = 1;
   469  000254  8A80               	bsf	16256,5,c	;volatile
   470                           
   471                           ; BSR set to: 55
   472                           ;MainCode.c: 433:     RXB0CONbits.FILHIT0 = 0;
   473  000256  9080               	bcf	16256,0,c	;volatile
   474                           
   475                           ; BSR set to: 55
   476                           ;MainCode.c: 435:     RXF1SIDH = 255;
   477  000258  69A4               	setf	164,b	;volatile
   478                           
   479                           ;MainCode.c: 436:     RXF1SIDLbits.SID = 0b111;
   480  00025A  0EE0               	movlw	224
   481  00025C  13A5               	iorwf	165,f,b	;volatile
   482                           
   483                           ; BSR set to: 55
   484                           ;MainCode.c: 437:     RXF1SIDLbits.EXIDEN = 0;
   485  00025E  97A5               	bcf	165,3,b	;volatile
   486                           
   487                           ; BSR set to: 55
   488                           ;MainCode.c: 438:     RXM1SIDH = 255;
   489  000260  69BC               	setf	188,b	;volatile
   490                           
   491                           ;MainCode.c: 439:     RXM1SIDLbits.SID = 0b111;
   492  000262  0EE0               	movlw	224
   493  000264  13BD               	iorwf	189,f,b	;volatile
   494                           
   495                           ; BSR set to: 55
   496                           ;MainCode.c: 440:     RXB1CONbits.RXM1 = 0;
   497  000266  9DF0               	bcf	240,6,b	;volatile
   498                           
   499                           ; BSR set to: 55
   500                           ;MainCode.c: 441:     RXB1CONbits.RXM0 = 1;
   501  000268  8BF0               	bsf	240,5,b	;volatile
   502                           
   503                           ; BSR set to: 55
   504                           ;MainCode.c: 442:     RXB1CONbits.FILHIT0 = 0;
   505  00026A  91F0               	bcf	240,0,b	;volatile
   506                           
   507                           ;MainCode.c: 444:     CANCONbits.REQOP = 0b000;
   508  00026C  0E1F               	movlw	-225
   509  00026E  168F               	andwf	16271,f,c	;volatile
   510  000270                     l942:
   511  000270  388E               	swapf	16270,w,c	;volatile
   512  000272  32E8               	rrcf	wreg,f,c
   513  000274  0B07               	andlw	7
   514  000276  0900               	iorlw	0
   515  000278  B4D8               	btfsc	status,2,c
   516  00027A  0012               	return	
   517  00027C  D7F9               	goto	l942
   518  00027E                     __end_of_initCAN:
   519                           	opt callstack 0
   520                           
   521 ;; *************** function _Lcd_Init *****************
   522 ;; Defined at:
   523 ;;		line 299 in file "MainCode.c"
   524 ;; Parameters:    Size  Location     Type
   525 ;;		None
   526 ;; Auto vars:     Size  Location     Type
   527 ;;		None
   528 ;; Return value:  Size  Location     Type
   529 ;;                  1    wreg      void 
   530 ;; Registers used:
   531 ;;		wreg, status,2, cstack
   532 ;; Tracked objects:
   533 ;;		On entry : 0/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   537 ;;      Params:         0       0       0       0       0       0       0       0       0
   538 ;;      Locals:         0       0       0       0       0       0       0       0       0
   539 ;;      Temps:          0       0       0       0       0       0       0       0       0
   540 ;;      Totals:         0       0       0       0       0       0       0       0       0
   541 ;;Total ram usage:        0 bytes
   542 ;; Hardware stack levels used:    1
   543 ;; Hardware stack levels required when called:    3
   544 ;; This function calls:
   545 ;;		_Lcd_Port
   546 ;; This function is called by:
   547 ;;		_main
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551                           	psect	text2
   552  00031E                     __ptext2:
   553                           	opt callstack 0
   554  00031E                     _Lcd_Init:
   555                           	opt callstack 27
   556                           
   557                           ;MainCode.c: 301:     TRISC = 0x00;
   558                           
   559                           ;incstack = 0
   560  00031E  0E00               	movlw	0
   561  000320  6EC4               	movwf	16324,c	;volatile
   562                           
   563                           ;MainCode.c: 302:     TRISBbits.TRISB0 = 0;
   564  000322  90C3               	bcf	16323,0,c	;volatile
   565                           
   566                           ;MainCode.c: 303:     ANSELBbits.ANSELB0 = 0;
   567  000324  013A               	movlb	58	; () banked
   568  000326  9150               	bcf	80,0,b	;volatile
   569                           
   570                           ; BSR set to: 58
   571                           ;MainCode.c: 304:     PORTBbits.RB0 = 1;
   572  000328  80CB               	bsf	16331,0,c	;volatile
   573                           
   574                           ;MainCode.c: 305:     ANSELC = 0x00;
   575  00032A  0E00               	movlw	0
   576  00032C  6F60               	movwf	96,b	;volatile
   577                           
   578                           ; BSR set to: 58
   579                           ;MainCode.c: 306:     Lcd_Port(0x00);
   580  00032E  0E00               	movlw	0
   581  000330  EC68  F001         	call	_Lcd_Port
   582  000334  0012               	return		;funcret
   583  000336                     __end_of_Lcd_Init:
   584                           	opt callstack 0
   585                           
   586 ;; *************** function _Lcd_Port *****************
   587 ;; Defined at:
   588 ;;		line 225 in file "MainCode.c"
   589 ;; Parameters:    Size  Location     Type
   590 ;;  a               1    wreg     unsigned char 
   591 ;; Auto vars:     Size  Location     Type
   592 ;;  a               1   26[COMRAM] unsigned char 
   593 ;; Return value:  Size  Location     Type
   594 ;;                  1    wreg      void 
   595 ;; Registers used:
   596 ;;		wreg
   597 ;; Tracked objects:
   598 ;;		On entry : 0/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   602 ;;      Params:         0       0       0       0       0       0       0       0       0
   603 ;;      Locals:         1       0       0       0       0       0       0       0       0
   604 ;;      Temps:          0       0       0       0       0       0       0       0       0
   605 ;;      Totals:         1       0       0       0       0       0       0       0       0
   606 ;;Total ram usage:        1 bytes
   607 ;; Hardware stack levels used:    1
   608 ;; Hardware stack levels required when called:    2
   609 ;; This function calls:
   610 ;;		Nothing
   611 ;; This function is called by:
   612 ;;		_Lcd_Init
   613 ;;		_Lcd_Cmd
   614 ;;		_Lcd_Write_Char
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618                           	psect	text3
   619  0002D0                     __ptext3:
   620                           	opt callstack 0
   621  0002D0                     _Lcd_Port:
   622                           	opt callstack 27
   623                           
   624                           ;incstack = 0
   625                           ;Lcd_Port@a stored from wreg
   626  0002D0  6E1B               	movwf	Lcd_Port@a,c
   627                           
   628                           ;MainCode.c: 225: void Lcd_Port(char a);MainCode.c: 226: {;MainCode.c: 227:  if(a & 1)
   629  0002D2  A01B               	btfss	Lcd_Port@a,0,c
   630  0002D4  D002               	goto	l142
   631                           
   632                           ;MainCode.c: 228:   PORTCbits.RC2 = 1;
   633  0002D6  84CC               	bsf	16332,2,c	;volatile
   634  0002D8  D001               	goto	l888
   635  0002DA                     l142:
   636                           
   637                           ;MainCode.c: 230:   PORTCbits.RC2 = 0;
   638  0002DA  94CC               	bcf	16332,2,c	;volatile
   639  0002DC                     l888:
   640                           
   641                           ;MainCode.c: 232:  if(a & 2)
   642  0002DC  A21B               	btfss	Lcd_Port@a,1,c
   643  0002DE  D002               	goto	l144
   644                           
   645                           ;MainCode.c: 233:   PORTCbits.RC5 = 1;
   646  0002E0  8ACC               	bsf	16332,5,c	;volatile
   647  0002E2  D001               	goto	l892
   648  0002E4                     l144:
   649                           
   650                           ;MainCode.c: 235:   PORTCbits.RC5 = 0;
   651  0002E4  9ACC               	bcf	16332,5,c	;volatile
   652  0002E6                     l892:
   653                           
   654                           ;MainCode.c: 237:  if(a & 4)
   655  0002E6  A41B               	btfss	Lcd_Port@a,2,c
   656  0002E8  D002               	goto	l146
   657                           
   658                           ;MainCode.c: 238:   PORTCbits.RC6 = 1;
   659  0002EA  8CCC               	bsf	16332,6,c	;volatile
   660  0002EC  D001               	goto	l896
   661  0002EE                     l146:
   662                           
   663                           ;MainCode.c: 240:   PORTCbits.RC6 = 0;
   664  0002EE  9CCC               	bcf	16332,6,c	;volatile
   665  0002F0                     l896:
   666                           
   667                           ;MainCode.c: 242:  if(a & 8)
   668  0002F0  A61B               	btfss	Lcd_Port@a,3,c
   669  0002F2  D002               	goto	l148
   670                           
   671                           ;MainCode.c: 243:   PORTCbits.RC7 = 1;
   672  0002F4  8ECC               	bsf	16332,7,c	;volatile
   673  0002F6  0012               	return	
   674  0002F8                     l148:
   675                           
   676                           ;MainCode.c: 245:   PORTCbits.RC7 = 0;
   677  0002F8  9ECC               	bcf	16332,7,c	;volatile
   678  0002FA  0012               	return		;funcret
   679  0002FC                     __end_of_Lcd_Port:
   680                           	opt callstack 0
   681                           
   682 ;; *************** function _encInt *****************
   683 ;; Defined at:
   684 ;;		line 164 in file "MainCode.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;		None
   687 ;; Auto vars:     Size  Location     Type
   688 ;;		None
   689 ;; Return value:  Size  Location     Type
   690 ;;                  1    wreg      void 
   691 ;; Registers used:
   692 ;;		status,2, status,0
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   698 ;;      Params:         0       0       0       0       0       0       0       0       0
   699 ;;      Locals:         0       0       0       0       0       0       0       0       0
   700 ;;      Temps:          0       0       0       0       0       0       0       0       0
   701 ;;      Totals:         0       0       0       0       0       0       0       0       0
   702 ;;Total ram usage:        0 bytes
   703 ;; Hardware stack levels used:    1
   704 ;; This function calls:
   705 ;;		Nothing
   706 ;; This function is called by:
   707 ;;		Interrupt level 2
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711                           	psect	text4
   712  000338                     __ptext4:
   713                           	opt callstack 0
   714  000338                     _encInt:
   715                           	opt callstack 28
   716                           
   717                           ;MainCode.c: 165:     PORTBbits.RB0 = 0;
   718                           
   719                           ;incstack = 0
   720  000338  90CB               	bcf	16331,0,c	;volatile
   721                           
   722                           ;MainCode.c: 166:     tick_count ++;
   723  00033A  4A1D               	infsnz	_tick_count,f,c	;volatile
   724  00033C  2A1E               	incf	_tick_count+1,f,c	;volatile
   725                           
   726                           ;MainCode.c: 167:     PIR1bits.INT0IF = 0;
   727  00033E  0139               	movlb	57	; () banked
   728  000340  91A1               	bcf	161,0,b	;volatile
   729                           
   730                           ; BSR set to: 57
   731  000342  0011               	retfie		f
   732  000344                     __end_of_encInt:
   733                           	opt callstack 0
   734                           
   735 ;; *************** function _adcInt *****************
   736 ;; Defined at:
   737 ;;		line 170 in file "MainCode.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;		None
   740 ;; Auto vars:     Size  Location     Type
   741 ;;		None
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      void 
   744 ;; Registers used:
   745 ;;		None
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   751 ;;      Params:         0       0       0       0       0       0       0       0       0
   752 ;;      Locals:         0       0       0       0       0       0       0       0       0
   753 ;;      Temps:          0       0       0       0       0       0       0       0       0
   754 ;;      Totals:         0       0       0       0       0       0       0       0       0
   755 ;;Total ram usage:        0 bytes
   756 ;; Hardware stack levels used:    1
   757 ;; This function calls:
   758 ;;		Nothing
   759 ;; This function is called by:
   760 ;;		Interrupt level 2
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764                           	psect	text5
   765  000344                     __ptext5:
   766                           	opt callstack 0
   767  000344                     _adcInt:
   768                           	opt callstack 28
   769                           
   770                           ; BSR set to: 57
   771                           ;incstack = 0
   772  000344  0011               	retfie		f
   773  000346                     __end_of_adcInt:
   774                           	opt callstack 0
   775                           
   776 ;; *************** function _canRecInt *****************
   777 ;; Defined at:
   778 ;;		line 176 in file "MainCode.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;		None
   781 ;; Auto vars:     Size  Location     Type
   782 ;;  message        16   10[COMRAM] int [8]
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      void 
   785 ;; Registers used:
   786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   792 ;;      Params:         0       0       0       0       0       0       0       0       0
   793 ;;      Locals:        16       0       0       0       0       0       0       0       0
   794 ;;      Temps:          2       0       0       0       0       0       0       0       0
   795 ;;      Totals:        18       0       0       0       0       0       0       0       0
   796 ;;Total ram usage:       18 bytes
   797 ;; Hardware stack levels used:    1
   798 ;; Hardware stack levels required when called:    1
   799 ;; This function calls:
   800 ;;		_sendCANmessage
   801 ;; This function is called by:
   802 ;;		Interrupt level 2
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806                           	psect	text6
   807  000280                     __ptext6:
   808                           	opt callstack 0
   809  000280                     _canRecInt:
   810                           	opt callstack 27
   811                           
   812                           ;MainCode.c: 180:     PORTBbits.RB0 = 1;
   813                           
   814                           ;incstack = 0
   815  000280  80CB               	bsf	16331,0,c	;volatile
   816                           
   817                           ;MainCode.c: 181:     if (RXB0CONbits.RXFUL == 1) {
   818  000282  BE80               	btfsc	16256,7,c	;volatile
   819  000284  D016               	goto	i2l1190
   820  000286  D021               	goto	i2l135
   821  000288                     i2l137:
   822                           
   823                           ;MainCode.c: 189:                 message[0] = tick_count;
   824  000288  0060  F074  F00B   	movff	_tick_count,canRecInt@message	;volatile
   825  00028E  0060  F078  F00C   	movff	_tick_count+1,canRecInt@message+1	;volatile
   826                           
   827                           ;MainCode.c: 190:                 sendCANmessage(0, message, 1);
   828  000294  0E00               	movlw	0
   829  000296  6E02               	movwf	sendCANmessage@id+1,c
   830  000298  0E00               	movlw	0
   831  00029A  6E01               	movwf	sendCANmessage@id,c
   832  00029C  0E0B               	movlw	low canRecInt@message
   833  00029E  6E03               	movwf	sendCANmessage@message,c
   834  0002A0  0E00               	movlw	high canRecInt@message
   835  0002A2  6E04               	movwf	sendCANmessage@message+1,c
   836  0002A4  0E00               	movlw	0
   837  0002A6  6E06               	movwf	sendCANmessage@length+1,c
   838  0002A8  0E01               	movlw	1
   839  0002AA  6E05               	movwf	sendCANmessage@length,c
   840  0002AC  EC56  F000         	call	_sendCANmessage	;wreg free
   841                           
   842                           ;MainCode.c: 191:                 break;
   843  0002B0  D00B               	goto	i2l138
   844  0002B2                     i2l1190:
   845  0002B2  5086               	movf	16262,w,c	;volatile
   846  0002B4  6E09               	movwf	??_canRecInt& (0+255),c
   847  0002B6  6A0A               	clrf	(??_canRecInt+1)& (0+255),c
   848                           
   849                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   850                           ; Switch size 1, requested type "simple"
   851                           ; Number of cases is 1, Range of values is 0 to 0
   852                           ; switch strategies available:
   853                           ; Name         Instructions Cycles
   854                           ; simple_byte            4     3 (average)
   855                           ;	Chosen strategy is simple_byte
   856  0002B8  500A               	movf	??_canRecInt+1,w,c
   857  0002BA  0A00               	xorlw	0	; case 0
   858  0002BC  A4D8               	btfss	status,2,c
   859  0002BE  D004               	goto	i2l138
   860                           
   861                           ; Switch size 1, requested type "simple"
   862                           ; Number of cases is 1, Range of values is 0 to 0
   863                           ; switch strategies available:
   864                           ; Name         Instructions Cycles
   865                           ; simple_byte            4     3 (average)
   866                           ;	Chosen strategy is simple_byte
   867  0002C0  5009               	movf	??_canRecInt,w,c
   868  0002C2  0A00               	xorlw	0	; case 0
   869  0002C4  B4D8               	btfsc	status,2,c
   870  0002C6  D7E0               	goto	i2l137
   871  0002C8                     i2l138:
   872                           
   873                           ;MainCode.c: 218:         RXB0CONbits.RXFUL = 0;
   874  0002C8  9E80               	bcf	16256,7,c	;volatile
   875  0002CA                     i2l135:
   876                           
   877                           ;MainCode.c: 220:     PIR5bits.RXB0IF = 0;
   878  0002CA  0139               	movlb	57	; () banked
   879  0002CC  91A5               	bcf	165,0,b	;volatile
   880                           
   881                           ; BSR set to: 57
   882                           
   883                           ;MainCode.c: 221:     return;
   884  0002CE  0011               	retfie		f
   885  0002D0                     __end_of_canRecInt:
   886                           	opt callstack 0
   887                           
   888 ;; *************** function _sendCANmessage *****************
   889 ;; Defined at:
   890 ;;		line 450 in file "MainCode.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;  id              2    0[COMRAM] int 
   893 ;;  message         2    2[COMRAM] PTR int 
   894 ;;		 -> canRecInt@message(16), 
   895 ;;  length          2    4[COMRAM] int 
   896 ;; Auto vars:     Size  Location     Type
   897 ;;		None
   898 ;; Return value:  Size  Location     Type
   899 ;;                  1    wreg      void 
   900 ;; Registers used:
   901 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   902 ;; Tracked objects:
   903 ;;		On entry : 0/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   907 ;;      Params:         6       0       0       0       0       0       0       0       0
   908 ;;      Locals:         0       0       0       0       0       0       0       0       0
   909 ;;      Temps:          2       0       0       0       0       0       0       0       0
   910 ;;      Totals:         8       0       0       0       0       0       0       0       0
   911 ;;Total ram usage:        8 bytes
   912 ;; Hardware stack levels used:    1
   913 ;; This function calls:
   914 ;;		Nothing
   915 ;; This function is called by:
   916 ;;		_canRecInt
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           	psect	text7
   921  0000AC                     __ptext7:
   922                           	opt callstack 0
   923  0000AC                     _sendCANmessage:
   924                           	opt callstack 27
   925                           
   926                           ;MainCode.c: 451:     TXB0CONbits.TXREQ = 0;
   927                           
   928                           ; BSR set to: 57
   929                           ;incstack = 0
   930  0000AC  0137               	movlb	55	; () banked
   931  0000AE  97E0               	bcf	224,3,b	;volatile
   932                           
   933                           ; BSR set to: 55
   934                           ;MainCode.c: 453:     CANCONbits.WIN = 0b000;
   935  0000B0  0EF1               	movlw	-15
   936  0000B2  168F               	andwf	16271,f,c	;volatile
   937                           
   938                           ;MainCode.c: 455:     TXB0CONbits.TXPRI = 0b11;
   939  0000B4  0E03               	movlw	3
   940  0000B6  13E0               	iorwf	224,f,b	;volatile
   941                           
   942                           ; BSR set to: 55
   943                           ;MainCode.c: 457:     TXB0D0 = message[0];
   944  0000B8  0060  F00F  FFD9   	movff	sendCANmessage@message,fsr2l
   945  0000BE  0060  F013  FFDA   	movff	sendCANmessage@message+1,fsr2h
   946  0000C4  50DF               	movf	indf2,w,c
   947  0000C6  6FE6               	movwf	230,b	;volatile
   948                           
   949                           ; BSR set to: 55
   950                           ;MainCode.c: 458:     TXB0D1 = message[1];
   951  0000C8  EE20 F002          	lfsr	2,2
   952  0000CC  5003               	movf	sendCANmessage@message,w,c
   953  0000CE  26D9               	addwf	fsr2l,f,c
   954  0000D0  5004               	movf	sendCANmessage@message+1,w,c
   955  0000D2  22DA               	addwfc	fsr2h,f,c
   956  0000D4  50DF               	movf	indf2,w,c
   957  0000D6  6FE7               	movwf	231,b	;volatile
   958                           
   959                           ; BSR set to: 55
   960                           ;MainCode.c: 459:     TXB0D2 = message[2];
   961  0000D8  EE20 F004          	lfsr	2,4
   962  0000DC  5003               	movf	sendCANmessage@message,w,c
   963  0000DE  26D9               	addwf	fsr2l,f,c
   964  0000E0  5004               	movf	sendCANmessage@message+1,w,c
   965  0000E2  22DA               	addwfc	fsr2h,f,c
   966  0000E4  50DF               	movf	indf2,w,c
   967  0000E6  6FE8               	movwf	232,b	;volatile
   968                           
   969                           ; BSR set to: 55
   970                           ;MainCode.c: 460:     TXB0D3 = message[3];
   971  0000E8  EE20 F006          	lfsr	2,6
   972  0000EC  5003               	movf	sendCANmessage@message,w,c
   973  0000EE  26D9               	addwf	fsr2l,f,c
   974  0000F0  5004               	movf	sendCANmessage@message+1,w,c
   975  0000F2  22DA               	addwfc	fsr2h,f,c
   976  0000F4  50DF               	movf	indf2,w,c
   977  0000F6  6FE9               	movwf	233,b	;volatile
   978                           
   979                           ; BSR set to: 55
   980                           ;MainCode.c: 461:     TXB0D4 = message[4];
   981  0000F8  EE20 F008          	lfsr	2,8
   982  0000FC  5003               	movf	sendCANmessage@message,w,c
   983  0000FE  26D9               	addwf	fsr2l,f,c
   984  000100  5004               	movf	sendCANmessage@message+1,w,c
   985  000102  22DA               	addwfc	fsr2h,f,c
   986  000104  50DF               	movf	indf2,w,c
   987  000106  6FEA               	movwf	234,b	;volatile
   988                           
   989                           ; BSR set to: 55
   990                           ;MainCode.c: 462:     TXB0D5 = message[5];
   991  000108  EE20 F00A          	lfsr	2,10
   992  00010C  5003               	movf	sendCANmessage@message,w,c
   993  00010E  26D9               	addwf	fsr2l,f,c
   994  000110  5004               	movf	sendCANmessage@message+1,w,c
   995  000112  22DA               	addwfc	fsr2h,f,c
   996  000114  50DF               	movf	indf2,w,c
   997  000116  6FEB               	movwf	235,b	;volatile
   998                           
   999                           ; BSR set to: 55
  1000                           ;MainCode.c: 463:     TXB0D6 = message[6];
  1001  000118  EE20 F00C          	lfsr	2,12
  1002  00011C  5003               	movf	sendCANmessage@message,w,c
  1003  00011E  26D9               	addwf	fsr2l,f,c
  1004  000120  5004               	movf	sendCANmessage@message+1,w,c
  1005  000122  22DA               	addwfc	fsr2h,f,c
  1006  000124  50DF               	movf	indf2,w,c
  1007  000126  6FEC               	movwf	236,b	;volatile
  1008                           
  1009                           ; BSR set to: 55
  1010                           ;MainCode.c: 464:     TXB0D7 = message[7];
  1011  000128  EE20 F00E          	lfsr	2,14
  1012  00012C  5003               	movf	sendCANmessage@message,w,c
  1013  00012E  26D9               	addwf	fsr2l,f,c
  1014  000130  5004               	movf	sendCANmessage@message+1,w,c
  1015  000132  22DA               	addwfc	fsr2h,f,c
  1016  000134  50DF               	movf	indf2,w,c
  1017  000136  6FED               	movwf	237,b	;volatile
  1018                           
  1019                           ;MainCode.c: 466:     TXB0SIDLbits.SID = id;
  1020  000138  0060  F004  F007   	movff	sendCANmessage@id,??_sendCANmessage
  1021  00013E  3A07               	swapf	??_sendCANmessage,f,c
  1022  000140  4607               	rlncf	??_sendCANmessage,f,c
  1023  000142  51E2               	movf	226,w,b	;volatile
  1024  000144  1807               	xorwf	??_sendCANmessage,w,c
  1025  000146  0B1F               	andlw	-225
  1026  000148  1807               	xorwf	??_sendCANmessage,w,c
  1027  00014A  6FE2               	movwf	226,b	;volatile
  1028                           
  1029                           ;MainCode.c: 467:     TXB0SIDH = id >> 3;
  1030  00014C  0060  F004  F007   	movff	sendCANmessage@id,??_sendCANmessage
  1031  000152  0060  F008  F008   	movff	sendCANmessage@id+1,??_sendCANmessage+1
  1032  000158  3408               	rlcf	??_sendCANmessage+1,w,c
  1033  00015A  3208               	rrcf	??_sendCANmessage+1,f,c
  1034  00015C  3207               	rrcf	??_sendCANmessage,f,c
  1035  00015E  3408               	rlcf	??_sendCANmessage+1,w,c
  1036  000160  3208               	rrcf	??_sendCANmessage+1,f,c
  1037  000162  3207               	rrcf	??_sendCANmessage,f,c
  1038  000164  3408               	rlcf	??_sendCANmessage+1,w,c
  1039  000166  3208               	rrcf	??_sendCANmessage+1,f,c
  1040  000168  3207               	rrcf	??_sendCANmessage,f,c
  1041  00016A  5007               	movf	??_sendCANmessage,w,c
  1042  00016C  6FE1               	movwf	225,b	;volatile
  1043                           
  1044                           ;MainCode.c: 469:     TXB0DLCbits.DLC = length;
  1045  00016E  51E5               	movf	229,w,b	;volatile
  1046  000170  1805               	xorwf	sendCANmessage@length,w,c
  1047  000172  0BF0               	andlw	-16
  1048  000174  1805               	xorwf	sendCANmessage@length,w,c
  1049  000176  6FE5               	movwf	229,b	;volatile
  1050                           
  1051                           ; BSR set to: 55
  1052                           ;MainCode.c: 470:     TXB0DLCbits.TXRTR = 0;
  1053  000178  9DE5               	bcf	229,6,b	;volatile
  1054                           
  1055                           ; BSR set to: 55
  1056                           ;MainCode.c: 472:     TXB0CONbits.TXREQ = 1;
  1057  00017A  87E0               	bsf	224,3,b	;volatile
  1058  00017C                     i2l196:
  1059                           
  1060                           ; BSR set to: 55
  1061  00017C  B7E0               	btfsc	224,3,b	;volatile
  1062  00017E  0012               	return	
  1063  000180  D7FD               	goto	i2l196
  1064  000182                     __end_of_sendCANmessage:
  1065                           	opt callstack 0
  1066                           
  1067                           ;
  1068                           ; Interrupt Vector Table @ 0x8
  1069                           ;
  1070                           
  1071                           	psect	ivt0x8
  1072  000008                     __pivt0x8:
  1073                           	opt callstack 0
  1074  000008                     ivt0x8_base:
  1075                           	opt callstack 0
  1076                           
  1077                           ; Vector 0 : SWINT
  1078  000008  0029               	dw	ivt0x8_undefint shr (0+2)
  1079                           
  1080                           ; Vector 1 : HLVD
  1081  00000A  0029               	dw	ivt0x8_undefint shr (0+2)
  1082                           
  1083                           ; Vector 2 : OSF
  1084  00000C  0029               	dw	ivt0x8_undefint shr (0+2)
  1085                           
  1086                           ; Vector 3 : CSW
  1087  00000E  0029               	dw	ivt0x8_undefint shr (0+2)
  1088                           
  1089                           ; Vector 4 : NVM
  1090  000010  0029               	dw	ivt0x8_undefint shr (0+2)
  1091                           
  1092                           ; Vector 5 : SCAN
  1093  000012  0029               	dw	ivt0x8_undefint shr (0+2)
  1094                           
  1095                           ; Vector 6 : CRC
  1096  000014  0029               	dw	ivt0x8_undefint shr (0+2)
  1097                           
  1098                           ; Vector 7 : IOC
  1099  000016  0029               	dw	ivt0x8_undefint shr (0+2)
  1100                           
  1101                           ; Vector 8 : INT0
  1102  000018  00CE               	dw	_encInt shr (0+2)
  1103                           
  1104                           ; Vector 9 : ZCD
  1105  00001A  0029               	dw	ivt0x8_undefint shr (0+2)
  1106                           
  1107                           ; Vector 10 : AD
  1108  00001C  00D1               	dw	_adcInt shr (0+2)
  1109                           
  1110                           ; Vector 11 : ADT
  1111  00001E  0029               	dw	ivt0x8_undefint shr (0+2)
  1112                           
  1113                           ; Vector 12 : CMP1
  1114  000020  0029               	dw	ivt0x8_undefint shr (0+2)
  1115                           
  1116                           ; Vector 13 : SMT1
  1117  000022  0029               	dw	ivt0x8_undefint shr (0+2)
  1118                           
  1119                           ; Vector 14 : SMT1PRA
  1120  000024  0029               	dw	ivt0x8_undefint shr (0+2)
  1121                           
  1122                           ; Vector 15 : SMT1PWA
  1123  000026  0029               	dw	ivt0x8_undefint shr (0+2)
  1124                           
  1125                           ; Vector 16 : DMA1SCNT
  1126  000028  0029               	dw	ivt0x8_undefint shr (0+2)
  1127                           
  1128                           ; Vector 17 : DMA1DCNT
  1129  00002A  0029               	dw	ivt0x8_undefint shr (0+2)
  1130                           
  1131                           ; Vector 18 : DMA1OR
  1132  00002C  0029               	dw	ivt0x8_undefint shr (0+2)
  1133                           
  1134                           ; Vector 19 : DMA1A
  1135  00002E  0029               	dw	ivt0x8_undefint shr (0+2)
  1136                           
  1137                           ; Vector 20 : SPI1RX
  1138  000030  0029               	dw	ivt0x8_undefint shr (0+2)
  1139                           
  1140                           ; Vector 21 : SPI1TX
  1141  000032  0029               	dw	ivt0x8_undefint shr (0+2)
  1142                           
  1143                           ; Vector 22 : SPI1
  1144  000034  0029               	dw	ivt0x8_undefint shr (0+2)
  1145                           
  1146                           ; Vector 23 : I2C1RX
  1147  000036  0029               	dw	ivt0x8_undefint shr (0+2)
  1148                           
  1149                           ; Vector 24 : I2C1TX
  1150  000038  0029               	dw	ivt0x8_undefint shr (0+2)
  1151                           
  1152                           ; Vector 25 : I2C1
  1153  00003A  0029               	dw	ivt0x8_undefint shr (0+2)
  1154                           
  1155                           ; Vector 26 : I2C1E
  1156  00003C  0029               	dw	ivt0x8_undefint shr (0+2)
  1157                           
  1158                           ; Vector 27 : U1RX
  1159  00003E  0029               	dw	ivt0x8_undefint shr (0+2)
  1160                           
  1161                           ; Vector 28 : U1TX
  1162  000040  0029               	dw	ivt0x8_undefint shr (0+2)
  1163                           
  1164                           ; Vector 29 : U1E
  1165  000042  0029               	dw	ivt0x8_undefint shr (0+2)
  1166                           
  1167                           ; Vector 30 : U1
  1168  000044  0029               	dw	ivt0x8_undefint shr (0+2)
  1169                           
  1170                           ; Vector 31 : TMR0
  1171  000046  0029               	dw	ivt0x8_undefint shr (0+2)
  1172                           
  1173                           ; Vector 32 : TMR1
  1174  000048  0029               	dw	ivt0x8_undefint shr (0+2)
  1175                           
  1176                           ; Vector 33 : TMR1G
  1177  00004A  0029               	dw	ivt0x8_undefint shr (0+2)
  1178                           
  1179                           ; Vector 34 : TMR2
  1180  00004C  0029               	dw	ivt0x8_undefint shr (0+2)
  1181                           
  1182                           ; Vector 35 : CCP1
  1183  00004E  0029               	dw	ivt0x8_undefint shr (0+2)
  1184                           
  1185                           ; Vector 36 : NCO1
  1186  000050  0029               	dw	ivt0x8_undefint shr (0+2)
  1187                           
  1188                           ; Vector 37 : CWG1
  1189  000052  0029               	dw	ivt0x8_undefint shr (0+2)
  1190                           
  1191                           ; Vector 38 : CLC1
  1192  000054  0029               	dw	ivt0x8_undefint shr (0+2)
  1193                           
  1194                           ; Vector 39 : INT1
  1195  000056  0029               	dw	ivt0x8_undefint shr (0+2)
  1196                           
  1197                           ; Vector 40 : RXB0IF
  1198  000058  00A0               	dw	_canRecInt shr (0+2)
  1199                           
  1200                           ; Vector 41 : RXB1IF
  1201  00005A  0029               	dw	ivt0x8_undefint shr (0+2)
  1202                           
  1203                           ; Vector 42 : TXB0IF
  1204  00005C  0029               	dw	ivt0x8_undefint shr (0+2)
  1205                           
  1206                           ; Vector 43 : TXB1IF
  1207  00005E  0029               	dw	ivt0x8_undefint shr (0+2)
  1208                           
  1209                           ; Vector 44 : TXB2IF
  1210  000060  0029               	dw	ivt0x8_undefint shr (0+2)
  1211                           
  1212                           ; Vector 45 : ERRIF
  1213  000062  0029               	dw	ivt0x8_undefint shr (0+2)
  1214                           
  1215                           ; Vector 46 : WAKIF
  1216  000064  0029               	dw	ivt0x8_undefint shr (0+2)
  1217                           
  1218                           ; Vector 47 : IRXIF
  1219  000066  0029               	dw	ivt0x8_undefint shr (0+2)
  1220                           
  1221                           ; Vector 48 : CMP2
  1222  000068  0029               	dw	ivt0x8_undefint shr (0+2)
  1223                           
  1224                           ; Vector 49 : SMT2
  1225  00006A  0029               	dw	ivt0x8_undefint shr (0+2)
  1226                           
  1227                           ; Vector 50 : SMT2PRA
  1228  00006C  0029               	dw	ivt0x8_undefint shr (0+2)
  1229                           
  1230                           ; Vector 51 : SMT2PWA
  1231  00006E  0029               	dw	ivt0x8_undefint shr (0+2)
  1232                           
  1233                           ; Vector 52 : DMA2SCNT
  1234  000070  0029               	dw	ivt0x8_undefint shr (0+2)
  1235                           
  1236                           ; Vector 53 : DMA2DCNT
  1237  000072  0029               	dw	ivt0x8_undefint shr (0+2)
  1238                           
  1239                           ; Vector 54 : DMA2OR
  1240  000074  0029               	dw	ivt0x8_undefint shr (0+2)
  1241                           
  1242                           ; Vector 55 : DMA2A
  1243  000076  0029               	dw	ivt0x8_undefint shr (0+2)
  1244                           
  1245                           ; Vector 56 : I2C2RX
  1246  000078  0029               	dw	ivt0x8_undefint shr (0+2)
  1247                           
  1248                           ; Vector 57 : I2C2TX
  1249  00007A  0029               	dw	ivt0x8_undefint shr (0+2)
  1250                           
  1251                           ; Vector 58 : I2C2
  1252  00007C  0029               	dw	ivt0x8_undefint shr (0+2)
  1253                           
  1254                           ; Vector 59 : I2C2E
  1255  00007E  0029               	dw	ivt0x8_undefint shr (0+2)
  1256                           
  1257                           ; Vector 60 : U2RX
  1258  000080  0029               	dw	ivt0x8_undefint shr (0+2)
  1259                           
  1260                           ; Vector 61 : U2TX
  1261  000082  0029               	dw	ivt0x8_undefint shr (0+2)
  1262                           
  1263                           ; Vector 62 : U2E
  1264  000084  0029               	dw	ivt0x8_undefint shr (0+2)
  1265                           
  1266                           ; Vector 63 : U2
  1267  000086  0029               	dw	ivt0x8_undefint shr (0+2)
  1268                           
  1269                           ; Vector 64 : TMR3
  1270  000088  0029               	dw	ivt0x8_undefint shr (0+2)
  1271                           
  1272                           ; Vector 65 : TMR3G
  1273  00008A  0029               	dw	ivt0x8_undefint shr (0+2)
  1274                           
  1275                           ; Vector 66 : TMR4
  1276  00008C  0029               	dw	ivt0x8_undefint shr (0+2)
  1277                           
  1278                           ; Vector 67 : CCP2
  1279  00008E  0029               	dw	ivt0x8_undefint shr (0+2)
  1280                           
  1281                           ; Vector 68 : CWG2
  1282  000090  0029               	dw	ivt0x8_undefint shr (0+2)
  1283                           
  1284                           ; Vector 69 : CLC2
  1285  000092  0029               	dw	ivt0x8_undefint shr (0+2)
  1286                           
  1287                           ; Vector 70 : INT2
  1288  000094  0029               	dw	ivt0x8_undefint shr (0+2)
  1289                           
  1290                           ; Vector 71 : TMR5
  1291  000096  0029               	dw	ivt0x8_undefint shr (0+2)
  1292                           
  1293                           ; Vector 72 : TMR5G
  1294  000098  0029               	dw	ivt0x8_undefint shr (0+2)
  1295                           
  1296                           ; Vector 73 : TMR6
  1297  00009A  0029               	dw	ivt0x8_undefint shr (0+2)
  1298                           
  1299                           ; Vector 74 : CCP3
  1300  00009C  0029               	dw	ivt0x8_undefint shr (0+2)
  1301                           
  1302                           ; Vector 75 : CWG3
  1303  00009E  0029               	dw	ivt0x8_undefint shr (0+2)
  1304                           
  1305                           ; Vector 76 : CLC3
  1306  0000A0  0029               	dw	ivt0x8_undefint shr (0+2)
  1307                           
  1308                           ; Vector 77 : CCP4
  1309  0000A2  0029               	dw	ivt0x8_undefint shr (0+2)
  1310                           
  1311                           ; Vector 78 : CLC4
  1312  0000A4  0029               	dw	ivt0x8_undefint shr (0+2)
  1313  0000A6                     ivt0x8_undefint:
  1314                           	opt callstack 0
  1315  0000A6  00FF               	reset	
  1316  0000                     
  1317                           	psect	rparam
  1318  0000                     tosu	equ	0x3FFF
  1319                           tosh	equ	0x3FFE
  1320                           tosl	equ	0x3FFD
  1321                           stkptr	equ	0x3FFC
  1322                           pclatu	equ	0x3FFB
  1323                           pclath	equ	0x3FFA
  1324                           pcl	equ	0x3FF9
  1325                           tblptru	equ	0x3FF8
  1326                           tblptrh	equ	0x3FF7
  1327                           tblptrl	equ	0x3FF6
  1328                           tablat	equ	0x3FF5
  1329                           prodh	equ	0x3FF4
  1330                           prodl	equ	0x3FF3
  1331                           indf0	equ	0x3FEF
  1332                           postinc0	equ	0x3FEE
  1333                           postdec0	equ	0x3FED
  1334                           preinc0	equ	0x3FEC
  1335                           plusw0	equ	0x3FEB
  1336                           fsr0h	equ	0x3FEA
  1337                           fsr0l	equ	0x3FE9
  1338                           wreg	equ	0x3FE8
  1339                           indf1	equ	0x3FE7
  1340                           postinc1	equ	0x3FE6
  1341                           postdec1	equ	0x3FE5
  1342                           preinc1	equ	0x3FE4
  1343                           plusw1	equ	0x3FE3
  1344                           fsr1h	equ	0x3FE2
  1345                           fsr1l	equ	0x3FE1
  1346                           bsr	equ	0x3FE0
  1347                           indf2	equ	0x3FDF
  1348                           postinc2	equ	0x3FDE
  1349                           postdec2	equ	0x3FDD
  1350                           preinc2	equ	0x3FDC
  1351                           plusw2	equ	0x3FDB
  1352                           fsr2h	equ	0x3FDA
  1353                           fsr2l	equ	0x3FD9
  1354                           status	equ	0x3FD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     28      39
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sendCANmessage@message	PTR int  size(2) Largest target is 16
		 -> canRecInt@message(COMRAM[16]), 


Critical Paths under _main in COMRAM

    _Lcd_Init->_Lcd_Port

Critical Paths under _encInt in COMRAM

    None.

Critical Paths under _adcInt in COMRAM

    None.

Critical Paths under _canRecInt in COMRAM

    _canRecInt->_sendCANmessage

Critical Paths under _main in BANK0

    None.

Critical Paths under _encInt in BANK0

    None.

Critical Paths under _adcInt in BANK0

    None.

Critical Paths under _canRecInt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _encInt in BANK1

    None.

Critical Paths under _adcInt in BANK1

    None.

Critical Paths under _canRecInt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _encInt in BANK2

    None.

Critical Paths under _adcInt in BANK2

    None.

Critical Paths under _canRecInt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _encInt in BANK3

    None.

Critical Paths under _adcInt in BANK3

    None.

Critical Paths under _canRecInt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _encInt in BANK4

    None.

Critical Paths under _adcInt in BANK4

    None.

Critical Paths under _canRecInt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _encInt in BANK5

    None.

Critical Paths under _adcInt in BANK5

    None.

Critical Paths under _canRecInt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _encInt in BANK6

    None.

Critical Paths under _adcInt in BANK6

    None.

Critical Paths under _canRecInt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _encInt in BANK7

    None.

Critical Paths under _adcInt in BANK7

    None.

Critical Paths under _canRecInt in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      60
                                             27 COMRAM     1     1      0
                           _Lcd_Init
                            _initCAN
 ---------------------------------------------------------------------------------
 (1) _initCAN                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             0     0      0      60
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Port                                             1     1      0      60
                                             26 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _encInt                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _adcInt                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _canRecInt                                           18    18      0     501
                                              8 COMRAM    18    18      0
                     _sendCANmessage
 ---------------------------------------------------------------------------------
 (4) _sendCANmessage                                       8     2      6     470
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Port
   _initCAN

 _encInt (ROOT)

 _adcInt (ROOT)

 _canRecInt (ROOT)
   _sendCANmessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      20        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1C      27       1       41.1%
BITSFR_9             0      0       0     200        0.0%
SFR_9                0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      27       3        0.0%
DATA                 0      0      27      21        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Jul 13 17:04:12 2020

               __CFG_CP$OFF 000000                 __CFG_LVP$ON 000000                         l142 02DA  
                       l144 02E4                         l146 02EE                         l148 02F8  
                       l916 0228                         l942 0270                         l892 02E6  
                       l896 02F0                         l888 02DC                         u207 01F4  
                       u217 0204                         u197 01E4                         wreg 003FE8  
             __CFG_BBEN$OFF 000000                __CFG_ZCD$OFF 000000                        l1050 01DE  
             __CFG_FCMEN$ON 000000                        _main 0182                        fsr2h 003FDA  
                      indf2 003FDF                        fsr2l 003FD9                        start 00A8  
             __CFG_CSWEN$ON 000000                ___param_bank 000000                       ?_main 0001  
             __CFG_WDTE$OFF 000000              __CFG_DEBUG$OFF 000000                       i2l135 02CA  
                     i2l137 0288                       i2l138 02C8                       i2l196 017C  
                     _TRISC 003FC4               __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000  
             __CFG_WRTD$OFF 000000             __end_of_initCAN 027E          __CFG_MCLRE$EXTMCLR 000000  
      sendCANmessage@length 0005                       status 003FD8            __end_of_Lcd_Init 0336  
          __end_of_Lcd_Port 02FC             __initialization 02FC                __end_of_main 0214  
            __CFG_SAFEN$OFF 000000                      ??_main 001C              __CFG_PR1WAY$ON 000000  
             __activetblptr 000002              __CFG_MVECEN$ON 000000            ??_sendCANmessage 0007  
                    _ADRESH 003EF0                      _ADRESL 003EEF                      _ANSELC 003A60  
                    _RB2PPS 003A0A                      i2l1190 02B2              __CFG_WDTCCS$SC 000000  
                    _RXB0D0 003F86                      _TXB0D0 0037E6                      _TXB0D1 0037E7  
                    _TXB0D2 0037E8                      _TXB0D3 0037E9                      _TXB0D4 0037EA  
                    _TXB0D5 0037EB                      _TXB0D6 0037EC                      _TXB0D7 0037ED  
            __CFG_XINST$OFF 000000                      _adcInt 0344              __CFG_STVREN$ON 000000  
                    _encInt 0338                      clear_0 0302                      _status 0027  
                 ??_initCAN 001B       sendCANmessage@message 0003                      tblptru 003FF8  
                __accesstop 0060     __end_of__initialization 0314               ___rparam_used 000001  
        __size_of_canRecInt 0050              __pcstackCOMRAM 0001              ivt0x8_undefint 00A6  
              _ADCvalueLow0 0023                _ADCvalueLow1 001F                   ?_Lcd_Init 0001  
                 ?_Lcd_Port 0001             __CFG_IVT1WAY$ON 000000                     IVTBASEH 003FD6  
                   IVTBASEL 003FD5                     IVTBASEU 003FD7                     ?_adcInt 0001  
           __CFG_PPS1WAY$ON 000000                     ?_encInt 0001                     _INT0PPS 003AC0  
       __CFG_PWRTS$PWRT_OFF 000000           __end_of_canRecInt 02D0                     _OSCCON1 0039D9  
                ??_Lcd_Init 001C                  ??_Lcd_Port 001B                   _ADPCHbits 003EF1  
                   __Hparam 0000                     __Lparam 0000  __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
           __size_of_adcInt 0002             __size_of_encInt 000C                     __pcinit 02FC  
                   __ramtop 0800                     __ptext0 0182                     __ptext1 0214  
                   __ptext2 031E                     __ptext3 02D0                     __ptext4 0338  
                   __ptext5 0344                     __ptext6 0280                     __ptext7 00AC  
                   _initCAN 0214             __CFG_WRTAPP$OFF 000000             __CFG_WRTSAF$OFF 000000  
      end_of_initialization 0314               __Lmediumconst 0000                  _tick_count 001D  
                   postinc0 003FEE                   Lcd_Port@a 001B       __CFG_WDTCPS$WDTCPS_31 000000  
                 _PORTBbits 003FCB                   _PORTCbits 003FCC                   _TRISAbits 003FC2  
                 _TRISBbits 003FC3            sendCANmessage@id 0001              __end_of_adcInt 0346  
            __end_of_encInt 0344         start_initialization 02FC               _ADCvalueHigh0 0025  
             _ADCvalueHigh1 0021                  ivt0x8_base 0008           __size_of_Lcd_Init 0018  
               _CANSTATbits 003F8E           __size_of_Lcd_Port 002C     __size_of_sendCANmessage 00D6  
          __CFG_LPBOREN$OFF 000000                    ??_adcInt 0001                    ??_encInt 0001  
               __pbssCOMRAM 001D                 _BRGCON1bits 003703                   _canRecInt 0280  
                  ?_initCAN 0001      __CFG_BBSIZE$BBSIZE_512 000000                  ?_canRecInt 0001  
                  _PIE1bits 003991                    _PIE5bits 003995         __CFG_BORV$VBOR_2P45 000000  
                  _PIR1bits 0039A1                    _PIR5bits 0039A5                    _RXF0SIDH 0037A0  
                  _RXF1SIDH 0037A4                    _TXB0SIDH 0037E1                    _RXM0SIDH 0037B8  
                  _RXM1SIDH 0037BC                  _ADCON0bits 003EF8                    _Lcd_Init 031E  
                  _Lcd_Port 02D0                 _INTCON0bits 003FD2                  _CANCONbits 003F8F  
            _sendCANmessage 00AC                    __Hrparam 0000                    __Lrparam 0000  
        __CFG_BOREN$SBORDIS 000000                  _ANSELAbits 003A40                  _ANSELBbits 003A50  
          __size_of_initCAN 006A                _RXF0SIDLbits 0037A1                    __pivt0x8 0008  
              _RXF1SIDLbits 0037A5                 ??_canRecInt 0009      __end_of_sendCANmessage 0182  
             __size_of_main 0092        __CFG_WDTCWS$WDTCWS_7 000000                _TXB0SIDLbits 0037E2  
              _RXM0SIDLbits 0037B9                 _RXB0CONbits 003F80                 _RXB1CONbits 0037F0  
              _RXM1SIDLbits 0037BD            canRecInt@message 000B                    intlevel2 0000  
           ?_sendCANmessage 0001                 _TXB0DLCbits 0037E5           __CFG_CLKOUTEN$OFF 000000  
               _TXB0CONbits 0037E0  
