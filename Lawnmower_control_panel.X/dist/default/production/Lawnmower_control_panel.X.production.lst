

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Aug 27 20:26:59 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F25K83
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=4,class=CODE,delta=1
    66                           	psect	text45,global,reloc=4,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=4,class=CODE,delta=1
    69                           	psect	text48,global,reloc=4,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text53,global,reloc=4,class=CODE,delta=1
    75                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    77                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    78  0000                     
    79                           ; Version 2.05
    80                           ; Generated 20/12/2018 GMT
    81                           ; 
    82                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F25K83 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     
   114                           	psect	idataCOMRAM
   115  0046C4                     __pidataCOMRAM:
   116                           	opt callstack 0
   117                           
   118                           ;initializer for _status
   119  0046C4  0001               	dw	1
   120                           
   121                           ;initializer for _max_tick_count
   122  0046C6  0001               	dw	1
   123                           
   124                           	psect	idataBIGRAM
   125  002FE4                     __pidataBIGRAM:
   126                           	opt callstack 0
   127                           
   128                           ;initializer for _master_state_lut
   129  002FE4  49                 	db	73
   130  002FE5  4E                 	db	78
   131  002FE6  49                 	db	73
   132  002FE7  54                 	db	84
   133  002FE8  20                 	db	32
   134  002FE9  20                 	db	32
   135  002FEA  20                 	db	32
   136  002FEB  20                 	db	32
   137  002FEC  20                 	db	32
   138  002FED  20                 	db	32
   139  002FEE  20                 	db	32
   140  002FEF  20                 	db	32
   141  002FF0  20                 	db	32
   142  002FF1  20                 	db	32
   143  002FF2  20                 	db	32
   144  002FF3  20                 	db	32
   145  002FF4  20                 	db	32
   146  002FF5  20                 	db	32
   147  002FF6  20                 	db	32
   148  002FF7  00                 	db	0
   149  002FF8  53                 	db	83
   150  002FF9  45                 	db	69
   151  002FFA  4C                 	db	76
   152  002FFB  46                 	db	70
   153  002FFC  5F                 	db	95
   154  002FFD  54                 	db	84
   155  002FFE  45                 	db	69
   156  002FFF  53                 	db	83
   157  003000  54                 	db	84
   158  003001  20                 	db	32
   159  003002  20                 	db	32
   160  003003  20                 	db	32
   161  003004  20                 	db	32
   162  003005  20                 	db	32
   163  003006  20                 	db	32
   164  003007  20                 	db	32
   165  003008  20                 	db	32
   166  003009  20                 	db	32
   167  00300A  20                 	db	32
   168  00300B  00                 	db	0
   169  00300C  52                 	db	82
   170  00300D  55                 	db	85
   171  00300E  4E                 	db	78
   172  00300F  20                 	db	32
   173  003010  20                 	db	32
   174  003011  20                 	db	32
   175  003012  20                 	db	32
   176  003013  20                 	db	32
   177  003014  20                 	db	32
   178  003015  20                 	db	32
   179  003016  20                 	db	32
   180  003017  20                 	db	32
   181  003018  20                 	db	32
   182  003019  20                 	db	32
   183  00301A  20                 	db	32
   184  00301B  20                 	db	32
   185  00301C  20                 	db	32
   186  00301D  20                 	db	32
   187  00301E  20                 	db	32
   188  00301F  00                 	db	0
   189  003020  52                 	db	82
   190  003021  55                 	db	85
   191  003022  4E                 	db	78
   192  003023  5F                 	db	95
   193  003024  53                 	db	83
   194  003025  4C                 	db	76
   195  003026  4F                 	db	79
   196  003027  57                 	db	87
   197  003028  20                 	db	32
   198  003029  20                 	db	32
   199  00302A  20                 	db	32
   200  00302B  20                 	db	32
   201  00302C  20                 	db	32
   202  00302D  20                 	db	32
   203  00302E  20                 	db	32
   204  00302F  20                 	db	32
   205  003030  20                 	db	32
   206  003031  20                 	db	32
   207  003032  20                 	db	32
   208  003033  00                 	db	0
   209  003034  41                 	db	65
   210  003035  56                 	db	86
   211  003036  4F                 	db	79
   212  003037  49                 	db	73
   213  003038  44                 	db	68
   214  003039  5F                 	db	95
   215  00303A  50                 	db	80
   216  00303B  45                 	db	69
   217  00303C  52                 	db	82
   218  00303D  49                 	db	73
   219  00303E  20                 	db	32
   220  00303F  20                 	db	32
   221  003040  20                 	db	32
   222  003041  20                 	db	32
   223  003042  20                 	db	32
   224  003043  20                 	db	32
   225  003044  20                 	db	32
   226  003045  20                 	db	32
   227  003046  20                 	db	32
   228  003047  00                 	db	0
   229  003048  54                 	db	84
   230  003049  52                 	db	82
   231  00304A  59                 	db	89
   232  00304B  5F                 	db	95
   233  00304C  4C                 	db	76
   234  00304D  45                 	db	69
   235  00304E  46                 	db	70
   236  00304F  54                 	db	84
   237  003050  20                 	db	32
   238  003051  20                 	db	32
   239  003052  20                 	db	32
   240  003053  20                 	db	32
   241  003054  20                 	db	32
   242  003055  20                 	db	32
   243  003056  20                 	db	32
   244  003057  20                 	db	32
   245  003058  20                 	db	32
   246  003059  20                 	db	32
   247  00305A  20                 	db	32
   248  00305B  00                 	db	0
   249  00305C  54                 	db	84
   250  00305D  52                 	db	82
   251  00305E  59                 	db	89
   252  00305F  5F                 	db	95
   253  003060  52                 	db	82
   254  003061  49                 	db	73
   255  003062  47                 	db	71
   256  003063  48                 	db	72
   257  003064  54                 	db	84
   258  003065  20                 	db	32
   259  003066  20                 	db	32
   260  003067  20                 	db	32
   261  003068  20                 	db	32
   262  003069  20                 	db	32
   263  00306A  20                 	db	32
   264  00306B  20                 	db	32
   265  00306C  20                 	db	32
   266  00306D  20                 	db	32
   267  00306E  20                 	db	32
   268  00306F  00                 	db	0
   269  003070  54                 	db	84
   270  003071  52                 	db	82
   271  003072  59                 	db	89
   272  003073  5F                 	db	95
   273  003074  49                 	db	73
   274  003075  4E                 	db	78
   275  003076  53                 	db	83
   276  003077  54                 	db	84
   277  003078  45                 	db	69
   278  003079  41                 	db	65
   279  00307A  44                 	db	68
   280  00307B  5F                 	db	95
   281  00307C  4C                 	db	76
   282  00307D  45                 	db	69
   283  00307E  46                 	db	70
   284  00307F  54                 	db	84
   285  003080  20                 	db	32
   286  003081  20                 	db	32
   287  003082  20                 	db	32
   288  003083  00                 	db	0
   289  003084  54                 	db	84
   290  003085  52                 	db	82
   291  003086  59                 	db	89
   292  003087  5F                 	db	95
   293  003088  49                 	db	73
   294  003089  4E                 	db	78
   295  00308A  53                 	db	83
   296  00308B  54                 	db	84
   297  00308C  45                 	db	69
   298  00308D  41                 	db	65
   299  00308E  44                 	db	68
   300  00308F  5F                 	db	95
   301  003090  52                 	db	82
   302  003091  49                 	db	73
   303  003092  47                 	db	71
   304  003093  48                 	db	72
   305  003094  54                 	db	84
   306  003095  20                 	db	32
   307  003096  20                 	db	32
   308  003097  00                 	db	0
   309  003098  54                 	db	84
   310  003099  52                 	db	82
   311  00309A  59                 	db	89
   312  00309B  5F                 	db	95
   313  00309C  4C                 	db	76
   314  00309D  41                 	db	65
   315  00309E  53                 	db	83
   316  00309F  54                 	db	84
   317  0030A0  5F                 	db	95
   318  0030A1  54                 	db	84
   319  0030A2  49                 	db	73
   320  0030A3  4D                 	db	77
   321  0030A4  45                 	db	69
   322  0030A5  5F                 	db	95
   323  0030A6  4C                 	db	76
   324  0030A7  45                 	db	69
   325  0030A8  46                 	db	70
   326  0030A9  54                 	db	84
   327  0030AA  20                 	db	32
   328  0030AB  00                 	db	0
   329  0030AC  54                 	db	84
   330  0030AD  52                 	db	82
   331  0030AE  59                 	db	89
   332  0030AF  5F                 	db	95
   333  0030B0  4C                 	db	76
   334  0030B1  41                 	db	65
   335  0030B2  53                 	db	83
   336  0030B3  54                 	db	84
   337  0030B4  5F                 	db	95
   338  0030B5  54                 	db	84
   339  0030B6  49                 	db	73
   340  0030B7  4D                 	db	77
   341  0030B8  45                 	db	69
   342  0030B9  5F                 	db	95
   343  0030BA  52                 	db	82
   344  0030BB  49                 	db	73
   345  0030BC  47                 	db	71
   346  0030BD  48                 	db	72
   347  0030BE  54                 	db	84
   348  0030BF  00                 	db	0
   349  0030C0  54                 	db	84
   350  0030C1  52                 	db	82
   351  0030C2  59                 	db	89
   352  0030C3  5F                 	db	95
   353  0030C4  42                 	db	66
   354  0030C5  41                 	db	65
   355  0030C6  43                 	db	67
   356  0030C7  4B                 	db	75
   357  0030C8  57                 	db	87
   358  0030C9  41                 	db	65
   359  0030CA  52                 	db	82
   360  0030CB  44                 	db	68
   361  0030CC  20                 	db	32
   362  0030CD  20                 	db	32
   363  0030CE  20                 	db	32
   364  0030CF  20                 	db	32
   365  0030D0  20                 	db	32
   366  0030D1  20                 	db	32
   367  0030D2  20                 	db	32
   368  0030D3  00                 	db	0
   369  0030D4  53                 	db	83
   370  0030D5  54                 	db	84
   371  0030D6  55                 	db	85
   372  0030D7  43                 	db	67
   373  0030D8  4B                 	db	75
   374  0030D9  20                 	db	32
   375  0030DA  20                 	db	32
   376  0030DB  20                 	db	32
   377  0030DC  20                 	db	32
   378  0030DD  20                 	db	32
   379  0030DE  20                 	db	32
   380  0030DF  20                 	db	32
   381  0030E0  20                 	db	32
   382  0030E1  20                 	db	32
   383  0030E2  20                 	db	32
   384  0030E3  20                 	db	32
   385  0030E4  20                 	db	32
   386  0030E5  20                 	db	32
   387  0030E6  20                 	db	32
   388  0030E7  00                 	db	0
   389  0030E8  46                 	db	70
   390  0030E9  49                 	db	73
   391  0030EA  4E                 	db	78
   392  0030EB  44                 	db	68
   393  0030EC  5F                 	db	95
   394  0030ED  50                 	db	80
   395  0030EE  45                 	db	69
   396  0030EF  52                 	db	82
   397  0030F0  49                 	db	73
   398  0030F1  4D                 	db	77
   399  0030F2  45                 	db	69
   400  0030F3  54                 	db	84
   401  0030F4  45                 	db	69
   402  0030F5  52                 	db	82
   403  0030F6  20                 	db	32
   404  0030F7  20                 	db	32
   405  0030F8  20                 	db	32
   406  0030F9  20                 	db	32
   407  0030FA  20                 	db	32
   408  0030FB  00                 	db	0
   409  0030FC  52                 	db	82
   410  0030FD  41                 	db	65
   411  0030FE  4E                 	db	78
   412  0030FF  44                 	db	68
   413  003100  4F                 	db	79
   414  003101  4D                 	db	77
   415  003102  5F                 	db	95
   416  003103  54                 	db	84
   417  003104  55                 	db	85
   418  003105  52                 	db	82
   419  003106  4E                 	db	78
   420  003107  20                 	db	32
   421  003108  20                 	db	32
   422  003109  20                 	db	32
   423  00310A  20                 	db	32
   424  00310B  20                 	db	32
   425  00310C  20                 	db	32
   426  00310D  20                 	db	32
   427  00310E  20                 	db	32
   428  00310F  00                 	db	0
   429  003110  52                 	db	82
   430  003111  45                 	db	69
   431  003112  54                 	db	84
   432  003113  55                 	db	85
   433  003114  52                 	db	82
   434  003115  4E                 	db	78
   435  003116  5F                 	db	95
   436  003117  48                 	db	72
   437  003118  4F                 	db	79
   438  003119  4D                 	db	77
   439  00311A  45                 	db	69
   440  00311B  20                 	db	32
   441  00311C  20                 	db	32
   442  00311D  20                 	db	32
   443  00311E  20                 	db	32
   444  00311F  20                 	db	32
   445  003120  20                 	db	32
   446  003121  20                 	db	32
   447  003122  20                 	db	32
   448  003123  00                 	db	0
   449  003124  43                 	db	67
   450  003125  48                 	db	72
   451  003126  41                 	db	65
   452  003127  52                 	db	82
   453  003128  47                 	db	71
   454  003129  49                 	db	73
   455  00312A  4E                 	db	78
   456  00312B  47                 	db	71
   457  00312C  20                 	db	32
   458  00312D  20                 	db	32
   459  00312E  20                 	db	32
   460  00312F  20                 	db	32
   461  003130  20                 	db	32
   462  003131  20                 	db	32
   463  003132  20                 	db	32
   464  003133  20                 	db	32
   465  003134  20                 	db	32
   466  003135  20                 	db	32
   467  003136  20                 	db	32
   468  003137  00                 	db	0
   469  003138  53                 	db	83
   470  003139  45                 	db	69
   471  00313A  52                 	db	82
   472  00313B  52                 	db	82
   473  00313C  4F                 	db	79
   474  00313D  52                 	db	82
   475  00313E  20                 	db	32
   476  00313F  20                 	db	32
   477  003140  20                 	db	32
   478  003141  20                 	db	32
   479  003142  20                 	db	32
   480  003143  20                 	db	32
   481  003144  20                 	db	32
   482  003145  20                 	db	32
   483  003146  20                 	db	32
   484  003147  20                 	db	32
   485  003148  20                 	db	32
   486  003149  20                 	db	32
   487  00314A  20                 	db	32
   488  00314B  00                 	db	0
   489                           
   490                           	psect	idataBANK1
   491  0046C8                     __pidataBANK1:
   492                           	opt callstack 0
   493                           
   494                           ;initializer for _charging_state
   495  0046C8  0006               	dw	6
   496                           
   497                           ;initializer for _enter_state
   498  0046CA  0001               	dw	1
   499                           
   500                           	psect	idataBANK2
   501  003EC0                     __pidataBANK2:
   502                           	opt callstack 0
   503                           
   504                           ;initializer for _charging_state_lut
   505  003EC0  4E                 	db	78
   506  003EC1  4F                 	db	79
   507  003EC2  5F                 	db	95
   508  003EC3  43                 	db	67
   509  003EC4  48                 	db	72
   510  003EC5  41                 	db	65
   511  003EC6  52                 	db	82
   512  003EC7  47                 	db	71
   513  003EC8  45                 	db	69
   514  003EC9  52                 	db	82
   515  003ECA  5F                 	db	95
   516  003ECB  50                 	db	80
   517  003ECC  52                 	db	82
   518  003ECD  45                 	db	69
   519  003ECE  53                 	db	83
   520  003ECF  45                 	db	69
   521  003ED0  4E                 	db	78
   522  003ED1  54                 	db	84
   523  003ED2  20                 	db	32
   524  003ED3  00                 	db	0
   525  003ED4  46                 	db	70
   526  003ED5  41                 	db	65
   527  003ED6  53                 	db	83
   528  003ED7  54                 	db	84
   529  003ED8  5F                 	db	95
   530  003ED9  43                 	db	67
   531  003EDA  48                 	db	72
   532  003EDB  41                 	db	65
   533  003EDC  52                 	db	82
   534  003EDD  47                 	db	71
   535  003EDE  45                 	db	69
   536  003EDF  20                 	db	32
   537  003EE0  20                 	db	32
   538  003EE1  20                 	db	32
   539  003EE2  20                 	db	32
   540  003EE3  20                 	db	32
   541  003EE4  20                 	db	32
   542  003EE5  20                 	db	32
   543  003EE6  20                 	db	32
   544  003EE7  00                 	db	0
   545  003EE8  54                 	db	84
   546  003EE9  4F                 	db	79
   547  003EEA  50                 	db	80
   548  003EEB  5F                 	db	95
   549  003EEC  4F                 	db	79
   550  003EED  46                 	db	70
   551  003EEE  46                 	db	70
   552  003EEF  5F                 	db	95
   553  003EF0  43                 	db	67
   554  003EF1  48                 	db	72
   555  003EF2  41                 	db	65
   556  003EF3  52                 	db	82
   557  003EF4  47                 	db	71
   558  003EF5  45                 	db	69
   559  003EF6  20                 	db	32
   560  003EF7  20                 	db	32
   561  003EF8  20                 	db	32
   562  003EF9  20                 	db	32
   563  003EFA  20                 	db	32
   564  003EFB  00                 	db	0
   565  003EFC  43                 	db	67
   566  003EFD  48                 	db	72
   567  003EFE  41                 	db	65
   568  003EFF  52                 	db	82
   569  003F00  47                 	db	71
   570  003F01  45                 	db	69
   571  003F02  5F                 	db	95
   572  003F03  43                 	db	67
   573  003F04  4F                 	db	79
   574  003F05  4D                 	db	77
   575  003F06  50                 	db	80
   576  003F07  4C                 	db	76
   577  003F08  45                 	db	69
   578  003F09  54                 	db	84
   579  003F0A  45                 	db	69
   580  003F0B  20                 	db	32
   581  003F0C  20                 	db	32
   582  003F0D  20                 	db	32
   583  003F0E  20                 	db	32
   584  003F0F  00                 	db	0
   585  003F10  43                 	db	67
   586  003F11  48                 	db	72
   587  003F12  41                 	db	65
   588  003F13  52                 	db	82
   589  003F14  47                 	db	71
   590  003F15  45                 	db	69
   591  003F16  52                 	db	82
   592  003F17  5F                 	db	95
   593  003F18  44                 	db	68
   594  003F19  49                 	db	73
   595  003F1A  53                 	db	83
   596  003F1B  41                 	db	65
   597  003F1C  42                 	db	66
   598  003F1D  4C                 	db	76
   599  003F1E  45                 	db	69
   600  003F1F  44                 	db	68
   601  003F20  20                 	db	32
   602  003F21  20                 	db	32
   603  003F22  20                 	db	32
   604  003F23  00                 	db	0
   605  003F24  46                 	db	70
   606  003F25  41                 	db	65
   607  003F26  55                 	db	85
   608  003F27  4C                 	db	76
   609  003F28  54                 	db	84
   610  003F29  20                 	db	32
   611  003F2A  20                 	db	32
   612  003F2B  20                 	db	32
   613  003F2C  20                 	db	32
   614  003F2D  20                 	db	32
   615  003F2E  20                 	db	32
   616  003F2F  20                 	db	32
   617  003F30  20                 	db	32
   618  003F31  20                 	db	32
   619  003F32  20                 	db	32
   620  003F33  20                 	db	32
   621  003F34  20                 	db	32
   622  003F35  20                 	db	32
   623  003F36  20                 	db	32
   624  003F37  00                 	db	0
   625  003F38  55                 	db	85
   626  003F39  4E                 	db	78
   627  003F3A  44                 	db	68
   628  003F3B  45                 	db	69
   629  003F3C  46                 	db	70
   630  003F3D  49                 	db	73
   631  003F3E  4E                 	db	78
   632  003F3F  45                 	db	69
   633  003F40  44                 	db	68
   634  003F41  20                 	db	32
   635  003F42  20                 	db	32
   636  003F43  20                 	db	32
   637  003F44  20                 	db	32
   638  003F45  20                 	db	32
   639  003F46  20                 	db	32
   640  003F47  20                 	db	32
   641  003F48  20                 	db	32
   642  003F49  20                 	db	32
   643  003F4A  20                 	db	32
   644  003F4B  00                 	db	0
   645  0000                     _TXB0DLCbits	set	14309
   646  0000                     _TXB0SIDH	set	14305
   647  0000                     _TXB0SIDLbits	set	14306
   648  0000                     _TXB0D7	set	14317
   649  0000                     _TXB0D6	set	14316
   650  0000                     _TXB0D5	set	14315
   651  0000                     _TXB0D4	set	14314
   652  0000                     _TXB0D3	set	14313
   653  0000                     _TXB0D2	set	14312
   654  0000                     _TXB0D1	set	14311
   655  0000                     _TXB0D0	set	14310
   656  0000                     _TXB0CONbits	set	14304
   657  0000                     _RXB1CONbits	set	14320
   658  0000                     _RXM1SIDLbits	set	14269
   659  0000                     _RXM1SIDH	set	14268
   660  0000                     _RXF1SIDLbits	set	14245
   661  0000                     _RXF1SIDH	set	14244
   662  0000                     _RXM0SIDLbits	set	14265
   663  0000                     _RXM0SIDH	set	14264
   664  0000                     _RXF0SIDLbits	set	14241
   665  0000                     _RXF0SIDH	set	14240
   666  0000                     _BRGCON1bits	set	14083
   667  0000                     _PIE3bits	set	14739
   668  0000                     _PIR5bits	set	14757
   669  0000                     _PIR3bits	set	14755
   670  0000                     _PIE5bits	set	14741
   671  0000                     _PIR1bits	set	14753
   672  0000                     _PIE1bits	set	14737
   673  0000                     _OSCCON1	set	14809
   674  0000                     _RB2PPS	set	14858
   675  0000                     _ANSELC	set	14944
   676  0000                     _ANSELBbits	set	14928
   677  0000                     _INT0PPS	set	15040
   678  0000                     _ANSELAbits	set	14912
   679  0000                     _ADRESL	set	16111
   680  0000                     _ADRESH	set	16112
   681  0000                     _ADCON0bits	set	16120
   682  0000                     _ADPCHbits	set	16113
   683  0000                     _TMR0H	set	16311
   684  0000                     _TMR0L	set	16310
   685  0000                     _T0CON1bits	set	16313
   686  0000                     _CANSTATbits	set	16270
   687  0000                     _CANCONbits	set	16271
   688  0000                     _TRISC	set	16324
   689  0000                     _PORTCbits	set	16332
   690  0000                     _RXB0D0	set	16262
   691  0000                     _RXB0D2	set	16264
   692  0000                     _RXB0D1	set	16263
   693  0000                     _RXB0CONbits	set	16256
   694  0000                     _T0CON0bits	set	16312
   695  0000                     _PORTAbits	set	16330
   696  0000                     _PORTBbits	set	16331
   697  0000                     _TRISBbits	set	16323
   698  0000                     _TMR1L	set	16304
   699  0000                     _TMR1H	set	16305
   700  0000                     _T1CLKbits	set	16309
   701  0000                     _T1CONbits	set	16306
   702  0000                     _INTCON0bits	set	16338
   703  0000                     _TRISAbits	set	16322
   704                           
   705                           	psect	mediumconst
   706  007E7A                     __pmediumconst:
   707                           	opt callstack 0
   708  007E7A  00                 	db	0
   709  007E7B                     STR_1:
   710                           
   711                           ; BSR set to: 57
   712  007E7B  57                 	db	87	;'W'
   713  007E7C  65                 	db	101	;'e'
   714  007E7D  6C                 	db	108	;'l'
   715  007E7E  63                 	db	99	;'c'
   716  007E7F  6F                 	db	111	;'o'
   717  007E80  6D                 	db	109	;'m'
   718  007E81  65                 	db	101	;'e'
   719  007E82  20                 	db	32
   720  007E83  74                 	db	116	;'t'
   721  007E84  6F                 	db	111	;'o'
   722  007E85  20                 	db	32
   723  007E86  74                 	db	116	;'t'
   724  007E87  68                 	db	104	;'h'
   725  007E88  65                 	db	101	;'e'
   726  007E89  20                 	db	32
   727  007E8A  72                 	db	114	;'r'
   728  007E8B  6F                 	db	111	;'o'
   729  007E8C  62                 	db	98	;'b'
   730  007E8D  6F                 	db	111	;'o'
   731  007E8E  74                 	db	116	;'t'
   732  007E8F  00                 	db	0
   733  007E90                     STR_10:
   734                           
   735                           ; BSR set to: 57
   736  007E90  52                 	db	82	;'R'
   737  007E91  6F                 	db	111	;'o'
   738  007E92  62                 	db	98	;'b'
   739  007E93  6F                 	db	111	;'o'
   740  007E94  74                 	db	116	;'t'
   741  007E95  20                 	db	32
   742  007E96  77                 	db	119	;'w'
   743  007E97  69                 	db	105	;'i'
   744  007E98  6C                 	db	108	;'l'
   745  007E99  6C                 	db	108	;'l'
   746  007E9A  20                 	db	32
   747  007E9B  6D                 	db	109	;'m'
   748  007E9C  6F                 	db	111	;'o'
   749  007E9D  77                 	db	119	;'w'
   750  007E9E  69                 	db	105	;'i'
   751  007E9F  6E                 	db	110	;'n'
   752  007EA0  67                 	db	103	;'g'
   753  007EA1  21                 	db	33
   754  007EA2  21                 	db	33
   755  007EA3  00                 	db	0
   756  007EA4                     STR_16:
   757                           
   758                           ; BSR set to: 57
   759  007EA4  52                 	db	82	;'R'
   760  007EA5  65                 	db	101	;'e'
   761  007EA6  6C                 	db	108	;'l'
   762  007EA7  65                 	db	101	;'e'
   763  007EA8  61                 	db	97	;'a'
   764  007EA9  73                 	db	115	;'s'
   765  007EAA  65                 	db	101	;'e'
   766  007EAB  20                 	db	32
   767  007EAC  66                 	db	102	;'f'
   768  007EAD  6F                 	db	111	;'o'
   769  007EAE  72                 	db	114	;'r'
   770  007EAF  20                 	db	32
   771  007EB0  72                 	db	114	;'r'
   772  007EB1  65                 	db	101	;'e'
   773  007EB2  73                 	db	115	;'s'
   774  007EB3  74                 	db	116	;'t'
   775  007EB4  61                 	db	97	;'a'
   776  007EB5  72                 	db	114	;'r'
   777  007EB6  74                 	db	116	;'t'
   778  007EB7  00                 	db	0
   779  007EB8                     STR_30:
   780                           
   781                           ; BSR set to: 57
   782  007EB8  45                 	db	69	;'E'
   783  007EB9  72                 	db	114	;'r'
   784  007EBA  72                 	db	114	;'r'
   785  007EBB  6F                 	db	111	;'o'
   786  007EBC  72                 	db	114	;'r'
   787  007EBD  20                 	db	32
   788  007EBE  73                 	db	115	;'s'
   789  007EBF  74                 	db	116	;'t'
   790  007EC0  61                 	db	97	;'a'
   791  007EC1  74                 	db	116	;'t'
   792  007EC2  65                 	db	101	;'e'
   793  007EC3  6D                 	db	109	;'m'
   794  007EC4  61                 	db	97	;'a'
   795  007EC5  63                 	db	99	;'c'
   796  007EC6  68                 	db	104	;'h'
   797  007EC7  69                 	db	105	;'i'
   798  007EC8  6E                 	db	110	;'n'
   799  007EC9  65                 	db	101	;'e'
   800  007ECA  00                 	db	0
   801  007ECB                     STR_18:
   802                           
   803                           ; BSR set to: 57
   804  007ECB  52                 	db	82	;'R'
   805  007ECC  65                 	db	101	;'e'
   806  007ECD  6C                 	db	108	;'l'
   807  007ECE  65                 	db	101	;'e'
   808  007ECF  61                 	db	97	;'a'
   809  007ED0  73                 	db	115	;'s'
   810  007ED1  65                 	db	101	;'e'
   811  007ED2  20                 	db	32
   812  007ED3  66                 	db	102	;'f'
   813  007ED4  6F                 	db	111	;'o'
   814  007ED5  72                 	db	114	;'r'
   815  007ED6  20                 	db	32
   816  007ED7  72                 	db	114	;'r'
   817  007ED8  65                 	db	101	;'e'
   818  007ED9  74                 	db	116	;'t'
   819  007EDA  75                 	db	117	;'u'
   820  007EDB  72                 	db	114	;'r'
   821  007EDC  6E                 	db	110	;'n'
   822  007EDD  00                 	db	0
   823  007EDE                     STR_5:
   824                           
   825                           ; BSR set to: 57
   826  007EDE  45                 	db	69	;'E'
   827  007EDF  78                 	db	120	;'x'
   828  007EE0  65                 	db	101	;'e'
   829  007EE1  63                 	db	99	;'c'
   830  007EE2  75                 	db	117	;'u'
   831  007EE3  74                 	db	116	;'t'
   832  007EE4  69                 	db	105	;'i'
   833  007EE5  6E                 	db	110	;'n'
   834  007EE6  67                 	db	103	;'g'
   835  007EE7  20                 	db	32
   836  007EE8  73                 	db	115	;'s'
   837  007EE9  65                 	db	101	;'e'
   838  007EEA  6C                 	db	108	;'l'
   839  007EEB  66                 	db	102	;'f'
   840  007EEC  74                 	db	116	;'t'
   841  007EED  65                 	db	101	;'e'
   842  007EEE  73                 	db	115	;'s'
   843  007EEF  74                 	db	116	;'t'
   844  007EF0  00                 	db	0
   845  007EF1                     STR_2:
   846                           
   847                           ; BSR set to: 57
   848  007EF1  45                 	db	69	;'E'
   849  007EF2  78                 	db	120	;'x'
   850  007EF3  65                 	db	101	;'e'
   851  007EF4  63                 	db	99	;'c'
   852  007EF5  75                 	db	117	;'u'
   853  007EF6  74                 	db	116	;'t'
   854  007EF7  65                 	db	101	;'e'
   855  007EF8  20                 	db	32
   856  007EF9  73                 	db	115	;'s'
   857  007EFA  65                 	db	101	;'e'
   858  007EFB  6C                 	db	108	;'l'
   859  007EFC  66                 	db	102	;'f'
   860  007EFD  74                 	db	116	;'t'
   861  007EFE  65                 	db	101	;'e'
   862  007EFF  73                 	db	115	;'s'
   863  007F00  74                 	db	116	;'t'
   864  007F01  3F                 	db	63	;'?'
   865  007F02  00                 	db	0
   866  007F03                     STR_7:
   867                           
   868                           ; BSR set to: 57
   869  007F03  53                 	db	83	;'S'
   870  007F04  65                 	db	101	;'e'
   871  007F05  6C                 	db	108	;'l'
   872  007F06  66                 	db	102	;'f'
   873  007F07  74                 	db	116	;'t'
   874  007F08  65                 	db	101	;'e'
   875  007F09  73                 	db	115	;'s'
   876  007F0A  74                 	db	116	;'t'
   877  007F0B  20                 	db	32
   878  007F0C  77                 	db	119	;'w'
   879  007F0D  61                 	db	97	;'a'
   880  007F0E  73                 	db	115	;'s'
   881  007F0F  20                 	db	32
   882  007F10  4F                 	db	79	;'O'
   883  007F11  4B                 	db	75	;'K'
   884  007F12  21                 	db	33
   885  007F13  00                 	db	0
   886  007F14                     STR_19:
   887                           
   888                           ; BSR set to: 57
   889  007F14  74                 	db	116	;'t'
   890  007F15  6F                 	db	111	;'o'
   891  007F16  20                 	db	32
   892  007F17  63                 	db	99	;'c'
   893  007F18  68                 	db	104	;'h'
   894  007F19  61                 	db	97	;'a'
   895  007F1A  72                 	db	114	;'r'
   896  007F1B  67                 	db	103	;'g'
   897  007F1C  69                 	db	105	;'i'
   898  007F1D  6E                 	db	110	;'n'
   899  007F1E  67                 	db	103	;'g'
   900  007F1F  20                 	db	32
   901  007F20  62                 	db	98	;'b'
   902  007F21  61                 	db	97	;'a'
   903  007F22  73                 	db	115	;'s'
   904  007F23  65                 	db	101	;'e'
   905  007F24  00                 	db	0
   906  007F25                     STR_8:
   907                           
   908                           ; BSR set to: 57
   909  007F25  53                 	db	83	;'S'
   910  007F26  65                 	db	101	;'e'
   911  007F27  6C                 	db	108	;'l'
   912  007F28  66                 	db	102	;'f'
   913  007F29  74                 	db	116	;'t'
   914  007F2A  65                 	db	101	;'e'
   915  007F2B  73                 	db	115	;'s'
   916  007F2C  74                 	db	116	;'t'
   917  007F2D  20                 	db	32
   918  007F2E  66                 	db	102	;'f'
   919  007F2F  61                 	db	97	;'a'
   920  007F30  69                 	db	105	;'i'
   921  007F31  6C                 	db	108	;'l'
   922  007F32  65                 	db	101	;'e'
   923  007F33  64                 	db	100	;'d'
   924  007F34  00                 	db	0
   925  007F35                     STR_3:
   926                           
   927                           ; BSR set to: 57
   928  007F35  52                 	db	82	;'R'
   929  007F36  6F                 	db	111	;'o'
   930  007F37  62                 	db	98	;'b'
   931  007F38  6F                 	db	111	;'o'
   932  007F39  74                 	db	116	;'t'
   933  007F3A  20                 	db	32
   934  007F3B  77                 	db	119	;'w'
   935  007F3C  69                 	db	105	;'i'
   936  007F3D  6C                 	db	108	;'l'
   937  007F3E  6C                 	db	108	;'l'
   938  007F3F  20                 	db	32
   939  007F40  6D                 	db	109	;'m'
   940  007F41  6F                 	db	111	;'o'
   941  007F42  76                 	db	118	;'v'
   942  007F43  65                 	db	101	;'e'
   943  007F44  00                 	db	0
   944  007F45                     STR_29:
   945                           
   946                           ; BSR set to: 57
   947  007F45  50                 	db	80	;'P'
   948  007F46  75                 	db	117	;'u'
   949  007F47  73                 	db	115	;'s'
   950  007F48  68                 	db	104	;'h'
   951  007F49  20                 	db	32
   952  007F4A  74                 	db	116	;'t'
   953  007F4B  6F                 	db	111	;'o'
   954  007F4C  20                 	db	32
   955  007F4D  72                 	db	114	;'r'
   956  007F4E  65                 	db	101	;'e'
   957  007F4F  73                 	db	115	;'s'
   958  007F50  74                 	db	116	;'t'
   959  007F51  61                 	db	97	;'a'
   960  007F52  72                 	db	114	;'r'
   961  007F53  74                 	db	116	;'t'
   962  007F54  00                 	db	0
   963  007F55                     STR_4:
   964                           
   965                           ; BSR set to: 57
   966  007F55  41                 	db	65	;'A'
   967  007F56  72                 	db	114	;'r'
   968  007F57  65                 	db	101	;'e'
   969  007F58  20                 	db	32
   970  007F59  79                 	db	121	;'y'
   971  007F5A  6F                 	db	111	;'o'
   972  007F5B  75                 	db	117	;'u'
   973  007F5C  20                 	db	32
   974  007F5D  73                 	db	115	;'s'
   975  007F5E  75                 	db	117	;'u'
   976  007F5F  72                 	db	114	;'r'
   977  007F60  65                 	db	101	;'e'
   978  007F61  3F                 	db	63	;'?'
   979  007F62  3F                 	db	63	;'?'
   980  007F63  00                 	db	0
   981  007F64                     STR_23:
   982                           
   983                           ; BSR set to: 57
   984  007F64  52                 	db	82	;'R'
   985  007F65  65                 	db	101	;'e'
   986  007F66  74                 	db	116	;'t'
   987  007F67  75                 	db	117	;'u'
   988  007F68  72                 	db	114	;'r'
   989  007F69  6E                 	db	110	;'n'
   990  007F6A  69                 	db	105	;'i'
   991  007F6B  6E                 	db	110	;'n'
   992  007F6C  67                 	db	103	;'g'
   993  007F6D  20                 	db	32
   994  007F6E  68                 	db	104	;'h'
   995  007F6F  6F                 	db	111	;'o'
   996  007F70  6D                 	db	109	;'m'
   997  007F71  65                 	db	101	;'e'
   998  007F72  00                 	db	0
   999  007F73                     STR_28:
  1000                           
  1001                           ; BSR set to: 57
  1002  007F73  52                 	db	82	;'R'
  1003  007F74  6F                 	db	111	;'o'
  1004  007F75  62                 	db	98	;'b'
  1005  007F76  6F                 	db	111	;'o'
  1006  007F77  74                 	db	116	;'t'
  1007  007F78  20                 	db	32
  1008  007F79  69                 	db	105	;'i'
  1009  007F7A  73                 	db	115	;'s'
  1010  007F7B  20                 	db	32
  1011  007F7C  73                 	db	115	;'s'
  1012  007F7D  74                 	db	116	;'t'
  1013  007F7E  75                 	db	117	;'u'
  1014  007F7F  63                 	db	99	;'c'
  1015  007F80  6B                 	db	107	;'k'
  1016  007F81  00                 	db	0
  1017  007F82                     STR_20:
  1018                           
  1019                           ; BSR set to: 57
  1020  007F82  43                 	db	67	;'C'
  1021  007F83  68                 	db	104	;'h'
  1022  007F84  61                 	db	97	;'a'
  1023  007F85  72                 	db	114	;'r'
  1024  007F86  67                 	db	103	;'g'
  1025  007F87  69                 	db	105	;'i'
  1026  007F88  6E                 	db	110	;'n'
  1027  007F89  67                 	db	103	;'g'
  1028  007F8A  20                 	db	32
  1029  007F8B  72                 	db	114	;'r'
  1030  007F8C  6F                 	db	111	;'o'
  1031  007F8D  62                 	db	98	;'b'
  1032  007F8E  6F                 	db	111	;'o'
  1033  007F8F  74                 	db	116	;'t'
  1034  007F90  00                 	db	0
  1035  007F91                     STR_14:
  1036                           
  1037                           ; BSR set to: 57
  1038  007F91  4D                 	db	77	;'M'
  1039  007F92  61                 	db	97	;'a'
  1040  007F93  73                 	db	115	;'s'
  1041  007F94  74                 	db	116	;'t'
  1042  007F95  65                 	db	101	;'e'
  1043  007F96  72                 	db	114	;'r'
  1044  007F97  20                 	db	32
  1045  007F98  53                 	db	83	;'S'
  1046  007F99  54                 	db	84	;'T'
  1047  007F9A  41                 	db	65	;'A'
  1048  007F9B  54                 	db	84	;'T'
  1049  007F9C  45                 	db	69	;'E'
  1050  007F9D  3A                 	db	58	;':'
  1051  007F9E  00                 	db	0
  1052  007F9F                     STR_12:
  1053                           
  1054                           ; BSR set to: 57
  1055  007F9F  4D                 	db	77	;'M'
  1056  007FA0  6F                 	db	111	;'o'
  1057  007FA1  77                 	db	119	;'w'
  1058  007FA2  69                 	db	105	;'i'
  1059  007FA3  6E                 	db	110	;'n'
  1060  007FA4  67                 	db	103	;'g'
  1061  007FA5  20                 	db	32
  1062  007FA6  6C                 	db	108	;'l'
  1063  007FA7  61                 	db	97	;'a'
  1064  007FA8  77                 	db	119	;'w'
  1065  007FA9  6E                 	db	110	;'n'
  1066  007FAA  00                 	db	0
  1067  007FAB                     STR_9:
  1068                           
  1069                           ; BSR set to: 57
  1070  007FAB  54                 	db	84	;'T'
  1071  007FAC  72                 	db	114	;'r'
  1072  007FAD  79                 	db	121	;'y'
  1073  007FAE  20                 	db	32
  1074  007FAF  41                 	db	65	;'A'
  1075  007FB0  67                 	db	103	;'g'
  1076  007FB1  61                 	db	97	;'a'
  1077  007FB2  69                 	db	105	;'i'
  1078  007FB3  6E                 	db	110	;'n'
  1079  007FB4  3F                 	db	63	;'?'
  1080  007FB5  00                 	db	0
  1081  007FB6                     STR_21:
  1082                           
  1083                           ; BSR set to: 57
  1084  007FB6  56                 	db	86	;'V'
  1085  007FB7  6F                 	db	111	;'o'
  1086  007FB8  6C                 	db	108	;'l'
  1087  007FB9  74                 	db	116	;'t'
  1088  007FBA  61                 	db	97	;'a'
  1089  007FBB  67                 	db	103	;'g'
  1090  007FBC  65                 	db	101	;'e'
  1091  007FBD  3A                 	db	58	;':'
  1092  007FBE  20                 	db	32
  1093  007FBF  00                 	db	0
  1094  007FC0                     STR_33:
  1095                           
  1096                           ; BSR set to: 57
  1097  007FC0  20                 	db	32
  1098  007FC1  59                 	db	89	;'Y'
  1099  007FC2  65                 	db	101	;'e'
  1100  007FC3  73                 	db	115	;'s'
  1101  007FC4  20                 	db	32
  1102  007FC5  00                 	db	0
  1103  007FC6                     STR_6:
  1104                           
  1105                           ; BSR set to: 57
  1106  007FC6  2E                 	db	46
  1107  007FC7  2E                 	db	46
  1108  007FC8  2E                 	db	46
  1109  007FC9  2E                 	db	46
  1110  007FCA  2E                 	db	46
  1111  007FCB  00                 	db	0
  1112  007FCC                     STR_22:
  1113                           
  1114                           ; BSR set to: 57
  1115  007FCC  25                 	db	37
  1116  007FCD  33                 	db	51	;'3'
  1117  007FCE  2E                 	db	46
  1118  007FCF  32                 	db	50	;'2'
  1119  007FD0  66                 	db	102	;'f'
  1120  007FD1  00                 	db	0
  1121  007FD2                     STR_35:
  1122                           
  1123                           ; BSR set to: 57
  1124  007FD2  45                 	db	69	;'E'
  1125  007FD3  72                 	db	114	;'r'
  1126  007FD4  72                 	db	114	;'r'
  1127  007FD5  6F                 	db	111	;'o'
  1128  007FD6  72                 	db	114	;'r'
  1129  007FD7  00                 	db	0
  1130  007FD8                     STR_31:
  1131                           
  1132                           ; BSR set to: 57
  1133  007FD8  7C                 	db	124
  1134  007FD9  59                 	db	89	;'Y'
  1135  007FDA  65                 	db	101	;'e'
  1136  007FDB  73                 	db	115	;'s'
  1137  007FDC  7C                 	db	124
  1138  007FDD  00                 	db	0
  1139  007FDE                     STR_32:
  1140                           
  1141                           ; BSR set to: 57
  1142  007FDE  20                 	db	32
  1143  007FDF  4E                 	db	78	;'N'
  1144  007FE0  6F                 	db	111	;'o'
  1145  007FE1  20                 	db	32
  1146  007FE2  00                 	db	0
  1147  007FE3                     STR_34:
  1148                           
  1149                           ; BSR set to: 57
  1150  007FE3  7C                 	db	124
  1151  007FE4  4E                 	db	78	;'N'
  1152  007FE5  6F                 	db	111	;'o'
  1153  007FE6  7C                 	db	124
  1154  007FE7  00                 	db	0
  1155  007FE8                     STR_36:
  1156                           
  1157                           ; BSR set to: 57
  1158  007FE8  49                 	db	73	;'I'
  1159  007FE9  4E                 	db	78	;'N'
  1160  007FEA  46                 	db	70	;'F'
  1161  007FEB  00                 	db	0
  1162  007FEC                     STR_40:
  1163                           
  1164                           ; BSR set to: 57
  1165  007FEC  4E                 	db	78	;'N'
  1166  007FED  41                 	db	65	;'A'
  1167  007FEE  4E                 	db	78	;'N'
  1168  007FEF  00                 	db	0
  1169  007FF0                     STR_37:
  1170                           
  1171                           ; BSR set to: 57
  1172  007FF0  69                 	db	105	;'i'
  1173  007FF1  6E                 	db	110	;'n'
  1174  007FF2  66                 	db	102	;'f'
  1175  007FF3  00                 	db	0
  1176  007FF4                     STR_41:
  1177                           
  1178                           ; BSR set to: 57
  1179  007FF4  6E                 	db	110	;'n'
  1180  007FF5  61                 	db	97	;'a'
  1181  007FF6  6E                 	db	110	;'n'
  1182  007FF7  00                 	db	0
  1183  007FF8                     STR_15:
  1184                           
  1185                           ; BSR set to: 57
  1186  007FF8  25                 	db	37
  1187  007FF9  33                 	db	51	;'3'
  1188  007FFA  64                 	db	100	;'d'
  1189  007FFB  00                 	db	0
  1190  007FFC                     STR_44:
  1191                           
  1192                           ; BSR set to: 57
  1193  007FFC  6C                 	db	108	;'l'
  1194  007FFD  66                 	db	102	;'f'
  1195  007FFE  00                 	db	0
  1196  0000                     
  1197                           ; #config settings
  1198  007FFF  00                 	db	0	; dummy byte at the end
  1199  0000                     
  1200                           	psect	cinit
  1201  0039E8                     __pcinit:
  1202                           	opt callstack 0
  1203  0039E8                     start_initialization:
  1204                           	opt callstack 0
  1205  0039E8                     __initialization:
  1206                           	opt callstack 0
  1207                           
  1208                           ; Initialize objects allocated to BIGRAM (360 bytes)
  1209                           ; load TBLPTR registers with __pidataBIGRAM
  1210  0039E8  0EE4               	movlw	low __pidataBIGRAM
  1211  0039EA  6EF6               	movwf	tblptrl,c
  1212  0039EC  0E2F               	movlw	high __pidataBIGRAM
  1213  0039EE  6EF7               	movwf	tblptrh,c
  1214  0039F0  0E00               	movlw	low (__pidataBIGRAM shr (0+16))
  1215  0039F2  6EF8               	movwf	tblptru,c
  1216  0039F4  EE00  F28C         	lfsr	0,__pdataBIGRAM
  1217  0039F8  EE10 F168          	lfsr	1,360
  1218  0039FC                     copy_data0:
  1219  0039FC  0009               	tblrd		*+
  1220  0039FE  006F FFD7 FFEE     	movff	tablat,postinc0
  1221  003A04  50E5               	movf	postdec1,w,c
  1222  003A06  50E1               	movf	fsr1l,w,c
  1223  003A08  E1F9               	bnz	copy_data0
  1224  003A0A  50E2               	movf	fsr1h,w,c
  1225  003A0C  E1F7               	bnz	copy_data0
  1226                           
  1227                           ; Initialize objects allocated to BANK2 (140 bytes)
  1228                           ; load TBLPTR registers with __pidataBANK2
  1229  003A0E  0EC0               	movlw	low __pidataBANK2
  1230  003A10  6EF6               	movwf	tblptrl,c
  1231  003A12  0E3E               	movlw	high __pidataBANK2
  1232  003A14  6EF7               	movwf	tblptrh,c
  1233  003A16  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1234  003A18  6EF8               	movwf	tblptru,c
  1235  003A1A  EE00  F200         	lfsr	0,__pdataBANK2
  1236  003A1E  EE10 F08C          	lfsr	1,140
  1237  003A22                     copy_data1:
  1238  003A22  0009               	tblrd		*+
  1239  003A24  006F FFD7 FFEE     	movff	tablat,postinc0
  1240  003A2A  50E5               	movf	postdec1,w,c
  1241  003A2C  50E1               	movf	fsr1l,w,c
  1242  003A2E  E1F9               	bnz	copy_data1
  1243                           
  1244                           ; Initialize objects allocated to BANK1 (4 bytes)
  1245                           ; load TBLPTR registers with __pidataBANK1
  1246  003A30  0EC8               	movlw	low __pidataBANK1
  1247  003A32  6EF6               	movwf	tblptrl,c
  1248  003A34  0E46               	movlw	high __pidataBANK1
  1249  003A36  6EF7               	movwf	tblptrh,c
  1250  003A38  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1251  003A3A  6EF8               	movwf	tblptru,c
  1252  003A3C  EE00  F1B9         	lfsr	0,__pdataBANK1
  1253  003A40  EE10 F004          	lfsr	1,4
  1254  003A44                     copy_data2:
  1255  003A44  0009               	tblrd		*+
  1256  003A46  006F FFD7 FFEE     	movff	tablat,postinc0
  1257  003A4C  50E5               	movf	postdec1,w,c
  1258  003A4E  50E1               	movf	fsr1l,w,c
  1259  003A50  E1F9               	bnz	copy_data2
  1260                           
  1261                           ; Initialize objects allocated to COMRAM (4 bytes)
  1262                           ; load TBLPTR registers with __pidataCOMRAM
  1263  003A52  0EC4               	movlw	low __pidataCOMRAM
  1264  003A54  6EF6               	movwf	tblptrl,c
  1265  003A56  0E46               	movlw	high __pidataCOMRAM
  1266  003A58  6EF7               	movwf	tblptrh,c
  1267  003A5A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1268  003A5C  6EF8               	movwf	tblptru,c
  1269  003A5E  EE00  F059         	lfsr	0,__pdataCOMRAM
  1270  003A62  EE10 F004          	lfsr	1,4
  1271  003A66                     copy_data3:
  1272  003A66  0009               	tblrd		*+
  1273  003A68  006F FFD7 FFEE     	movff	tablat,postinc0
  1274  003A6E  50E5               	movf	postdec1,w,c
  1275  003A70  50E1               	movf	fsr1l,w,c
  1276  003A72  E1F9               	bnz	copy_data3
  1277                           
  1278                           ; Clear objects allocated to BANK1 (99 bytes)
  1279  003A74  EE00  F100         	lfsr	0,__pbssBANK1
  1280  003A78  0E63               	movlw	99
  1281  003A7A                     clear_0:
  1282  003A7A  6AEE               	clrf	postinc0,c
  1283  003A7C  06E8               	decf	wreg,f,c
  1284  003A7E  E1FD               	bnz	clear_0
  1285                           
  1286                           ; Clear objects allocated to BANK0 (4 bytes)
  1287  003A80  0100               	movlb	0
  1288  003A82  6BFE               	clrf	(__pbssBANK0+3)& (0+255),b
  1289  003A84  6BFD               	clrf	(__pbssBANK0+2)& (0+255),b
  1290  003A86  6BFC               	clrf	(__pbssBANK0+1)& (0+255),b
  1291  003A88  6BFB               	clrf	__pbssBANK0& (0+255),b
  1292                           
  1293                           ; Clear objects allocated to COMRAM (14 bytes)
  1294  003A8A  EE00  F04B         	lfsr	0,__pbssCOMRAM
  1295  003A8E  0E0E               	movlw	14
  1296  003A90                     clear_1:
  1297  003A90  6AEE               	clrf	postinc0,c
  1298  003A92  06E8               	decf	wreg,f,c
  1299  003A94  E1FD               	bnz	clear_1
  1300                           
  1301                           ;
  1302                           ; Setup IVTBASE
  1303                           ;
  1304  003A96  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1305  003A98  6ED5               	movwf	213,c
  1306  003A9A  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1307  003A9C  6ED6               	movwf	214,c
  1308  003A9E  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1309  003AA0  6ED7               	movwf	215,c
  1310  003AA2                     end_of_initialization:
  1311                           	opt callstack 0
  1312  003AA2                     __end_of__initialization:
  1313                           	opt callstack 0
  1314  003AA2  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1315  003AA4  6EF8               	movwf	tblptru,c
  1316  003AA6  0100               	movlb	0
  1317  003AA8  EF03  F006         	goto	_main	;jump to C main() function
  1318                           
  1319                           	psect	bssCOMRAM
  1320  00004B                     __pbssCOMRAM:
  1321                           	opt callstack 0
  1322  00004B                     _nout:
  1323                           	opt callstack 0
  1324  00004B                     	ds	2
  1325  00004D                     _width:
  1326                           	opt callstack 0
  1327  00004D                     	ds	2
  1328  00004F                     _min_tick_count:
  1329                           	opt callstack 0
  1330  00004F                     	ds	2
  1331  000051                     _ADCvalueLow1:
  1332                           	opt callstack 0
  1333  000051                     	ds	2
  1334  000053                     _ADCvalueHigh1:
  1335                           	opt callstack 0
  1336  000053                     	ds	2
  1337  000055                     _ADCvalueLow0:
  1338                           	opt callstack 0
  1339  000055                     	ds	2
  1340  000057                     _ADCvalueHigh0:
  1341                           	opt callstack 0
  1342  000057                     	ds	2
  1343                           
  1344                           	psect	dataCOMRAM
  1345  000059                     __pdataCOMRAM:
  1346                           	opt callstack 0
  1347  000059                     _status:
  1348                           	opt callstack 0
  1349  000059                     	ds	2
  1350  00005B                     _max_tick_count:
  1351                           	opt callstack 0
  1352  00005B                     	ds	2
  1353                           
  1354                           	psect	bssBANK0
  1355  0000FB                     __pbssBANK0:
  1356                           	opt callstack 0
  1357  0000FB                     _prec:
  1358                           	opt callstack 0
  1359  0000FB                     	ds	2
  1360  0000FD                     _flags:
  1361                           	opt callstack 0
  1362  0000FD                     	ds	2
  1363                           
  1364                           	psect	bssBANK1
  1365  000100                     __pbssBANK1:
  1366                           	opt callstack 0
  1367  000100                     floorf@F524:
  1368                           	opt callstack 0
  1369  000100                     	ds	4
  1370  000104                     ___fpclassifyf@F463:
  1371                           	opt callstack 0
  1372  000104                     	ds	4
  1373  000108                     _charging_voltage:
  1374                           	opt callstack 0
  1375  000108                     	ds	4
  1376  00010C                     _master_state:
  1377                           	opt callstack 0
  1378  00010C                     	ds	2
  1379  00010E                     _feedback:
  1380                           	opt callstack 0
  1381  00010E                     	ds	2
  1382  000110                     _tick_count:
  1383                           	opt callstack 0
  1384  000110                     	ds	2
  1385  000112                     _state:
  1386                           	opt callstack 0
  1387  000112                     	ds	1
  1388  000113                     _dbuf:
  1389                           	opt callstack 0
  1390  000113                     	ds	80
  1391                           
  1392                           	psect	dataBANK1
  1393  0001B9                     __pdataBANK1:
  1394                           	opt callstack 0
  1395  0001B9                     _charging_state:
  1396                           	opt callstack 0
  1397  0001B9                     	ds	2
  1398  0001BB                     _enter_state:
  1399                           	opt callstack 0
  1400  0001BB                     	ds	2
  1401                           
  1402                           	psect	dataBANK2
  1403  000200                     __pdataBANK2:
  1404                           	opt callstack 0
  1405  000200                     _charging_state_lut:
  1406                           	opt callstack 0
  1407  000200                     	ds	140
  1408                           
  1409                           	psect	dataBIGRAM
  1410  00028C                     __pdataBIGRAM:
  1411                           	opt callstack 0
  1412  00028C                     _master_state_lut:
  1413                           	opt callstack 0
  1414  00028C                     	ds	360
  1415                           
  1416                           	psect	cstackBANK1
  1417  000163                     __pcstackBANK1:
  1418                           	opt callstack 0
  1419  000163                     ?_sprintf:
  1420                           	opt callstack 0
  1421  000163                     sprintf@s:
  1422                           	opt callstack 0
  1423                           
  1424                           ; 2 bytes @ 0x0
  1425  000163                     	ds	2
  1426  000165                     sprintf@fmt:
  1427                           	opt callstack 0
  1428                           
  1429                           ; 2 bytes @ 0x2
  1430  000165                     	ds	8
  1431  00016D                     sprintf@ap:
  1432                           	opt callstack 0
  1433                           
  1434                           ; 2 bytes @ 0xA
  1435  00016D                     	ds	2
  1436  00016F                     sprintf@f:
  1437                           	opt callstack 0
  1438                           
  1439                           ; 6 bytes @ 0xC
  1440  00016F                     	ds	6
  1441  000175                     main@str:
  1442                           	opt callstack 0
  1443                           
  1444                           ; 20 bytes @ 0x12
  1445  000175                     	ds	20
  1446  000189                     main@str_1448:
  1447                           	opt callstack 0
  1448                           
  1449                           ; 20 bytes @ 0x26
  1450  000189                     	ds	20
  1451  00019D                     main@str_1459:
  1452                           	opt callstack 0
  1453                           
  1454                           ; 20 bytes @ 0x3A
  1455  00019D                     	ds	20
  1456  0001B1                     main@str_1454:
  1457                           	opt callstack 0
  1458                           
  1459                           ; 8 bytes @ 0x4E
  1460  0001B1                     	ds	8
  1461                           
  1462                           	psect	cstackBANK0
  1463  000060                     __pcstackBANK0:
  1464                           	opt callstack 0
  1465  000060                     ?_strlen:
  1466                           	opt callstack 0
  1467  000060                     ?___fpclassifyf:
  1468                           	opt callstack 0
  1469  000060                     ?_isupper:
  1470                           	opt callstack 0
  1471  000060                     ?_isdigit:
  1472                           	opt callstack 0
  1473  000060                     ?_strncmp:
  1474                           	opt callstack 0
  1475  000060                     ?_isspace:
  1476                           	opt callstack 0
  1477  000060                     ?___wmul:
  1478                           	opt callstack 0
  1479  000060                     ?___awdiv:
  1480                           	opt callstack 0
  1481  000060                     ?___awmod:
  1482                           	opt callstack 0
  1483  000060                     ?___fladd:
  1484                           	opt callstack 0
  1485  000060                     ?___fldiv:
  1486                           	opt callstack 0
  1487  000060                     ?___flmul:
  1488                           	opt callstack 0
  1489  000060                     ?___flneg:
  1490                           	opt callstack 0
  1491  000060                     ?___fltol:
  1492                           	opt callstack 0
  1493  000060                     ?___aodiv:
  1494                           	opt callstack 0
  1495  000060                     ?___aomod:
  1496                           	opt callstack 0
  1497  000060                     Lcd_Port@a:
  1498                           	opt callstack 0
  1499  000060                     ___wmul@multiplier:
  1500                           	opt callstack 0
  1501  000060                     ___awdiv@dividend:
  1502                           	opt callstack 0
  1503  000060                     ___awmod@dividend:
  1504                           	opt callstack 0
  1505  000060                     isdigit@c:
  1506                           	opt callstack 0
  1507  000060                     isspace@c:
  1508                           	opt callstack 0
  1509  000060                     isupper@c:
  1510                           	opt callstack 0
  1511  000060                     fputc@c:
  1512                           	opt callstack 0
  1513  000060                     strcpy@dest:
  1514                           	opt callstack 0
  1515  000060                     strlen@s:
  1516                           	opt callstack 0
  1517  000060                     strncmp@_l:
  1518                           	opt callstack 0
  1519  000060                     ___fleq@ff1:
  1520                           	opt callstack 0
  1521  000060                     ___flneg@f1:
  1522                           	opt callstack 0
  1523  000060                     ___fltol@f1:
  1524                           	opt callstack 0
  1525  000060                     ___fladd@b:
  1526                           	opt callstack 0
  1527  000060                     ___fldiv@b:
  1528                           	opt callstack 0
  1529  000060                     ___flmul@b:
  1530                           	opt callstack 0
  1531  000060                     ___fpclassifyf@x:
  1532                           	opt callstack 0
  1533  000060                     ___aodiv@dividend:
  1534                           	opt callstack 0
  1535  000060                     ___aomod@dividend:
  1536                           	opt callstack 0
  1537                           
  1538                           ; 8 bytes @ 0x0
  1539  000060                     	ds	1
  1540  000061                     ??_Lcd_Cmd:
  1541  000061                     Lcd_Write_Char@temp:
  1542                           	opt callstack 0
  1543                           
  1544                           ; 1 bytes @ 0x1
  1545  000061                     	ds	1
  1546  000062                     ??_isupper:
  1547  000062                     ??_isdigit:
  1548  000062                     ??_isspace:
  1549  000062                     Lcd_Cmd@a:
  1550                           	opt callstack 0
  1551  000062                     Lcd_Write_Char@y:
  1552                           	opt callstack 0
  1553  000062                     ___wmul@multiplicand:
  1554                           	opt callstack 0
  1555  000062                     ___awdiv@divisor:
  1556                           	opt callstack 0
  1557  000062                     ___awmod@divisor:
  1558                           	opt callstack 0
  1559  000062                     fputc@fp:
  1560                           	opt callstack 0
  1561  000062                     strcpy@src:
  1562                           	opt callstack 0
  1563  000062                     strlen@a:
  1564                           	opt callstack 0
  1565  000062                     strncmp@_r:
  1566                           	opt callstack 0
  1567                           
  1568                           ; 2 bytes @ 0x2
  1569  000062                     	ds	1
  1570  000063                     ??_Lcd_Init:
  1571  000063                     Lcd_Set_Cursor@b:
  1572                           	opt callstack 0
  1573  000063                     Lcd_Write_Char@a:
  1574                           	opt callstack 0
  1575                           
  1576                           ; 1 bytes @ 0x3
  1577  000063                     	ds	1
  1578  000064                     ??_fputc:
  1579  000064                     ??___fpclassifyf:
  1580  000064                     ??_strcpy:
  1581  000064                     ??___fltol:
  1582  000064                     Lcd_Set_Cursor@a:
  1583                           	opt callstack 0
  1584  000064                     ___awdiv@counter:
  1585                           	opt callstack 0
  1586  000064                     ___awmod@counter:
  1587                           	opt callstack 0
  1588  000064                     ___wmul@product:
  1589                           	opt callstack 0
  1590  000064                     strncmp@n:
  1591                           	opt callstack 0
  1592  000064                     ___fleq@ff2:
  1593                           	opt callstack 0
  1594  000064                     ___fladd@a:
  1595                           	opt callstack 0
  1596  000064                     ___fldiv@a:
  1597                           	opt callstack 0
  1598  000064                     ___flmul@a:
  1599                           	opt callstack 0
  1600                           
  1601                           ; 4 bytes @ 0x4
  1602  000064                     	ds	1
  1603  000065                     Lcd_Set_Cursor@z:
  1604                           	opt callstack 0
  1605  000065                     ___awdiv@sign:
  1606                           	opt callstack 0
  1607  000065                     ___awmod@sign:
  1608                           	opt callstack 0
  1609                           
  1610                           ; 1 bytes @ 0x5
  1611  000065                     	ds	1
  1612  000066                     ??_strncmp:
  1613  000066                     ?_tolower:
  1614                           	opt callstack 0
  1615  000066                     Lcd_Set_Cursor@y:
  1616                           	opt callstack 0
  1617  000066                     _isspace$2320:
  1618                           	opt callstack 0
  1619  000066                     Lcd_Write_String@a:
  1620                           	opt callstack 0
  1621  000066                     ___awdiv@quotient:
  1622                           	opt callstack 0
  1623  000066                     strcpy@s:
  1624                           	opt callstack 0
  1625  000066                     tolower@c:
  1626                           	opt callstack 0
  1627                           
  1628                           ; 2 bytes @ 0x6
  1629  000066                     	ds	1
  1630  000067                     ?_atoi:
  1631                           	opt callstack 0
  1632  000067                     Lcd_Set_Cursor@temp:
  1633                           	opt callstack 0
  1634  000067                     atoi@s:
  1635                           	opt callstack 0
  1636  000067                     strncmp@l:
  1637                           	opt callstack 0
  1638                           
  1639                           ; 2 bytes @ 0x7
  1640  000067                     	ds	1
  1641  000068                     ??_Lcd_Write_String:
  1642  000068                     ??_tolower:
  1643  000068                     ??___fladd:
  1644  000068                     ??___fldiv:
  1645  000068                     ??___flmul:
  1646  000068                     ??___fleq:
  1647  000068                     ___fltol@sign1:
  1648                           	opt callstack 0
  1649  000068                     ___fpclassifyf@e:
  1650                           	opt callstack 0
  1651  000068                     strcpy@d:
  1652                           	opt callstack 0
  1653  000068                     ___aodiv@divisor:
  1654                           	opt callstack 0
  1655  000068                     ___aomod@divisor:
  1656                           	opt callstack 0
  1657                           
  1658                           ; 8 bytes @ 0x8
  1659  000068                     	ds	1
  1660  000069                     ??_atoi:
  1661  000069                     ___fltol@exp1:
  1662                           	opt callstack 0
  1663  000069                     fputs@s:
  1664                           	opt callstack 0
  1665  000069                     strncmp@r:
  1666                           	opt callstack 0
  1667                           
  1668                           ; 2 bytes @ 0x9
  1669  000069                     	ds	1
  1670  00006A                     Lcd_Write_String@i:
  1671                           	opt callstack 0
  1672  00006A                     ___fpclassifyf@u:
  1673                           	opt callstack 0
  1674                           
  1675                           ; 4 bytes @ 0xA
  1676  00006A                     	ds	1
  1677  00006B                     fputs@fp:
  1678                           	opt callstack 0
  1679                           
  1680                           ; 2 bytes @ 0xB
  1681  00006B                     	ds	1
  1682  00006C                     ??_MenuYesNo:
  1683  00006C                     ___fladd@signs:
  1684                           	opt callstack 0
  1685  00006C                     ___flmul@sign:
  1686                           	opt callstack 0
  1687  00006C                     _tolower$2405:
  1688                           	opt callstack 0
  1689  00006C                     ___fldiv@rem:
  1690                           	opt callstack 0
  1691                           
  1692                           ; 4 bytes @ 0xC
  1693  00006C                     	ds	1
  1694  00006D                     ___fladd@aexp:
  1695                           	opt callstack 0
  1696  00006D                     fputs@c:
  1697                           	opt callstack 0
  1698  00006D                     atoi@neg:
  1699                           	opt callstack 0
  1700  00006D                     ___flmul@grs:
  1701                           	opt callstack 0
  1702                           
  1703                           ; 4 bytes @ 0xD
  1704  00006D                     	ds	1
  1705  00006E                     ___fladd@bexp:
  1706                           	opt callstack 0
  1707  00006E                     fputs@i:
  1708                           	opt callstack 0
  1709                           
  1710                           ; 2 bytes @ 0xE
  1711  00006E                     	ds	1
  1712  00006F                     ___fladd@grs:
  1713                           	opt callstack 0
  1714  00006F                     _atoi$2289:
  1715                           	opt callstack 0
  1716                           
  1717                           ; 2 bytes @ 0xF
  1718  00006F                     	ds	1
  1719  000070                     ?_pad:
  1720                           	opt callstack 0
  1721  000070                     ___aodiv@counter:
  1722                           	opt callstack 0
  1723  000070                     ___aomod@counter:
  1724                           	opt callstack 0
  1725  000070                     ___fldiv@sign:
  1726                           	opt callstack 0
  1727  000070                     pad@fp:
  1728                           	opt callstack 0
  1729                           
  1730                           ; 2 bytes @ 0x10
  1731  000070                     	ds	1
  1732  000071                     ___aodiv@sign:
  1733                           	opt callstack 0
  1734  000071                     ___aomod@sign:
  1735                           	opt callstack 0
  1736  000071                     ___flmul@aexp:
  1737                           	opt callstack 0
  1738  000071                     ___fldiv@new_exp:
  1739                           	opt callstack 0
  1740  000071                     _atoi$2291:
  1741                           	opt callstack 0
  1742                           
  1743                           ; 2 bytes @ 0x11
  1744  000071                     	ds	1
  1745  000072                     ?_abs:
  1746                           	opt callstack 0
  1747  000072                     ___flmul@bexp:
  1748                           	opt callstack 0
  1749  000072                     pad@buf:
  1750                           	opt callstack 0
  1751  000072                     abs@a:
  1752                           	opt callstack 0
  1753  000072                     ___aodiv@quotient:
  1754                           	opt callstack 0
  1755                           
  1756                           ; 8 bytes @ 0x12
  1757  000072                     	ds	1
  1758  000073                     _atoi$2290:
  1759                           	opt callstack 0
  1760  000073                     ___fldiv@grs:
  1761                           	opt callstack 0
  1762  000073                     ___flmul@prod:
  1763                           	opt callstack 0
  1764                           
  1765                           ; 4 bytes @ 0x13
  1766  000073                     	ds	1
  1767  000074                     ??_abs:
  1768  000074                     pad@p:
  1769                           	opt callstack 0
  1770  000074                     atoi@n:
  1771                           	opt callstack 0
  1772                           
  1773                           ; 2 bytes @ 0x14
  1774  000074                     	ds	2
  1775  000076                     ??_pad:
  1776                           
  1777                           ; 1 bytes @ 0x16
  1778  000076                     	ds	1
  1779  000077                     ___fldiv@bexp:
  1780                           	opt callstack 0
  1781  000077                     pad@i:
  1782                           	opt callstack 0
  1783  000077                     ___flmul@temp:
  1784                           	opt callstack 0
  1785                           
  1786                           ; 2 bytes @ 0x17
  1787  000077                     	ds	1
  1788  000078                     ___fldiv@aexp:
  1789                           	opt callstack 0
  1790                           
  1791                           ; 1 bytes @ 0x18
  1792  000078                     	ds	1
  1793  000079                     ?_floorf:
  1794                           	opt callstack 0
  1795  000079                     ?___flsub:
  1796                           	opt callstack 0
  1797  000079                     pad@w:
  1798                           	opt callstack 0
  1799  000079                     ___flge@ff1:
  1800                           	opt callstack 0
  1801  000079                     ___flsub@b:
  1802                           	opt callstack 0
  1803  000079                     floorf@x:
  1804                           	opt callstack 0
  1805                           
  1806                           ; 4 bytes @ 0x19
  1807  000079                     	ds	2
  1808  00007B                     ?_dtoa:
  1809                           	opt callstack 0
  1810  00007B                     dtoa@fp:
  1811                           	opt callstack 0
  1812                           
  1813                           ; 2 bytes @ 0x1B
  1814  00007B                     	ds	2
  1815  00007D                     ??_floorf:
  1816  00007D                     ___flge@ff2:
  1817                           	opt callstack 0
  1818  00007D                     ___flsub@a:
  1819                           	opt callstack 0
  1820  00007D                     dtoa@d:
  1821                           	opt callstack 0
  1822                           
  1823                           ; 8 bytes @ 0x1D
  1824  00007D                     	ds	4
  1825  000081                     ??___flge:
  1826                           
  1827                           ; 1 bytes @ 0x21
  1828  000081                     	ds	2
  1829  000083                     floorf@m:
  1830                           	opt callstack 0
  1831                           
  1832                           ; 4 bytes @ 0x23
  1833  000083                     	ds	2
  1834  000085                     ??_dtoa:
  1835                           
  1836                           ; 1 bytes @ 0x25
  1837  000085                     	ds	2
  1838  000087                     floorf@e:
  1839                           	opt callstack 0
  1840                           
  1841                           ; 2 bytes @ 0x27
  1842  000087                     	ds	2
  1843  000089                     floorf@u:
  1844                           	opt callstack 0
  1845                           
  1846                           ; 4 bytes @ 0x29
  1847  000089                     	ds	4
  1848  00008D                     ?_efgtoa:
  1849                           	opt callstack 0
  1850  00008D                     _dtoa$1761:
  1851                           	opt callstack 0
  1852  00008D                     efgtoa@fp:
  1853                           	opt callstack 0
  1854                           
  1855                           ; 2 bytes @ 0x2D
  1856  00008D                     	ds	2
  1857  00008F                     dtoa@p:
  1858                           	opt callstack 0
  1859  00008F                     efgtoa@f:
  1860                           	opt callstack 0
  1861                           
  1862                           ; 4 bytes @ 0x2F
  1863  00008F                     	ds	2
  1864  000091                     dtoa@w:
  1865                           	opt callstack 0
  1866                           
  1867                           ; 2 bytes @ 0x31
  1868  000091                     	ds	2
  1869  000093                     efgtoa@c:
  1870                           	opt callstack 0
  1871  000093                     dtoa@s:
  1872                           	opt callstack 0
  1873                           
  1874                           ; 2 bytes @ 0x33
  1875  000093                     	ds	1
  1876  000094                     ??_efgtoa:
  1877                           
  1878                           ; 1 bytes @ 0x34
  1879  000094                     	ds	1
  1880  000095                     dtoa@n:
  1881                           	opt callstack 0
  1882                           
  1883                           ; 8 bytes @ 0x35
  1884  000095                     	ds	4
  1885  000099                     efgtoa@ou:
  1886                           	opt callstack 0
  1887                           
  1888                           ; 4 bytes @ 0x39
  1889  000099                     	ds	4
  1890  00009D                     dtoa@i:
  1891                           	opt callstack 0
  1892  00009D                     _efgtoa$1785:
  1893                           	opt callstack 0
  1894                           
  1895                           ; 2 bytes @ 0x3D
  1896  00009D                     	ds	2
  1897  00009F                     _efgtoa$1786:
  1898                           	opt callstack 0
  1899                           
  1900                           ; 2 bytes @ 0x3F
  1901  00009F                     	ds	2
  1902  0000A1                     _efgtoa$1790:
  1903                           	opt callstack 0
  1904                           
  1905                           ; 2 bytes @ 0x41
  1906  0000A1                     	ds	2
  1907  0000A3                     _efgtoa$1794:
  1908                           	opt callstack 0
  1909                           
  1910                           ; 2 bytes @ 0x43
  1911  0000A3                     	ds	2
  1912  0000A5                     _efgtoa$1795:
  1913                           	opt callstack 0
  1914                           
  1915                           ; 2 bytes @ 0x45
  1916  0000A5                     	ds	2
  1917  0000A7                     _efgtoa$1796:
  1918                           	opt callstack 0
  1919                           
  1920                           ; 2 bytes @ 0x47
  1921  0000A7                     	ds	2
  1922  0000A9                     efgtoa@t:
  1923                           	opt callstack 0
  1924                           
  1925                           ; 2 bytes @ 0x49
  1926  0000A9                     	ds	2
  1927  0000AB                     efgtoa@pp:
  1928                           	opt callstack 0
  1929                           
  1930                           ; 2 bytes @ 0x4B
  1931  0000AB                     	ds	2
  1932  0000AD                     efgtoa@m:
  1933                           	opt callstack 0
  1934                           
  1935                           ; 2 bytes @ 0x4D
  1936  0000AD                     	ds	2
  1937  0000AF                     efgtoa@ne:
  1938                           	opt callstack 0
  1939                           
  1940                           ; 2 bytes @ 0x4F
  1941  0000AF                     	ds	2
  1942  0000B1                     efgtoa@d:
  1943                           	opt callstack 0
  1944                           
  1945                           ; 2 bytes @ 0x51
  1946  0000B1                     	ds	2
  1947  0000B3                     efgtoa@sign:
  1948                           	opt callstack 0
  1949                           
  1950                           ; 2 bytes @ 0x53
  1951  0000B3                     	ds	2
  1952  0000B5                     efgtoa@p:
  1953                           	opt callstack 0
  1954                           
  1955                           ; 2 bytes @ 0x55
  1956  0000B5                     	ds	2
  1957  0000B7                     efgtoa@nmode:
  1958                           	opt callstack 0
  1959                           
  1960                           ; 1 bytes @ 0x57
  1961  0000B7                     	ds	1
  1962  0000B8                     efgtoa@w:
  1963                           	opt callstack 0
  1964                           
  1965                           ; 2 bytes @ 0x58
  1966  0000B8                     	ds	2
  1967  0000BA                     efgtoa@mode:
  1968                           	opt callstack 0
  1969                           
  1970                           ; 1 bytes @ 0x5A
  1971  0000BA                     	ds	1
  1972  0000BB                     efgtoa@h:
  1973                           	opt callstack 0
  1974                           
  1975                           ; 4 bytes @ 0x5B
  1976  0000BB                     	ds	4
  1977  0000BF                     efgtoa@l:
  1978                           	opt callstack 0
  1979                           
  1980                           ; 4 bytes @ 0x5F
  1981  0000BF                     	ds	4
  1982  0000C3                     efgtoa@i:
  1983                           	opt callstack 0
  1984                           
  1985                           ; 2 bytes @ 0x63
  1986  0000C3                     	ds	2
  1987  0000C5                     efgtoa@g:
  1988                           	opt callstack 0
  1989                           
  1990                           ; 4 bytes @ 0x65
  1991  0000C5                     	ds	4
  1992  0000C9                     efgtoa@e:
  1993                           	opt callstack 0
  1994                           
  1995                           ; 2 bytes @ 0x69
  1996  0000C9                     	ds	2
  1997  0000CB                     efgtoa@n:
  1998                           	opt callstack 0
  1999                           
  2000                           ; 2 bytes @ 0x6B
  2001  0000CB                     	ds	2
  2002  0000CD                     efgtoa@u:
  2003                           	opt callstack 0
  2004                           
  2005                           ; 4 bytes @ 0x6D
  2006  0000CD                     	ds	4
  2007  0000D1                     ?_vfpfcnvrt:
  2008                           	opt callstack 0
  2009  0000D1                     vfpfcnvrt@fp:
  2010                           	opt callstack 0
  2011                           
  2012                           ; 2 bytes @ 0x71
  2013  0000D1                     	ds	2
  2014  0000D3                     vfpfcnvrt@fmt:
  2015                           	opt callstack 0
  2016                           
  2017                           ; 2 bytes @ 0x73
  2018  0000D3                     	ds	2
  2019  0000D5                     vfpfcnvrt@ap:
  2020                           	opt callstack 0
  2021                           
  2022                           ; 2 bytes @ 0x75
  2023  0000D5                     	ds	2
  2024  0000D7                     ??_vfpfcnvrt:
  2025                           
  2026                           ; 1 bytes @ 0x77
  2027  0000D7                     	ds	4
  2028  0000DB                     vfpfcnvrt@ll:
  2029                           	opt callstack 0
  2030                           
  2031                           ; 8 bytes @ 0x7B
  2032  0000DB                     	ds	8
  2033  0000E3                     _vfpfcnvrt$1810:
  2034                           	opt callstack 0
  2035                           
  2036                           ; 2 bytes @ 0x83
  2037  0000E3                     	ds	2
  2038  0000E5                     _vfpfcnvrt$1811:
  2039                           	opt callstack 0
  2040                           
  2041                           ; 2 bytes @ 0x85
  2042  0000E5                     	ds	2
  2043  0000E7                     _vfpfcnvrt$1816:
  2044                           	opt callstack 0
  2045                           
  2046                           ; 2 bytes @ 0x87
  2047  0000E7                     	ds	2
  2048  0000E9                     vfpfcnvrt@f:
  2049                           	opt callstack 0
  2050                           
  2051                           ; 4 bytes @ 0x89
  2052  0000E9                     	ds	4
  2053  0000ED                     vfpfcnvrt@ct:
  2054                           	opt callstack 0
  2055                           
  2056                           ; 3 bytes @ 0x8D
  2057  0000ED                     	ds	3
  2058  0000F0                     vfpfcnvrt@c:
  2059                           	opt callstack 0
  2060                           
  2061                           ; 1 bytes @ 0x90
  2062  0000F0                     	ds	1
  2063  0000F1                     ?_vfprintf:
  2064                           	opt callstack 0
  2065  0000F1                     vfprintf@fp:
  2066                           	opt callstack 0
  2067                           
  2068                           ; 2 bytes @ 0x91
  2069  0000F1                     	ds	2
  2070  0000F3                     vfprintf@fmt:
  2071                           	opt callstack 0
  2072                           
  2073                           ; 2 bytes @ 0x93
  2074  0000F3                     	ds	2
  2075  0000F5                     vfprintf@ap:
  2076                           	opt callstack 0
  2077                           
  2078                           ; 2 bytes @ 0x95
  2079  0000F5                     	ds	2
  2080  0000F7                     vfprintf@cfmt:
  2081                           	opt callstack 0
  2082                           
  2083                           ; 2 bytes @ 0x97
  2084  0000F7                     	ds	2
  2085  0000F9                     ??_main:
  2086                           
  2087                           ; 1 bytes @ 0x99
  2088  0000F9                     	ds	2
  2089                           
  2090                           	psect	cstackCOMRAM
  2091  000001                     __pcstackCOMRAM:
  2092                           	opt callstack 0
  2093  000001                     ??_encInt:
  2094  000001                     
  2095                           ; 1 bytes @ 0x0
  2096  000001                     	ds	1
  2097  000002                     ?___xxtofl:
  2098                           	opt callstack 0
  2099  000002                     sendCANmessage@id:
  2100                           	opt callstack 0
  2101  000002                     ___xxtofl@val:
  2102                           	opt callstack 0
  2103                           
  2104                           ; 4 bytes @ 0x1
  2105  000002                     	ds	2
  2106  000004                     sendCANmessage@message:
  2107                           	opt callstack 0
  2108                           
  2109                           ; 2 bytes @ 0x3
  2110  000004                     	ds	2
  2111  000006                     ??___xxtofl:
  2112  000006                     sendCANmessage@length:
  2113                           	opt callstack 0
  2114                           
  2115                           ; 2 bytes @ 0x5
  2116  000006                     	ds	2
  2117  000008                     ??_sendCANmessage:
  2118                           
  2119                           ; 1 bytes @ 0x7
  2120  000008                     	ds	2
  2121  00000A                     ___xxtofl@sign:
  2122                           	opt callstack 0
  2123                           
  2124                           ; 1 bytes @ 0x9
  2125  00000A                     	ds	1
  2126  00000B                     ___xxtofl@exp:
  2127                           	opt callstack 0
  2128                           
  2129                           ; 1 bytes @ 0xA
  2130  00000B                     	ds	1
  2131  00000C                     ___xxtofl@arg:
  2132                           	opt callstack 0
  2133                           
  2134                           ; 4 bytes @ 0xB
  2135  00000C                     	ds	4
  2136  000010                     ?i2___fldiv:
  2137                           	opt callstack 0
  2138  000010                     i2___fldiv@b:
  2139                           	opt callstack 0
  2140                           
  2141                           ; 4 bytes @ 0xF
  2142  000010                     	ds	4
  2143  000014                     i2___fldiv@a:
  2144                           	opt callstack 0
  2145                           
  2146                           ; 4 bytes @ 0x13
  2147  000014                     	ds	4
  2148  000018                     ??i2___fldiv:
  2149                           
  2150                           ; 1 bytes @ 0x17
  2151  000018                     	ds	4
  2152  00001C                     i2___fldiv@rem:
  2153                           	opt callstack 0
  2154                           
  2155                           ; 4 bytes @ 0x1B
  2156  00001C                     	ds	4
  2157  000020                     i2___fldiv@sign:
  2158                           	opt callstack 0
  2159                           
  2160                           ; 1 bytes @ 0x1F
  2161  000020                     	ds	1
  2162  000021                     i2___fldiv@new_exp:
  2163                           	opt callstack 0
  2164                           
  2165                           ; 2 bytes @ 0x20
  2166  000021                     	ds	2
  2167  000023                     i2___fldiv@grs:
  2168                           	opt callstack 0
  2169                           
  2170                           ; 4 bytes @ 0x22
  2171  000023                     	ds	4
  2172  000027                     i2___fldiv@bexp:
  2173                           	opt callstack 0
  2174                           
  2175                           ; 1 bytes @ 0x26
  2176  000027                     	ds	1
  2177  000028                     i2___fldiv@aexp:
  2178                           	opt callstack 0
  2179                           
  2180                           ; 1 bytes @ 0x27
  2181  000028                     	ds	1
  2182  000029                     ?i2___fladd:
  2183                           	opt callstack 0
  2184  000029                     i2___fladd@b:
  2185                           	opt callstack 0
  2186                           
  2187                           ; 4 bytes @ 0x28
  2188  000029                     	ds	4
  2189  00002D                     i2___fladd@a:
  2190                           	opt callstack 0
  2191                           
  2192                           ; 4 bytes @ 0x2C
  2193  00002D                     	ds	4
  2194  000031                     ??i2___fladd:
  2195                           
  2196                           ; 1 bytes @ 0x30
  2197  000031                     	ds	4
  2198  000035                     i2___fladd@signs:
  2199                           	opt callstack 0
  2200                           
  2201                           ; 1 bytes @ 0x34
  2202  000035                     	ds	1
  2203  000036                     i2___fladd@aexp:
  2204                           	opt callstack 0
  2205                           
  2206                           ; 1 bytes @ 0x35
  2207  000036                     	ds	1
  2208  000037                     i2___fladd@bexp:
  2209                           	opt callstack 0
  2210                           
  2211                           ; 1 bytes @ 0x36
  2212  000037                     	ds	1
  2213  000038                     i2___fladd@grs:
  2214                           	opt callstack 0
  2215                           
  2216                           ; 1 bytes @ 0x37
  2217  000038                     	ds	1
  2218  000039                     ??_canRecInt2:
  2219                           
  2220                           ; 1 bytes @ 0x38
  2221  000039                     	ds	2
  2222  00003B                     canRecInt2@message:
  2223                           	opt callstack 0
  2224                           
  2225                           ; 16 bytes @ 0x3A
  2226  00003B                     	ds	16
  2227                           
  2228 ;;
  2229 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2230 ;;
  2231 ;; *************** function _main *****************
  2232 ;; Defined at:
  2233 ;;		line 143 in file "MainCode.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;		None
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;  str            20   38[BANK1 ] unsigned char [20]
  2238 ;;  str            20   58[BANK1 ] unsigned char [20]
  2239 ;;  str             8   78[BANK1 ] unsigned char [8]
  2240 ;;  str            20   18[BANK1 ] unsigned char [20]
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  1    wreg      void 
  2243 ;; Registers used:
  2244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2250 ;;      Params:         0       0       0       0       0       0       0       0       0
  2251 ;;      Locals:         0       0      68       0       0       0       0       0       0
  2252 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2253 ;;      Totals:         0       2      68       0       0       0       0       0       0
  2254 ;;Total ram usage:       70 bytes
  2255 ;; Hardware stack levels required when called:   11
  2256 ;; This function calls:
  2257 ;;		_Lcd_Clear
  2258 ;;		_Lcd_Init
  2259 ;;		_Lcd_Set_Cursor
  2260 ;;		_Lcd_Write_String
  2261 ;;		_MenuYesNo
  2262 ;;		___wmul
  2263 ;;		_initBuzzer
  2264 ;;		_initCAN
  2265 ;;		_sprintf
  2266 ;; This function is called by:
  2267 ;;		Startup code after reset
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text0
  2272  000C06                     __ptext0:
  2273                           	opt callstack 0
  2274  000C06                     _main:
  2275                           	opt callstack 20
  2276                           
  2277                           ;MainCode.c: 145:                 }
  2278                           
  2279                           ;incstack = 0
  2280  000C06  0E60               	movlw	96
  2281  000C08  0139               	movlb	57	; () banked
  2282  000C0A  6FD9               	movwf	217,b	;volatile
  2283                           
  2284                           ; BSR set to: 57
  2285                           ;MainCode.c: 146:                 break;
  2286  000C0C  ECE5  F020         	call	_initCAN	;wreg free
  2287                           
  2288                           ;MainCode.c: 147:             case CONF_SELFTEST:
  2289  000C10  ECEC  F022         	call	_initBuzzer	;wreg free
  2290                           
  2291                           ;MainCode.c: 149:                 if (enter_state == 1) {
  2292  000C14  013A               	movlb	58	; () banked
  2293  000C16  9140               	bcf	64,0,b	;volatile
  2294                           
  2295                           ; BSR set to: 58
  2296                           ;MainCode.c: 150:                     tick_count = 1;
  2297  000C18  9340               	bcf	64,1,b	;volatile
  2298                           
  2299                           ; BSR set to: 58
  2300                           ;MainCode.c: 151:                     enter_state = 0;
  2301  000C1A  9540               	bcf	64,2,b	;volatile
  2302                           
  2303                           ; BSR set to: 58
  2304                           ;MainCode.c: 152:                     Lcd_Clear();
  2305  000C1C  0E01               	movlw	1
  2306  000C1E  6FC0               	movwf	192,b	;volatile
  2307                           
  2308                           ; BSR set to: 58
  2309                           ;MainCode.c: 153:                     Lcd_Set_Cursor(1, 1);
  2310  000C20  80C2               	bsf	16322,0,c	;volatile
  2311                           
  2312                           ; BSR set to: 58
  2313                           ;MainCode.c: 154:                     Lcd_Write_String("Robot will move");
  2314  000C22  82C2               	bsf	16322,1,c	;volatile
  2315                           
  2316                           ; BSR set to: 58
  2317                           ;MainCode.c: 155:                     Lcd_Set_Cursor(2, 1);
  2318  000C24  84C2               	bsf	16322,2,c	;volatile
  2319                           
  2320                           ; BSR set to: 58
  2321                           ;MainCode.c: 156:                     Lcd_Write_String("Are you sure??");
  2322  000C26  0139               	movlb	57	; () banked
  2323  000C28  8191               	bsf	145,0,b	;volatile
  2324                           
  2325                           ; BSR set to: 57
  2326                           ;MainCode.c: 157:                 }
  2327  000C2A  91A1               	bcf	161,0,b	;volatile
  2328                           
  2329                           ; BSR set to: 57
  2330                           ;MainCode.c: 158:                 else {
  2331  000C2C  80D2               	bsf	16338,0,c	;volatile
  2332                           
  2333                           ; BSR set to: 57
  2334                           ;MainCode.c: 160:                     if (!PORTAbits.RA2) {
  2335  000C2E  8CD2               	bsf	16338,6,c	;volatile
  2336                           
  2337                           ; BSR set to: 57
  2338                           ;MainCode.c: 161:                         if(tick_count == 0) state = SELFTEST;
  2339  000C30  8ED2               	bsf	16338,7,c	;volatile
  2340                           
  2341                           ; BSR set to: 57
  2342                           ;MainCode.c: 163:                         enter_state = 1;
  2343  000C32  9AD2               	bcf	16338,5,c	;volatile
  2344                           
  2345                           ; BSR set to: 57
  2346                           ;MainCode.c: 165:                     }
  2347  000C34  8195               	bsf	149,0,b	;volatile
  2348                           
  2349                           ; BSR set to: 57
  2350                           ;MainCode.c: 166:                 }
  2351  000C36  9395               	bcf	149,1,b	;volatile
  2352                           
  2353                           ; BSR set to: 57
  2354                           ;MainCode.c: 168:             case SELFTEST:
  2355  000C38  0E30               	movlw	48
  2356  000C3A  12B2               	iorwf	16306,f,c	;volatile
  2357                           
  2358                           ; BSR set to: 57
  2359                           ;MainCode.c: 169:                 status = state;
  2360  000C3C  84B2               	bsf	16306,2,c	;volatile
  2361                           
  2362                           ; BSR set to: 57
  2363                           ;MainCode.c: 170:                 if (enter_state == 1) {
  2364  000C3E  82B2               	bsf	16306,1,c	;volatile
  2365                           
  2366                           ; BSR set to: 57
  2367                           ;MainCode.c: 171:                     enter_state = 0;
  2368  000C40  0E06               	movlw	6
  2369  000C42  6EB5               	movwf	16309,c	;volatile
  2370                           
  2371                           ; BSR set to: 57
  2372                           ;MainCode.c: 172:                     Lcd_Clear();
  2373  000C44  0E00               	movlw	0
  2374  000C46  6EB1               	movwf	16305,c	;volatile
  2375                           
  2376                           ; BSR set to: 57
  2377                           ;MainCode.c: 173:                     Lcd_Set_Cursor(1, 1);
  2378  000C48  0E00               	movlw	0
  2379  000C4A  6EB0               	movwf	16304,c	;volatile
  2380                           
  2381                           ; BSR set to: 57
  2382                           ;MainCode.c: 176:                     Lcd_Write_String(".....");
  2383  000C4C  8ED2               	bsf	16338,7,c	;volatile
  2384                           
  2385                           ; BSR set to: 57
  2386                           ;MainCode.c: 177:                 }
  2387  000C4E  90C3               	bcf	16323,0,c	;volatile
  2388                           
  2389                           ; BSR set to: 57
  2390                           ;MainCode.c: 178:                 else {
  2391  000C50  013A               	movlb	58	; () banked
  2392  000C52  9150               	bcf	80,0,b	;volatile
  2393                           
  2394                           ; BSR set to: 58
  2395                           ;MainCode.c: 179:                     if(feedback == 1) {
  2396  000C54  80CB               	bsf	16331,0,c	;volatile
  2397                           
  2398                           ; BSR set to: 58
  2399                           ;MainCode.c: 181:                         enter_state = 1;
  2400  000C56  EC18  F01F         	call	_Lcd_Init	;wreg free
  2401  000C5A  D373               	goto	l178
  2402  000C5C                     l179:
  2403                           
  2404                           ; BSR set to: 0
  2405                           ;MainCode.c: 185:                         feedback = 0;
  2406  000C5C  0060  F448  F059   	movff	_state,_status
  2407  000C62  6A5A               	clrf	_status+1,c
  2408                           
  2409                           ; BSR set to: 0
  2410                           ;MainCode.c: 186:                         enter_state = 1;
  2411  000C64  0101               	movlb	1	; () banked
  2412  000C66  05BB               	decf	_enter_state& (0+255),w,b
  2413  000C68  11BC               	iorwf	(_enter_state+1)& (0+255),w,b
  2414  000C6A  A4D8               	btfss	status,2,c
  2415  000C6C  D025               	goto	l6079
  2416                           
  2417                           ; BSR set to: 1
  2418                           ;MainCode.c: 187:                         state = CONF_MOWING;
  2419  000C6E  0E00               	movlw	0
  2420  000C70  6F11               	movwf	(_tick_count+1)& (0+255),b
  2421  000C72  0E00               	movlw	0
  2422  000C74  6F10               	movwf	_tick_count& (0+255),b
  2423                           
  2424                           ;MainCode.c: 188:                         status = state;
  2425  000C76  0E00               	movlw	0
  2426  000C78  6FBC               	movwf	(_enter_state+1)& (0+255),b
  2427  000C7A  0E00               	movlw	0
  2428  000C7C  6FBB               	movwf	_enter_state& (0+255),b
  2429                           
  2430                           ; BSR set to: 1
  2431                           ;MainCode.c: 189:                         Lcd_Clear();
  2432  000C7E  EC48  F023         	call	_Lcd_Clear	;wreg free
  2433                           
  2434                           ;MainCode.c: 190:                         Lcd_Set_Cursor(1, 1);
  2435  000C82  0E01               	movlw	1
  2436  000C84  0100               	movlb	0	; () banked
  2437  000C86  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  2438  000C88  0E01               	movlw	1
  2439  000C8A  EC6D  F01E         	call	_Lcd_Set_Cursor
  2440                           
  2441                           ;MainCode.c: 191:                         Lcd_Write_String("Selftest was OK!");
  2442  000C8E  0E7B               	movlw	low STR_1
  2443  000C90  0100               	movlb	0	; () banked
  2444  000C92  6F66               	movwf	Lcd_Write_String@a& (0+255),b
  2445  000C94  0E7E               	movlw	high STR_1
  2446  000C96  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  2447  000C98  EC31  F020         	call	_Lcd_Write_String	;wreg free
  2448                           
  2449                           ;MainCode.c: 192:                         _delay((unsigned long)((2000)*(64000000/4000.0
      +                          )));
  2450  000C9C  0E01               	movlw	1
  2451  000C9E  0100               	movlb	0	; () banked
  2452  000CA0  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  2453  000CA2  0E02               	movlw	2
  2454  000CA4  EC6D  F01E         	call	_Lcd_Set_Cursor
  2455                           
  2456                           ;MainCode.c: 193: 
  2457  000CA8  0EF1               	movlw	low STR_2
  2458  000CAA  0100               	movlb	0	; () banked
  2459  000CAC  6F66               	movwf	Lcd_Write_String@a& (0+255),b
  2460  000CAE  0E7E               	movlw	high STR_2
  2461  000CB0  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  2462  000CB2  EC31  F020         	call	_Lcd_Write_String	;wreg free
  2463                           
  2464                           ;MainCode.c: 194:                     }
  2465  000CB6  D345               	goto	l178
  2466  000CB8                     l6079:
  2467                           
  2468                           ; BSR set to: 1
  2469                           ;MainCode.c: 196:                 break;
  2470  000CB8  ECC3  F01E         	call	_MenuYesNo	;wreg free
  2471                           
  2472                           ;MainCode.c: 197:             case SELFTEST_FAIL:
  2473  000CBC  B4CA               	btfsc	16330,2,c	;volatile
  2474  000CBE  D341               	goto	l178
  2475                           
  2476                           ;MainCode.c: 198:                 status = state;
  2477  000CC0  0101               	movlb	1	; () banked
  2478  000CC2  5110               	movf	_tick_count& (0+255),w,b
  2479  000CC4  1111               	iorwf	(_tick_count+1)& (0+255),w,b
  2480  000CC6  A4D8               	btfss	status,2,c
  2481  000CC8  D002               	goto	l6087
  2482                           
  2483                           ; BSR set to: 1
  2484  000CCA  0E01               	movlw	1
  2485  000CCC  D001               	goto	L1
  2486  000CCE                     l6087:
  2487                           
  2488                           ; BSR set to: 1
  2489  000CCE  0E04               	movlw	4
  2490  000CD0                     L1:
  2491  000CD0  6F12               	movwf	_state& (0+255),b
  2492                           
  2493                           ; BSR set to: 1
  2494                           ;MainCode.c: 200:                     tick_count = 0;
  2495  000CD2  0E00               	movlw	0
  2496  000CD4  6FBC               	movwf	(_enter_state+1)& (0+255),b
  2497  000CD6  0E01               	movlw	1
  2498  000CD8  6FBB               	movwf	_enter_state& (0+255),b
  2499  000CDA                     l185:
  2500  000CDA  B4CA               	btfsc	16330,2,c	;volatile
  2501  000CDC  D332               	goto	l178
  2502  000CDE  D7FD               	goto	l185
  2503  000CE0                     l189:
  2504                           
  2505                           ; BSR set to: 0
  2506                           ;MainCode.c: 206:                     Lcd_Write_String("Try Again?");
  2507  000CE0  0060  F448  F059   	movff	_state,_status
  2508  000CE6  6A5A               	clrf	_status+1,c
  2509                           
  2510                           ; BSR set to: 0
  2511                           ;MainCode.c: 207:                 }
  2512  000CE8  0101               	movlb	1	; () banked
  2513  000CEA  05BB               	decf	_enter_state& (0+255),w,b
  2514  000CEC  11BC               	iorwf	(_enter_state+1)& (0+255),w,b
  2515  000CEE  A4D8               	btfss	status,2,c
  2516  000CF0  D025               	goto	l6103
  2517                           
  2518                           ; BSR set to: 1
  2519                           ;MainCode.c: 208:                 else {
  2520  000CF2  0E00               	movlw	0
  2521  000CF4  6F11               	movwf	(_tick_count+1)& (0+255),b
  2522  000CF6  0E01               	movlw	1
  2523  000CF8  6F10               	movwf	_tick_count& (0+255),b
  2524                           
  2525                           ;MainCode.c: 209:                     MenuYesNo();
  2526  000CFA  0E00               	movlw	0
  2527  000CFC  6FBC               	movwf	(_enter_state+1)& (0+255),b
  2528  000CFE  0E00               	movlw	0
  2529  000D00  6FBB               	movwf	_enter_state& (0+255),b
  2530                           
  2531                           ; BSR set to: 1
  2532                           ;MainCode.c: 210:                     if (!PORTAbits.RA2) {
  2533  000D02  EC48  F023         	call	_Lcd_Clear	;wreg free
  2534                           
  2535                           ;MainCode.c: 211:                         if(tick_count == 0) state = CONF_SELFTEST;
  2536  000D06  0E01               	movlw	1
  2537  000D08  0100               	movlb	0	; () banked
  2538  000D0A  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  2539  000D0C  0E01               	movlw	1
  2540  000D0E  EC6D  F01E         	call	_Lcd_Set_Cursor
  2541                           
  2542                           ;MainCode.c: 212:                         else state = STARTMENU;
  2543  000D12  0E35               	movlw	low STR_3
  2544  000D14  0100               	movlb	0	; () banked
  2545  000D16  6F66               	movwf	Lcd_Write_String@a& (0+255),b
  2546  000D18  0E7F               	movlw	high STR_3
  2547  000D1A  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  2548  000D1C  EC31  F020         	call	_Lcd_Write_String	;wreg free
  2549                           
  2550                           ;MainCode.c: 213:                         enter_state = 1;
  2551  000D20  0E01               	movlw	1
  2552  000D22  0100               	movlb	0	; () banked
  2553  000D24  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  2554  000D26  0E02               	movlw	2
  2555  000D28  EC6D  F01E         	call	_Lcd_Set_Cursor
  2556                           
  2557                           ;MainCode.c: 214:                         while (!PORTAbits.RA2);
  2558  000D2C  0E55               	movlw	low STR_4
  2559  000D2E  0100               	movlb	0	; () banked
  2560  000D30  6F66               	movwf	Lcd_Write_String@a& (0+255),b
  2561  000D32  0E7F               	movlw	high STR_4
  2562  000D34  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  2563  000D36  EC31  F020         	call	_Lcd_Write_String	;wreg free
  2564                           
  2565                           ;MainCode.c: 215:                     }
  2566  000D3A  D303               	goto	l178
  2567  000D3C                     l6103:
  2568                           
  2569                           ; BSR set to: 1
  2570                           ;MainCode.c: 217:                 break;
  2571  000D3C  ECC3  F01E         	call	_MenuYesNo	;wreg free
  2572                           
  2573                           ;MainCode.c: 218:             case CONF_MOWING:
  2574  000D40  B4CA               	btfsc	16330,2,c	;volatile
  2575  000D42  D2FF               	goto	l178
  2576                           
  2577                           ;MainCode.c: 219:                 status = state;
  2578  000D44  0101               	movlb	1	; () banked
  2579  000D46  5110               	movf	_tick_count& (0+255),w,b
  2580  000D48  1111               	iorwf	(_tick_count+1)& (0+255),w,b
  2581  000D4A  A4D8               	btfss	status,2,c
  2582  000D4C  D002               	goto	l6111
  2583                           
  2584                           ; BSR set to: 1
  2585  000D4E  0E02               	movlw	2
  2586  000D50  D001               	goto	L2
  2587  000D52                     l6111:
  2588                           
  2589                           ; BSR set to: 1
  2590  000D52  0E00               	movlw	0
  2591  000D54                     L2:
  2592  000D54  6F12               	movwf	_state& (0+255),b
  2593                           
  2594                           ; BSR set to: 1
  2595                           ;MainCode.c: 221:                     tick_count = 1;
  2596  000D56  0E00               	movlw	0
  2597  000D58  6FBC               	movwf	(_enter_state+1)& (0+255),b
  2598  000D5A  0E01               	movlw	1
  2599  000D5C  6FBB               	movwf	_enter_state& (0+255),b
  2600  000D5E                     l195:
  2601  000D5E  B4CA               	btfsc	16330,2,c	;volatile
  2602  000D60  D2F0               	goto	l178
  2603  000D62  D7FD               	goto	l195
  2604  000D64                     l198:
  2605                           
  2606                           ; BSR set to: 0
  2607                           ;MainCode.c: 227:                     Lcd_Write_String("Are you sure??");
  2608  000D64  0060  F448  F059   	movff	_state,_status
  2609  000D6A  6A5A               	clrf	_status+1,c
  2610                           
  2611                           ; BSR set to: 0
  2612                           ;MainCode.c: 228:                 }
  2613  000D6C  0101               	movlb	1	; () banked
  2614  000D6E  05BB               	decf	_enter_state& (0+255),w,b
  2615  000D70  11BC               	iorwf	(_enter_state+1)& (0+255),w,b
  2616  000D72  A4D8               	btfss	status,2,c
  2617  000D74  D021               	goto	l6127
  2618                           
  2619                           ; BSR set to: 1
  2620                           ;MainCode.c: 229:                 else {
  2621  000D76  0E00               	movlw	0
  2622  000D78  6FBC               	movwf	(_enter_state+1)& (0+255),b
  2623  000D7A  0E00               	movlw	0
  2624  000D7C  6FBB               	movwf	_enter_state& (0+255),b
  2625                           
  2626                           ; BSR set to: 1
  2627                           ;MainCode.c: 230:                     MenuYesNo();
  2628  000D7E  EC48  F023         	call	_Lcd_Clear	;wreg free
  2629                           
  2630                           ;MainCode.c: 231:                     if (!PORTAbits.RA2) {
  2631  000D82  0E01               	movlw	1
  2632  000D84  0100               	movlb	0	; () banked
  2633  000D86  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  2634  000D88  0E01               	movlw	1
  2635  000D8A  EC6D  F01E         	call	_Lcd_Set_Cursor
  2636                           
  2637                           ;MainCode.c: 232:                         if(tick_count == 0) state = MOWING;
  2638  000D8E  0EDE               	movlw	low STR_5
  2639  000D90  0100               	movlb	0	; () banked
  2640  000D92  6F66               	movwf	Lcd_Write_String@a& (0+255),b
  2641  000D94  0E7E               	movlw	high STR_5
  2642  000D96  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  2643  000D98  EC31  F020         	call	_Lcd_Write_String	;wreg free
  2644                           
  2645                           ;MainCode.c: 233:                         else state = STARTMENU;
  2646  000D9C  0E01               	movlw	1
  2647  000D9E  0100               	movlb	0	; () banked
  2648  000DA0  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  2649  000DA2  0E02               	movlw	2
  2650  000DA4  EC6D  F01E         	call	_Lcd_Set_Cursor
  2651                           
  2652                           ;MainCode.c: 234:                         enter_state = 1;
  2653  000DA8  0EC6               	movlw	low STR_6
  2654  000DAA  0100               	movlb	0	; () banked
  2655  000DAC  6F66               	movwf	Lcd_Write_String@a& (0+255),b
  2656  000DAE  0E7F               	movlw	high STR_6
  2657  000DB0  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  2658  000DB2  EC31  F020         	call	_Lcd_Write_String	;wreg free
  2659                           
  2660                           ;MainCode.c: 235:                         while (!PORTAbits.RA2);
  2661  000DB6  D2C5               	goto	l178
  2662  000DB8                     l6127:
  2663                           
  2664                           ; BSR set to: 1
  2665                           ;MainCode.c: 237:                 }
  2666  000DB8  050E               	decf	_feedback& (0+255),w,b
  2667  000DBA  110F               	iorwf	(_feedback+1)& (0+255),w,b
  2668  000DBC  A4D8               	btfss	status,2,c
  2669  000DBE  D00B               	goto	l6131
  2670                           
  2671                           ; BSR set to: 1
  2672                           ;MainCode.c: 238:                 break;
  2673  000DC0  0E00               	movlw	0
  2674  000DC2  6F0F               	movwf	(_feedback+1)& (0+255),b
  2675  000DC4  0E00               	movlw	0
  2676  000DC6  6F0E               	movwf	_feedback& (0+255),b
  2677                           
  2678                           ;MainCode.c: 239:             case MOWING:
  2679  000DC8  0E00               	movlw	0
  2680  000DCA  6FBC               	movwf	(_enter_state+1)& (0+255),b
  2681  000DCC  0E01               	movlw	1
  2682  000DCE  6FBB               	movwf	_enter_state& (0+255),b
  2683                           
  2684                           ;MainCode.c: 240:                 if (enter_state == 1) {
  2685  000DD0  0E03               	movlw	3
  2686  000DD2  6F12               	movwf	_state& (0+255),b
  2687                           
  2688                           ;MainCode.c: 241:                     enter_state = 0;
  2689  000DD4  D2B6               	goto	l178
  2690  000DD6                     l6131:
  2691                           
  2692                           ; BSR set to: 1
  2693  000DD6  0E02               	movlw	2
  2694  000DD8  190E               	xorwf	_feedback& (0+255),w,b
  2695  000DDA  110F               	iorwf	(_feedback+1)& (0+255),w,b
  2696  000DDC  A4D8               	btfss	status,2,c
  2697  000DDE  D2B1               	goto	l178
  2698                           
  2699                           ; BSR set to: 1
  2700                           ;MainCode.c: 243:                     Lcd_Set_Cursor(1, 1);
  2701  000DE0  0E00               	movlw	0
  2702  000DE2  6F0F               	movwf	(_feedback+1)& (0+255),b
  2703  000DE4  0E00               	movlw	0
  2704  000DE6  6F0E               	movwf	_feedback& (0+255),b
  2705                           
  2706                           ;MainCode.c: 244:                     Lcd_Write_String("Mowing lawn");
  2707  000DE8  0E00               	movlw	0
  2708  000DEA  6FBC               	movwf	(_enter_state+1)& (0+255),b
  2709  000DEC  0E01               	movlw	1
  2710  000DEE  6FBB               	movwf	_enter_state& (0+255),b
  2711                           
  2712                           ;MainCode.c: 245:                     Lcd_Set_Cursor(2, 1);
  2713  000DF0  0E04               	movlw	4
  2714  000DF2  6F12               	movwf	_state& (0+255),b
  2715                           
  2716                           ; BSR set to: 1
  2717                           ;MainCode.c: 246:                     Lcd_Write_String(".....");
  2718  000DF4  0060  F448  F059   	movff	_state,_status
  2719  000DFA  6A5A               	clrf	_status+1,c
  2720                           
  2721                           ; BSR set to: 1
  2722                           ;MainCode.c: 247:                     Lcd_Set_Cursor(3, 1);
  2723  000DFC  EC48  F023         	call	_Lcd_Clear	;wreg free
  2724                           
  2725                           ;MainCode.c: 248:                     Lcd_Write_String("Master STATE:");
  2726  000E00  0E01               	movlw	1
  2727  000E02  0100               	movlb	0	; () banked
  2728  000E04  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  2729  000E06  0E01               	movlw	1
  2730  000E08  EC6D  F01E         	call	_Lcd_Set_Cursor
  2731                           
  2732                           ;MainCode.c: 249:                 }
  2733  000E0C  0E03               	movlw	low STR_7
  2734  000E0E  0100               	movlb	0	; () banked
  2735  000E10  6F66               	movwf	Lcd_Write_String@a& (0+255),b
  2736  000E12  0E7F               	movlw	high STR_7
  2737  000E14  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  2738  000E16  EC31  F020         	call	_Lcd_Write_String	;wreg free
  2739                           
  2740                           ;MainCode.c: 250:                 else {
  2741  000E1A  0EA3               	movlw	163
  2742  000E1C  0100               	movlb	0	; () banked
  2743  000E1E  6FFA               	movwf	(??_main+1)& (0+255),b
  2744  000E20  0E57               	movlw	87
  2745  000E22  6FF9               	movwf	??_main& (0+255),b
  2746  000E24  0E02               	movlw	2
  2747  000E26                     u7767:
  2748  000E26  2EE8               	decfsz	wreg,f,c
  2749  000E28  D7FE               	bra	u7767
  2750  000E2A  2FF9               	decfsz	??_main& (0+255),f,b
  2751  000E2C  D7FC               	bra	u7767
  2752  000E2E  2FFA               	decfsz	(??_main+1)& (0+255),f,b
  2753  000E30  D7FA               	bra	u7767
  2754  000E32  F000               	nop	
  2755  000E34  D286               	goto	l178
  2756  000E36                     l204:
  2757                           
  2758                           ; BSR set to: 0
  2759                           ;MainCode.c: 256:                     Lcd_Write_String(master_state_lut[master_state]);
  2760  000E36  0060  F448  F059   	movff	_state,_status
  2761  000E3C  6A5A               	clrf	_status+1,c
  2762                           
  2763                           ; BSR set to: 0
  2764                           ;MainCode.c: 257:                     if(!PORTAbits.RA2)
  2765  000E3E  0101               	movlb	1	; () banked
  2766  000E40  05BB               	decf	_enter_state& (0+255),w,b
  2767  000E42  11BC               	iorwf	(_enter_state+1)& (0+255),w,b
  2768  000E44  A4D8               	btfss	status,2,c
  2769  000E46  D025               	goto	l6159
  2770                           
  2771                           ; BSR set to: 1
  2772                           ;MainCode.c: 258:                     {
  2773  000E48  0E00               	movlw	0
  2774  000E4A  6F11               	movwf	(_tick_count+1)& (0+255),b
  2775  000E4C  0E00               	movlw	0
  2776  000E4E  6F10               	movwf	_tick_count& (0+255),b
  2777                           
  2778                           ;MainCode.c: 259:                         T1CONbits.ON = 1;
  2779  000E50  0E00               	movlw	0
  2780  000E52  6FBC               	movwf	(_enter_state+1)& (0+255),b
  2781  000E54  0E00               	movlw	0
  2782  000E56  6FBB               	movwf	_enter_state& (0+255),b
  2783                           
  2784                           ; BSR set to: 1
  2785                           ;MainCode.c: 260:                         status = 0;
  2786  000E58  EC48  F023         	call	_Lcd_Clear	;wreg free
  2787                           
  2788                           ;MainCode.c: 261:                         if(TMR1H > 50)
  2789  000E5C  0E01               	movlw	1
  2790  000E5E  0100               	movlb	0	; () banked
  2791  000E60  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  2792  000E62  0E01               	movlw	1
  2793  000E64  EC6D  F01E         	call	_Lcd_Set_Cursor
  2794                           
  2795                           ;MainCode.c: 262:                         {
  2796  000E68  0E25               	movlw	low STR_8
  2797  000E6A  0100               	movlb	0	; () banked
  2798  000E6C  6F66               	movwf	Lcd_Write_String@a& (0+255),b
  2799  000E6E  0E7F               	movlw	high STR_8
  2800  000E70  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  2801  000E72  EC31  F020         	call	_Lcd_Write_String	;wreg free
  2802                           
  2803                           ;MainCode.c: 263:                             state = STARTMENU;
  2804  000E76  0E01               	movlw	1
  2805  000E78  0100               	movlb	0	; () banked
  2806  000E7A  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  2807  000E7C  0E02               	movlw	2
  2808  000E7E  EC6D  F01E         	call	_Lcd_Set_Cursor
  2809                           
  2810                           ;MainCode.c: 264:                             enter_state = 1;
  2811  000E82  0EAB               	movlw	low STR_9
  2812  000E84  0100               	movlb	0	; () banked
  2813  000E86  6F66               	movwf	Lcd_Write_String@a& (0+255),b
  2814  000E88  0E7F               	movlw	high STR_9
  2815  000E8A  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  2816  000E8C  EC31  F020         	call	_Lcd_Write_String	;wreg free
  2817                           
  2818                           ;MainCode.c: 265:                             Lcd_Clear();
  2819  000E90  D258               	goto	l178
  2820  000E92                     l6159:
  2821                           
  2822                           ; BSR set to: 1
  2823                           ;MainCode.c: 267:                             Lcd_Write_String("Release for restart");
  2824  000E92  ECC3  F01E         	call	_MenuYesNo	;wreg free
  2825                           
  2826                           ;MainCode.c: 268:                             while (!PORTAbits.RA2){
  2827  000E96  B4CA               	btfsc	16330,2,c	;volatile
  2828  000E98  D254               	goto	l178
  2829                           
  2830                           ;MainCode.c: 269:                                 char str[20];
  2831  000E9A  0101               	movlb	1	; () banked
  2832  000E9C  5110               	movf	_tick_count& (0+255),w,b
  2833  000E9E  1111               	iorwf	(_tick_count+1)& (0+255),w,b
  2834  000EA0  A4D8               	btfss	status,2,c
  2835  000EA2  D002               	goto	l6167
  2836                           
  2837                           ; BSR set to: 1
  2838  000EA4  0E01               	movlw	1
  2839  000EA6  D001               	goto	L3
  2840  000EA8                     l6167:
  2841                           
  2842                           ; BSR set to: 1
  2843  000EA8  0E00               	movlw	0
  2844  000EAA                     L3:
  2845  000EAA  6F12               	movwf	_state& (0+255),b
  2846                           
  2847                           ; BSR set to: 1
  2848                           ;MainCode.c: 271:                                 if(TMR1H > 100) {
  2849  000EAC  0E00               	movlw	0
  2850  000EAE  6FBC               	movwf	(_enter_state+1)& (0+255),b
  2851  000EB0  0E01               	movlw	1
  2852  000EB2  6FBB               	movwf	_enter_state& (0+255),b
  2853  000EB4                     l210:
  2854  000EB4  B4CA               	btfsc	16330,2,c	;volatile
  2855  000EB6  D245               	goto	l178
  2856  000EB8  D7FD               	goto	l210
  2857  000EBA                     l213:
  2858                           
  2859                           ; BSR set to: 0
  2860                           ;MainCode.c: 277:                                     Lcd_Write_String("to charging base
      +                          ");
  2861  000EBA  0060  F448  F059   	movff	_state,_status
  2862  000EC0  6A5A               	clrf	_status+1,c
  2863                           
  2864                           ; BSR set to: 0
  2865                           ;MainCode.c: 278:                                     while (!PORTAbits.RA2);
  2866  000EC2  0101               	movlb	1	; () banked
  2867  000EC4  05BB               	decf	_enter_state& (0+255),w,b
  2868  000EC6  11BC               	iorwf	(_enter_state+1)& (0+255),w,b
  2869  000EC8  A4D8               	btfss	status,2,c
  2870  000ECA  D025               	goto	l6183
  2871                           
  2872                           ; BSR set to: 1
  2873                           ;MainCode.c: 279:                                 }
  2874  000ECC  0E00               	movlw	0
  2875  000ECE  6F11               	movwf	(_tick_count+1)& (0+255),b
  2876  000ED0  0E01               	movlw	1
  2877  000ED2  6F10               	movwf	_tick_count& (0+255),b
  2878                           
  2879                           ;MainCode.c: 280:                             }
  2880  000ED4  0E00               	movlw	0
  2881  000ED6  6FBC               	movwf	(_enter_state+1)& (0+255),b
  2882  000ED8  0E00               	movlw	0
  2883  000EDA  6FBB               	movwf	_enter_state& (0+255),b
  2884                           
  2885                           ; BSR set to: 1
  2886                           ;MainCode.c: 281:                             T1CONbits.ON = 0;
  2887  000EDC  EC48  F023         	call	_Lcd_Clear	;wreg free
  2888                           
  2889                           ;MainCode.c: 282:                             TMR1H = 0;
  2890  000EE0  0E01               	movlw	1
  2891  000EE2  0100               	movlb	0	; () banked
  2892  000EE4  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  2893  000EE6  0E01               	movlw	1
  2894  000EE8  EC6D  F01E         	call	_Lcd_Set_Cursor
  2895                           
  2896                           ;MainCode.c: 283:                             TMR1L = 0;
  2897  000EEC  0E90               	movlw	low STR_10
  2898  000EEE  0100               	movlb	0	; () banked
  2899  000EF0  6F66               	movwf	Lcd_Write_String@a& (0+255),b
  2900  000EF2  0E7E               	movlw	high STR_10
  2901  000EF4  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  2902  000EF6  EC31  F020         	call	_Lcd_Write_String	;wreg free
  2903                           
  2904                           ;MainCode.c: 284:                         }
  2905  000EFA  0E01               	movlw	1
  2906  000EFC  0100               	movlb	0	; () banked
  2907  000EFE  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  2908  000F00  0E02               	movlw	2
  2909  000F02  EC6D  F01E         	call	_Lcd_Set_Cursor
  2910                           
  2911                           ;MainCode.c: 285:                     }
  2912  000F06  0E55               	movlw	low STR_4
  2913  000F08  0100               	movlb	0	; () banked
  2914  000F0A  6F66               	movwf	Lcd_Write_String@a& (0+255),b
  2915  000F0C  0E7F               	movlw	high STR_4
  2916  000F0E  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  2917  000F10  EC31  F020         	call	_Lcd_Write_String	;wreg free
  2918                           
  2919                           ;MainCode.c: 286:                     else
  2920  000F14  D216               	goto	l178
  2921  000F16                     l6183:
  2922                           
  2923                           ; BSR set to: 1
  2924                           ;MainCode.c: 288:                         status = state;
  2925  000F16  ECC3  F01E         	call	_MenuYesNo	;wreg free
  2926                           
  2927                           ;MainCode.c: 289:                         T1CONbits.ON = 0;
  2928  000F1A  B4CA               	btfsc	16330,2,c	;volatile
  2929  000F1C  D212               	goto	l178
  2930                           
  2931                           ;MainCode.c: 290:                         TMR1L = 0;
  2932  000F1E  0101               	movlb	1	; () banked
  2933  000F20  5110               	movf	_tick_count& (0+255),w,b
  2934  000F22  1111               	iorwf	(_tick_count+1)& (0+255),w,b
  2935  000F24  A4D8               	btfss	status,2,c
  2936  000F26  D002               	goto	l6191
  2937                           
  2938                           ; BSR set to: 1
  2939  000F28  0E05               	movlw	5
  2940  000F2A  D001               	goto	L4
  2941  000F2C                     l6191:
  2942                           
  2943                           ; BSR set to: 1
  2944  000F2C  0E00               	movlw	0
  2945  000F2E                     L4:
  2946  000F2E  6F12               	movwf	_state& (0+255),b
  2947                           
  2948                           ; BSR set to: 1
  2949                           ;MainCode.c: 292:                     }
  2950  000F30  0E00               	movlw	0
  2951  000F32  6FBC               	movwf	(_enter_state+1)& (0+255),b
  2952  000F34  0E01               	movlw	1
  2953  000F36  6FBB               	movwf	_enter_state& (0+255),b
  2954  000F38                     l219:
  2955  000F38  B4CA               	btfsc	16330,2,c	;volatile
  2956  000F3A  D203               	goto	l178
  2957  000F3C  D7FD               	goto	l219
  2958  000F3E                     l6193:
  2959                           
  2960                           ; BSR set to: 0
  2961                           ;MainCode.c: 298:                     enter_state = 0;
  2962  000F3E  0101               	movlb	1	; () banked
  2963  000F40  05BB               	decf	_enter_state& (0+255),w,b
  2964  000F42  11BC               	iorwf	(_enter_state+1)& (0+255),w,b
  2965  000F44  A4D8               	btfss	status,2,c
  2966  000F46  D02E               	goto	l6211
  2967                           
  2968                           ; BSR set to: 1
  2969                           ;MainCode.c: 299:                     Lcd_Clear();
  2970  000F48  0E00               	movlw	0
  2971  000F4A  6FBC               	movwf	(_enter_state+1)& (0+255),b
  2972  000F4C  0E00               	movlw	0
  2973  000F4E  6FBB               	movwf	_enter_state& (0+255),b
  2974                           
  2975                           ; BSR set to: 1
  2976                           ;MainCode.c: 300:                     Lcd_Set_Cursor(1, 1);
  2977  000F50  EC48  F023         	call	_Lcd_Clear	;wreg free
  2978                           
  2979                           ;MainCode.c: 301:                     Lcd_Write_String("Charging robot");
  2980  000F54  0E01               	movlw	1
  2981  000F56  0100               	movlb	0	; () banked
  2982  000F58  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  2983  000F5A  0E01               	movlw	1
  2984  000F5C  EC6D  F01E         	call	_Lcd_Set_Cursor
  2985                           
  2986                           ;MainCode.c: 302:                     Lcd_Set_Cursor(2, 1);
  2987  000F60  0E9F               	movlw	low STR_12
  2988  000F62  0100               	movlb	0	; () banked
  2989  000F64  6F66               	movwf	Lcd_Write_String@a& (0+255),b
  2990  000F66  0E7F               	movlw	high STR_12
  2991  000F68  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  2992  000F6A  EC31  F020         	call	_Lcd_Write_String	;wreg free
  2993                           
  2994                           ;MainCode.c: 303:                     Lcd_Write_String("Voltage: ");
  2995  000F6E  0E01               	movlw	1
  2996  000F70  0100               	movlb	0	; () banked
  2997  000F72  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  2998  000F74  0E02               	movlw	2
  2999  000F76  EC6D  F01E         	call	_Lcd_Set_Cursor
  3000                           
  3001                           ;MainCode.c: 304:                 }
  3002  000F7A  0EC6               	movlw	low STR_6
  3003  000F7C  0100               	movlb	0	; () banked
  3004  000F7E  6F66               	movwf	Lcd_Write_String@a& (0+255),b
  3005  000F80  0E7F               	movlw	high STR_6
  3006  000F82  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3007  000F84  EC31  F020         	call	_Lcd_Write_String	;wreg free
  3008                           
  3009                           ;MainCode.c: 305:                 else {
  3010  000F88  0E01               	movlw	1
  3011  000F8A  0100               	movlb	0	; () banked
  3012  000F8C  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3013  000F8E  0E03               	movlw	3
  3014  000F90  EC6D  F01E         	call	_Lcd_Set_Cursor
  3015                           
  3016                           ;MainCode.c: 306:                     char str[8];
  3017  000F94  0E91               	movlw	low STR_14
  3018  000F96  0100               	movlb	0	; () banked
  3019  000F98  6F66               	movwf	Lcd_Write_String@a& (0+255),b
  3020  000F9A  0E7F               	movlw	high STR_14
  3021  000F9C  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3022  000F9E  EC31  F020         	call	_Lcd_Write_String	;wreg free
  3023                           
  3024                           ;MainCode.c: 307:                     sprintf(str, "%3.2f", charging_voltage);
  3025  000FA2  D1CF               	goto	l178
  3026  000FA4                     l6211:
  3027                           
  3028                           ; BSR set to: 1
  3029                           ;MainCode.c: 309:                     Lcd_Write_String(str);;MainCode.c: 310:           
      +                                    Lcd_Set_Cursor(3, 1);
  3030  000FA4  0E75               	movlw	low main@str
  3031  000FA6  6F63               	movwf	sprintf@s& (0+255),b
  3032  000FA8  0E01               	movlw	high main@str
  3033  000FAA  6F64               	movwf	(sprintf@s+1)& (0+255),b
  3034  000FAC  0EF8               	movlw	low STR_15
  3035  000FAE  6F65               	movwf	sprintf@fmt& (0+255),b
  3036  000FB0  0E7F               	movlw	high STR_15
  3037  000FB2  6F66               	movwf	(sprintf@fmt+1)& (0+255),b
  3038  000FB4  006F FEC0  F167    	movff	16304,?_sprintf+4	;volatile
  3039  000FBA  6B68               	clrf	(?_sprintf+5)& (0+255),b
  3040  000FBC  EC7E  F021         	call	_sprintf	;wreg free
  3041                           
  3042                           ;MainCode.c: 313: 
  3043  000FC0  0E01               	movlw	1
  3044  000FC2  0100               	movlb	0	; () banked
  3045  000FC4  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3046  000FC6  0E04               	movlw	4
  3047  000FC8  EC6D  F01E         	call	_Lcd_Set_Cursor
  3048                           
  3049                           ;MainCode.c: 314: 
  3050  000FCC  0060  F430  F060   	movff	_master_state,___wmul@multiplier
  3051  000FD2  0060  F434  F061   	movff	_master_state+1,___wmul@multiplier+1
  3052  000FD8  0E00               	movlw	0
  3053  000FDA  0100               	movlb	0	; () banked
  3054  000FDC  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3055  000FDE  0E14               	movlw	20
  3056  000FE0  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3057  000FE2  EC05  F023         	call	___wmul	;wreg free
  3058  000FE6  0E8C               	movlw	low _master_state_lut
  3059  000FE8  0100               	movlb	0	; () banked
  3060  000FEA  2560               	addwf	?___wmul& (0+255),w,b
  3061  000FEC  6F66               	movwf	Lcd_Write_String@a& (0+255),b
  3062  000FEE  0E02               	movlw	high _master_state_lut
  3063  000FF0  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  3064  000FF2  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3065  000FF4  EC31  F020         	call	_Lcd_Write_String	;wreg free
  3066                           
  3067                           ;MainCode.c: 315:                 }
  3068  000FF8  B4CA               	btfsc	16330,2,c	;volatile
  3069  000FFA  D05A               	goto	l225
  3070                           
  3071                           ;MainCode.c: 316:                 break;;MainCode.c: 317:             case RETURN_HOME:
  3072  000FFC  80B2               	bsf	16306,0,c	;volatile
  3073                           
  3074                           ;MainCode.c: 318:                 status = state;
  3075  000FFE  0E00               	movlw	0
  3076  001000  6E5A               	movwf	_status+1,c
  3077  001002  0E00               	movlw	0
  3078  001004  6E59               	movwf	_status,c
  3079                           
  3080                           ;MainCode.c: 319:                 if (enter_state == 1) {
  3081  001006  0E32               	movlw	50
  3082  001008  64B1               	cpfsgt	16305,c	;volatile
  3083  00100A  D19B               	goto	l178
  3084                           
  3085                           ;MainCode.c: 320:                     enter_state = 0;;MainCode.c: 321:                 
      +                              Lcd_Clear();
  3086  00100C  0E00               	movlw	0
  3087  00100E  0101               	movlb	1	; () banked
  3088  001010  6F12               	movwf	_state& (0+255),b
  3089                           
  3090                           ;MainCode.c: 322:                     Lcd_Set_Cursor(1, 1);
  3091  001012  0E00               	movlw	0
  3092  001014  6FBC               	movwf	(_enter_state+1)& (0+255),b
  3093  001016  0E01               	movlw	1
  3094  001018  6FBB               	movwf	_enter_state& (0+255),b
  3095                           
  3096                           ; BSR set to: 1
  3097                           ;MainCode.c: 323:                     Lcd_Write_String("Returning home");
  3098  00101A  EC48  F023         	call	_Lcd_Clear	;wreg free
  3099                           
  3100                           ;MainCode.c: 324:                     Lcd_Set_Cursor(2, 1);
  3101  00101E  0E01               	movlw	1
  3102  001020  0100               	movlb	0	; () banked
  3103  001022  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3104  001024  0E01               	movlw	1
  3105  001026  EC6D  F01E         	call	_Lcd_Set_Cursor
  3106                           
  3107                           ;MainCode.c: 325:                     Lcd_Write_String(".....");
  3108  00102A  0EA4               	movlw	low STR_16
  3109  00102C  0100               	movlb	0	; () banked
  3110  00102E  6F66               	movwf	Lcd_Write_String@a& (0+255),b
  3111  001030  0E7E               	movlw	high STR_16
  3112  001032  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3113  001034  EC31  F020         	call	_Lcd_Write_String	;wreg free
  3114                           
  3115                           ;MainCode.c: 326:                     Lcd_Set_Cursor(3, 1);
  3116  001038  D033               	goto	u7610
  3117  00103A                     l6233:
  3118                           
  3119                           ;MainCode.c: 327:                     Lcd_Write_String("Master STATE:");;MainCode.c: 328
      +                          :                 }
  3120  00103A  0E89               	movlw	low main@str_1448
  3121  00103C  0101               	movlb	1	; () banked
  3122  00103E  6F63               	movwf	sprintf@s& (0+255),b
  3123  001040  0E01               	movlw	high main@str_1448
  3124  001042  6F64               	movwf	(sprintf@s+1)& (0+255),b
  3125  001044  0EF8               	movlw	low STR_15
  3126  001046  6F65               	movwf	sprintf@fmt& (0+255),b
  3127  001048  0E7F               	movlw	high STR_15
  3128  00104A  6F66               	movwf	(sprintf@fmt+1)& (0+255),b
  3129  00104C  006F FEC0  F167    	movff	16304,?_sprintf+4	;volatile
  3130  001052  6B68               	clrf	(?_sprintf+5)& (0+255),b
  3131  001054  EC7E  F021         	call	_sprintf	;wreg free
  3132                           
  3133                           ;MainCode.c: 329:                 else {
  3134  001058  0E64               	movlw	100
  3135  00105A  64B1               	cpfsgt	16305,c	;volatile
  3136  00105C  D021               	goto	u7610
  3137                           
  3138                           ;MainCode.c: 330:                     char str[20];
  3139  00105E  0E07               	movlw	7
  3140  001060  0101               	movlb	1	; () banked
  3141  001062  6F12               	movwf	_state& (0+255),b
  3142                           
  3143                           ; BSR set to: 1
  3144                           ;MainCode.c: 331:                     sprintf(str, "%3d", TMR1L);
  3145  001064  EC48  F023         	call	_Lcd_Clear	;wreg free
  3146                           
  3147                           ;MainCode.c: 332: 
  3148  001068  0E01               	movlw	1
  3149  00106A  0100               	movlb	0	; () banked
  3150  00106C  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3151  00106E  0E01               	movlw	1
  3152  001070  EC6D  F01E         	call	_Lcd_Set_Cursor
  3153                           
  3154                           ;MainCode.c: 333: 
  3155  001074  0ECB               	movlw	low STR_18
  3156  001076  0100               	movlb	0	; () banked
  3157  001078  6F66               	movwf	Lcd_Write_String@a& (0+255),b
  3158  00107A  0E7E               	movlw	high STR_18
  3159  00107C  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3160  00107E  EC31  F020         	call	_Lcd_Write_String	;wreg free
  3161                           
  3162                           ;MainCode.c: 334:                     Lcd_Set_Cursor(4, 1);
  3163  001082  0E01               	movlw	1
  3164  001084  0100               	movlb	0	; () banked
  3165  001086  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3166  001088  0E02               	movlw	2
  3167  00108A  EC6D  F01E         	call	_Lcd_Set_Cursor
  3168                           
  3169                           ;MainCode.c: 335:                     Lcd_Write_String(master_state_lut[master_state]);
  3170  00108E  0E14               	movlw	low STR_19
  3171  001090  0100               	movlb	0	; () banked
  3172  001092  6F66               	movwf	Lcd_Write_String@a& (0+255),b
  3173  001094  0E7F               	movlw	high STR_19
  3174  001096  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3175  001098  EC31  F020         	call	_Lcd_Write_String	;wreg free
  3176  00109C                     l230:
  3177  00109C  A4CA               	btfss	16330,2,c	;volatile
  3178  00109E  D7FE               	goto	l230
  3179  0010A0                     u7610:
  3180                           
  3181                           ;MainCode.c: 326:                     Lcd_Set_Cursor(3, 1);
  3182                           
  3183                           ;MainCode.c: 338:                         T1CONbits.ON = 1;
  3184  0010A0  A4CA               	btfss	16330,2,c	;volatile
  3185  0010A2  D7CB               	goto	l6233
  3186  0010A4                     u7620:
  3187                           
  3188                           ;MainCode.c: 339:                         if(TMR1H > 50)
  3189  0010A4  90B2               	bcf	16306,0,c	;volatile
  3190                           
  3191                           ;MainCode.c: 340:                         {
  3192  0010A6  0E00               	movlw	0
  3193  0010A8  6EB1               	movwf	16305,c	;volatile
  3194                           
  3195                           ;MainCode.c: 341:                             state = STARTMENU;
  3196  0010AA  0E00               	movlw	0
  3197  0010AC  6EB0               	movwf	16304,c	;volatile
  3198  0010AE  D149               	goto	l178
  3199  0010B0                     l225:
  3200                           
  3201                           ;MainCode.c: 345:                             Lcd_Write_String("Release for restart");;M
      +                          ainCode.c: 346:                             while (!PORTAbits.RA2){
  3202  0010B0  0060  F448  F059   	movff	_state,_status
  3203  0010B6  6A5A               	clrf	_status+1,c
  3204  0010B8                     
  3205                           ;MainCode.c: 347: 
  3206  0010B8  90B2               	bcf	16306,0,c	;volatile
  3207                           
  3208                           ;MainCode.c: 348:                             }
  3209  0010BA  0E00               	movlw	0
  3210  0010BC  6EB0               	movwf	16304,c	;volatile
  3211                           
  3212                           ;MainCode.c: 349:                             T1CONbits.ON = 0;
  3213  0010BE  0E00               	movlw	0
  3214  0010C0  6EB1               	movwf	16305,c	;volatile
  3215  0010C2  D13F               	goto	l178
  3216  0010C4                     l235:
  3217                           
  3218                           ; BSR set to: 0
  3219                           ;MainCode.c: 354:                     else
  3220  0010C4  0060  F448  F059   	movff	_state,_status
  3221  0010CA  6A5A               	clrf	_status+1,c
  3222                           
  3223                           ; BSR set to: 0
  3224                           ;MainCode.c: 355:                     {
  3225  0010CC  0101               	movlb	1	; () banked
  3226  0010CE  05BB               	decf	_enter_state& (0+255),w,b
  3227  0010D0  11BC               	iorwf	(_enter_state+1)& (0+255),w,b
  3228  0010D2  A4D8               	btfss	status,2,c
  3229  0010D4  D021               	goto	l6267
  3230                           
  3231                           ; BSR set to: 1
  3232                           ;MainCode.c: 356:                         T1CONbits.ON = 0;
  3233  0010D6  0E00               	movlw	0
  3234  0010D8  6FBC               	movwf	(_enter_state+1)& (0+255),b
  3235  0010DA  0E00               	movlw	0
  3236  0010DC  6FBB               	movwf	_enter_state& (0+255),b
  3237                           
  3238                           ; BSR set to: 1
  3239                           ;MainCode.c: 357:                         TMR1L = 0;
  3240  0010DE  EC48  F023         	call	_Lcd_Clear	;wreg free
  3241                           
  3242                           ;MainCode.c: 358:                         TMR1H = 0;
  3243  0010E2  0E01               	movlw	1
  3244  0010E4  0100               	movlb	0	; () banked
  3245  0010E6  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3246  0010E8  0E01               	movlw	1
  3247  0010EA  EC6D  F01E         	call	_Lcd_Set_Cursor
  3248                           
  3249                           ;MainCode.c: 359:                     }
  3250  0010EE  0E82               	movlw	low STR_20
  3251  0010F0  0100               	movlb	0	; () banked
  3252  0010F2  6F66               	movwf	Lcd_Write_String@a& (0+255),b
  3253  0010F4  0E7F               	movlw	high STR_20
  3254  0010F6  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3255  0010F8  EC31  F020         	call	_Lcd_Write_String	;wreg free
  3256                           
  3257                           ;MainCode.c: 360:                 }
  3258  0010FC  0E01               	movlw	1
  3259  0010FE  0100               	movlb	0	; () banked
  3260  001100  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3261  001102  0E02               	movlw	2
  3262  001104  EC6D  F01E         	call	_Lcd_Set_Cursor
  3263                           
  3264                           ;MainCode.c: 361:                 break;
  3265  001108  0EB6               	movlw	low STR_21
  3266  00110A  0100               	movlb	0	; () banked
  3267  00110C  6F66               	movwf	Lcd_Write_String@a& (0+255),b
  3268  00110E  0E7F               	movlw	high STR_21
  3269  001110  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3270  001112  EC31  F020         	call	_Lcd_Write_String	;wreg free
  3271                           
  3272                           ;MainCode.c: 362:             case STUCK:
  3273  001116  D115               	goto	l178
  3274  001118                     l6267:
  3275                           
  3276                           ; BSR set to: 1
  3277                           ;MainCode.c: 364:                 if (enter_state == 1) {;MainCode.c: 365:              
      +                                 tick_count = 0;
  3278  001118  0EB1               	movlw	low main@str_1454
  3279  00111A  6F63               	movwf	sprintf@s& (0+255),b
  3280  00111C  0E01               	movlw	high main@str_1454
  3281  00111E  6F64               	movwf	(sprintf@s+1)& (0+255),b
  3282  001120  0ECC               	movlw	low STR_22
  3283  001122  6F65               	movwf	sprintf@fmt& (0+255),b
  3284  001124  0E7F               	movlw	high STR_22
  3285  001126  6F66               	movwf	(sprintf@fmt+1)& (0+255),b
  3286  001128  0060  F420  F167   	movff	_charging_voltage,?_sprintf+4
  3287  00112E  0060  F424  F168   	movff	_charging_voltage+1,?_sprintf+5
  3288  001134  0060  F428  F169   	movff	_charging_voltage+2,?_sprintf+6
  3289  00113A  0060  F42C  F16A   	movff	_charging_voltage+3,?_sprintf+7
  3290  001140  EC7E  F021         	call	_sprintf	;wreg free
  3291                           
  3292                           ;MainCode.c: 366:                     enter_state = 0;
  3293  001144  0E0A               	movlw	10
  3294  001146  0100               	movlb	0	; () banked
  3295  001148  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3296  00114A  0E02               	movlw	2
  3297  00114C  EC6D  F01E         	call	_Lcd_Set_Cursor
  3298                           
  3299                           ;MainCode.c: 367:                     Lcd_Clear();
  3300  001150  0EB1               	movlw	low main@str_1454
  3301  001152  0100               	movlb	0	; () banked
  3302  001154  6F66               	movwf	Lcd_Write_String@a& (0+255),b
  3303  001156  0E01               	movlw	high main@str_1454
  3304  001158  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3305  00115A  EC31  F020         	call	_Lcd_Write_String	;wreg free
  3306                           
  3307                           ;MainCode.c: 368:                     Lcd_Set_Cursor(1, 1);
  3308  00115E  0E01               	movlw	1
  3309  001160  0100               	movlb	0	; () banked
  3310  001162  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3311  001164  0E03               	movlw	3
  3312  001166  EC6D  F01E         	call	_Lcd_Set_Cursor
  3313                           
  3314                           ;MainCode.c: 369:                     Lcd_Write_String("Robot is stuck");
  3315  00116A  0060  F6E4  F060   	movff	_charging_state,___wmul@multiplier
  3316  001170  0060  F6E8  F061   	movff	_charging_state+1,___wmul@multiplier+1
  3317  001176  0E00               	movlw	0
  3318  001178  0100               	movlb	0	; () banked
  3319  00117A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3320  00117C  0E14               	movlw	20
  3321  00117E  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3322  001180  EC05  F023         	call	___wmul	;wreg free
  3323  001184  0E00               	movlw	low _charging_state_lut
  3324  001186  0100               	movlb	0	; () banked
  3325  001188  2560               	addwf	?___wmul& (0+255),w,b
  3326  00118A  6F66               	movwf	Lcd_Write_String@a& (0+255),b
  3327  00118C  0E02               	movlw	high _charging_state_lut
  3328  00118E  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  3329  001190  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3330  001192  EC31  F020         	call	_Lcd_Write_String	;wreg free
  3331  001196  D0D5               	goto	l178
  3332  001198                     l238:
  3333                           
  3334                           ; BSR set to: 0
  3335                           ;MainCode.c: 376:                         enter_state = 1;
  3336  001198  0060  F448  F059   	movff	_state,_status
  3337  00119E  6A5A               	clrf	_status+1,c
  3338                           
  3339                           ; BSR set to: 0
  3340                           ;MainCode.c: 377:                         while (!PORTAbits.RA2);
  3341  0011A0  0101               	movlb	1	; () banked
  3342  0011A2  05BB               	decf	_enter_state& (0+255),w,b
  3343  0011A4  11BC               	iorwf	(_enter_state+1)& (0+255),w,b
  3344  0011A6  A4D8               	btfss	status,2,c
  3345  0011A8  D02E               	goto	l6295
  3346                           
  3347                           ; BSR set to: 1
  3348                           ;MainCode.c: 378:                     }
  3349  0011AA  0E00               	movlw	0
  3350  0011AC  6FBC               	movwf	(_enter_state+1)& (0+255),b
  3351  0011AE  0E00               	movlw	0
  3352  0011B0  6FBB               	movwf	_enter_state& (0+255),b
  3353                           
  3354                           ; BSR set to: 1
  3355                           ;MainCode.c: 379:                 }
  3356  0011B2  EC48  F023         	call	_Lcd_Clear	;wreg free
  3357                           
  3358                           ;MainCode.c: 380:                 break;
  3359  0011B6  0E01               	movlw	1
  3360  0011B8  0100               	movlb	0	; () banked
  3361  0011BA  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3362  0011BC  0E01               	movlw	1
  3363  0011BE  EC6D  F01E         	call	_Lcd_Set_Cursor
  3364                           
  3365                           ;MainCode.c: 381:             default:
  3366  0011C2  0E64               	movlw	low STR_23
  3367  0011C4  0100               	movlb	0	; () banked
  3368  0011C6  6F66               	movwf	Lcd_Write_String@a& (0+255),b
  3369  0011C8  0E7F               	movlw	high STR_23
  3370  0011CA  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3371  0011CC  EC31  F020         	call	_Lcd_Write_String	;wreg free
  3372                           
  3373                           ;MainCode.c: 382:                 status = state;
  3374  0011D0  0E01               	movlw	1
  3375  0011D2  0100               	movlb	0	; () banked
  3376  0011D4  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3377  0011D6  0E02               	movlw	2
  3378  0011D8  EC6D  F01E         	call	_Lcd_Set_Cursor
  3379                           
  3380                           ;MainCode.c: 383:                 if (enter_state == 1) {
  3381  0011DC  0EC6               	movlw	low STR_6
  3382  0011DE  0100               	movlb	0	; () banked
  3383  0011E0  6F66               	movwf	Lcd_Write_String@a& (0+255),b
  3384  0011E2  0E7F               	movlw	high STR_6
  3385  0011E4  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3386  0011E6  EC31  F020         	call	_Lcd_Write_String	;wreg free
  3387                           
  3388                           ;MainCode.c: 384:                     enter_state = 0;
  3389  0011EA  0E01               	movlw	1
  3390  0011EC  0100               	movlb	0	; () banked
  3391  0011EE  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3392  0011F0  0E03               	movlw	3
  3393  0011F2  EC6D  F01E         	call	_Lcd_Set_Cursor
  3394                           
  3395                           ;MainCode.c: 385:                     Lcd_Clear();
  3396  0011F6  0E91               	movlw	low STR_14
  3397  0011F8  0100               	movlb	0	; () banked
  3398  0011FA  6F66               	movwf	Lcd_Write_String@a& (0+255),b
  3399  0011FC  0E7F               	movlw	high STR_14
  3400  0011FE  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3401  001200  EC31  F020         	call	_Lcd_Write_String	;wreg free
  3402                           
  3403                           ;MainCode.c: 386:                     Lcd_Set_Cursor(1, 1);
  3404  001204  D09E               	goto	l178
  3405  001206                     l6295:
  3406                           
  3407                           ; BSR set to: 1
  3408                           ;MainCode.c: 388:                 };MainCode.c: 389:                 else {
  3409  001206  0E9D               	movlw	low main@str_1459
  3410  001208  6F63               	movwf	sprintf@s& (0+255),b
  3411  00120A  0E01               	movlw	high main@str_1459
  3412  00120C  6F64               	movwf	(sprintf@s+1)& (0+255),b
  3413  00120E  0EF8               	movlw	low STR_15
  3414  001210  6F65               	movwf	sprintf@fmt& (0+255),b
  3415  001212  0E7F               	movlw	high STR_15
  3416  001214  6F66               	movwf	(sprintf@fmt+1)& (0+255),b
  3417  001216  006F FEC0  F167    	movff	16304,?_sprintf+4	;volatile
  3418  00121C  6B68               	clrf	(?_sprintf+5)& (0+255),b
  3419  00121E  EC7E  F021         	call	_sprintf	;wreg free
  3420                           
  3421                           ;MainCode.c: 392:                 break;
  3422  001222  0E01               	movlw	1
  3423  001224  0100               	movlb	0	; () banked
  3424  001226  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3425  001228  0E04               	movlw	4
  3426  00122A  EC6D  F01E         	call	_Lcd_Set_Cursor
  3427                           
  3428                           ;MainCode.c: 393:         }
  3429  00122E  0060  F430  F060   	movff	_master_state,___wmul@multiplier
  3430  001234  0060  F434  F061   	movff	_master_state+1,___wmul@multiplier+1
  3431  00123A  0E00               	movlw	0
  3432  00123C  0100               	movlb	0	; () banked
  3433  00123E  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3434  001240  0E14               	movlw	20
  3435  001242  6F62               	movwf	___wmul@multiplicand& (0+255),b
  3436  001244  EC05  F023         	call	___wmul	;wreg free
  3437  001248  0E8C               	movlw	low _master_state_lut
  3438  00124A  0100               	movlb	0	; () banked
  3439  00124C  2560               	addwf	?___wmul& (0+255),w,b
  3440  00124E  6F66               	movwf	Lcd_Write_String@a& (0+255),b
  3441  001250  0E02               	movlw	high _master_state_lut
  3442  001252  2161               	addwfc	(?___wmul+1)& (0+255),w,b
  3443  001254  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3444  001256  EC31  F020         	call	_Lcd_Write_String	;wreg free
  3445                           
  3446                           ;MainCode.c: 394:     }
  3447  00125A  B4CA               	btfsc	16330,2,c	;volatile
  3448  00125C  D72D               	goto	L5
  3449                           
  3450                           ;MainCode.c: 395: };MainCode.c: 396: 
  3451  00125E  80B2               	bsf	16306,0,c	;volatile
  3452                           
  3453                           ;MainCode.c: 397: void __attribute__((picinterrupt(("irq(TMR0), low_priority")))) buzzer
      +                          Int(void) {
  3454  001260  0E32               	movlw	50
  3455  001262  64B1               	cpfsgt	16305,c	;volatile
  3456  001264  D06E               	goto	l178
  3457                           
  3458                           ;MainCode.c: 398:     PORTBbits.RB1 = 0;;MainCode.c: 399:     T0CON0bits.EN = 0;
  3459  001266  0E00               	movlw	0
  3460  001268  0101               	movlb	1	; () banked
  3461  00126A  6F12               	movwf	_state& (0+255),b
  3462                           
  3463                           ;MainCode.c: 400:     PIR3bits.TMR0IF = 0;
  3464  00126C  0E00               	movlw	0
  3465  00126E  6FBC               	movwf	(_enter_state+1)& (0+255),b
  3466  001270  0E01               	movlw	1
  3467  001272  6FBB               	movwf	_enter_state& (0+255),b
  3468                           
  3469                           ; BSR set to: 1
  3470                           ;MainCode.c: 401: }
  3471  001274  EC48  F023         	call	_Lcd_Clear	;wreg free
  3472                           
  3473                           ;MainCode.c: 402: 
  3474  001278  0E01               	movlw	1
  3475  00127A  0100               	movlb	0	; () banked
  3476  00127C  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3477  00127E  0E01               	movlw	1
  3478  001280  EC6D  F01E         	call	_Lcd_Set_Cursor
  3479                           
  3480                           ;MainCode.c: 403: void __attribute__((picinterrupt(("irq(INT0), high_priority")))) encIn
      +                          t(void) {
  3481  001284  0EA4               	movlw	low STR_16
  3482  001286  0100               	movlb	0	; () banked
  3483  001288  6F66               	movwf	Lcd_Write_String@a& (0+255),b
  3484  00128A  0E7E               	movlw	high STR_16
  3485  00128C  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3486  00128E  EC31  F020         	call	_Lcd_Write_String	;wreg free
  3487  001292                     l243:
  3488                           
  3489                           ;MainCode.c: 404:     if (PORTAbits.RA0 == 1) {
  3490  001292  A4CA               	btfss	16330,2,c	;volatile
  3491  001294  D7FE               	goto	l243
  3492  001296  D706               	goto	u7620
  3493  001298                     l247:
  3494                           
  3495                           ; BSR set to: 0
  3496                           ;MainCode.c: 421: 
  3497  001298  0060  F448  F059   	movff	_state,_status
  3498  00129E  6A5A               	clrf	_status+1,c
  3499                           
  3500                           ; BSR set to: 0
  3501                           ;MainCode.c: 422: }
  3502  0012A0  0101               	movlb	1	; () banked
  3503  0012A2  05BB               	decf	_enter_state& (0+255),w,b
  3504  0012A4  11BC               	iorwf	(_enter_state+1)& (0+255),w,b
  3505  0012A6  A4D8               	btfss	status,2,c
  3506  0012A8  D025               	goto	l248
  3507                           
  3508                           ; BSR set to: 1
  3509                           ;MainCode.c: 423: 
  3510  0012AA  0E00               	movlw	0
  3511  0012AC  6F11               	movwf	(_tick_count+1)& (0+255),b
  3512  0012AE  0E00               	movlw	0
  3513  0012B0  6F10               	movwf	_tick_count& (0+255),b
  3514                           
  3515                           ;MainCode.c: 424: void __attribute__((picinterrupt(("irq(RXB0IF), high_priority")))) can
      +                          RecInt2(void) {
  3516  0012B2  0E00               	movlw	0
  3517  0012B4  6FBC               	movwf	(_enter_state+1)& (0+255),b
  3518  0012B6  0E00               	movlw	0
  3519  0012B8  6FBB               	movwf	_enter_state& (0+255),b
  3520                           
  3521                           ; BSR set to: 1
  3522                           ;MainCode.c: 425:     if (RXB0CONbits.RXFUL == 1) {
  3523  0012BA  EC48  F023         	call	_Lcd_Clear	;wreg free
  3524                           
  3525                           ;MainCode.c: 426:         int message[8];
  3526  0012BE  0E01               	movlw	1
  3527  0012C0  0100               	movlb	0	; () banked
  3528  0012C2  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3529  0012C4  0E01               	movlw	1
  3530  0012C6  EC6D  F01E         	call	_Lcd_Set_Cursor
  3531                           
  3532                           ;MainCode.c: 427:         switch (RXB0D0) {
  3533  0012CA  0E73               	movlw	low STR_28
  3534  0012CC  0100               	movlb	0	; () banked
  3535  0012CE  6F66               	movwf	Lcd_Write_String@a& (0+255),b
  3536  0012D0  0E7F               	movlw	high STR_28
  3537  0012D2  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3538  0012D4  EC31  F020         	call	_Lcd_Write_String	;wreg free
  3539                           
  3540                           ;MainCode.c: 428:             case 0:
  3541  0012D8  0E01               	movlw	1
  3542  0012DA  0100               	movlb	0	; () banked
  3543  0012DC  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3544  0012DE  0E02               	movlw	2
  3545  0012E0  EC6D  F01E         	call	_Lcd_Set_Cursor
  3546                           
  3547                           ;MainCode.c: 429:                 message[0] = status;
  3548  0012E4  0E45               	movlw	low STR_29
  3549  0012E6  0100               	movlb	0	; () banked
  3550  0012E8  6F66               	movwf	Lcd_Write_String@a& (0+255),b
  3551  0012EA  0E7F               	movlw	high STR_29
  3552  0012EC  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3553  0012EE  EC31  F020         	call	_Lcd_Write_String	;wreg free
  3554                           
  3555                           ;MainCode.c: 430:                 sendCANmessage(0, message, 1);
  3556  0012F2  D027               	goto	l178
  3557  0012F4                     l248:
  3558                           
  3559                           ; BSR set to: 1
  3560                           ;MainCode.c: 432:             case 1:
  3561  0012F4  B4CA               	btfsc	16330,2,c	;volatile
  3562  0012F6  D025               	goto	l178
  3563                           
  3564                           ; BSR set to: 1
  3565                           ;MainCode.c: 433:                 feedback = RXB0D1;
  3566  0012F8  0E00               	movlw	0
  3567  0012FA  6F12               	movwf	_state& (0+255),b
  3568                           
  3569                           ;MainCode.c: 434:                 break;
  3570  0012FC  0E00               	movlw	0
  3571  0012FE  6FBC               	movwf	(_enter_state+1)& (0+255),b
  3572  001300  0E01               	movlw	1
  3573  001302  6FBB               	movwf	_enter_state& (0+255),b
  3574  001304                     l251:
  3575  001304  B4CA               	btfsc	16330,2,c	;volatile
  3576  001306  D01D               	goto	l178
  3577  001308  D7FD               	goto	l251
  3578  00130A                     l254:
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;MainCode.c: 440:             case 3:
  3582  00130A  0060  F448  F059   	movff	_state,_status
  3583  001310  6A5A               	clrf	_status+1,c
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;MainCode.c: 441:                 master_state = RXB0D1;
  3587  001312  0101               	movlb	1	; () banked
  3588  001314  05BB               	decf	_enter_state& (0+255),w,b
  3589  001316  11BC               	iorwf	(_enter_state+1)& (0+255),w,b
  3590  001318  A4D8               	btfss	status,2,c
  3591  00131A  D013               	goto	l178
  3592                           
  3593                           ; BSR set to: 1
  3594                           ;MainCode.c: 442:                 break;
  3595  00131C  0E00               	movlw	0
  3596  00131E  6FBC               	movwf	(_enter_state+1)& (0+255),b
  3597  001320  0E00               	movlw	0
  3598  001322  6FBB               	movwf	_enter_state& (0+255),b
  3599                           
  3600                           ; BSR set to: 1
  3601                           ;MainCode.c: 443:             case 4:
  3602  001324  EC48  F023         	call	_Lcd_Clear	;wreg free
  3603                           
  3604                           ;MainCode.c: 444:                 charging_state = RXB0D1;
  3605  001328  0E01               	movlw	1
  3606  00132A  0100               	movlb	0	; () banked
  3607  00132C  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
  3608  00132E  0E01               	movlw	1
  3609  001330  EC6D  F01E         	call	_Lcd_Set_Cursor
  3610                           
  3611                           ;MainCode.c: 445:                 break;
  3612  001334  0EB8               	movlw	low STR_30
  3613  001336  0100               	movlb	0	; () banked
  3614  001338  6F66               	movwf	Lcd_Write_String@a& (0+255),b
  3615  00133A  0E7E               	movlw	high STR_30
  3616  00133C  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
  3617  00133E  EC31  F020         	call	_Lcd_Write_String	;wreg free
  3618  001342                     l178:
  3619  001342  0101               	movlb	1	; () banked
  3620  001344  5112               	movf	_state& (0+255),w,b
  3621  001346  0100               	movlb	0	; () banked
  3622  001348  6FF9               	movwf	??_main& (0+255),b
  3623  00134A  6BFA               	clrf	(??_main+1)& (0+255),b
  3624                           
  3625                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3626                           ; Switch size 1, requested type "simple"
  3627                           ; Number of cases is 1, Range of values is 0 to 0
  3628                           ; switch strategies available:
  3629                           ; Name         Instructions Cycles
  3630                           ; simple_byte            4     3 (average)
  3631                           ;	Chosen strategy is simple_byte
  3632  00134C  51FA               	movf	(??_main+1)& (0+255),w,b
  3633  00134E  0A00               	xorlw	0	; case 0
  3634  001350  A4D8               	btfss	status,2,c
  3635  001352  D7DB               	goto	l254
  3636                           
  3637                           ; BSR set to: 0
  3638                           ; Switch size 1, requested type "simple"
  3639                           ; Number of cases is 9, Range of values is 0 to 8
  3640                           ; switch strategies available:
  3641                           ; Name         Instructions Cycles
  3642                           ; simple_byte           28    15 (average)
  3643                           ;	Chosen strategy is simple_byte
  3644  001354  51F9               	movf	??_main& (0+255),w,b
  3645  001356  0A00               	xorlw	0	; case 0
  3646  001358  B4D8               	btfsc	status,2,c
  3647  00135A  D480               	goto	l179
  3648  00135C  0A01               	xorlw	1	; case 1
  3649  00135E  B4D8               	btfsc	status,2,c
  3650  001360  D4BF               	goto	l189
  3651  001362  0A03               	xorlw	3	; case 2
  3652  001364  B4D8               	btfsc	status,2,c
  3653  001366  D4FE               	goto	l198
  3654  001368  0A01               	xorlw	1	; case 3
  3655  00136A  B4D8               	btfsc	status,2,c
  3656  00136C  D564               	goto	l204
  3657  00136E  0A07               	xorlw	7	; case 4
  3658  001370  B4D8               	btfsc	status,2,c
  3659  001372  D5A3               	goto	l213
  3660  001374  0A01               	xorlw	1	; case 5
  3661  001376  B4D8               	btfsc	status,2,c
  3662  001378  D5E2               	goto	l6193
  3663  00137A  0A03               	xorlw	3	; case 6
  3664  00137C  B4D8               	btfsc	status,2,c
  3665  00137E  D6A2               	goto	l235
  3666  001380  0A01               	xorlw	1	; case 7
  3667  001382  B4D8               	btfsc	status,2,c
  3668  001384  D709               	goto	l238
  3669  001386  0A0F               	xorlw	15	; case 8
  3670  001388  B4D8               	btfsc	status,2,c
  3671  00138A  D786               	goto	l247
  3672  00138C  D7BE               	goto	l254
  3673  00138E                     __end_of_main:
  3674                           	opt callstack 0
  3675                           
  3676 ;; *************** function _sprintf *****************
  3677 ;; Defined at:
  3678 ;;		line 9 in file "D:\MPLAB\pic\sources\c99\common\nf_sprintf.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;  s               2    0[BANK1 ] PTR unsigned char 
  3681 ;;		 -> main@str_1459(20), main@str_1454(8), main@str_1448(20), main@str(20), 
  3682 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  3683 ;;		 -> STR_26(4), STR_22(6), STR_17(4), STR_15(4), 
  3684 ;; Auto vars:     Size  Location     Type
  3685 ;;  f               6   12[BANK1 ] struct _IO_FILE
  3686 ;;  ap              2   10[BANK1 ] PTR void [1]
  3687 ;;		 -> ?_sprintf(2), 
  3688 ;;  ret             2    0        int 
  3689 ;; Return value:  Size  Location     Type
  3690 ;;                  2    0[BANK1 ] int 
  3691 ;; Registers used:
  3692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3698 ;;      Params:         0       0       8       0       0       0       0       0       0
  3699 ;;      Locals:         0       0      10       0       0       0       0       0       0
  3700 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3701 ;;      Totals:         0       0      18       0       0       0       0       0       0
  3702 ;;Total ram usage:       18 bytes
  3703 ;; Hardware stack levels used:    1
  3704 ;; Hardware stack levels required when called:   10
  3705 ;; This function calls:
  3706 ;;		_vfprintf
  3707 ;; This function is called by:
  3708 ;;		_main
  3709 ;; This function uses a non-reentrant model
  3710 ;;
  3711                           
  3712                           	psect	text1
  3713  0042FC                     __ptext1:
  3714                           	opt callstack 0
  3715  0042FC                     _sprintf:
  3716                           	opt callstack 20
  3717                           
  3718                           ; BSR set to: 0
  3719                           ;incstack = 0
  3720  0042FC  0E67               	movlw	low (?_sprintf+4)
  3721  0042FE  0101               	movlb	1	; () banked
  3722  004300  6F6D               	movwf	sprintf@ap& (0+255),b
  3723  004302  0E01               	movlw	high (?_sprintf+4)
  3724  004304  6F6E               	movwf	(sprintf@ap+1)& (0+255),b
  3725  004306  0060  F58C  F16F   	movff	sprintf@s,sprintf@f
  3726  00430C  0060  F590  F170   	movff	sprintf@s+1,sprintf@f+1
  3727                           
  3728                           ; BSR set to: 1
  3729  004312  0E00               	movlw	0
  3730  004314  6F72               	movwf	(sprintf@f+3)& (0+255),b
  3731  004316  0E00               	movlw	0
  3732  004318  6F71               	movwf	(sprintf@f+2)& (0+255),b
  3733                           
  3734                           ; BSR set to: 1
  3735  00431A  0E00               	movlw	0
  3736  00431C  6F74               	movwf	(sprintf@f+5)& (0+255),b
  3737  00431E  0E00               	movlw	0
  3738  004320  6F73               	movwf	(sprintf@f+4)& (0+255),b
  3739                           
  3740                           ; BSR set to: 1
  3741  004322  0E6F               	movlw	low sprintf@f
  3742  004324  0100               	movlb	0	; () banked
  3743  004326  6FF1               	movwf	vfprintf@fp& (0+255),b
  3744  004328  0E01               	movlw	high sprintf@f
  3745  00432A  6FF2               	movwf	(vfprintf@fp+1)& (0+255),b
  3746  00432C  0060  F594  F0F3   	movff	sprintf@fmt,vfprintf@fmt
  3747  004332  0060  F598  F0F4   	movff	sprintf@fmt+1,vfprintf@fmt+1
  3748  004338  0E6D               	movlw	low sprintf@ap
  3749  00433A  6FF5               	movwf	vfprintf@ap& (0+255),b
  3750  00433C  0E01               	movlw	high sprintf@ap
  3751  00433E  6FF6               	movwf	(vfprintf@ap+1)& (0+255),b
  3752  004340  ECB0  F020         	call	_vfprintf	;wreg free
  3753  004344  0101               	movlb	1	; () banked
  3754  004346  5171               	movf	(sprintf@f+2)& (0+255),w,b
  3755  004348  2563               	addwf	sprintf@s& (0+255),w,b
  3756  00434A  6ED9               	movwf	fsr2l,c
  3757  00434C  5172               	movf	(sprintf@f+3)& (0+255),w,b
  3758  00434E  2164               	addwfc	(sprintf@s+1)& (0+255),w,b
  3759  004350  6EDA               	movwf	fsr2h,c
  3760  004352  0E00               	movlw	0
  3761  004354  6EDF               	movwf	indf2,c
  3762                           
  3763                           ; BSR set to: 1
  3764  004356  0012               	return		;funcret
  3765  004358                     __end_of_sprintf:
  3766                           	opt callstack 0
  3767                           
  3768 ;; *************** function _vfprintf *****************
  3769 ;; Defined at:
  3770 ;;		line 1368 in file "D:\MPLAB\pic\sources\c99\common\doprnt.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;  fp              2  145[BANK0 ] PTR struct _IO_FILE
  3773 ;;		 -> sprintf@f(6), 
  3774 ;;  fmt             2  147[BANK0 ] PTR const unsigned char 
  3775 ;;		 -> STR_26(4), STR_22(6), STR_17(4), STR_15(4), 
  3776 ;;  ap              2  149[BANK0 ] PTR PTR void 
  3777 ;;		 -> sprintf@ap(2), 
  3778 ;; Auto vars:     Size  Location     Type
  3779 ;;  cfmt            2  151[BANK0 ] PTR unsigned char 
  3780 ;;		 -> STR_26(4), STR_22(6), STR_17(4), STR_15(4), 
  3781 ;; Return value:  Size  Location     Type
  3782 ;;                  2  145[BANK0 ] int 
  3783 ;; Registers used:
  3784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3785 ;; Tracked objects:
  3786 ;;		On entry : 0/0
  3787 ;;		On exit  : 0/0
  3788 ;;		Unchanged: 0/0
  3789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3790 ;;      Params:         0       6       0       0       0       0       0       0       0
  3791 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3792 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3793 ;;      Totals:         0       8       0       0       0       0       0       0       0
  3794 ;;Total ram usage:        8 bytes
  3795 ;; Hardware stack levels used:    1
  3796 ;; Hardware stack levels required when called:    9
  3797 ;; This function calls:
  3798 ;;		_vfpfcnvrt
  3799 ;; This function is called by:
  3800 ;;		_sprintf
  3801 ;; This function uses a non-reentrant model
  3802 ;;
  3803                           
  3804                           	psect	text2
  3805  004160                     __ptext2:
  3806                           	opt callstack 0
  3807  004160                     _vfprintf:
  3808                           	opt callstack 20
  3809                           
  3810                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1368: int vfprintf(FILE *fp, const char *fmt,
      +                           va_list ap);D:\MPLAB\pic\sources\c99\common\doprnt.c: 1369: {;D:\MPLAB\pic\sources\c99\
      +                          common\doprnt.c: 1371:     char *cfmt;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1373:  
      +                             cfmt = (char *)fmt;
  3811                           
  3812                           ; BSR set to: 1
  3813                           ;incstack = 0
  3814  004160  0060  F3CC  F0F7   	movff	vfprintf@fmt,vfprintf@cfmt
  3815  004166  0060  F3D0  F0F8   	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3816                           
  3817                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1374:     nout = 0;
  3818  00416C  0E00               	movlw	0
  3819  00416E  6E4C               	movwf	_nout+1,c
  3820  004170  0E00               	movlw	0
  3821  004172  6E4B               	movwf	_nout,c
  3822                           
  3823                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt) {
  3824  004174  D018               	goto	l5465
  3825  004176                     l5463:
  3826                           
  3827                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1376:         nout += vfpfcnvrt(fp, &cfmt, ap
      +                          );
  3828  004176  0060  F3C4  F0D1   	movff	vfprintf@fp,vfpfcnvrt@fp
  3829  00417C  0060  F3C8  F0D2   	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3830  004182  0EF7               	movlw	low vfprintf@cfmt
  3831  004184  0100               	movlb	0	; () banked
  3832  004186  6FD3               	movwf	vfpfcnvrt@fmt& (0+255),b
  3833  004188  0E00               	movlw	high vfprintf@cfmt
  3834  00418A  6FD4               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3835  00418C  0060  F3D4  F0D5   	movff	vfprintf@ap,vfpfcnvrt@ap
  3836  004192  0060  F3D8  F0D6   	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3837  004198  ECC7  F009         	call	_vfpfcnvrt	;wreg free
  3838  00419C  0100               	movlb	0	; () banked
  3839  00419E  51D1               	movf	?_vfpfcnvrt& (0+255),w,b
  3840  0041A0  264B               	addwf	_nout,f,c
  3841  0041A2  51D2               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3842  0041A4  224C               	addwfc	_nout+1,f,c
  3843  0041A6                     l5465:
  3844                           
  3845                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt) {
  3846  0041A6  0060  F3DF  FFF6   	movff	vfprintf@cfmt,tblptrl
  3847  0041AC  0060  F3E3  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  3848  0041B2                     	if	0	;tblptru may be non-zero
  3849  0041B2                     	endif
  3850  0041B2                     	if	0	;tblptru may be non-zero
  3851  0041B2                     	endif
  3852  0041B2  0008               	tblrd		*
  3853  0041B4  50F5               	movf	tablat,w,c
  3854  0041B6  0900               	iorlw	0
  3855  0041B8  A4D8               	btfss	status,2,c
  3856  0041BA  D7DD               	goto	l5463
  3857                           
  3858                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1378:     return nout;
  3859  0041BC  0060  F12C  F0F1   	movff	_nout,?_vfprintf
  3860  0041C2  0060  F130  F0F2   	movff	_nout+1,?_vfprintf+1
  3861  0041C8  0012               	return		;funcret
  3862  0041CA                     __end_of_vfprintf:
  3863                           	opt callstack 0
  3864                           
  3865 ;; *************** function _vfpfcnvrt *****************
  3866 ;; Defined at:
  3867 ;;		line 670 in file "D:\MPLAB\pic\sources\c99\common\doprnt.c"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;  fp              2  113[BANK0 ] PTR struct _IO_FILE
  3870 ;;		 -> sprintf@f(6), 
  3871 ;;  fmt             2  115[BANK0 ] PTR PTR unsigned char 
  3872 ;;		 -> vfprintf@cfmt(2), 
  3873 ;;  ap              2  117[BANK0 ] PTR PTR void 
  3874 ;;		 -> sprintf@ap(2), 
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;  ll              8  123[BANK0 ] long long 
  3877 ;;  llu             8    0        unsigned long long 
  3878 ;;  f               4  137[BANK0 ] unsigned long long 
  3879 ;;  ct              3  141[BANK0 ] unsigned char [3]
  3880 ;;  vp              3    0        PTR void 
  3881 ;;  cp              3    0        PTR unsigned char 
  3882 ;;  i               2    0        int 
  3883 ;;  done            2    0        int 
  3884 ;;  c               1  144[BANK0 ] unsigned char 
  3885 ;; Return value:  Size  Location     Type
  3886 ;;                  2  113[BANK0 ] int 
  3887 ;; Registers used:
  3888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3894 ;;      Params:         0       6       0       0       0       0       0       0       0
  3895 ;;      Locals:         0      22       0       0       0       0       0       0       0
  3896 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3897 ;;      Totals:         0      32       0       0       0       0       0       0       0
  3898 ;;Total ram usage:       32 bytes
  3899 ;; Hardware stack levels used:    1
  3900 ;; Hardware stack levels required when called:    8
  3901 ;; This function calls:
  3902 ;;		_atoi
  3903 ;;		_dtoa
  3904 ;;		_efgtoa
  3905 ;;		_fputc
  3906 ;;		_isdigit
  3907 ;;		_isupper
  3908 ;;		_strncmp
  3909 ;;		_tolower
  3910 ;; This function is called by:
  3911 ;;		_vfprintf
  3912 ;; This function uses a non-reentrant model
  3913 ;;
  3914                           
  3915                           	psect	text3
  3916  00138E                     __ptext3:
  3917                           	opt callstack 0
  3918  00138E                     _vfpfcnvrt:
  3919                           	opt callstack 20
  3920                           
  3921                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 670: static int vfpfcnvrt(FILE *fp, char *fmt
      +                          [], va_list ap);D:\MPLAB\pic\sources\c99\common\doprnt.c: 671: {;D:\MPLAB\pic\sources\c9
      +                          9\common\doprnt.c: 672:     char c, *cp, ct[3];;D:\MPLAB\pic\sources\c99\common\doprnt.c
      +                          : 673:     int done, i;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 674:     long long ll;
      +                          ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;;D:\MPLAB\pic
      +                          \sources\c99\common\doprnt.c: 676:     long double f;;D:\MPLAB\pic\sources\c99\common\do
      +                          prnt.c: 677:     void *vp;
  3922                           
  3923                           ;incstack = 0
  3924  00138E  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3925  001394  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3926  00139A  006F FF7B FFF6     	movff	postinc2,tblptrl
  3927  0013A0  006F FF77 FFF7     	movff	postdec2,tblptrh
  3928  0013A6                     	if	0	;tblptru may be non-zero
  3929  0013A6                     	endif
  3930  0013A6                     	if	0	;tblptru may be non-zero
  3931  0013A6                     	endif
  3932  0013A6  0008               	tblrd		*
  3933  0013A8  50F5               	movf	tablat,w,c
  3934  0013AA  0A25               	xorlw	37
  3935  0013AC  A4D8               	btfss	status,2,c
  3936  0013AE  D31B               	goto	l5411
  3937                           
  3938                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 681:         ++*fmt;
  3939  0013B0  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3940  0013B6  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3941  0013BC  2ADE               	incf	postinc2,f,c
  3942  0013BE  0E00               	movlw	0
  3943  0013C0  22DD               	addwfc	postdec2,f,c
  3944                           
  3945                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 683:         flags = width = 0;
  3946  0013C2  0E00               	movlw	0
  3947  0013C4  6E4E               	movwf	_width+1,c
  3948  0013C6  0E00               	movlw	0
  3949  0013C8  6E4D               	movwf	_width,c
  3950  0013CA  0060  F134  F0FD   	movff	_width,_flags
  3951  0013D0  0060  F138  F0FE   	movff	_width+1,_flags+1
  3952                           
  3953                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 684:         prec = -1;
  3954  0013D6  0100               	movlb	0	; () banked
  3955  0013D8  69FB               	setf	_prec& (0+255),b
  3956  0013DA  69FC               	setf	(_prec+1)& (0+255),b
  3957                           
  3958                           ; BSR set to: 0
  3959                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 723:         if ((*fmt)[0] == '*') {
  3960  0013DC  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3961  0013E2  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3962  0013E8  006F FF7B FFF6     	movff	postinc2,tblptrl
  3963  0013EE  006F FF77 FFF7     	movff	postdec2,tblptrh
  3964  0013F4                     	if	0	;tblptru may be non-zero
  3965  0013F4                     	endif
  3966  0013F4                     	if	0	;tblptru may be non-zero
  3967  0013F4                     	endif
  3968  0013F4  0008               	tblrd		*
  3969  0013F6  50F5               	movf	tablat,w,c
  3970  0013F8  0A2A               	xorlw	42
  3971  0013FA  A4D8               	btfss	status,2,c
  3972  0013FC  D02D               	goto	l5317
  3973                           
  3974                           ; BSR set to: 0
  3975                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 724:             ++*fmt;
  3976  0013FE  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3977  001404  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3978  00140A  2ADE               	incf	postinc2,f,c
  3979  00140C  0E00               	movlw	0
  3980  00140E  22DD               	addwfc	postdec2,f,c
  3981                           
  3982                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 725:             width = (*(int *)__va_arg(*(
      +                          int **)ap, (int)0));
  3983  001410  0060  F357  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3984  001416  0060  F35B  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3985  00141C  006F FF7C  F0D7    	movff	indf2,??_vfpfcnvrt
  3986  001422  0E02               	movlw	2
  3987  001424  26DE               	addwf	postinc2,f,c
  3988  001426  006F FF7C  F0D8    	movff	indf2,??_vfpfcnvrt+1
  3989  00142C  0E00               	movlw	0
  3990  00142E  22DD               	addwfc	postdec2,f,c
  3991  001430  0060  F35F  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3992  001436  0060  F363  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3993  00143C  006F FF78  F04D    	movff	postinc2,_width
  3994  001442  006F FF74  F04E    	movff	postdec2,_width+1
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 726:             if (width < 0) {
  3998  001448  AE4E               	btfss	_width+1,7,c
  3999  00144A  D04C               	goto	u6390
  4000                           
  4001                           ; BSR set to: 0
  4002                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 727:                 flags |= (1 << 0);
  4003  00144C  81FD               	bsf	_flags& (0+255),0,b
  4004                           
  4005                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 728:                 width = -width;
  4006  00144E  6C4D               	negf	_width,c
  4007  001450  1E4E               	comf	_width+1,f,c
  4008  001452  B0D8               	btfsc	status,0,c
  4009  001454  2A4E               	incf	_width+1,f,c
  4010  001456  D046               	goto	u6390
  4011  001458                     l5317:
  4012                           
  4013                           ; BSR set to: 0
  4014                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 731:             width = atoi(*fmt);
  4015  001458  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4016  00145E  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4017  001464  006F FF78  F067    	movff	postinc2,atoi@s
  4018  00146A  006F FF74  F068    	movff	postdec2,atoi@s+1
  4019  001470  EC3D  F017         	call	_atoi	;wreg free
  4020  001474  0060  F19C  F04D   	movff	?_atoi,_width
  4021  00147A  0060  F1A0  F04E   	movff	?_atoi+1,_width+1
  4022                           
  4023                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 732:             while ((0 ? isdigit((*fmt)[0
      +                          ]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4024  001480  D009               	goto	l5321
  4025  001482                     l5319:
  4026                           
  4027                           ; BSR set to: 0
  4028                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 733:                 ++*fmt;
  4029  001482  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4030  001488  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4031  00148E  2ADE               	incf	postinc2,f,c
  4032  001490  0E00               	movlw	0
  4033  001492  22DD               	addwfc	postdec2,f,c
  4034  001494                     l5321:
  4035  001494  0ED0               	movlw	208
  4036  001496  0100               	movlb	0	; () banked
  4037  001498  6FD7               	movwf	??_vfpfcnvrt& (0+255),b
  4038  00149A  0EFF               	movlw	255
  4039  00149C  6FD8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4040  00149E  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4041  0014A4  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4042  0014AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  4043  0014B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  4044  0014B6                     	if	0	;tblptru may be non-zero
  4045  0014B6                     	endif
  4046  0014B6                     	if	0	;tblptru may be non-zero
  4047  0014B6                     	endif
  4048  0014B6  0008               	tblrd		*
  4049  0014B8  50F5               	movf	tablat,w,c
  4050  0014BA  6FD9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4051  0014BC  6BDA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4052  0014BE  51D7               	movf	??_vfpfcnvrt& (0+255),w,b
  4053  0014C0  27D9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4054  0014C2  51D8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4055  0014C4  23DA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4056  0014C6  51DA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4057  0014C8  E106               	bnz	u6370
  4058  0014CA  0E0A               	movlw	10
  4059  0014CC  5DD9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4060  0014CE  B0D8               	btfsc	status,0,c
  4061  0014D0  D002               	goto	u6370
  4062  0014D2  0E01               	movlw	1
  4063  0014D4  D001               	goto	u6380
  4064  0014D6                     u6370:
  4065  0014D6  0E00               	movlw	0
  4066  0014D8                     u6380:
  4067  0014D8  6FE3               	movwf	_vfpfcnvrt$1810& (0+255),b
  4068  0014DA  6BE4               	clrf	(_vfpfcnvrt$1810+1)& (0+255),b
  4069                           
  4070                           ; BSR set to: 0
  4071  0014DC  51E3               	movf	_vfpfcnvrt$1810& (0+255),w,b
  4072  0014DE  11E4               	iorwf	(_vfpfcnvrt$1810+1)& (0+255),w,b
  4073  0014E0  A4D8               	btfss	status,2,c
  4074  0014E2  D7CF               	goto	l5319
  4075  0014E4                     u6390:
  4076                           
  4077                           ; BSR set to: 0
  4078                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 740:         if ((*fmt)[0] == '.') {
  4079  0014E4  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4080  0014EA  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4081  0014F0  006F FF7B FFF6     	movff	postinc2,tblptrl
  4082  0014F6  006F FF77 FFF7     	movff	postdec2,tblptrh
  4083  0014FC                     	if	0	;tblptru may be non-zero
  4084  0014FC                     	endif
  4085  0014FC                     	if	0	;tblptru may be non-zero
  4086  0014FC                     	endif
  4087  0014FC  0008               	tblrd		*
  4088  0014FE  50F5               	movf	tablat,w,c
  4089  001500  0A2E               	xorlw	46
  4090  001502  A4D8               	btfss	status,2,c
  4091  001504  D08A               	goto	u6440
  4092                           
  4093                           ; BSR set to: 0
  4094                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 741:             prec = 0;
  4095  001506  0E00               	movlw	0
  4096  001508  6FFC               	movwf	(_prec+1)& (0+255),b
  4097  00150A  0E00               	movlw	0
  4098  00150C  6FFB               	movwf	_prec& (0+255),b
  4099                           
  4100                           ; BSR set to: 0
  4101                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 742:             ++*fmt;
  4102  00150E  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4103  001514  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4104  00151A  2ADE               	incf	postinc2,f,c
  4105  00151C  0E00               	movlw	0
  4106  00151E  22DD               	addwfc	postdec2,f,c
  4107                           
  4108                           ; BSR set to: 0
  4109                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 743:             if ((*fmt)[0] == '*') {
  4110  001520  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4111  001526  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4112  00152C  006F FF7B FFF6     	movff	postinc2,tblptrl
  4113  001532  006F FF77 FFF7     	movff	postdec2,tblptrh
  4114  001538                     	if	0	;tblptru may be non-zero
  4115  001538                     	endif
  4116  001538                     	if	0	;tblptru may be non-zero
  4117  001538                     	endif
  4118  001538  0008               	tblrd		*
  4119  00153A  50F5               	movf	tablat,w,c
  4120  00153C  0A2A               	xorlw	42
  4121  00153E  A4D8               	btfss	status,2,c
  4122  001540  D026               	goto	l5337
  4123                           
  4124                           ; BSR set to: 0
  4125                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 744:                 ++*fmt;
  4126  001542  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4127  001548  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4128  00154E  2ADE               	incf	postinc2,f,c
  4129  001550  0E00               	movlw	0
  4130  001552  22DD               	addwfc	postdec2,f,c
  4131                           
  4132                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 745:                 prec = (*(int *)__va_arg
      +                          (*(int **)ap, (int)0));
  4133  001554  0060  F357  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  4134  00155A  0060  F35B  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  4135  001560  006F FF7C  F0D7    	movff	indf2,??_vfpfcnvrt
  4136  001566  0E02               	movlw	2
  4137  001568  26DE               	addwf	postinc2,f,c
  4138  00156A  006F FF7C  F0D8    	movff	indf2,??_vfpfcnvrt+1
  4139  001570  0E00               	movlw	0
  4140  001572  22DD               	addwfc	postdec2,f,c
  4141  001574  0060  F35F  FFD9   	movff	??_vfpfcnvrt,fsr2l
  4142  00157A  0060  F363  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  4143  001580  006F FF78  F0FB    	movff	postinc2,_prec
  4144  001586  006F FF74  F0FC    	movff	postdec2,_prec+1
  4145                           
  4146                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 746:             } else {
  4147  00158C  D046               	goto	u6440
  4148  00158E                     l5337:
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 747:                 prec = atoi(*fmt);
  4152  00158E  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4153  001594  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4154  00159A  006F FF78  F067    	movff	postinc2,atoi@s
  4155  0015A0  006F FF74  F068    	movff	postdec2,atoi@s+1
  4156  0015A6  EC3D  F017         	call	_atoi	;wreg free
  4157  0015AA  0060  F19C  F0FB   	movff	?_atoi,_prec
  4158  0015B0  0060  F1A0  F0FC   	movff	?_atoi+1,_prec+1
  4159                           
  4160                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 748:                 while ((0 ? isdigit((*fm
      +                          t)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4161  0015B6  D009               	goto	l5341
  4162  0015B8                     l5339:
  4163                           
  4164                           ; BSR set to: 0
  4165                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 749:                     ++*fmt;
  4166  0015B8  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4167  0015BE  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4168  0015C4  2ADE               	incf	postinc2,f,c
  4169  0015C6  0E00               	movlw	0
  4170  0015C8  22DD               	addwfc	postdec2,f,c
  4171  0015CA                     l5341:
  4172  0015CA  0ED0               	movlw	208
  4173  0015CC  0100               	movlb	0	; () banked
  4174  0015CE  6FD7               	movwf	??_vfpfcnvrt& (0+255),b
  4175  0015D0  0EFF               	movlw	255
  4176  0015D2  6FD8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4177  0015D4  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4178  0015DA  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4179  0015E0  006F FF7B FFF6     	movff	postinc2,tblptrl
  4180  0015E6  006F FF77 FFF7     	movff	postdec2,tblptrh
  4181  0015EC                     	if	0	;tblptru may be non-zero
  4182  0015EC                     	endif
  4183  0015EC                     	if	0	;tblptru may be non-zero
  4184  0015EC                     	endif
  4185  0015EC  0008               	tblrd		*
  4186  0015EE  50F5               	movf	tablat,w,c
  4187  0015F0  6FD9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4188  0015F2  6BDA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4189  0015F4  51D7               	movf	??_vfpfcnvrt& (0+255),w,b
  4190  0015F6  27D9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4191  0015F8  51D8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4192  0015FA  23DA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4193  0015FC  51DA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4194  0015FE  E106               	bnz	u6420
  4195  001600  0E0A               	movlw	10
  4196  001602  5DD9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4197  001604  B0D8               	btfsc	status,0,c
  4198  001606  D002               	goto	u6420
  4199  001608  0E01               	movlw	1
  4200  00160A  D001               	goto	u6430
  4201  00160C                     u6420:
  4202  00160C  0E00               	movlw	0
  4203  00160E                     u6430:
  4204  00160E  6FE5               	movwf	_vfpfcnvrt$1811& (0+255),b
  4205  001610  6BE6               	clrf	(_vfpfcnvrt$1811+1)& (0+255),b
  4206                           
  4207                           ; BSR set to: 0
  4208  001612  51E5               	movf	_vfpfcnvrt$1811& (0+255),w,b
  4209  001614  11E6               	iorwf	(_vfpfcnvrt$1811+1)& (0+255),w,b
  4210  001616  A4D8               	btfss	status,2,c
  4211  001618  D7CF               	goto	l5339
  4212  00161A                     u6440:
  4213                           
  4214                           ; BSR set to: 0
  4215                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 757:         ct[0] = tolower((int)(*fmt)[0]);
  4216  00161A  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4217  001620  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4218  001626  006F FF7B FFF6     	movff	postinc2,tblptrl
  4219  00162C  006F FF77 FFF7     	movff	postdec2,tblptrh
  4220  001632                     	if	0	;tblptru may be non-zero
  4221  001632                     	endif
  4222  001632                     	if	0	;tblptru may be non-zero
  4223  001632                     	endif
  4224  001632  0008               	tblrd		*
  4225  001634  50F5               	movf	tablat,w,c
  4226  001636  6F66               	movwf	tolower@c& (0+255),b
  4227  001638  6B67               	clrf	(tolower@c+1)& (0+255),b
  4228  00163A  ECAC  F021         	call	_tolower	;wreg free
  4229  00163E  0100               	movlb	0	; () banked
  4230  001640  5166               	movf	?_tolower& (0+255),w,b
  4231  001642  6FED               	movwf	vfpfcnvrt@ct& (0+255),b
  4232                           
  4233                           ; BSR set to: 0
  4234                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 758:         if (ct[0]) {
  4235  001644  51ED               	movf	vfpfcnvrt@ct& (0+255),w,b
  4236  001646  B4D8               	btfsc	status,2,c
  4237  001648  D041               	goto	l5357
  4238                           
  4239                           ; BSR set to: 0
  4240                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 759:             ct[1] = tolower((int)(*fmt)[
      +                          1]);
  4241  00164A  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4242  001650  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4243  001656  006F FF78  F0D7    	movff	postinc2,??_vfpfcnvrt
  4244  00165C  006F FF74  F0D8    	movff	postdec2,??_vfpfcnvrt+1
  4245  001662  0E01               	movlw	1
  4246  001664  27D7               	addwf	??_vfpfcnvrt& (0+255),f,b
  4247  001666  0E00               	movlw	0
  4248  001668  23D8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4249  00166A  0060  F35F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  4250  001670  0060  F363  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  4251  001676                     	if	0	;tblptru may be non-zero
  4252  001676                     	endif
  4253  001676                     	if	0	;tblptru may be non-zero
  4254  001676                     	endif
  4255  001676  0008               	tblrd		*
  4256  001678  50F5               	movf	tablat,w,c
  4257  00167A  6F66               	movwf	tolower@c& (0+255),b
  4258  00167C  6B67               	clrf	(tolower@c+1)& (0+255),b
  4259  00167E  ECAC  F021         	call	_tolower	;wreg free
  4260  001682  0100               	movlb	0	; () banked
  4261  001684  5166               	movf	?_tolower& (0+255),w,b
  4262  001686  6FEE               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  4263                           
  4264                           ; BSR set to: 0
  4265                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 760:             if (ct[1]) {
  4266  001688  51EE               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  4267  00168A  B4D8               	btfsc	status,2,c
  4268  00168C  D01F               	goto	l5357
  4269                           
  4270                           ; BSR set to: 0
  4271                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 761:                 ct[2] = tolower((int)(*f
      +                          mt)[2]);
  4272  00168E  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4273  001694  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4274  00169A  006F FF78  F0D7    	movff	postinc2,??_vfpfcnvrt
  4275  0016A0  006F FF74  F0D8    	movff	postdec2,??_vfpfcnvrt+1
  4276  0016A6  0E02               	movlw	2
  4277  0016A8  27D7               	addwf	??_vfpfcnvrt& (0+255),f,b
  4278  0016AA  0E00               	movlw	0
  4279  0016AC  23D8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4280  0016AE  0060  F35F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  4281  0016B4  0060  F363  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  4282  0016BA                     	if	0	;tblptru may be non-zero
  4283  0016BA                     	endif
  4284  0016BA                     	if	0	;tblptru may be non-zero
  4285  0016BA                     	endif
  4286  0016BA  0008               	tblrd		*
  4287  0016BC  50F5               	movf	tablat,w,c
  4288  0016BE  6F66               	movwf	tolower@c& (0+255),b
  4289  0016C0  6B67               	clrf	(tolower@c+1)& (0+255),b
  4290  0016C2  ECAC  F021         	call	_tolower	;wreg free
  4291  0016C6  0100               	movlb	0	; () banked
  4292  0016C8  5166               	movf	?_tolower& (0+255),w,b
  4293  0016CA  6FEF               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4294  0016CC                     l5357:
  4295                           
  4296                           ; BSR set to: 0
  4297                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 825:         if ((*fmt[0] == 'd') || (*fmt[0]
      +                           == 'i')) {
  4298  0016CC  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4299  0016D2  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4300  0016D8  006F FF7B FFF6     	movff	postinc2,tblptrl
  4301  0016DE  006F FF77 FFF7     	movff	postdec2,tblptrh
  4302  0016E4                     	if	0	;tblptru may be non-zero
  4303  0016E4                     	endif
  4304  0016E4                     	if	0	;tblptru may be non-zero
  4305  0016E4                     	endif
  4306  0016E4  0008               	tblrd		*
  4307  0016E6  50F5               	movf	tablat,w,c
  4308  0016E8  0A64               	xorlw	100
  4309  0016EA  B4D8               	btfsc	status,2,c
  4310  0016EC  D011               	goto	u6480
  4311                           
  4312                           ; BSR set to: 0
  4313  0016EE  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4314  0016F4  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4315  0016FA  006F FF7B FFF6     	movff	postinc2,tblptrl
  4316  001700  006F FF77 FFF7     	movff	postdec2,tblptrh
  4317  001706                     	if	0	;tblptru may be non-zero
  4318  001706                     	endif
  4319  001706                     	if	0	;tblptru may be non-zero
  4320  001706                     	endif
  4321  001706  0008               	tblrd		*
  4322  001708  50F5               	movf	tablat,w,c
  4323  00170A  0A69               	xorlw	105
  4324  00170C  A4D8               	btfss	status,2,c
  4325  00170E  D055               	goto	l5367
  4326  001710                     u6480:
  4327                           
  4328                           ; BSR set to: 0
  4329                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 827:             ++*fmt;
  4330  001710  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4331  001716  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4332  00171C  2ADE               	incf	postinc2,f,c
  4333  00171E  0E00               	movlw	0
  4334  001720  22DD               	addwfc	postdec2,f,c
  4335                           
  4336                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 828:             ll = (long long)(*(int *)__v
      +                          a_arg(*(int **)ap, (int)0));
  4337  001722  0060  F357  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  4338  001728  0060  F35B  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  4339  00172E  006F FF7C  F0D7    	movff	indf2,??_vfpfcnvrt
  4340  001734  0E02               	movlw	2
  4341  001736  26DE               	addwf	postinc2,f,c
  4342  001738  006F FF7C  F0D8    	movff	indf2,??_vfpfcnvrt+1
  4343  00173E  0E00               	movlw	0
  4344  001740  22DD               	addwfc	postdec2,f,c
  4345  001742  0060  F35F  FFD9   	movff	??_vfpfcnvrt,fsr2l
  4346  001748  0060  F363  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  4347  00174E  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@ll
  4348  001754  006F FF74  F0DC    	movff	postdec2,vfpfcnvrt@ll+1
  4349  00175A  0E00               	movlw	0
  4350  00175C  BFDC               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4351  00175E  0EFF               	movlw	-1
  4352  001760  6FDD               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4353  001762  6FDE               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4354  001764  6FDF               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4355  001766  6FE0               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4356  001768  6FE1               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4357  00176A  6FE2               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4358                           
  4359                           ; BSR set to: 0
  4360                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 830:             return dtoa(fp, ll);
  4361  00176C  0060  F344  F07B   	movff	vfpfcnvrt@fp,dtoa@fp
  4362  001772  0060  F348  F07C   	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4363  001778  0060  F36C  F07D   	movff	vfpfcnvrt@ll,dtoa@d
  4364  00177E  0060  F370  F07E   	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4365  001784  0060  F374  F07F   	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4366  00178A  0060  F378  F080   	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4367  001790  0060  F37C  F081   	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4368  001796  0060  F380  F082   	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4369  00179C  0060  F384  F083   	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4370  0017A2  0060  F388  F084   	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4371  0017A8  EC39  F012         	call	_dtoa	;wreg free
  4372  0017AC  0060  F1EC  F0D1   	movff	?_dtoa,?_vfpfcnvrt
  4373  0017B2  0060  F1F0  F0D2   	movff	?_dtoa+1,?_vfpfcnvrt+1
  4374  0017B8  0012               	return	
  4375  0017BA                     l5367:
  4376                           
  4377                           ; BSR set to: 0
  4378                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 920:         if (ct[0] == 'f') {
  4379  0017BA  0E66               	movlw	102
  4380  0017BC  19ED               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  4381  0017BE  A4D8               	btfss	status,2,c
  4382  0017C0  D059               	goto	l5379
  4383                           
  4384                           ; BSR set to: 0
  4385                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 922:             c = (*fmt)[0];
  4386  0017C2  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4387  0017C8  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4388  0017CE  006F FF7B FFF6     	movff	postinc2,tblptrl
  4389  0017D4  006F FF77 FFF7     	movff	postdec2,tblptrh
  4390  0017DA                     	if	0	;tblptru may be non-zero
  4391  0017DA                     	endif
  4392  0017DA                     	if	0	;tblptru may be non-zero
  4393  0017DA                     	endif
  4394  0017DA  0008               	tblrd		*
  4395  0017DC  006F FFD4  F0F0    	movff	tablat,vfpfcnvrt@c
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 923:             ++*fmt;
  4399  0017E2  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4400  0017E8  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4401  0017EE  2ADE               	incf	postinc2,f,c
  4402  0017F0  0E00               	movlw	0
  4403  0017F2  22DD               	addwfc	postdec2,f,c
  4404                           
  4405                           ; BSR set to: 0
  4406                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 924:             f = (long double)(*(double *
      +                          )__va_arg(*(double **)ap, (double)0));
  4407  0017F4  0060  F357  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  4408  0017FA  0060  F35B  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  4409  001800  006F FF7C  F0D7    	movff	indf2,??_vfpfcnvrt
  4410  001806  0E04               	movlw	4
  4411  001808  26DE               	addwf	postinc2,f,c
  4412  00180A  006F FF7C  F0D8    	movff	indf2,??_vfpfcnvrt+1
  4413  001810  0E00               	movlw	0
  4414  001812  22DD               	addwfc	postdec2,f,c
  4415  001814  0060  F35F  FFD9   	movff	??_vfpfcnvrt,fsr2l
  4416  00181A  0060  F363  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  4417  001820  006F FF78  F0E9    	movff	postinc2,vfpfcnvrt@f
  4418  001826  006F FF78  F0EA    	movff	postinc2,vfpfcnvrt@f+1
  4419  00182C  006F FF78  F0EB    	movff	postinc2,vfpfcnvrt@f+2
  4420  001832  006F FF78  F0EC    	movff	postinc2,vfpfcnvrt@f+3
  4421  001838                     l5375:
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 926:             return efgtoa(fp, f, c);
  4425  001838  0060  F344  F08D   	movff	vfpfcnvrt@fp,efgtoa@fp
  4426  00183E  0060  F348  F08E   	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4427  001844  0060  F3A4  F08F   	movff	vfpfcnvrt@f,efgtoa@f
  4428  00184A  0060  F3A8  F090   	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4429  001850  0060  F3AC  F091   	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4430  001856  0060  F3B0  F092   	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4431  00185C  0060  F3C0  F093   	movff	vfpfcnvrt@c,efgtoa@c
  4432  001862  EC56  F000         	call	_efgtoa	;wreg free
  4433  001866  0060  F234  F0D1   	movff	?_efgtoa,?_vfpfcnvrt
  4434  00186C  0060  F238  F0D2   	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4435  001872  0012               	return	
  4436  001874                     l5379:
  4437                           
  4438                           ; BSR set to: 0
  4439                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 928:         if (!strncmp(ct, "lf", ((sizeof(
      +                          "lf")/sizeof("lf"[0]))-1))) {
  4440  001874  0EED               	movlw	low vfpfcnvrt@ct
  4441  001876  6F60               	movwf	strncmp@_l& (0+255),b
  4442  001878  0E00               	movlw	high vfpfcnvrt@ct
  4443  00187A  6F61               	movwf	(strncmp@_l+1)& (0+255),b
  4444  00187C  0EFC               	movlw	low STR_44
  4445  00187E  6F62               	movwf	strncmp@_r& (0+255),b
  4446  001880  0E7F               	movlw	high STR_44
  4447  001882  6F63               	movwf	(strncmp@_r+1)& (0+255),b
  4448  001884  0E00               	movlw	0
  4449  001886  6F65               	movwf	(strncmp@n+1)& (0+255),b
  4450  001888  0E02               	movlw	2
  4451  00188A  6F64               	movwf	strncmp@n& (0+255),b
  4452  00188C  EC56  F01D         	call	_strncmp	;wreg free
  4453  001890  0100               	movlb	0	; () banked
  4454  001892  5160               	movf	?_strncmp& (0+255),w,b
  4455  001894  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  4456  001896  A4D8               	btfss	status,2,c
  4457  001898  D06C               	goto	l5395
  4458                           
  4459                           ; BSR set to: 0
  4460                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 931:             if ((0 ? isupper((int)(*fmt)
      +                          [0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  4461  00189A  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4462  0018A0  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4463  0018A6  006F FF78  F0D7    	movff	postinc2,??_vfpfcnvrt
  4464  0018AC  006F FF74  F0D8    	movff	postdec2,??_vfpfcnvrt+1
  4465  0018B2  0E01               	movlw	1
  4466  0018B4  27D7               	addwf	??_vfpfcnvrt& (0+255),f,b
  4467  0018B6  0E00               	movlw	0
  4468  0018B8  23D8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4469  0018BA  0060  F35F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  4470  0018C0  0060  F363  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  4471  0018C6                     	if	0	;tblptru may be non-zero
  4472  0018C6                     	endif
  4473  0018C6                     	if	0	;tblptru may be non-zero
  4474  0018C6                     	endif
  4475  0018C6  0008               	tblrd		*
  4476  0018C8  006F FFD4  F0F0    	movff	tablat,vfpfcnvrt@c
  4477  0018CE  0EBF               	movlw	191
  4478  0018D0  6FD7               	movwf	??_vfpfcnvrt& (0+255),b
  4479  0018D2  0EFF               	movlw	255
  4480  0018D4  6FD8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4481  0018D6  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4482  0018DC  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4483  0018E2  006F FF7B FFF6     	movff	postinc2,tblptrl
  4484  0018E8  006F FF77 FFF7     	movff	postdec2,tblptrh
  4485  0018EE                     	if	0	;tblptru may be non-zero
  4486  0018EE                     	endif
  4487  0018EE                     	if	0	;tblptru may be non-zero
  4488  0018EE                     	endif
  4489  0018EE  0008               	tblrd		*
  4490  0018F0  50F5               	movf	tablat,w,c
  4491  0018F2  6FD9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4492  0018F4  6BDA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4493  0018F6  51D7               	movf	??_vfpfcnvrt& (0+255),w,b
  4494  0018F8  27D9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4495  0018FA  51D8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4496  0018FC  23DA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4497  0018FE  51DA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4498  001900  E106               	bnz	u6510
  4499  001902  0E1A               	movlw	26
  4500  001904  5DD9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4501  001906  B0D8               	btfsc	status,0,c
  4502  001908  D002               	goto	u6510
  4503  00190A  0E01               	movlw	1
  4504  00190C  D001               	goto	u6520
  4505  00190E                     u6510:
  4506  00190E  0E00               	movlw	0
  4507  001910                     u6520:
  4508  001910  6FE7               	movwf	_vfpfcnvrt$1816& (0+255),b
  4509  001912  6BE8               	clrf	(_vfpfcnvrt$1816+1)& (0+255),b
  4510                           
  4511                           ; BSR set to: 0
  4512  001914  51E7               	movf	_vfpfcnvrt$1816& (0+255),w,b
  4513  001916  11E8               	iorwf	(_vfpfcnvrt$1816+1)& (0+255),w,b
  4514                           
  4515                           ; BSR set to: 0
  4516                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 934:                 f = (long double)(*(doub
      +                          le *)__va_arg(*(double **)ap, (double)0));
  4517                           
  4518                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 933:             } else {
  4519                           
  4520                           ; BSR set to: 0
  4521                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 932:                 f = (*(long double *)__v
      +                          a_arg(*(long double **)ap, (long double)0));
  4522  001918  0060  F357  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  4523  00191E  0060  F35B  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  4524  001924  006F FF7C  F0D7    	movff	indf2,??_vfpfcnvrt
  4525  00192A  0E04               	movlw	4
  4526  00192C  26DE               	addwf	postinc2,f,c
  4527  00192E  006F FF7C  F0D8    	movff	indf2,??_vfpfcnvrt+1
  4528  001934  0E00               	movlw	0
  4529  001936  22DD               	addwfc	postdec2,f,c
  4530  001938  0060  F35F  FFD9   	movff	??_vfpfcnvrt,fsr2l
  4531  00193E  0060  F363  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  4532  001944  006F FF78  F0E9    	movff	postinc2,vfpfcnvrt@f
  4533  00194A  006F FF78  F0EA    	movff	postinc2,vfpfcnvrt@f+1
  4534  001950  006F FF78  F0EB    	movff	postinc2,vfpfcnvrt@f+2
  4535  001956  006F FF78  F0EC    	movff	postinc2,vfpfcnvrt@f+3
  4536                           
  4537                           ; BSR set to: 0
  4538                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 936:             *fmt += ((sizeof("lf")/sizeo
      +                          f("lf"[0]))-1);
  4539                           
  4540                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 935:             }
  4541  00195C  0E02               	movlw	2
  4542  00195E  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4543  001964  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4544  00196A  26DE               	addwf	postinc2,f,c
  4545  00196C  0E00               	movlw	0
  4546  00196E  22DD               	addwfc	postdec2,f,c
  4547  001970  D763               	goto	l5375
  4548  001972                     l5395:
  4549                           
  4550                           ; BSR set to: 0
  4551                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1350:         if ((*fmt)[0] == '%') {
  4552  001972  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4553  001978  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4554  00197E  006F FF7B FFF6     	movff	postinc2,tblptrl
  4555  001984  006F FF77 FFF7     	movff	postdec2,tblptrh
  4556  00198A                     	if	0	;tblptru may be non-zero
  4557  00198A                     	endif
  4558  00198A                     	if	0	;tblptru may be non-zero
  4559  00198A                     	endif
  4560  00198A  0008               	tblrd		*
  4561  00198C  50F5               	movf	tablat,w,c
  4562  00198E  0A25               	xorlw	37
  4563  001990  A4D8               	btfss	status,2,c
  4564  001992  D01B               	goto	l5405
  4565                           
  4566                           ; BSR set to: 0
  4567                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1351:             ++*fmt;
  4568  001994  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4569  00199A  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4570  0019A0  2ADE               	incf	postinc2,f,c
  4571  0019A2  0E00               	movlw	0
  4572  0019A4  22DD               	addwfc	postdec2,f,c
  4573                           
  4574                           ; BSR set to: 0
  4575                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1352:             fputc((int)'%', fp);
  4576  0019A6  0E00               	movlw	0
  4577  0019A8  6F61               	movwf	(fputc@c+1)& (0+255),b
  4578  0019AA  0E25               	movlw	37
  4579  0019AC  6F60               	movwf	fputc@c& (0+255),b
  4580  0019AE  0060  F344  F062   	movff	vfpfcnvrt@fp,fputc@fp
  4581  0019B4  0060  F348  F063   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4582  0019BA  EC15  F01E         	call	_fputc	;wreg free
  4583  0019BE                     l5401:
  4584                           
  4585                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1353:             return 1;
  4586  0019BE  0E00               	movlw	0
  4587  0019C0  0100               	movlb	0	; () banked
  4588  0019C2  6FD2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4589  0019C4  0E01               	movlw	1
  4590  0019C6  6FD1               	movwf	?_vfpfcnvrt& (0+255),b
  4591  0019C8  0012               	return	
  4592  0019CA                     l5405:
  4593                           
  4594                           ; BSR set to: 0
  4595                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1357:         ++*fmt;
  4596  0019CA  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4597  0019D0  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4598  0019D6  2ADE               	incf	postinc2,f,c
  4599  0019D8  0E00               	movlw	0
  4600  0019DA  22DD               	addwfc	postdec2,f,c
  4601                           
  4602                           ; BSR set to: 0
  4603                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1358:         return 0;
  4604  0019DC  0E00               	movlw	0
  4605  0019DE  6FD2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4606  0019E0  0E00               	movlw	0
  4607  0019E2  6FD1               	movwf	?_vfpfcnvrt& (0+255),b
  4608  0019E4  0012               	return	
  4609  0019E6                     l5411:
  4610                           
  4611                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1362:     fputc((int)(*fmt)[0], fp);
  4612  0019E6  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4613  0019EC  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4614  0019F2  006F FF7B FFF6     	movff	postinc2,tblptrl
  4615  0019F8  006F FF77 FFF7     	movff	postdec2,tblptrh
  4616  0019FE                     	if	0	;tblptru may be non-zero
  4617  0019FE                     	endif
  4618  0019FE                     	if	0	;tblptru may be non-zero
  4619  0019FE                     	endif
  4620  0019FE  0008               	tblrd		*
  4621  001A00  50F5               	movf	tablat,w,c
  4622  001A02  0100               	movlb	0	; () banked
  4623  001A04  6F60               	movwf	fputc@c& (0+255),b
  4624  001A06  6B61               	clrf	(fputc@c+1)& (0+255),b
  4625  001A08  0060  F344  F062   	movff	vfpfcnvrt@fp,fputc@fp
  4626  001A0E  0060  F348  F063   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4627  001A14  EC15  F01E         	call	_fputc	;wreg free
  4628                           
  4629                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  4630  001A18  0060  F34F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4631  001A1E  0060  F353  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4632  001A24  2ADE               	incf	postinc2,f,c
  4633  001A26  0E00               	movlw	0
  4634  001A28  22DD               	addwfc	postdec2,f,c
  4635  001A2A  D7C9               	goto	l5401
  4636  001A2C                     __end_of_vfpfcnvrt:
  4637                           	opt callstack 0
  4638                           
  4639 ;; *************** function _strncmp *****************
  4640 ;; Defined at:
  4641 ;;		line 3 in file "D:\MPLAB\pic\sources\c99\common\strncmp.c"
  4642 ;; Parameters:    Size  Location     Type
  4643 ;;  _l              2    0[BANK0 ] PTR const unsigned char 
  4644 ;;		 -> vfpfcnvrt@ct(3), 
  4645 ;;  _r              2    2[BANK0 ] PTR const unsigned char 
  4646 ;;		 -> STR_46(3), 
  4647 ;;  n               2    4[BANK0 ] unsigned int 
  4648 ;; Auto vars:     Size  Location     Type
  4649 ;;  r               2    9[BANK0 ] PTR const unsigned char 
  4650 ;;		 -> STR_46(3), 
  4651 ;;  l               2    7[BANK0 ] PTR const unsigned char 
  4652 ;;		 -> vfpfcnvrt@ct(3), 
  4653 ;; Return value:  Size  Location     Type
  4654 ;;                  2    0[BANK0 ] int 
  4655 ;; Registers used:
  4656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4662 ;;      Params:         0       6       0       0       0       0       0       0       0
  4663 ;;      Locals:         0       4       0       0       0       0       0       0       0
  4664 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4665 ;;      Totals:         0      11       0       0       0       0       0       0       0
  4666 ;;Total ram usage:       11 bytes
  4667 ;; Hardware stack levels used:    1
  4668 ;; Hardware stack levels required when called:    3
  4669 ;; This function calls:
  4670 ;;		Nothing
  4671 ;; This function is called by:
  4672 ;;		_vfpfcnvrt
  4673 ;; This function uses a non-reentrant model
  4674 ;;
  4675                           
  4676                           	psect	text4
  4677  003AAC                     __ptext4:
  4678                           	opt callstack 0
  4679  003AAC                     _strncmp:
  4680                           	opt callstack 24
  4681                           
  4682                           ;incstack = 0
  4683  003AAC  0060  F180  F067   	movff	strncmp@_l,strncmp@l
  4684  003AB2  0060  F184  F068   	movff	strncmp@_l+1,strncmp@l+1
  4685  003AB8  0060  F188  F069   	movff	strncmp@_r,strncmp@r
  4686  003ABE  0060  F18C  F06A   	movff	strncmp@_r+1,strncmp@r+1
  4687  003AC4  0100               	movlb	0	; () banked
  4688  003AC6  0764               	decf	strncmp@n& (0+255),f,b
  4689  003AC8  A0D8               	btfss	status,0,c
  4690  003ACA  0765               	decf	(strncmp@n+1)& (0+255),f,b
  4691  003ACC  2964               	incf	strncmp@n& (0+255),w,b
  4692  003ACE  E10F               	bnz	l5259
  4693  003AD0  2965               	incf	(strncmp@n+1)& (0+255),w,b
  4694  003AD2  A4D8               	btfss	status,2,c
  4695  003AD4  D00C               	goto	l5259
  4696                           
  4697                           ; BSR set to: 0
  4698  003AD6  0E00               	movlw	0
  4699  003AD8  6F61               	movwf	(?_strncmp+1)& (0+255),b
  4700  003ADA  0E00               	movlw	0
  4701  003ADC  6F60               	movwf	?_strncmp& (0+255),b
  4702  003ADE  0012               	return	
  4703  003AE0                     l5257:
  4704                           
  4705                           ; BSR set to: 0
  4706  003AE0  4B67               	infsnz	strncmp@l& (0+255),f,b
  4707  003AE2  2B68               	incf	(strncmp@l+1)& (0+255),f,b
  4708  003AE4  4B69               	infsnz	strncmp@r& (0+255),f,b
  4709  003AE6  2B6A               	incf	(strncmp@r+1)& (0+255),f,b
  4710  003AE8  0764               	decf	strncmp@n& (0+255),f,b
  4711  003AEA  A0D8               	btfss	status,0,c
  4712  003AEC  0765               	decf	(strncmp@n+1)& (0+255),f,b
  4713  003AEE                     l5259:
  4714                           
  4715                           ; BSR set to: 0
  4716  003AEE  0060  F19F  FFD9   	movff	strncmp@l,fsr2l
  4717  003AF4  0060  F1A3  FFDA   	movff	strncmp@l+1,fsr2h
  4718  003AFA  50DF               	movf	indf2,w,c
  4719  003AFC  B4D8               	btfsc	status,2,c
  4720  003AFE  D022               	goto	u6330
  4721                           
  4722                           ; BSR set to: 0
  4723  003B00  0060  F1A7  FFF6   	movff	strncmp@r,tblptrl
  4724  003B06  0060  F1AB  FFF7   	movff	strncmp@r+1,tblptrh
  4725  003B0C                     	if	0	;tblptru may be non-zero
  4726  003B0C                     	endif
  4727  003B0C                     	if	0	;tblptru may be non-zero
  4728  003B0C                     	endif
  4729  003B0C  0008               	tblrd		*
  4730  003B0E  50F5               	movf	tablat,w,c
  4731  003B10  0900               	iorlw	0
  4732  003B12  B4D8               	btfsc	status,2,c
  4733  003B14  D017               	goto	u6330
  4734                           
  4735                           ; BSR set to: 0
  4736  003B16  5164               	movf	strncmp@n& (0+255),w,b
  4737  003B18  1165               	iorwf	(strncmp@n+1)& (0+255),w,b
  4738  003B1A  B4D8               	btfsc	status,2,c
  4739  003B1C  D013               	goto	u6330
  4740                           
  4741                           ; BSR set to: 0
  4742  003B1E  0060  F19F  FFD9   	movff	strncmp@l,fsr2l
  4743  003B24  0060  F1A3  FFDA   	movff	strncmp@l+1,fsr2h
  4744  003B2A  50DF               	movf	indf2,w,c
  4745  003B2C  6F66               	movwf	??_strncmp& (0+255),b
  4746  003B2E  0060  F1A7  FFF6   	movff	strncmp@r,tblptrl
  4747  003B34  0060  F1AB  FFF7   	movff	strncmp@r+1,tblptrh
  4748  003B3A                     	if	0	;tblptru may be non-zero
  4749  003B3A                     	endif
  4750  003B3A                     	if	0	;tblptru may be non-zero
  4751  003B3A                     	endif
  4752  003B3A  0008               	tblrd		*
  4753  003B3C  50F5               	movf	tablat,w,c
  4754  003B3E  1966               	xorwf	??_strncmp& (0+255),w,b
  4755  003B40  B4D8               	btfsc	status,2,c
  4756  003B42  D7CE               	goto	l5257
  4757  003B44                     u6330:
  4758                           
  4759                           ; BSR set to: 0
  4760  003B44  0060  F19F  FFD9   	movff	strncmp@l,fsr2l
  4761  003B4A  0060  F1A3  FFDA   	movff	strncmp@l+1,fsr2h
  4762  003B50  50DF               	movf	indf2,w,c
  4763  003B52  6F66               	movwf	??_strncmp& (0+255),b
  4764  003B54  0060  F1A7  FFF6   	movff	strncmp@r,tblptrl
  4765  003B5A  0060  F1AB  FFF7   	movff	strncmp@r+1,tblptrh
  4766  003B60                     	if	0	;tblptru may be non-zero
  4767  003B60                     	endif
  4768  003B60                     	if	0	;tblptru may be non-zero
  4769  003B60                     	endif
  4770  003B60  0008               	tblrd		*
  4771  003B62  50F5               	movf	tablat,w,c
  4772  003B64  5D66               	subwf	??_strncmp& (0+255),w,b
  4773  003B66  6F60               	movwf	?_strncmp& (0+255),b
  4774  003B68  6B61               	clrf	(?_strncmp+1)& (0+255),b
  4775  003B6A  A0D8               	btfss	status,0,c
  4776  003B6C  0761               	decf	(?_strncmp+1)& (0+255),f,b
  4777                           
  4778                           ; BSR set to: 0
  4779  003B6E  0012               	return		;funcret
  4780  003B70                     __end_of_strncmp:
  4781                           	opt callstack 0
  4782                           
  4783 ;; *************** function _efgtoa *****************
  4784 ;; Defined at:
  4785 ;;		line 319 in file "D:\MPLAB\pic\sources\c99\common\doprnt.c"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;  fp              2   45[BANK0 ] PTR struct _IO_FILE
  4788 ;;		 -> sprintf@f(6), 
  4789 ;;  f               4   47[BANK0 ] PTR struct _IO_FILE
  4790 ;;  c               1   51[BANK0 ] unsigned char 
  4791 ;; Auto vars:     Size  Location     Type
  4792 ;;  u               4  109[BANK0 ] unsigned char 
  4793 ;;  g               4  101[BANK0 ] unsigned char 
  4794 ;;  l               4   95[BANK0 ] unsigned char 
  4795 ;;  h               4   91[BANK0 ] unsigned char 
  4796 ;;  ou              4   57[BANK0 ] unsigned char 
  4797 ;;  n               2  107[BANK0 ] int 
  4798 ;;  e               2  105[BANK0 ] int 
  4799 ;;  i               2   99[BANK0 ] int 
  4800 ;;  w               2   88[BANK0 ] int 
  4801 ;;  p               2   85[BANK0 ] int 
  4802 ;;  sign            2   83[BANK0 ] int 
  4803 ;;  d               2   81[BANK0 ] int 
  4804 ;;  ne              2   79[BANK0 ] int 
  4805 ;;  m               2   77[BANK0 ] int 
  4806 ;;  pp              2   75[BANK0 ] int 
  4807 ;;  t               2   73[BANK0 ] int 
  4808 ;;  mode            1   90[BANK0 ] unsigned char 
  4809 ;;  nmode           1   87[BANK0 ] unsigned char 
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  2   45[BANK0 ] int 
  4812 ;; Registers used:
  4813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4814 ;; Tracked objects:
  4815 ;;		On entry : 0/0
  4816 ;;		On exit  : 0/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4819 ;;      Params:         0       7       0       0       0       0       0       0       0
  4820 ;;      Locals:         0      56       0       0       0       0       0       0       0
  4821 ;;      Temps:          0       5       0       0       0       0       0       0       0
  4822 ;;      Totals:         0      68       0       0       0       0       0       0       0
  4823 ;;Total ram usage:       68 bytes
  4824 ;; Hardware stack levels used:    1
  4825 ;; Hardware stack levels required when called:    7
  4826 ;; This function calls:
  4827 ;;		___awdiv
  4828 ;;		___awmod
  4829 ;;		___fladd
  4830 ;;		___fldiv
  4831 ;;		___fleq
  4832 ;;		___flge
  4833 ;;		___flmul
  4834 ;;		___flneg
  4835 ;;		___flsub
  4836 ;;		___fltol
  4837 ;;		___fpclassifyf
  4838 ;;		_floorf
  4839 ;;		_isupper
  4840 ;;		_pad
  4841 ;;		_strcpy
  4842 ;;		_tolower
  4843 ;; This function is called by:
  4844 ;;		_vfpfcnvrt
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848                           	psect	text5
  4849  0000AC                     __ptext5:
  4850                           	opt callstack 0
  4851  0000AC                     _efgtoa:
  4852                           	opt callstack 20
  4853                           
  4854                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 319: static int efgtoa(FILE *fp, long double 
      +                          f, char c);D:\MPLAB\pic\sources\c99\common\doprnt.c: 320: {;D:\MPLAB\pic\sources\c99\com
      +                          mon\doprnt.c: 321:     char mode, nmode;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 322: 
      +                              int d, e, i, m, n, ne, p, pp, sign, t, w;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 
      +                          323:     long double g, h, l, ou, u;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 326:     
      +                          sign = 0;
  4855                           
  4856                           ; BSR set to: 0
  4857                           ;incstack = 0
  4858  0000AC  0E00               	movlw	0
  4859  0000AE  0100               	movlb	0	; () banked
  4860  0000B0  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  4861  0000B2  0E00               	movlw	0
  4862  0000B4  6FB3               	movwf	efgtoa@sign& (0+255),b
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 327:     g = f;
  4866  0000B6  0060  F23C  F0C5   	movff	efgtoa@f,efgtoa@g
  4867  0000BC  0060  F240  F0C6   	movff	efgtoa@f+1,efgtoa@g+1
  4868  0000C2  0060  F244  F0C7   	movff	efgtoa@f+2,efgtoa@g+2
  4869  0000C8  0060  F248  F0C8   	movff	efgtoa@f+3,efgtoa@g+3
  4870                           
  4871                           ; BSR set to: 0
  4872                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 328:     if (g < 0.0) {
  4873  0000CE  AFC8               	btfss	(efgtoa@g+3)& (0+255),7,b
  4874  0000D0  D01E               	goto	l4921
  4875                           
  4876                           ; BSR set to: 0
  4877                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 329:         sign = 1;
  4878  0000D2  0E00               	movlw	0
  4879  0000D4  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  4880  0000D6  0E01               	movlw	1
  4881  0000D8  6FB3               	movwf	efgtoa@sign& (0+255),b
  4882                           
  4883                           ; BSR set to: 0
  4884                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 330:         g = -g;
  4885  0000DA  0060  F314  F060   	movff	efgtoa@g,___flneg@f1
  4886  0000E0  0060  F318  F061   	movff	efgtoa@g+1,___flneg@f1+1
  4887  0000E6  0060  F31C  F062   	movff	efgtoa@g+2,___flneg@f1+2
  4888  0000EC  0060  F320  F063   	movff	efgtoa@g+3,___flneg@f1+3
  4889  0000F2  EC7F  F022         	call	___flneg	;wreg free
  4890  0000F6  0060  F180  F0C5   	movff	?___flneg,efgtoa@g
  4891  0000FC  0060  F184  F0C6   	movff	?___flneg+1,efgtoa@g+1
  4892  000102  0060  F188  F0C7   	movff	?___flneg+2,efgtoa@g+2
  4893  000108  0060  F18C  F0C8   	movff	?___flneg+3,efgtoa@g+3
  4894  00010E                     l4921:
  4895                           
  4896                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  4897  00010E  0E00               	movlw	0
  4898  000110  0100               	movlb	0	; () banked
  4899  000112  6FCC               	movwf	(efgtoa@n+1)& (0+255),b
  4900  000114  0E00               	movlw	0
  4901  000116  6FCB               	movwf	efgtoa@n& (0+255),b
  4902                           
  4903                           ; BSR set to: 0
  4904                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 335:     w = width;
  4905  000118  0060  F134  F0B8   	movff	_width,efgtoa@w
  4906  00011E  0060  F138  F0B9   	movff	_width+1,efgtoa@w+1
  4907                           
  4908                           ; BSR set to: 0
  4909                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 336:     if (sign || (flags & (1 << 2))) {
  4910  000124  51B3               	movf	efgtoa@sign& (0+255),w,b
  4911  000126  11B4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4912  000128  A4D8               	btfss	status,2,c
  4913  00012A  D002               	goto	u5720
  4914                           
  4915                           ; BSR set to: 0
  4916  00012C  A5FD               	btfss	_flags& (0+255),2,b
  4917  00012E  D014               	goto	l4941
  4918  000130                     u5720:
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 337:         dbuf[n] = sign ? '-' : '+';
  4922  000130  51B3               	movf	efgtoa@sign& (0+255),w,b
  4923  000132  11B4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4924  000134  A4D8               	btfss	status,2,c
  4925  000136  D004               	goto	l4933
  4926                           
  4927                           ; BSR set to: 0
  4928  000138  0E00               	movlw	0
  4929  00013A  6F9E               	movwf	(_efgtoa$1785+1)& (0+255),b
  4930  00013C  0E2B               	movlw	43
  4931  00013E  D003               	goto	L6
  4932  000140                     l4933:
  4933                           
  4934                           ; BSR set to: 0
  4935  000140  0E00               	movlw	0
  4936  000142  6F9E               	movwf	(_efgtoa$1785+1)& (0+255),b
  4937  000144  0E2D               	movlw	45
  4938  000146                     L6:
  4939  000146  6F9D               	movwf	_efgtoa$1785& (0+255),b
  4940                           
  4941                           ; BSR set to: 0
  4942  000148  0060  F274  F113   	movff	_efgtoa$1785,_dbuf
  4943                           
  4944                           ; BSR set to: 0
  4945                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 338:         ++n;
  4946  00014E  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  4947  000150  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  4948                           
  4949                           ; BSR set to: 0
  4950                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 339:         --w;
  4951  000152  07B8               	decf	efgtoa@w& (0+255),f,b
  4952  000154  A0D8               	btfss	status,0,c
  4953  000156  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  4954  000158                     l4941:
  4955                           
  4956                           ; BSR set to: 0
  4957                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 344:         if ((0 ? isupper((int)c) : ((uns
      +                          igned)((int)c)-'A') < 26)) {
  4958  000158  0060  F314  F060   	movff	efgtoa@g,___fpclassifyf@x
  4959  00015E  0060  F318  F061   	movff	efgtoa@g+1,___fpclassifyf@x+1
  4960  000164  0060  F31C  F062   	movff	efgtoa@g+2,___fpclassifyf@x+2
  4961  00016A  0060  F320  F063   	movff	efgtoa@g+3,___fpclassifyf@x+3
  4962  000170  EC43  F01B         	call	___fpclassifyf	;wreg free
  4963  000174  0100               	movlb	0	; () banked
  4964  000176  0560               	decf	?___fpclassifyf& (0+255),w,b
  4965  000178  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  4966  00017A  A4D8               	btfss	status,2,c
  4967  00017C  D052               	goto	l4959
  4968                           
  4969                           ; BSR set to: 0
  4970  00017E  0EBF               	movlw	191
  4971  000180  6F94               	movwf	??_efgtoa& (0+255),b
  4972  000182  0EFF               	movlw	255
  4973  000184  6F95               	movwf	(??_efgtoa+1)& (0+255),b
  4974  000186  5193               	movf	efgtoa@c& (0+255),w,b
  4975  000188  6F96               	movwf	(??_efgtoa+2)& (0+255),b
  4976  00018A  6B97               	clrf	(??_efgtoa+3)& (0+255),b
  4977  00018C  5194               	movf	??_efgtoa& (0+255),w,b
  4978  00018E  2796               	addwf	(??_efgtoa+2)& (0+255),f,b
  4979  000190  5195               	movf	(??_efgtoa+1)& (0+255),w,b
  4980  000192  2397               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4981  000194  5197               	movf	(??_efgtoa+3)& (0+255),w,b
  4982  000196  E106               	bnz	u5750
  4983  000198  0E1A               	movlw	26
  4984  00019A  5D96               	subwf	(??_efgtoa+2)& (0+255),w,b
  4985  00019C  B0D8               	btfsc	status,0,c
  4986  00019E  D002               	goto	u5750
  4987  0001A0  0E01               	movlw	1
  4988  0001A2  D001               	goto	u5760
  4989  0001A4                     u5750:
  4990  0001A4  0E00               	movlw	0
  4991  0001A6                     u5760:
  4992  0001A6  6F9F               	movwf	_efgtoa$1786& (0+255),b
  4993  0001A8  6BA0               	clrf	(_efgtoa$1786+1)& (0+255),b
  4994                           
  4995                           ; BSR set to: 0
  4996  0001AA  519F               	movf	_efgtoa$1786& (0+255),w,b
  4997  0001AC  11A0               	iorwf	(_efgtoa$1786+1)& (0+255),w,b
  4998  0001AE  B4D8               	btfsc	status,2,c
  4999  0001B0  D00D               	goto	l4951
  5000                           
  5001                           ; BSR set to: 0
  5002                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 345:             strcpy(&dbuf[n], "INF");
  5003  0001B2  0E13               	movlw	low _dbuf
  5004  0001B4  25CB               	addwf	efgtoa@n& (0+255),w,b
  5005  0001B6  6F60               	movwf	strcpy@dest& (0+255),b
  5006  0001B8  0E01               	movlw	high _dbuf
  5007  0001BA  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5008  0001BC  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  5009  0001BE  0EE8               	movlw	low STR_36
  5010  0001C0  6F62               	movwf	strcpy@src& (0+255),b
  5011  0001C2  0E7F               	movlw	high STR_36
  5012  0001C4  6F63               	movwf	(strcpy@src+1)& (0+255),b
  5013  0001C6  EC1A  F021         	call	_strcpy	;wreg free
  5014                           
  5015                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 346:         } else {
  5016  0001CA  D00C               	goto	l4953
  5017  0001CC                     l4951:
  5018                           
  5019                           ; BSR set to: 0
  5020                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 347:             strcpy(&dbuf[n], "inf");
  5021  0001CC  0E13               	movlw	low _dbuf
  5022  0001CE  25CB               	addwf	efgtoa@n& (0+255),w,b
  5023  0001D0  6F60               	movwf	strcpy@dest& (0+255),b
  5024  0001D2  0E01               	movlw	high _dbuf
  5025  0001D4  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5026  0001D6  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  5027  0001D8  0EF0               	movlw	low STR_37
  5028  0001DA  6F62               	movwf	strcpy@src& (0+255),b
  5029  0001DC  0E7F               	movlw	high STR_37
  5030  0001DE  6F63               	movwf	(strcpy@src+1)& (0+255),b
  5031  0001E0  EC1A  F021         	call	_strcpy	;wreg free
  5032  0001E4                     l4953:
  5033                           
  5034                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 349:         w -= ((sizeof("inf")/sizeof("inf
      +                          "[0]))-1);
  5035  0001E4  0100               	movlb	0	; () banked
  5036  0001E6  0EFD               	movlw	253
  5037  0001E8  27B8               	addwf	efgtoa@w& (0+255),f,b
  5038  0001EA  0EFF               	movlw	255
  5039  0001EC  23B9               	addwfc	(efgtoa@w+1)& (0+255),f,b
  5040  0001EE                     l4955:
  5041                           
  5042                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 350:         return pad(fp, &dbuf[0], w);
  5043  0001EE  0060  F234  F070   	movff	efgtoa@fp,pad@fp
  5044  0001F4  0060  F238  F071   	movff	efgtoa@fp+1,pad@fp+1
  5045  0001FA  0E13               	movlw	low _dbuf
  5046  0001FC  0100               	movlb	0	; () banked
  5047  0001FE  6F72               	movwf	pad@buf& (0+255),b
  5048  000200  0E01               	movlw	high _dbuf
  5049  000202  6F73               	movwf	(pad@buf+1)& (0+255),b
  5050  000204  0060  F2E0  F074   	movff	efgtoa@w,pad@p
  5051  00020A  0060  F2E4  F075   	movff	efgtoa@w+1,pad@p+1
  5052  000210  ECB8  F01D         	call	_pad	;wreg free
  5053  000214  0060  F1C0  F08D   	movff	?_pad,?_efgtoa
  5054  00021A  0060  F1C4  F08E   	movff	?_pad+1,?_efgtoa+1
  5055  000220  0012               	return	
  5056  000222                     l4959:
  5057                           
  5058                           ; BSR set to: 0
  5059                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 353:         if ((0 ? isupper((int)c) : ((uns
      +                          igned)((int)c)-'A') < 26)) {
  5060  000222  0060  F314  F060   	movff	efgtoa@g,___fpclassifyf@x
  5061  000228  0060  F318  F061   	movff	efgtoa@g+1,___fpclassifyf@x+1
  5062  00022E  0060  F31C  F062   	movff	efgtoa@g+2,___fpclassifyf@x+2
  5063  000234  0060  F320  F063   	movff	efgtoa@g+3,___fpclassifyf@x+3
  5064  00023A  EC43  F01B         	call	___fpclassifyf	;wreg free
  5065  00023E  0100               	movlb	0	; () banked
  5066  000240  5160               	movf	?___fpclassifyf& (0+255),w,b
  5067  000242  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  5068  000244  A4D8               	btfss	status,2,c
  5069  000246  D034               	goto	l4977
  5070                           
  5071                           ; BSR set to: 0
  5072  000248  0EBF               	movlw	191
  5073  00024A  6F94               	movwf	??_efgtoa& (0+255),b
  5074  00024C  0EFF               	movlw	255
  5075  00024E  6F95               	movwf	(??_efgtoa+1)& (0+255),b
  5076  000250  5193               	movf	efgtoa@c& (0+255),w,b
  5077  000252  6F96               	movwf	(??_efgtoa+2)& (0+255),b
  5078  000254  6B97               	clrf	(??_efgtoa+3)& (0+255),b
  5079  000256  5194               	movf	??_efgtoa& (0+255),w,b
  5080  000258  2796               	addwf	(??_efgtoa+2)& (0+255),f,b
  5081  00025A  5195               	movf	(??_efgtoa+1)& (0+255),w,b
  5082  00025C  2397               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5083  00025E  5197               	movf	(??_efgtoa+3)& (0+255),w,b
  5084  000260  E106               	bnz	u5790
  5085  000262  0E1A               	movlw	26
  5086  000264  5D96               	subwf	(??_efgtoa+2)& (0+255),w,b
  5087  000266  B0D8               	btfsc	status,0,c
  5088  000268  D002               	goto	u5790
  5089  00026A  0E01               	movlw	1
  5090  00026C  D001               	goto	u5800
  5091  00026E                     u5790:
  5092  00026E  0E00               	movlw	0
  5093  000270                     u5800:
  5094  000270  6FA1               	movwf	_efgtoa$1790& (0+255),b
  5095  000272  6BA2               	clrf	(_efgtoa$1790+1)& (0+255),b
  5096                           
  5097                           ; BSR set to: 0
  5098  000274  51A1               	movf	_efgtoa$1790& (0+255),w,b
  5099  000276  11A2               	iorwf	(_efgtoa$1790+1)& (0+255),w,b
  5100  000278  B4D8               	btfsc	status,2,c
  5101  00027A  D00D               	goto	l4969
  5102                           
  5103                           ; BSR set to: 0
  5104                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 354:             strcpy(&dbuf[n], "NAN");
  5105  00027C  0E13               	movlw	low _dbuf
  5106  00027E  25CB               	addwf	efgtoa@n& (0+255),w,b
  5107  000280  6F60               	movwf	strcpy@dest& (0+255),b
  5108  000282  0E01               	movlw	high _dbuf
  5109  000284  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5110  000286  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  5111  000288  0EEC               	movlw	low STR_40
  5112  00028A  6F62               	movwf	strcpy@src& (0+255),b
  5113  00028C  0E7F               	movlw	high STR_40
  5114  00028E  6F63               	movwf	(strcpy@src+1)& (0+255),b
  5115  000290  EC1A  F021         	call	_strcpy	;wreg free
  5116                           
  5117                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 355:         } else {
  5118  000294  D7A7               	goto	l4953
  5119  000296                     l4969:
  5120                           
  5121                           ; BSR set to: 0
  5122                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 356:             strcpy(&dbuf[n], "nan");
  5123  000296  0E13               	movlw	low _dbuf
  5124  000298  25CB               	addwf	efgtoa@n& (0+255),w,b
  5125  00029A  6F60               	movwf	strcpy@dest& (0+255),b
  5126  00029C  0E01               	movlw	high _dbuf
  5127  00029E  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5128  0002A0  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  5129  0002A2  0EF4               	movlw	low STR_41
  5130  0002A4  6F62               	movwf	strcpy@src& (0+255),b
  5131  0002A6  0E7F               	movlw	high STR_41
  5132  0002A8  6F63               	movwf	(strcpy@src+1)& (0+255),b
  5133  0002AA  EC1A  F021         	call	_strcpy	;wreg free
  5134  0002AE  D79A               	goto	l4953
  5135  0002B0                     l4977:
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  5139  0002B0  0E00               	movlw	0
  5140  0002B2  6FCD               	movwf	efgtoa@u& (0+255),b
  5141  0002B4  0E00               	movlw	0
  5142  0002B6  6FCE               	movwf	(efgtoa@u+1)& (0+255),b
  5143  0002B8  0E80               	movlw	128
  5144  0002BA  6FCF               	movwf	(efgtoa@u+2)& (0+255),b
  5145  0002BC  0E3F               	movlw	63
  5146  0002BE  6FD0               	movwf	(efgtoa@u+3)& (0+255),b
  5147                           
  5148                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  5149  0002C0  0E00               	movlw	0
  5150  0002C2  6FCA               	movwf	(efgtoa@e+1)& (0+255),b
  5151  0002C4  0E00               	movlw	0
  5152  0002C6  6FC9               	movwf	efgtoa@e& (0+255),b
  5153                           
  5154                           ; BSR set to: 0
  5155                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 365:     if (!(g == 0.0)) {
  5156  0002C8  0060  F314  F060   	movff	efgtoa@g,___fleq@ff1
  5157  0002CE  0060  F318  F061   	movff	efgtoa@g+1,___fleq@ff1+1
  5158  0002D4  0060  F31C  F062   	movff	efgtoa@g+2,___fleq@ff1+2
  5159  0002DA  0060  F320  F063   	movff	efgtoa@g+3,___fleq@ff1+3
  5160  0002E0  0E00               	movlw	0
  5161  0002E2  6F64               	movwf	___fleq@ff2& (0+255),b
  5162  0002E4  0E00               	movlw	0
  5163  0002E6  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  5164  0002E8  0E00               	movlw	0
  5165  0002EA  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  5166  0002EC  0E00               	movlw	0
  5167  0002EE  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  5168  0002F0  ECA6  F01F         	call	___fleq	;wreg free
  5169  0002F4  0100               	movlb	0	; () banked
  5170  0002F6  A0D8               	btfss	status,0,c
  5171  0002F8  D026               	goto	l4987
  5172  0002FA  D09C               	goto	u5840
  5173  0002FC                     l4983:
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 367:             u = u*10.0;
  5177  0002FC  0060  F334  F060   	movff	efgtoa@u,___flmul@b
  5178  000302  0060  F338  F061   	movff	efgtoa@u+1,___flmul@b+1
  5179  000308  0060  F33C  F062   	movff	efgtoa@u+2,___flmul@b+2
  5180  00030E  0060  F340  F063   	movff	efgtoa@u+3,___flmul@b+3
  5181  000314  0E00               	movlw	0
  5182  000316  6F64               	movwf	___flmul@a& (0+255),b
  5183  000318  0E00               	movlw	0
  5184  00031A  6F65               	movwf	(___flmul@a+1)& (0+255),b
  5185  00031C  0E20               	movlw	32
  5186  00031E  6F66               	movwf	(___flmul@a+2)& (0+255),b
  5187  000320  0E41               	movlw	65
  5188  000322  6F67               	movwf	(___flmul@a+3)& (0+255),b
  5189  000324  EC16  F00D         	call	___flmul	;wreg free
  5190  000328  0060  F180  F0CD   	movff	?___flmul,efgtoa@u
  5191  00032E  0060  F184  F0CE   	movff	?___flmul+1,efgtoa@u+1
  5192  000334  0060  F188  F0CF   	movff	?___flmul+2,efgtoa@u+2
  5193  00033A  0060  F18C  F0D0   	movff	?___flmul+3,efgtoa@u+3
  5194                           
  5195                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 368:             ++e;
  5196  000340  0100               	movlb	0	; () banked
  5197  000342  4BC9               	infsnz	efgtoa@e& (0+255),f,b
  5198  000344  2BCA               	incf	(efgtoa@e+1)& (0+255),f,b
  5199  000346                     l4987:
  5200                           
  5201                           ; BSR set to: 0
  5202                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 366:         while (!(g < (u*10.0))) {
  5203  000346  0060  F314  F079   	movff	efgtoa@g,___flge@ff1
  5204  00034C  0060  F318  F07A   	movff	efgtoa@g+1,___flge@ff1+1
  5205  000352  0060  F31C  F07B   	movff	efgtoa@g+2,___flge@ff1+2
  5206  000358  0060  F320  F07C   	movff	efgtoa@g+3,___flge@ff1+3
  5207  00035E  0E00               	movlw	0
  5208  000360  6F64               	movwf	___flmul@a& (0+255),b
  5209  000362  0E00               	movlw	0
  5210  000364  6F65               	movwf	(___flmul@a+1)& (0+255),b
  5211  000366  0E20               	movlw	32
  5212  000368  6F66               	movwf	(___flmul@a+2)& (0+255),b
  5213  00036A  0E41               	movlw	65
  5214  00036C  6F67               	movwf	(___flmul@a+3)& (0+255),b
  5215  00036E  0060  F334  F060   	movff	efgtoa@u,___flmul@b
  5216  000374  0060  F338  F061   	movff	efgtoa@u+1,___flmul@b+1
  5217  00037A  0060  F33C  F062   	movff	efgtoa@u+2,___flmul@b+2
  5218  000380  0060  F340  F063   	movff	efgtoa@u+3,___flmul@b+3
  5219  000386  EC16  F00D         	call	___flmul	;wreg free
  5220  00038A  0060  F180  F07D   	movff	?___flmul,___flge@ff2
  5221  000390  0060  F184  F07E   	movff	?___flmul+1,___flge@ff2+1
  5222  000396  0060  F188  F07F   	movff	?___flmul+2,___flge@ff2+2
  5223  00039C  0060  F18C  F080   	movff	?___flmul+3,___flge@ff2+3
  5224  0003A2  EC25  F01C         	call	___flge	;wreg free
  5225  0003A6  0100               	movlb	0	; () banked
  5226  0003A8  A0D8               	btfss	status,0,c
  5227  0003AA  D027               	goto	l4993
  5228  0003AC  D7A7               	goto	l4983
  5229  0003AE                     l4989:
  5230                           
  5231                           ; BSR set to: 0
  5232                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 371:             u = u/10.0;
  5233  0003AE  0060  F334  F060   	movff	efgtoa@u,___fldiv@b
  5234  0003B4  0060  F338  F061   	movff	efgtoa@u+1,___fldiv@b+1
  5235  0003BA  0060  F33C  F062   	movff	efgtoa@u+2,___fldiv@b+2
  5236  0003C0  0060  F340  F063   	movff	efgtoa@u+3,___fldiv@b+3
  5237  0003C6  0E00               	movlw	0
  5238  0003C8  6F64               	movwf	___fldiv@a& (0+255),b
  5239  0003CA  0E00               	movlw	0
  5240  0003CC  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  5241  0003CE  0E20               	movlw	32
  5242  0003D0  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  5243  0003D2  0E41               	movlw	65
  5244  0003D4  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  5245  0003D6  EC92  F013         	call	___fldiv	;wreg free
  5246  0003DA  0060  F180  F0CD   	movff	?___fldiv,efgtoa@u
  5247  0003E0  0060  F184  F0CE   	movff	?___fldiv+1,efgtoa@u+1
  5248  0003E6  0060  F188  F0CF   	movff	?___fldiv+2,efgtoa@u+2
  5249  0003EC  0060  F18C  F0D0   	movff	?___fldiv+3,efgtoa@u+3
  5250                           
  5251                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 372:             --e;
  5252  0003F2  0100               	movlb	0	; () banked
  5253  0003F4  07C9               	decf	efgtoa@e& (0+255),f,b
  5254  0003F6  A0D8               	btfss	status,0,c
  5255  0003F8  07CA               	decf	(efgtoa@e+1)& (0+255),f,b
  5256  0003FA                     l4993:
  5257                           
  5258                           ; BSR set to: 0
  5259                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 370:         while (g < u) {
  5260  0003FA  0060  F314  F079   	movff	efgtoa@g,___flge@ff1
  5261  000400  0060  F318  F07A   	movff	efgtoa@g+1,___flge@ff1+1
  5262  000406  0060  F31C  F07B   	movff	efgtoa@g+2,___flge@ff1+2
  5263  00040C  0060  F320  F07C   	movff	efgtoa@g+3,___flge@ff1+3
  5264  000412  0060  F334  F07D   	movff	efgtoa@u,___flge@ff2
  5265  000418  0060  F338  F07E   	movff	efgtoa@u+1,___flge@ff2+1
  5266  00041E  0060  F33C  F07F   	movff	efgtoa@u+2,___flge@ff2+2
  5267  000424  0060  F340  F080   	movff	efgtoa@u+3,___flge@ff2+3
  5268  00042A  EC25  F01C         	call	___flge	;wreg free
  5269  00042E  0100               	movlb	0	; () banked
  5270  000430  A0D8               	btfss	status,0,c
  5271  000432  D7BD               	goto	l4989
  5272  000434                     u5840:
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 377:     mode = tolower((int)c);
  5276  000434  0060  F24C  F066   	movff	efgtoa@c,tolower@c
  5277  00043A  6B67               	clrf	(tolower@c+1)& (0+255),b
  5278  00043C  ECAC  F021         	call	_tolower	;wreg free
  5279  000440  0100               	movlb	0	; () banked
  5280  000442  5166               	movf	?_tolower& (0+255),w,b
  5281  000444  6FBA               	movwf	efgtoa@mode& (0+255),b
  5282                           
  5283                           ; BSR set to: 0
  5284                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 378:     nmode = mode;
  5285  000446  0060  F2E8  F0B7   	movff	efgtoa@mode,efgtoa@nmode
  5286                           
  5287                           ; BSR set to: 0
  5288                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 379:     if (mode == 'g') {
  5289  00044C  0E67               	movlw	103
  5290  00044E  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  5291  000450  A4D8               	btfss	status,2,c
  5292  000452  D01B               	goto	l5009
  5293                           
  5294                           ; BSR set to: 0
  5295                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 380:   if (prec == 0) {
  5296  000454  51FB               	movf	_prec& (0+255),w,b
  5297  000456  11FC               	iorwf	(_prec+1)& (0+255),w,b
  5298  000458  A4D8               	btfss	status,2,c
  5299  00045A  D004               	goto	l5005
  5300                           
  5301                           ; BSR set to: 0
  5302                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  5303  00045C  0E00               	movlw	0
  5304  00045E  6FFC               	movwf	(_prec+1)& (0+255),b
  5305  000460  0E01               	movlw	1
  5306  000462  6FFB               	movwf	_prec& (0+255),b
  5307  000464                     l5005:
  5308                           
  5309                           ; BSR set to: 0
  5310                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 383:         p = (0 < prec) ? prec : 6;
  5311  000464  BFFC               	btfsc	(_prec+1)& (0+255),7,b
  5312  000466  D005               	goto	u5870
  5313  000468  51FC               	movf	(_prec+1)& (0+255),w,b
  5314  00046A  E108               	bnz	l490
  5315  00046C  05FB               	decf	_prec& (0+255),w,b
  5316  00046E  B0D8               	btfsc	status,0,c
  5317  000470  D005               	goto	l490
  5318  000472                     u5870:
  5319                           
  5320                           ; BSR set to: 0
  5321  000472  0E00               	movlw	0
  5322  000474  6FB6               	movwf	(efgtoa@p+1)& (0+255),b
  5323  000476  0E06               	movlw	6
  5324  000478  6FB5               	movwf	efgtoa@p& (0+255),b
  5325  00047A  D00A               	goto	l5015
  5326  00047C                     l490:
  5327                           
  5328                           ; BSR set to: 0
  5329  00047C  0060  F3EC  F0B5   	movff	_prec,efgtoa@p
  5330  000482  0060  F3F0  F0B6   	movff	_prec+1,efgtoa@p+1
  5331  000488  D003               	goto	l5015
  5332  00048A                     l5009:
  5333                           
  5334                           ; BSR set to: 0
  5335                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 385:         p = (prec < 0) ? 6 : prec;
  5336  00048A  AFFC               	btfss	(_prec+1)& (0+255),7,b
  5337  00048C  D7F7               	goto	l490
  5338  00048E  D7F1               	goto	u5870
  5339  000490                     l5015:
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 389:     if (mode == 'g') {
  5343  000490  0E67               	movlw	103
  5344  000492  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  5345  000494  A4D8               	btfss	status,2,c
  5346  000496  D024               	goto	l5025
  5347                           
  5348                           ; BSR set to: 0
  5349                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 390:         if (!(e < -4) && !((p - 1) < e))
      +                           {
  5350  000498  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  5351  00049A  D006               	goto	u5900
  5352  00049C  0EFC               	movlw	252
  5353  00049E  5DC9               	subwf	efgtoa@e& (0+255),w,b
  5354  0004A0  0EFF               	movlw	255
  5355  0004A2  59CA               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5356  0004A4  A0D8               	btfss	status,0,c
  5357  0004A6  D01A               	goto	l5023
  5358  0004A8                     u5900:
  5359                           
  5360                           ; BSR set to: 0
  5361  0004A8  0EFF               	movlw	255
  5362  0004AA  6F94               	movwf	??_efgtoa& (0+255),b
  5363  0004AC  0EFF               	movlw	255
  5364  0004AE  6F95               	movwf	(??_efgtoa+1)& (0+255),b
  5365  0004B0  0060  F2D4  F096   	movff	efgtoa@p,??_efgtoa+2
  5366  0004B6  0060  F2D8  F097   	movff	efgtoa@p+1,??_efgtoa+3
  5367  0004BC  5194               	movf	??_efgtoa& (0+255),w,b
  5368  0004BE  2796               	addwf	(??_efgtoa+2)& (0+255),f,b
  5369  0004C0  5195               	movf	(??_efgtoa+1)& (0+255),w,b
  5370  0004C2  2397               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5371  0004C4  51C9               	movf	efgtoa@e& (0+255),w,b
  5372  0004C6  5D96               	subwf	(??_efgtoa+2)& (0+255),w,b
  5373  0004C8  5197               	movf	(??_efgtoa+3)& (0+255),w,b
  5374  0004CA  0A80               	xorlw	128
  5375  0004CC  6F98               	movwf	(??_efgtoa+4)& (0+255),b
  5376  0004CE  51CA               	movf	(efgtoa@e+1)& (0+255),w,b
  5377  0004D0  0A80               	xorlw	128
  5378  0004D2  5998               	subwfb	(??_efgtoa+4)& (0+255),w,b
  5379  0004D4  A0D8               	btfss	status,0,c
  5380  0004D6  D002               	goto	l5023
  5381                           
  5382                           ; BSR set to: 0
  5383                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 391:             nmode = 'f';
  5384  0004D8  0E66               	movlw	102
  5385  0004DA  D001               	goto	L7
  5386  0004DC                     l5023:
  5387                           
  5388                           ; BSR set to: 0
  5389                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 393:             nmode = 'e';
  5390  0004DC  0E65               	movlw	101
  5391  0004DE                     L7:
  5392  0004DE  6FB7               	movwf	efgtoa@nmode& (0+255),b
  5393  0004E0                     l5025:
  5394                           
  5395                           ; BSR set to: 0
  5396                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 398:     m = p;
  5397  0004E0  0060  F2D4  F0AD   	movff	efgtoa@p,efgtoa@m
  5398  0004E6  0060  F2D8  F0AE   	movff	efgtoa@p+1,efgtoa@m+1
  5399                           
  5400                           ; BSR set to: 0
  5401                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 399:     if (!(mode == 'g') || ((nmode == 'f'
      +                          ) && (e < 0))) {
  5402  0004EC  0E67               	movlw	103
  5403  0004EE  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  5404  0004F0  A4D8               	btfss	status,2,c
  5405  0004F2  D005               	goto	u5940
  5406                           
  5407                           ; BSR set to: 0
  5408  0004F4  0E66               	movlw	102
  5409  0004F6  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  5410  0004F8  B4D8               	btfsc	status,2,c
  5411                           
  5412                           ; BSR set to: 0
  5413  0004FA  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  5414  0004FC  D002               	goto	l5035
  5415  0004FE                     u5940:
  5416                           
  5417                           ; BSR set to: 0
  5418                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 400:         ++m;
  5419  0004FE  4BAD               	infsnz	efgtoa@m& (0+255),f,b
  5420  000500  2BAE               	incf	(efgtoa@m+1)& (0+255),f,b
  5421  000502                     l5035:
  5422                           
  5423                           ; BSR set to: 0
  5424                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 404:     if (nmode == 'f') {
  5425  000502  0E66               	movlw	102
  5426  000504  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  5427  000506  A4D8               	btfss	status,2,c
  5428  000508  D016               	goto	l5045
  5429                           
  5430                           ; BSR set to: 0
  5431                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 405:         if (e < 0) {
  5432  00050A  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  5433  00050C  D00C               	goto	l5041
  5434                           
  5435                           ; BSR set to: 0
  5436                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 406:             u = 1.0;
  5437  00050E  0E00               	movlw	0
  5438  000510  6FCD               	movwf	efgtoa@u& (0+255),b
  5439  000512  0E00               	movlw	0
  5440  000514  6FCE               	movwf	(efgtoa@u+1)& (0+255),b
  5441  000516  0E80               	movlw	128
  5442  000518  6FCF               	movwf	(efgtoa@u+2)& (0+255),b
  5443  00051A  0E3F               	movlw	63
  5444  00051C  6FD0               	movwf	(efgtoa@u+3)& (0+255),b
  5445                           
  5446                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 407:             e = 0;
  5447  00051E  0E00               	movlw	0
  5448  000520  6FCA               	movwf	(efgtoa@e+1)& (0+255),b
  5449  000522  0E00               	movlw	0
  5450  000524  6FC9               	movwf	efgtoa@e& (0+255),b
  5451  000526                     l5041:
  5452                           
  5453                           ; BSR set to: 0
  5454                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 409:         if (!(mode == 'g')) {
  5455  000526  0E67               	movlw	103
  5456  000528  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  5457  00052A  B4D8               	btfsc	status,2,c
  5458  00052C  D004               	goto	l5045
  5459                           
  5460                           ; BSR set to: 0
  5461                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 410:             m += e;
  5462  00052E  51C9               	movf	efgtoa@e& (0+255),w,b
  5463  000530  27AD               	addwf	efgtoa@m& (0+255),f,b
  5464  000532  51CA               	movf	(efgtoa@e+1)& (0+255),w,b
  5465  000534  23AE               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5466  000536                     l5045:
  5467                           
  5468                           ; BSR set to: 0
  5469                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  5470  000536  0E00               	movlw	0
  5471  000538  6FC4               	movwf	(efgtoa@i+1)& (0+255),b
  5472  00053A  0E00               	movlw	0
  5473  00053C  6FC3               	movwf	efgtoa@i& (0+255),b
  5474                           
  5475                           ; BSR set to: 0
  5476                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 416:     h = g;
  5477  00053E  0060  F314  F0BB   	movff	efgtoa@g,efgtoa@h
  5478  000544  0060  F318  F0BC   	movff	efgtoa@g+1,efgtoa@h+1
  5479  00054A  0060  F31C  F0BD   	movff	efgtoa@g+2,efgtoa@h+2
  5480  000550  0060  F320  F0BE   	movff	efgtoa@g+3,efgtoa@h+3
  5481                           
  5482                           ; BSR set to: 0
  5483                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  5484  000556  0060  F334  F099   	movff	efgtoa@u,efgtoa@ou
  5485  00055C  0060  F338  F09A   	movff	efgtoa@u+1,efgtoa@ou+1
  5486  000562  0060  F33C  F09B   	movff	efgtoa@u+2,efgtoa@ou+2
  5487  000568  0060  F340  F09C   	movff	efgtoa@u+3,efgtoa@ou+3
  5488                           
  5489                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 418:     while (i < m) {
  5490  00056E  D0AE               	goto	l5059
  5491  000570                     l5051:
  5492                           
  5493                           ; BSR set to: 0
  5494                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 419:         l = floorf(h/u);
  5495  000570  0060  F2EC  F060   	movff	efgtoa@h,___fldiv@b
  5496  000576  0060  F2F0  F061   	movff	efgtoa@h+1,___fldiv@b+1
  5497  00057C  0060  F2F4  F062   	movff	efgtoa@h+2,___fldiv@b+2
  5498  000582  0060  F2F8  F063   	movff	efgtoa@h+3,___fldiv@b+3
  5499  000588  0060  F334  F064   	movff	efgtoa@u,___fldiv@a
  5500  00058E  0060  F338  F065   	movff	efgtoa@u+1,___fldiv@a+1
  5501  000594  0060  F33C  F066   	movff	efgtoa@u+2,___fldiv@a+2
  5502  00059A  0060  F340  F067   	movff	efgtoa@u+3,___fldiv@a+3
  5503  0005A0  EC92  F013         	call	___fldiv	;wreg free
  5504  0005A4  0060  F180  F079   	movff	?___fldiv,floorf@x
  5505  0005AA  0060  F184  F07A   	movff	?___fldiv+1,floorf@x+1
  5506  0005B0  0060  F188  F07B   	movff	?___fldiv+2,floorf@x+2
  5507  0005B6  0060  F18C  F07C   	movff	?___fldiv+3,floorf@x+3
  5508  0005BC  EC3F  F016         	call	_floorf	;wreg free
  5509  0005C0  0060  F1E4  F0BF   	movff	?_floorf,efgtoa@l
  5510  0005C6  0060  F1E8  F0C0   	movff	?_floorf+1,efgtoa@l+1
  5511  0005CC  0060  F1EC  F0C1   	movff	?_floorf+2,efgtoa@l+2
  5512  0005D2  0060  F1F0  F0C2   	movff	?_floorf+3,efgtoa@l+3
  5513                           
  5514                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 420:         d = (int)l;
  5515  0005D8  0060  F2FC  F060   	movff	efgtoa@l,___fltol@f1
  5516  0005DE  0060  F300  F061   	movff	efgtoa@l+1,___fltol@f1+1
  5517  0005E4  0060  F304  F062   	movff	efgtoa@l+2,___fltol@f1+2
  5518  0005EA  0060  F308  F063   	movff	efgtoa@l+3,___fltol@f1+3
  5519  0005F0  EC8E  F01C         	call	___fltol	;wreg free
  5520  0005F4  0060  F180  F0B1   	movff	?___fltol,efgtoa@d
  5521  0005FA  0060  F184  F0B2   	movff	?___fltol+1,efgtoa@d+1
  5522                           
  5523                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 421:         h -= l*u;
  5524  000600  0060  F2EC  F079   	movff	efgtoa@h,___flsub@b
  5525  000606  0060  F2F0  F07A   	movff	efgtoa@h+1,___flsub@b+1
  5526  00060C  0060  F2F4  F07B   	movff	efgtoa@h+2,___flsub@b+2
  5527  000612  0060  F2F8  F07C   	movff	efgtoa@h+3,___flsub@b+3
  5528  000618  0060  F334  F064   	movff	efgtoa@u,___flmul@a
  5529  00061E  0060  F338  F065   	movff	efgtoa@u+1,___flmul@a+1
  5530  000624  0060  F33C  F066   	movff	efgtoa@u+2,___flmul@a+2
  5531  00062A  0060  F340  F067   	movff	efgtoa@u+3,___flmul@a+3
  5532  000630  0060  F2FC  F060   	movff	efgtoa@l,___flmul@b
  5533  000636  0060  F300  F061   	movff	efgtoa@l+1,___flmul@b+1
  5534  00063C  0060  F304  F062   	movff	efgtoa@l+2,___flmul@b+2
  5535  000642  0060  F308  F063   	movff	efgtoa@l+3,___flmul@b+3
  5536  000648  EC16  F00D         	call	___flmul	;wreg free
  5537  00064C  0060  F180  F07D   	movff	?___flmul,___flsub@a
  5538  000652  0060  F184  F07E   	movff	?___flmul+1,___flsub@a+1
  5539  000658  0060  F188  F07F   	movff	?___flmul+2,___flsub@a+2
  5540  00065E  0060  F18C  F080   	movff	?___flmul+3,___flsub@a+3
  5541  000664  EC4E  F021         	call	___flsub	;wreg free
  5542  000668  0060  F1E4  F0BB   	movff	?___flsub,efgtoa@h
  5543  00066E  0060  F1E8  F0BC   	movff	?___flsub+1,efgtoa@h+1
  5544  000674  0060  F1EC  F0BD   	movff	?___flsub+2,efgtoa@h+2
  5545  00067A  0060  F1F0  F0BE   	movff	?___flsub+3,efgtoa@h+3
  5546                           
  5547                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 422:         u = u/10.0;
  5548  000680  0060  F334  F060   	movff	efgtoa@u,___fldiv@b
  5549  000686  0060  F338  F061   	movff	efgtoa@u+1,___fldiv@b+1
  5550  00068C  0060  F33C  F062   	movff	efgtoa@u+2,___fldiv@b+2
  5551  000692  0060  F340  F063   	movff	efgtoa@u+3,___fldiv@b+3
  5552  000698  0E00               	movlw	0
  5553  00069A  0100               	movlb	0	; () banked
  5554  00069C  6F64               	movwf	___fldiv@a& (0+255),b
  5555  00069E  0E00               	movlw	0
  5556  0006A0  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  5557  0006A2  0E20               	movlw	32
  5558  0006A4  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  5559  0006A6  0E41               	movlw	65
  5560  0006A8  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  5561  0006AA  EC92  F013         	call	___fldiv	;wreg free
  5562  0006AE  0060  F180  F0CD   	movff	?___fldiv,efgtoa@u
  5563  0006B4  0060  F184  F0CE   	movff	?___fldiv+1,efgtoa@u+1
  5564  0006BA  0060  F188  F0CF   	movff	?___fldiv+2,efgtoa@u+2
  5565  0006C0  0060  F18C  F0D0   	movff	?___fldiv+3,efgtoa@u+3
  5566                           
  5567                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 423:         ++i;
  5568  0006C6  0100               	movlb	0	; () banked
  5569  0006C8  4BC3               	infsnz	efgtoa@i& (0+255),f,b
  5570  0006CA  2BC4               	incf	(efgtoa@i+1)& (0+255),f,b
  5571  0006CC                     l5059:
  5572                           
  5573                           ; BSR set to: 0
  5574                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 418:     while (i < m) {
  5575  0006CC  51AD               	movf	efgtoa@m& (0+255),w,b
  5576  0006CE  5DC3               	subwf	efgtoa@i& (0+255),w,b
  5577  0006D0  51C4               	movf	(efgtoa@i+1)& (0+255),w,b
  5578  0006D2  0A80               	xorlw	128
  5579  0006D4  6F94               	movwf	??_efgtoa& (0+255),b
  5580  0006D6  51AE               	movf	(efgtoa@m+1)& (0+255),w,b
  5581  0006D8  0A80               	xorlw	128
  5582  0006DA  5994               	subwfb	??_efgtoa& (0+255),w,b
  5583  0006DC  A0D8               	btfss	status,0,c
  5584  0006DE  D748               	goto	l5051
  5585                           
  5586                           ; BSR set to: 0
  5587                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 427:     l = u*5.0;
  5588  0006E0  0060  F334  F060   	movff	efgtoa@u,___flmul@b
  5589  0006E6  0060  F338  F061   	movff	efgtoa@u+1,___flmul@b+1
  5590  0006EC  0060  F33C  F062   	movff	efgtoa@u+2,___flmul@b+2
  5591  0006F2  0060  F340  F063   	movff	efgtoa@u+3,___flmul@b+3
  5592  0006F8  0E00               	movlw	0
  5593  0006FA  6F64               	movwf	___flmul@a& (0+255),b
  5594  0006FC  0E00               	movlw	0
  5595  0006FE  6F65               	movwf	(___flmul@a+1)& (0+255),b
  5596  000700  0EA0               	movlw	160
  5597  000702  6F66               	movwf	(___flmul@a+2)& (0+255),b
  5598  000704  0E40               	movlw	64
  5599  000706  6F67               	movwf	(___flmul@a+3)& (0+255),b
  5600  000708  EC16  F00D         	call	___flmul	;wreg free
  5601  00070C  0060  F180  F0BF   	movff	?___flmul,efgtoa@l
  5602  000712  0060  F184  F0C0   	movff	?___flmul+1,efgtoa@l+1
  5603  000718  0060  F188  F0C1   	movff	?___flmul+2,efgtoa@l+2
  5604  00071E  0060  F18C  F0C2   	movff	?___flmul+3,efgtoa@l+3
  5605                           
  5606                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 428:     if (h < l) {
  5607  000724  0060  F2EC  F079   	movff	efgtoa@h,___flge@ff1
  5608  00072A  0060  F2F0  F07A   	movff	efgtoa@h+1,___flge@ff1+1
  5609  000730  0060  F2F4  F07B   	movff	efgtoa@h+2,___flge@ff1+2
  5610  000736  0060  F2F8  F07C   	movff	efgtoa@h+3,___flge@ff1+3
  5611  00073C  0060  F2FC  F07D   	movff	efgtoa@l,___flge@ff2
  5612  000742  0060  F300  F07E   	movff	efgtoa@l+1,___flge@ff2+1
  5613  000748  0060  F304  F07F   	movff	efgtoa@l+2,___flge@ff2+2
  5614  00074E  0060  F308  F080   	movff	efgtoa@l+3,___flge@ff2+3
  5615  000754  EC25  F01C         	call	___flge	;wreg free
  5616  000758  0100               	movlb	0	; () banked
  5617  00075A  A0D8               	btfss	status,0,c
  5618  00075C  D01E               	goto	u6010
  5619                           
  5620                           ; BSR set to: 0
  5621                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 432:         if ((h == l) && !(d % 2)) {
  5622                           
  5623                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 430:     } else {
  5624                           
  5625                           ; BSR set to: 0
  5626                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 429:         l = 0.0;
  5627  00075E  0060  F2EC  F060   	movff	efgtoa@h,___fleq@ff1
  5628  000764  0060  F2F0  F061   	movff	efgtoa@h+1,___fleq@ff1+1
  5629  00076A  0060  F2F4  F062   	movff	efgtoa@h+2,___fleq@ff1+2
  5630  000770  0060  F2F8  F063   	movff	efgtoa@h+3,___fleq@ff1+3
  5631  000776  0060  F2FC  F064   	movff	efgtoa@l,___fleq@ff2
  5632  00077C  0060  F300  F065   	movff	efgtoa@l+1,___fleq@ff2+1
  5633  000782  0060  F304  F066   	movff	efgtoa@l+2,___fleq@ff2+2
  5634  000788  0060  F308  F067   	movff	efgtoa@l+3,___fleq@ff2+3
  5635  00078E  ECA6  F01F         	call	___fleq	;wreg free
  5636  000792  0100               	movlb	0	; () banked
  5637  000794  B0D8               	btfsc	status,0,c
  5638                           
  5639                           ; BSR set to: 0
  5640  000796  B1B1               	btfsc	efgtoa@d& (0+255),0,b
  5641  000798  D008               	goto	l5073
  5642  00079A                     u6010:
  5643                           
  5644                           ; BSR set to: 0
  5645                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 433:             l = 0.0;
  5646  00079A  0E00               	movlw	0
  5647  00079C  6FBF               	movwf	efgtoa@l& (0+255),b
  5648  00079E  0E00               	movlw	0
  5649  0007A0  6FC0               	movwf	(efgtoa@l+1)& (0+255),b
  5650  0007A2  0E00               	movlw	0
  5651  0007A4  6FC1               	movwf	(efgtoa@l+2)& (0+255),b
  5652  0007A6  0E00               	movlw	0
  5653  0007A8  6FC2               	movwf	(efgtoa@l+3)& (0+255),b
  5654  0007AA                     l5073:
  5655                           
  5656                           ; BSR set to: 0
  5657                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 438:     h = g + l;
  5658  0007AA  0060  F314  F060   	movff	efgtoa@g,___fladd@b
  5659  0007B0  0060  F318  F061   	movff	efgtoa@g+1,___fladd@b+1
  5660  0007B6  0060  F31C  F062   	movff	efgtoa@g+2,___fladd@b+2
  5661  0007BC  0060  F320  F063   	movff	efgtoa@g+3,___fladd@b+3
  5662  0007C2  0060  F2FC  F064   	movff	efgtoa@l,___fladd@a
  5663  0007C8  0060  F300  F065   	movff	efgtoa@l+1,___fladd@a+1
  5664  0007CE  0060  F304  F066   	movff	efgtoa@l+2,___fladd@a+2
  5665  0007D4  0060  F308  F067   	movff	efgtoa@l+3,___fladd@a+3
  5666  0007DA  ECF0  F00E         	call	___fladd	;wreg free
  5667  0007DE  0060  F180  F0BB   	movff	?___fladd,efgtoa@h
  5668  0007E4  0060  F184  F0BC   	movff	?___fladd+1,efgtoa@h+1
  5669  0007EA  0060  F188  F0BD   	movff	?___fladd+2,efgtoa@h+2
  5670  0007F0  0060  F18C  F0BE   	movff	?___fladd+3,efgtoa@h+3
  5671                           
  5672                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  5673  0007F6  0060  F264  F0CD   	movff	efgtoa@ou,efgtoa@u
  5674  0007FC  0060  F268  F0CE   	movff	efgtoa@ou+1,efgtoa@u+1
  5675  000802  0060  F26C  F0CF   	movff	efgtoa@ou+2,efgtoa@u+2
  5676  000808  0060  F270  F0D0   	movff	efgtoa@ou+3,efgtoa@u+3
  5677                           
  5678                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 442:     ne = (nmode == 'e') ? 0 : e;
  5679  00080E  0E65               	movlw	101
  5680  000810  0100               	movlb	0	; () banked
  5681  000812  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  5682  000814  B4D8               	btfsc	status,2,c
  5683  000816  D007               	goto	l5081
  5684                           
  5685                           ; BSR set to: 0
  5686  000818  0060  F324  F0AF   	movff	efgtoa@e,efgtoa@ne
  5687  00081E  0060  F328  F0B0   	movff	efgtoa@e+1,efgtoa@ne+1
  5688  000824  D004               	goto	l516
  5689  000826                     l5081:
  5690                           
  5691                           ; BSR set to: 0
  5692  000826  0E00               	movlw	0
  5693  000828  6FB0               	movwf	(efgtoa@ne+1)& (0+255),b
  5694  00082A  0E00               	movlw	0
  5695  00082C  6FAF               	movwf	efgtoa@ne& (0+255),b
  5696  00082E                     l516:
  5697                           
  5698                           ; BSR set to: 0
  5699                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  5700  00082E  0E00               	movlw	0
  5701  000830  6FAC               	movwf	(efgtoa@pp+1)& (0+255),b
  5702  000832  0E00               	movlw	0
  5703  000834  6FAB               	movwf	efgtoa@pp& (0+255),b
  5704                           
  5705                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  5706  000836  0E00               	movlw	0
  5707  000838  6FAA               	movwf	(efgtoa@t+1)& (0+255),b
  5708  00083A  0E00               	movlw	0
  5709  00083C  6FA9               	movwf	efgtoa@t& (0+255),b
  5710                           
  5711                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  5712  00083E  0E00               	movlw	0
  5713  000840  6FC4               	movwf	(efgtoa@i+1)& (0+255),b
  5714  000842  0E00               	movlw	0
  5715  000844  6FC3               	movwf	efgtoa@i& (0+255),b
  5716                           
  5717                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 446:     while ((i < m) && (n < (80 - 5))) {
  5718  000846  D0F9               	goto	l5131
  5719  000848                     l5083:
  5720                           
  5721                           ; BSR set to: 0
  5722                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 447:         l = floorf(h/u);
  5723  000848  0060  F2EC  F060   	movff	efgtoa@h,___fldiv@b
  5724  00084E  0060  F2F0  F061   	movff	efgtoa@h+1,___fldiv@b+1
  5725  000854  0060  F2F4  F062   	movff	efgtoa@h+2,___fldiv@b+2
  5726  00085A  0060  F2F8  F063   	movff	efgtoa@h+3,___fldiv@b+3
  5727  000860  0060  F334  F064   	movff	efgtoa@u,___fldiv@a
  5728  000866  0060  F338  F065   	movff	efgtoa@u+1,___fldiv@a+1
  5729  00086C  0060  F33C  F066   	movff	efgtoa@u+2,___fldiv@a+2
  5730  000872  0060  F340  F067   	movff	efgtoa@u+3,___fldiv@a+3
  5731  000878  EC92  F013         	call	___fldiv	;wreg free
  5732  00087C  0060  F180  F079   	movff	?___fldiv,floorf@x
  5733  000882  0060  F184  F07A   	movff	?___fldiv+1,floorf@x+1
  5734  000888  0060  F188  F07B   	movff	?___fldiv+2,floorf@x+2
  5735  00088E  0060  F18C  F07C   	movff	?___fldiv+3,floorf@x+3
  5736  000894  EC3F  F016         	call	_floorf	;wreg free
  5737  000898  0060  F1E4  F0BF   	movff	?_floorf,efgtoa@l
  5738  00089E  0060  F1E8  F0C0   	movff	?_floorf+1,efgtoa@l+1
  5739  0008A4  0060  F1EC  F0C1   	movff	?_floorf+2,efgtoa@l+2
  5740  0008AA  0060  F1F0  F0C2   	movff	?_floorf+3,efgtoa@l+3
  5741                           
  5742                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 448:         d = (int)l;
  5743  0008B0  0060  F2FC  F060   	movff	efgtoa@l,___fltol@f1
  5744  0008B6  0060  F300  F061   	movff	efgtoa@l+1,___fltol@f1+1
  5745  0008BC  0060  F304  F062   	movff	efgtoa@l+2,___fltol@f1+2
  5746  0008C2  0060  F308  F063   	movff	efgtoa@l+3,___fltol@f1+3
  5747  0008C8  EC8E  F01C         	call	___fltol	;wreg free
  5748  0008CC  0060  F180  F0B1   	movff	?___fltol,efgtoa@d
  5749  0008D2  0060  F184  F0B2   	movff	?___fltol+1,efgtoa@d+1
  5750                           
  5751                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 449:         if (!(flags & (1 << 4)) && !d &&
      +                           (mode == 'g') && (ne < 0)) {
  5752  0008D8  0100               	movlb	0	; () banked
  5753  0008DA  B9FD               	btfsc	_flags& (0+255),4,b
  5754  0008DC  D00C               	goto	l5095
  5755                           
  5756                           ; BSR set to: 0
  5757  0008DE  51B1               	movf	efgtoa@d& (0+255),w,b
  5758  0008E0  11B2               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5759  0008E2  A4D8               	btfss	status,2,c
  5760  0008E4  D008               	goto	l5095
  5761                           
  5762                           ; BSR set to: 0
  5763  0008E6  0E67               	movlw	103
  5764  0008E8  19BA               	xorwf	efgtoa@mode& (0+255),w,b
  5765  0008EA  B4D8               	btfsc	status,2,c
  5766                           
  5767                           ; BSR set to: 0
  5768  0008EC  AFB0               	btfss	(efgtoa@ne+1)& (0+255),7,b
  5769  0008EE  D003               	goto	l5095
  5770                           
  5771                           ; BSR set to: 0
  5772                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 450:             ++t;
  5773  0008F0  4BA9               	infsnz	efgtoa@t& (0+255),f,b
  5774  0008F2  2BAA               	incf	(efgtoa@t+1)& (0+255),f,b
  5775                           
  5776                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 451:         } else {
  5777  0008F4  D039               	goto	l5123
  5778  0008F6                     l5095:
  5779                           
  5780                           ; BSR set to: 0
  5781                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 452:             if (!pp && (ne < 0)) {
  5782  0008F6  51AB               	movf	efgtoa@pp& (0+255),w,b
  5783  0008F8  11AC               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5784  0008FA  B4D8               	btfsc	status,2,c
  5785                           
  5786                           ; BSR set to: 0
  5787  0008FC  AFB0               	btfss	(efgtoa@ne+1)& (0+255),7,b
  5788  0008FE  D022               	goto	l5115
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 453:                 dbuf[n++] = '.';
  5792  000900  0E13               	movlw	low _dbuf
  5793  000902  25CB               	addwf	efgtoa@n& (0+255),w,b
  5794  000904  6ED9               	movwf	fsr2l,c
  5795  000906  0E01               	movlw	high _dbuf
  5796  000908  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5797  00090A  6EDA               	movwf	fsr2h,c
  5798  00090C  0E2E               	movlw	46
  5799  00090E  6EDF               	movwf	indf2,c
  5800                           
  5801                           ; BSR set to: 0
  5802  000910  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  5803  000912  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  5804                           
  5805                           ; BSR set to: 0
  5806                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 454:                 --w;
  5807  000914  07B8               	decf	efgtoa@w& (0+255),f,b
  5808  000916  A0D8               	btfss	status,0,c
  5809  000918  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  5810                           
  5811                           ; BSR set to: 0
  5812                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 455:                 pp = 1;
  5813  00091A  0E00               	movlw	0
  5814  00091C  6FAC               	movwf	(efgtoa@pp+1)& (0+255),b
  5815  00091E  0E01               	movlw	1
  5816  000920  6FAB               	movwf	efgtoa@pp& (0+255),b
  5817  000922  D010               	goto	l5115
  5818  000924                     l5107:
  5819                           
  5820                           ; BSR set to: 0
  5821                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 458:                 dbuf[n++] = '0';
  5822  000924  0E13               	movlw	low _dbuf
  5823  000926  25CB               	addwf	efgtoa@n& (0+255),w,b
  5824  000928  6ED9               	movwf	fsr2l,c
  5825  00092A  0E01               	movlw	high _dbuf
  5826  00092C  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5827  00092E  6EDA               	movwf	fsr2h,c
  5828  000930  0E30               	movlw	48
  5829  000932  6EDF               	movwf	indf2,c
  5830                           
  5831                           ; BSR set to: 0
  5832  000934  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  5833  000936  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  5834                           
  5835                           ; BSR set to: 0
  5836                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 459:                 --w;
  5837  000938  07B8               	decf	efgtoa@w& (0+255),f,b
  5838  00093A  A0D8               	btfss	status,0,c
  5839  00093C  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  5840                           
  5841                           ; BSR set to: 0
  5842                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 460:                 --t;
  5843  00093E  07A9               	decf	efgtoa@t& (0+255),f,b
  5844  000940  A0D8               	btfss	status,0,c
  5845  000942  07AA               	decf	(efgtoa@t+1)& (0+255),f,b
  5846  000944                     l5115:
  5847                           
  5848                           ; BSR set to: 0
  5849                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 457:             while (t) {
  5850  000944  51A9               	movf	efgtoa@t& (0+255),w,b
  5851  000946  11AA               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5852  000948  A4D8               	btfss	status,2,c
  5853  00094A  D7EC               	goto	l5107
  5854                           
  5855                           ; BSR set to: 0
  5856                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 462:             dbuf[n++] = '0' + d;
  5857  00094C  0E13               	movlw	low _dbuf
  5858  00094E  25CB               	addwf	efgtoa@n& (0+255),w,b
  5859  000950  6ED9               	movwf	fsr2l,c
  5860  000952  0E01               	movlw	high _dbuf
  5861  000954  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5862  000956  6EDA               	movwf	fsr2h,c
  5863  000958  51B1               	movf	efgtoa@d& (0+255),w,b
  5864  00095A  0F30               	addlw	48
  5865  00095C  6EDF               	movwf	indf2,c
  5866                           
  5867                           ; BSR set to: 0
  5868  00095E  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  5869  000960  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  5870                           
  5871                           ; BSR set to: 0
  5872                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 463:             --w;
  5873  000962  07B8               	decf	efgtoa@w& (0+255),f,b
  5874  000964  A0D8               	btfss	status,0,c
  5875  000966  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  5876  000968                     l5123:
  5877                           
  5878                           ; BSR set to: 0
  5879                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 465:         h -= l*u;
  5880  000968  0060  F2EC  F079   	movff	efgtoa@h,___flsub@b
  5881  00096E  0060  F2F0  F07A   	movff	efgtoa@h+1,___flsub@b+1
  5882  000974  0060  F2F4  F07B   	movff	efgtoa@h+2,___flsub@b+2
  5883  00097A  0060  F2F8  F07C   	movff	efgtoa@h+3,___flsub@b+3
  5884  000980  0060  F334  F064   	movff	efgtoa@u,___flmul@a
  5885  000986  0060  F338  F065   	movff	efgtoa@u+1,___flmul@a+1
  5886  00098C  0060  F33C  F066   	movff	efgtoa@u+2,___flmul@a+2
  5887  000992  0060  F340  F067   	movff	efgtoa@u+3,___flmul@a+3
  5888  000998  0060  F2FC  F060   	movff	efgtoa@l,___flmul@b
  5889  00099E  0060  F300  F061   	movff	efgtoa@l+1,___flmul@b+1
  5890  0009A4  0060  F304  F062   	movff	efgtoa@l+2,___flmul@b+2
  5891  0009AA  0060  F308  F063   	movff	efgtoa@l+3,___flmul@b+3
  5892  0009B0  EC16  F00D         	call	___flmul	;wreg free
  5893  0009B4  0060  F180  F07D   	movff	?___flmul,___flsub@a
  5894  0009BA  0060  F184  F07E   	movff	?___flmul+1,___flsub@a+1
  5895  0009C0  0060  F188  F07F   	movff	?___flmul+2,___flsub@a+2
  5896  0009C6  0060  F18C  F080   	movff	?___flmul+3,___flsub@a+3
  5897  0009CC  EC4E  F021         	call	___flsub	;wreg free
  5898  0009D0  0060  F1E4  F0BB   	movff	?___flsub,efgtoa@h
  5899  0009D6  0060  F1E8  F0BC   	movff	?___flsub+1,efgtoa@h+1
  5900  0009DC  0060  F1EC  F0BD   	movff	?___flsub+2,efgtoa@h+2
  5901  0009E2  0060  F1F0  F0BE   	movff	?___flsub+3,efgtoa@h+3
  5902                           
  5903                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 466:         u = u/10.0;
  5904  0009E8  0060  F334  F060   	movff	efgtoa@u,___fldiv@b
  5905  0009EE  0060  F338  F061   	movff	efgtoa@u+1,___fldiv@b+1
  5906  0009F4  0060  F33C  F062   	movff	efgtoa@u+2,___fldiv@b+2
  5907  0009FA  0060  F340  F063   	movff	efgtoa@u+3,___fldiv@b+3
  5908  000A00  0E00               	movlw	0
  5909  000A02  0100               	movlb	0	; () banked
  5910  000A04  6F64               	movwf	___fldiv@a& (0+255),b
  5911  000A06  0E00               	movlw	0
  5912  000A08  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  5913  000A0A  0E20               	movlw	32
  5914  000A0C  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  5915  000A0E  0E41               	movlw	65
  5916  000A10  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  5917  000A12  EC92  F013         	call	___fldiv	;wreg free
  5918  000A16  0060  F180  F0CD   	movff	?___fldiv,efgtoa@u
  5919  000A1C  0060  F184  F0CE   	movff	?___fldiv+1,efgtoa@u+1
  5920  000A22  0060  F188  F0CF   	movff	?___fldiv+2,efgtoa@u+2
  5921  000A28  0060  F18C  F0D0   	movff	?___fldiv+3,efgtoa@u+3
  5922                           
  5923                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 467:         --ne;
  5924  000A2E  0100               	movlb	0	; () banked
  5925  000A30  07AF               	decf	efgtoa@ne& (0+255),f,b
  5926  000A32  A0D8               	btfss	status,0,c
  5927  000A34  07B0               	decf	(efgtoa@ne+1)& (0+255),f,b
  5928                           
  5929                           ; BSR set to: 0
  5930                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 468:         ++i;
  5931  000A36  4BC3               	infsnz	efgtoa@i& (0+255),f,b
  5932  000A38  2BC4               	incf	(efgtoa@i+1)& (0+255),f,b
  5933  000A3A                     l5131:
  5934                           
  5935                           ; BSR set to: 0
  5936                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 446:     while ((i < m) && (n < (80 - 5))) {
  5937  000A3A  51AD               	movf	efgtoa@m& (0+255),w,b
  5938  000A3C  5DC3               	subwf	efgtoa@i& (0+255),w,b
  5939  000A3E  51C4               	movf	(efgtoa@i+1)& (0+255),w,b
  5940  000A40  0A80               	xorlw	128
  5941  000A42  6F94               	movwf	??_efgtoa& (0+255),b
  5942  000A44  51AE               	movf	(efgtoa@m+1)& (0+255),w,b
  5943  000A46  0A80               	xorlw	128
  5944  000A48  5994               	subwfb	??_efgtoa& (0+255),w,b
  5945  000A4A  B0D8               	btfsc	status,0,c
  5946  000A4C  D008               	goto	u6110
  5947                           
  5948                           ; BSR set to: 0
  5949  000A4E  BFCC               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5950  000A50  D6FB               	goto	l5083
  5951  000A52  51CC               	movf	(efgtoa@n+1)& (0+255),w,b
  5952  000A54  E104               	bnz	u6110
  5953  000A56  0E4B               	movlw	75
  5954  000A58  5DCB               	subwf	efgtoa@n& (0+255),w,b
  5955  000A5A  A0D8               	btfss	status,0,c
  5956  000A5C  D6F5               	goto	l5083
  5957  000A5E                     u6110:
  5958                           
  5959                           ; BSR set to: 0
  5960                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 470:     if (!pp && (flags & (1 << 4))) {
  5961  000A5E  51AB               	movf	efgtoa@pp& (0+255),w,b
  5962  000A60  11AC               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5963  000A62  B4D8               	btfsc	status,2,c
  5964                           
  5965                           ; BSR set to: 0
  5966  000A64  A9FD               	btfss	_flags& (0+255),4,b
  5967  000A66  D00A               	goto	l5143
  5968                           
  5969                           ; BSR set to: 0
  5970                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 471:         dbuf[n++] = '.';
  5971  000A68  0E13               	movlw	low _dbuf
  5972  000A6A  25CB               	addwf	efgtoa@n& (0+255),w,b
  5973  000A6C  6ED9               	movwf	fsr2l,c
  5974  000A6E  0E01               	movlw	high _dbuf
  5975  000A70  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5976  000A72  6EDA               	movwf	fsr2h,c
  5977  000A74  0E2E               	movlw	46
  5978  000A76  6EDF               	movwf	indf2,c
  5979                           
  5980                           ; BSR set to: 0
  5981  000A78  4BCB               	infsnz	efgtoa@n& (0+255),f,b
  5982  000A7A  2BCC               	incf	(efgtoa@n+1)& (0+255),f,b
  5983  000A7C                     l5143:
  5984                           
  5985                           ; BSR set to: 0
  5986                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] = '\0';
  5987  000A7C  0E13               	movlw	low _dbuf
  5988  000A7E  25CB               	addwf	efgtoa@n& (0+255),w,b
  5989  000A80  6ED9               	movwf	fsr2l,c
  5990  000A82  0E01               	movlw	high _dbuf
  5991  000A84  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5992  000A86  6EDA               	movwf	fsr2h,c
  5993  000A88  0E00               	movlw	0
  5994  000A8A  6EDF               	movwf	indf2,c
  5995                           
  5996                           ; BSR set to: 0
  5997                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 476:     if (nmode == 'e') {
  5998  000A8C  0E65               	movlw	101
  5999  000A8E  19B7               	xorwf	efgtoa@nmode& (0+255),w,b
  6000  000A90  A4D8               	btfss	status,2,c
  6001  000A92  EFF7  F000         	goto	l4955
  6002                           
  6003                           ; BSR set to: 0
  6004                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 477:         i = sizeof(dbuf) - 1;
  6005  000A96  0E00               	movlw	0
  6006  000A98  6FC4               	movwf	(efgtoa@i+1)& (0+255),b
  6007  000A9A  0E4F               	movlw	79
  6008  000A9C  6FC3               	movwf	efgtoa@i& (0+255),b
  6009                           
  6010                           ; BSR set to: 0
  6011                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 478:         dbuf[i] = '\0';
  6012  000A9E  0E13               	movlw	low _dbuf
  6013  000AA0  25C3               	addwf	efgtoa@i& (0+255),w,b
  6014  000AA2  6ED9               	movwf	fsr2l,c
  6015  000AA4  0E01               	movlw	high _dbuf
  6016  000AA6  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6017  000AA8  6EDA               	movwf	fsr2h,c
  6018  000AAA  0E00               	movlw	0
  6019  000AAC  6EDF               	movwf	indf2,c
  6020                           
  6021                           ; BSR set to: 0
  6022                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 479:         sign = 0;
  6023  000AAE  0E00               	movlw	0
  6024  000AB0  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  6025  000AB2  0E00               	movlw	0
  6026  000AB4  6FB3               	movwf	efgtoa@sign& (0+255),b
  6027                           
  6028                           ; BSR set to: 0
  6029                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 480:         if (e < 0) {
  6030  000AB6  AFCA               	btfss	(efgtoa@e+1)& (0+255),7,b
  6031  000AB8  D008               	goto	l5159
  6032                           
  6033                           ; BSR set to: 0
  6034                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 481:             sign = 1;
  6035  000ABA  0E00               	movlw	0
  6036  000ABC  6FB4               	movwf	(efgtoa@sign+1)& (0+255),b
  6037  000ABE  0E01               	movlw	1
  6038  000AC0  6FB3               	movwf	efgtoa@sign& (0+255),b
  6039                           
  6040                           ; BSR set to: 0
  6041                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 482:             e = -e;
  6042  000AC2  6DC9               	negf	efgtoa@e& (0+255),b
  6043  000AC4  1FCA               	comf	(efgtoa@e+1)& (0+255),f,b
  6044  000AC6  B0D8               	btfsc	status,0,c
  6045  000AC8  2BCA               	incf	(efgtoa@e+1)& (0+255),f,b
  6046  000ACA                     l5159:
  6047                           
  6048                           ; BSR set to: 0
  6049                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 484:         p = 2;
  6050  000ACA  0E00               	movlw	0
  6051  000ACC  6FB6               	movwf	(efgtoa@p+1)& (0+255),b
  6052  000ACE  0E02               	movlw	2
  6053  000AD0  6FB5               	movwf	efgtoa@p& (0+255),b
  6054                           
  6055                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 485:         while (e || (0 < p)) {
  6056  000AD2  D032               	goto	l5171
  6057  000AD4                     l5161:
  6058                           
  6059                           ; BSR set to: 0
  6060                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 486:             --i;
  6061  000AD4  07C3               	decf	efgtoa@i& (0+255),f,b
  6062  000AD6  A0D8               	btfss	status,0,c
  6063  000AD8  07C4               	decf	(efgtoa@i+1)& (0+255),f,b
  6064                           
  6065                           ; BSR set to: 0
  6066                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 487:             dbuf[i] = '0' + (e % 10);
  6067  000ADA  0E13               	movlw	low _dbuf
  6068  000ADC  25C3               	addwf	efgtoa@i& (0+255),w,b
  6069  000ADE  6ED9               	movwf	fsr2l,c
  6070  000AE0  0E01               	movlw	high _dbuf
  6071  000AE2  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6072  000AE4  6EDA               	movwf	fsr2h,c
  6073  000AE6  0060  F324  F060   	movff	efgtoa@e,___awmod@dividend
  6074  000AEC  0060  F328  F061   	movff	efgtoa@e+1,___awmod@dividend+1
  6075  000AF2  0E00               	movlw	0
  6076  000AF4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  6077  000AF6  0E0A               	movlw	10
  6078  000AF8  6F62               	movwf	___awmod@divisor& (0+255),b
  6079  000AFA  EC75  F020         	call	___awmod	;wreg free
  6080  000AFE  0100               	movlb	0	; () banked
  6081  000B00  5160               	movf	?___awmod& (0+255),w,b
  6082  000B02  0F30               	addlw	48
  6083  000B04  6EDF               	movwf	indf2,c
  6084                           
  6085                           ; BSR set to: 0
  6086                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 488:             e = e / 10;
  6087  000B06  0060  F324  F060   	movff	efgtoa@e,___awdiv@dividend
  6088  000B0C  0060  F328  F061   	movff	efgtoa@e+1,___awdiv@dividend+1
  6089  000B12  0E00               	movlw	0
  6090  000B14  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  6091  000B16  0E0A               	movlw	10
  6092  000B18  6F62               	movwf	___awdiv@divisor& (0+255),b
  6093  000B1A  ECEC  F01F         	call	___awdiv	;wreg free
  6094  000B1E  0060  F180  F0C9   	movff	?___awdiv,efgtoa@e
  6095  000B24  0060  F184  F0CA   	movff	?___awdiv+1,efgtoa@e+1
  6096                           
  6097                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 489:             --p;
  6098  000B2A  0100               	movlb	0	; () banked
  6099  000B2C  07B5               	decf	efgtoa@p& (0+255),f,b
  6100  000B2E  A0D8               	btfss	status,0,c
  6101  000B30  07B6               	decf	(efgtoa@p+1)& (0+255),f,b
  6102                           
  6103                           ; BSR set to: 0
  6104                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 490:             --w;
  6105  000B32  07B8               	decf	efgtoa@w& (0+255),f,b
  6106  000B34  A0D8               	btfss	status,0,c
  6107  000B36  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  6108  000B38                     l5171:
  6109                           
  6110                           ; BSR set to: 0
  6111                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 485:         while (e || (0 < p)) {
  6112  000B38  51C9               	movf	efgtoa@e& (0+255),w,b
  6113  000B3A  11CA               	iorwf	(efgtoa@e+1)& (0+255),w,b
  6114  000B3C  A4D8               	btfss	status,2,c
  6115  000B3E  D7CA               	goto	l5161
  6116                           
  6117                           ; BSR set to: 0
  6118  000B40  BFB6               	btfsc	(efgtoa@p+1)& (0+255),7,b
  6119  000B42  D005               	goto	u6170
  6120  000B44  51B6               	movf	(efgtoa@p+1)& (0+255),w,b
  6121  000B46  E1C6               	bnz	l5161
  6122  000B48  05B5               	decf	efgtoa@p& (0+255),w,b
  6123  000B4A  B0D8               	btfsc	status,0,c
  6124  000B4C  D7C3               	goto	l5161
  6125  000B4E                     u6170:
  6126                           
  6127                           ; BSR set to: 0
  6128                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 492:         --i;
  6129  000B4E  07C3               	decf	efgtoa@i& (0+255),f,b
  6130  000B50  A0D8               	btfss	status,0,c
  6131  000B52  07C4               	decf	(efgtoa@i+1)& (0+255),f,b
  6132                           
  6133                           ; BSR set to: 0
  6134                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 493:         dbuf[i] = sign ? '-' : '+';
  6135  000B54  51B3               	movf	efgtoa@sign& (0+255),w,b
  6136  000B56  11B4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6137  000B58  A4D8               	btfss	status,2,c
  6138  000B5A  D004               	goto	l5181
  6139                           
  6140                           ; BSR set to: 0
  6141  000B5C  0E00               	movlw	0
  6142  000B5E  6FA4               	movwf	(_efgtoa$1794+1)& (0+255),b
  6143  000B60  0E2B               	movlw	43
  6144  000B62  D003               	goto	L8
  6145  000B64                     l5181:
  6146                           
  6147                           ; BSR set to: 0
  6148  000B64  0E00               	movlw	0
  6149  000B66  6FA4               	movwf	(_efgtoa$1794+1)& (0+255),b
  6150  000B68  0E2D               	movlw	45
  6151  000B6A                     L8:
  6152  000B6A  6FA3               	movwf	_efgtoa$1794& (0+255),b
  6153                           
  6154                           ; BSR set to: 0
  6155  000B6C  0E13               	movlw	low _dbuf
  6156  000B6E  25C3               	addwf	efgtoa@i& (0+255),w,b
  6157  000B70  6ED9               	movwf	fsr2l,c
  6158  000B72  0E01               	movlw	high _dbuf
  6159  000B74  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6160  000B76  6EDA               	movwf	fsr2h,c
  6161  000B78  0060  F28F  FFDF   	movff	_efgtoa$1794,indf2
  6162                           
  6163                           ; BSR set to: 0
  6164                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 494:         --w;
  6165  000B7E  07B8               	decf	efgtoa@w& (0+255),f,b
  6166  000B80  A0D8               	btfss	status,0,c
  6167  000B82  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  6168                           
  6169                           ; BSR set to: 0
  6170                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 496:         dbuf[i] = (0 ? isupper((int)c) :
      +                           ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6171  000B84  07C3               	decf	efgtoa@i& (0+255),f,b
  6172  000B86  A0D8               	btfss	status,0,c
  6173  000B88  07C4               	decf	(efgtoa@i+1)& (0+255),f,b
  6174                           
  6175                           ; BSR set to: 0
  6176  000B8A  0EBF               	movlw	191
  6177  000B8C  6F94               	movwf	??_efgtoa& (0+255),b
  6178  000B8E  0EFF               	movlw	255
  6179  000B90  6F95               	movwf	(??_efgtoa+1)& (0+255),b
  6180  000B92  5193               	movf	efgtoa@c& (0+255),w,b
  6181  000B94  6F96               	movwf	(??_efgtoa+2)& (0+255),b
  6182  000B96  6B97               	clrf	(??_efgtoa+3)& (0+255),b
  6183  000B98  5194               	movf	??_efgtoa& (0+255),w,b
  6184  000B9A  2796               	addwf	(??_efgtoa+2)& (0+255),f,b
  6185  000B9C  5195               	movf	(??_efgtoa+1)& (0+255),w,b
  6186  000B9E  2397               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6187  000BA0  5197               	movf	(??_efgtoa+3)& (0+255),w,b
  6188  000BA2  E106               	bnz	u6190
  6189  000BA4  0E1A               	movlw	26
  6190  000BA6  5D96               	subwf	(??_efgtoa+2)& (0+255),w,b
  6191  000BA8  B0D8               	btfsc	status,0,c
  6192  000BAA  D002               	goto	u6190
  6193  000BAC  0E01               	movlw	1
  6194  000BAE  D001               	goto	u6200
  6195  000BB0                     u6190:
  6196  000BB0  0E00               	movlw	0
  6197  000BB2                     u6200:
  6198  000BB2  6FA7               	movwf	_efgtoa$1796& (0+255),b
  6199  000BB4  6BA8               	clrf	(_efgtoa$1796+1)& (0+255),b
  6200                           
  6201                           ; BSR set to: 0
  6202  000BB6  51A7               	movf	_efgtoa$1796& (0+255),w,b
  6203  000BB8  11A8               	iorwf	(_efgtoa$1796+1)& (0+255),w,b
  6204  000BBA  A4D8               	btfss	status,2,c
  6205  000BBC  D004               	goto	l5197
  6206                           
  6207                           ; BSR set to: 0
  6208  000BBE  0E00               	movlw	0
  6209  000BC0  6FA6               	movwf	(_efgtoa$1795+1)& (0+255),b
  6210  000BC2  0E65               	movlw	101
  6211  000BC4  D003               	goto	L9
  6212  000BC6                     l5197:
  6213                           
  6214                           ; BSR set to: 0
  6215  000BC6  0E00               	movlw	0
  6216  000BC8  6FA6               	movwf	(_efgtoa$1795+1)& (0+255),b
  6217  000BCA  0E45               	movlw	69
  6218  000BCC                     L9:
  6219  000BCC  6FA5               	movwf	_efgtoa$1795& (0+255),b
  6220                           
  6221                           ; BSR set to: 0
  6222  000BCE  0E13               	movlw	low _dbuf
  6223  000BD0  25C3               	addwf	efgtoa@i& (0+255),w,b
  6224  000BD2  6ED9               	movwf	fsr2l,c
  6225  000BD4  0E01               	movlw	high _dbuf
  6226  000BD6  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6227  000BD8  6EDA               	movwf	fsr2h,c
  6228  000BDA  0060  F297  FFDF   	movff	_efgtoa$1795,indf2
  6229                           
  6230                           ; BSR set to: 0
  6231                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 497:         --w;
  6232  000BE0  07B8               	decf	efgtoa@w& (0+255),f,b
  6233  000BE2  A0D8               	btfss	status,0,c
  6234  000BE4  07B9               	decf	(efgtoa@w+1)& (0+255),f,b
  6235                           
  6236                           ; BSR set to: 0
  6237                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 498:         strcpy(&dbuf[n], &dbuf[i]);
  6238  000BE6  0E13               	movlw	low _dbuf
  6239  000BE8  25CB               	addwf	efgtoa@n& (0+255),w,b
  6240  000BEA  6F60               	movwf	strcpy@dest& (0+255),b
  6241  000BEC  0E01               	movlw	high _dbuf
  6242  000BEE  21CC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6243  000BF0  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  6244  000BF2  0E13               	movlw	low _dbuf
  6245  000BF4  25C3               	addwf	efgtoa@i& (0+255),w,b
  6246  000BF6  6F62               	movwf	strcpy@src& (0+255),b
  6247  000BF8  0E01               	movlw	high _dbuf
  6248  000BFA  21C4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6249  000BFC  6F63               	movwf	(strcpy@src+1)& (0+255),b
  6250  000BFE  EC1A  F021         	call	_strcpy	;wreg free
  6251  000C02  EFF7  F000         	goto	l4955
  6252  000C06                     __end_of_efgtoa:
  6253                           	opt callstack 0
  6254                           
  6255 ;; *************** function _tolower *****************
  6256 ;; Defined at:
  6257 ;;		line 4 in file "D:\MPLAB\pic\sources\c99\common\tolower.c"
  6258 ;; Parameters:    Size  Location     Type
  6259 ;;  c               2    6[BANK0 ] int 
  6260 ;; Auto vars:     Size  Location     Type
  6261 ;;		None
  6262 ;; Return value:  Size  Location     Type
  6263 ;;                  2    6[BANK0 ] int 
  6264 ;; Registers used:
  6265 ;;		wreg, status,2, status,0
  6266 ;; Tracked objects:
  6267 ;;		On entry : 0/0
  6268 ;;		On exit  : 0/0
  6269 ;;		Unchanged: 0/0
  6270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6271 ;;      Params:         0       2       0       0       0       0       0       0       0
  6272 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6273 ;;      Temps:          0       4       0       0       0       0       0       0       0
  6274 ;;      Totals:         0       8       0       0       0       0       0       0       0
  6275 ;;Total ram usage:        8 bytes
  6276 ;; Hardware stack levels used:    1
  6277 ;; Hardware stack levels required when called:    4
  6278 ;; This function calls:
  6279 ;;		_isupper
  6280 ;; This function is called by:
  6281 ;;		_efgtoa
  6282 ;;		_vfpfcnvrt
  6283 ;; This function uses a non-reentrant model
  6284 ;;
  6285                           
  6286                           	psect	text6
  6287  004358                     __ptext6:
  6288                           	opt callstack 0
  6289  004358                     _tolower:
  6290                           	opt callstack 23
  6291                           
  6292                           ;incstack = 0
  6293  004358  0EBF               	movlw	191
  6294  00435A  0100               	movlb	0	; () banked
  6295  00435C  6F68               	movwf	??_tolower& (0+255),b
  6296  00435E  0EFF               	movlw	255
  6297  004360  6F69               	movwf	(??_tolower+1)& (0+255),b
  6298  004362  0060  F198  F06A   	movff	tolower@c,??_tolower+2
  6299  004368  0060  F19C  F06B   	movff	tolower@c+1,??_tolower+3
  6300  00436E  5168               	movf	??_tolower& (0+255),w,b
  6301  004370  276A               	addwf	(??_tolower+2)& (0+255),f,b
  6302  004372  5169               	movf	(??_tolower+1)& (0+255),w,b
  6303  004374  236B               	addwfc	(??_tolower+3)& (0+255),f,b
  6304  004376  516B               	movf	(??_tolower+3)& (0+255),w,b
  6305  004378  E106               	bnz	u4510
  6306  00437A  0E1A               	movlw	26
  6307  00437C  5D6A               	subwf	(??_tolower+2)& (0+255),w,b
  6308  00437E  B0D8               	btfsc	status,0,c
  6309  004380  D002               	goto	u4510
  6310  004382  0E01               	movlw	1
  6311  004384  D001               	goto	u4520
  6312  004386                     u4510:
  6313  004386  0E00               	movlw	0
  6314  004388                     u4520:
  6315  004388  6F6C               	movwf	_tolower$2405& (0+255),b
  6316  00438A  6B6D               	clrf	(_tolower$2405+1)& (0+255),b
  6317                           
  6318                           ; BSR set to: 0
  6319  00438C  516C               	movf	_tolower$2405& (0+255),w,b
  6320  00438E  116D               	iorwf	(_tolower$2405+1)& (0+255),w,b
  6321  004390  B4D8               	btfsc	status,2,c
  6322  004392  D006               	goto	l1401
  6323                           
  6324                           ; BSR set to: 0
  6325  004394  0E20               	movlw	32
  6326  004396  1166               	iorwf	tolower@c& (0+255),w,b
  6327  004398  6F66               	movwf	?_tolower& (0+255),b
  6328  00439A  5167               	movf	(tolower@c+1)& (0+255),w,b
  6329  00439C  6F67               	movwf	(?_tolower+1)& (0+255),b
  6330  00439E  0012               	return	
  6331  0043A0                     l1401:
  6332                           
  6333                           ; BSR set to: 0
  6334  0043A0  0060  F198  F066   	movff	tolower@c,?_tolower
  6335  0043A6  0060  F19C  F067   	movff	tolower@c+1,?_tolower+1
  6336                           
  6337                           ; BSR set to: 0
  6338  0043AC  0012               	return		;funcret
  6339  0043AE                     __end_of_tolower:
  6340                           	opt callstack 0
  6341                           
  6342 ;; *************** function _isupper *****************
  6343 ;; Defined at:
  6344 ;;		line 5 in file "D:\MPLAB\pic\sources\c99\common\isupper.c"
  6345 ;; Parameters:    Size  Location     Type
  6346 ;;  c               2    0[BANK0 ] int 
  6347 ;; Auto vars:     Size  Location     Type
  6348 ;;		None
  6349 ;; Return value:  Size  Location     Type
  6350 ;;                  2    0[BANK0 ] int 
  6351 ;; Registers used:
  6352 ;;		wreg, status,2, status,0
  6353 ;; Tracked objects:
  6354 ;;		On entry : 0/0
  6355 ;;		On exit  : 0/0
  6356 ;;		Unchanged: 0/0
  6357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6358 ;;      Params:         0       2       0       0       0       0       0       0       0
  6359 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6360 ;;      Temps:          0       4       0       0       0       0       0       0       0
  6361 ;;      Totals:         0       6       0       0       0       0       0       0       0
  6362 ;;Total ram usage:        6 bytes
  6363 ;; Hardware stack levels used:    1
  6364 ;; Hardware stack levels required when called:    3
  6365 ;; This function calls:
  6366 ;;		Nothing
  6367 ;; This function is called by:
  6368 ;;		_efgtoa
  6369 ;;		_vfpfcnvrt
  6370 ;;		_tolower
  6371 ;; This function uses a non-reentrant model
  6372 ;;
  6373                           
  6374                           	psect	text7
  6375  004536                     __ptext7:
  6376                           	opt callstack 0
  6377  004536                     _isupper:
  6378                           	opt callstack 23
  6379                           
  6380                           ; BSR set to: 0
  6381                           ;incstack = 0
  6382  004536  0EBF               	movlw	191
  6383  004538  0100               	movlb	0	; () banked
  6384  00453A  6F62               	movwf	??_isupper& (0+255),b
  6385  00453C  0EFF               	movlw	255
  6386  00453E  6F63               	movwf	(??_isupper+1)& (0+255),b
  6387  004540  0060  F180  F064   	movff	isupper@c,??_isupper+2
  6388  004546  0060  F184  F065   	movff	isupper@c+1,??_isupper+3
  6389  00454C  5162               	movf	??_isupper& (0+255),w,b
  6390  00454E  2764               	addwf	(??_isupper+2)& (0+255),f,b
  6391  004550  5163               	movf	(??_isupper+1)& (0+255),w,b
  6392  004552  2365               	addwfc	(??_isupper+3)& (0+255),f,b
  6393  004554  5165               	movf	(??_isupper+3)& (0+255),w,b
  6394  004556  E106               	bnz	u3960
  6395  004558  0E1A               	movlw	26
  6396  00455A  5D64               	subwf	(??_isupper+2)& (0+255),w,b
  6397  00455C  B0D8               	btfsc	status,0,c
  6398  00455E  D002               	goto	u3960
  6399  004560  0E01               	movlw	1
  6400  004562  D001               	goto	u3970
  6401  004564                     u3960:
  6402  004564  0E00               	movlw	0
  6403  004566                     u3970:
  6404  004566  6F60               	movwf	?_isupper& (0+255),b
  6405  004568  6B61               	clrf	(?_isupper+1)& (0+255),b
  6406                           
  6407                           ; BSR set to: 0
  6408  00456A  0012               	return		;funcret
  6409  00456C                     __end_of_isupper:
  6410                           	opt callstack 0
  6411                           
  6412 ;; *************** function _strcpy *****************
  6413 ;; Defined at:
  6414 ;;		line 7 in file "D:\MPLAB\pic\sources\c99\common\strcpy.c"
  6415 ;; Parameters:    Size  Location     Type
  6416 ;;  dest            2    0[BANK0 ] PTR unsigned char 
  6417 ;;		 -> dbuf(80), 
  6418 ;;  src             2    2[BANK0 ] PTR const unsigned char 
  6419 ;;		 -> STR_41(4), STR_40(4), STR_37(4), STR_36(4), 
  6420 ;;		 -> dbuf(80), 
  6421 ;; Auto vars:     Size  Location     Type
  6422 ;;  d               2    8[BANK0 ] PTR unsigned char 
  6423 ;;		 -> dbuf(80), 
  6424 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  6425 ;;		 -> STR_41(4), STR_40(4), STR_37(4), STR_36(4), 
  6426 ;;		 -> dbuf(80), 
  6427 ;; Return value:  Size  Location     Type
  6428 ;;                  2    0[BANK0 ] PTR unsigned char 
  6429 ;; Registers used:
  6430 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6431 ;; Tracked objects:
  6432 ;;		On entry : 0/0
  6433 ;;		On exit  : 0/0
  6434 ;;		Unchanged: 0/0
  6435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6436 ;;      Params:         0       4       0       0       0       0       0       0       0
  6437 ;;      Locals:         0       4       0       0       0       0       0       0       0
  6438 ;;      Temps:          0       2       0       0       0       0       0       0       0
  6439 ;;      Totals:         0      10       0       0       0       0       0       0       0
  6440 ;;Total ram usage:       10 bytes
  6441 ;; Hardware stack levels used:    1
  6442 ;; Hardware stack levels required when called:    3
  6443 ;; This function calls:
  6444 ;;		Nothing
  6445 ;; This function is called by:
  6446 ;;		_efgtoa
  6447 ;; This function uses a non-reentrant model
  6448 ;;
  6449                           
  6450                           	psect	text8
  6451  004234                     __ptext8:
  6452                           	opt callstack 0
  6453  004234                     _strcpy:
  6454                           	opt callstack 23
  6455                           
  6456                           ; BSR set to: 0
  6457                           ;incstack = 0
  6458  004234  0060  F188  F066   	movff	strcpy@src,strcpy@s
  6459  00423A  0060  F18C  F067   	movff	strcpy@src+1,strcpy@s+1
  6460  004240  0060  F180  F068   	movff	strcpy@dest,strcpy@d
  6461  004246  0060  F184  F069   	movff	strcpy@dest+1,strcpy@d+1
  6462  00424C                     l4247:
  6463  00424C  0100               	movlb	0	; () banked
  6464  00424E  5166               	movf	strcpy@s& (0+255),w,b
  6465  004250  6F64               	movwf	??_strcpy& (0+255),b
  6466  004252  5167               	movf	(strcpy@s+1)& (0+255),w,b
  6467  004254  6F65               	movwf	(??_strcpy+1)& (0+255),b
  6468  004256  4B66               	infsnz	strcpy@s& (0+255),f,b
  6469  004258  2B67               	incf	(strcpy@s+1)& (0+255),f,b
  6470  00425A  0060  F193  FFF6   	movff	??_strcpy,tblptrl
  6471  004260  0060  F197  FFF7   	movff	??_strcpy+1,tblptrh
  6472  004266  6AF8               	clrf	tblptru,c
  6473  004268  0060  F1A3  FFD9   	movff	strcpy@d,fsr2l
  6474  00426E  0060  F1A7  FFDA   	movff	strcpy@d+1,fsr2h
  6475  004274  4B68               	infsnz	strcpy@d& (0+255),f,b
  6476  004276  2B69               	incf	(strcpy@d+1)& (0+255),f,b
  6477  004278  0E07               	movlw	(high __ramtop+-1)
  6478  00427A  64F7               	cpfsgt	tblptrh,c
  6479  00427C  D003               	bra	u4497
  6480  00427E  0008               	tblrd		*
  6481  004280  50F5               	movf	tablat,w,c
  6482  004282  D007               	bra	u4490
  6483  004284                     u4497:
  6484  004284  006F FFDB FFE1     	movff	tblptrl,fsr1l
  6485  00428A  006F FFDF FFE2     	movff	tblptrh,fsr1h
  6486  004290  50E7               	movf	indf1,w,c
  6487  004292                     u4490:
  6488  004292  6EDF               	movwf	indf2,c
  6489  004294  50DF               	movf	indf2,w,c
  6490  004296  B4D8               	btfsc	status,2,c
  6491  004298  0012               	return	
  6492  00429A  D7D8               	goto	l4247
  6493  00429C                     __end_of_strcpy:
  6494                           	opt callstack 0
  6495                           
  6496 ;; *************** function _floorf *****************
  6497 ;; Defined at:
  6498 ;;		line 3 in file "D:\MPLAB\pic\sources\c99\common\floorf.c"
  6499 ;; Parameters:    Size  Location     Type
  6500 ;;  x               4   25[BANK0 ] float 
  6501 ;; Auto vars:     Size  Location     Type
  6502 ;;  u               4   41[BANK0 ] struct .
  6503 ;;  m               4   35[BANK0 ] unsigned long 
  6504 ;;  e               2   39[BANK0 ] int 
  6505 ;; Return value:  Size  Location     Type
  6506 ;;                  4   25[BANK0 ] float 
  6507 ;; Registers used:
  6508 ;;		wreg, status,2, status,0
  6509 ;; Tracked objects:
  6510 ;;		On entry : 0/0
  6511 ;;		On exit  : 0/0
  6512 ;;		Unchanged: 0/0
  6513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6514 ;;      Params:         0       4       0       0       0       0       0       0       0
  6515 ;;      Locals:         0      10       0       0       0       0       0       0       0
  6516 ;;      Temps:          0       6       0       0       0       0       0       0       0
  6517 ;;      Totals:         0      20       0       0       0       0       0       0       0
  6518 ;;Total ram usage:       20 bytes
  6519 ;; Hardware stack levels used:    1
  6520 ;; Hardware stack levels required when called:    3
  6521 ;; This function calls:
  6522 ;;		Nothing
  6523 ;; This function is called by:
  6524 ;;		_efgtoa
  6525 ;; This function uses a non-reentrant model
  6526 ;;
  6527                           
  6528                           	psect	text9
  6529  002C7E                     __ptext9:
  6530                           	opt callstack 0
  6531  002C7E                     _floorf:
  6532                           	opt callstack 23
  6533                           
  6534                           ;incstack = 0
  6535  002C7E  0060  F400  F089   	movff	floorf@F524,floorf@u
  6536  002C84  0060  F404  F08A   	movff	floorf@F524+1,floorf@u+1
  6537  002C8A  0060  F408  F08B   	movff	floorf@F524+2,floorf@u+2
  6538  002C90  0060  F40C  F08C   	movff	floorf@F524+3,floorf@u+3
  6539  002C96  0060  F1E4  F089   	movff	floorf@x,floorf@u
  6540  002C9C  0060  F1E8  F08A   	movff	floorf@x+1,floorf@u+1
  6541  002CA2  0060  F1EC  F08B   	movff	floorf@x+2,floorf@u+2
  6542  002CA8  0060  F1F0  F08C   	movff	floorf@x+3,floorf@u+3
  6543  002CAE  0E81               	movlw	129
  6544  002CB0  0100               	movlb	0	; () banked
  6545  002CB2  6F7D               	movwf	??_floorf& (0+255),b
  6546  002CB4  0EFF               	movlw	255
  6547  002CB6  6F7E               	movwf	(??_floorf+1)& (0+255),b
  6548  002CB8  0060  F224  F07F   	movff	floorf@u,??_floorf+2
  6549  002CBE  0060  F228  F080   	movff	floorf@u+1,??_floorf+3
  6550  002CC4  0060  F22C  F081   	movff	floorf@u+2,??_floorf+4
  6551  002CCA  0060  F230  F082   	movff	floorf@u+3,??_floorf+5
  6552  002CD0  0E18               	movlw	24
  6553  002CD2  D005               	goto	u4540
  6554  002CD4                     u4545:
  6555  002CD4  90D8               	bcf	status,0,c
  6556  002CD6  3382               	rrcf	(??_floorf+5)& (0+255),f,b
  6557  002CD8  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  6558  002CDA  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  6559  002CDC  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  6560  002CDE                     u4540:
  6561  002CDE  2EE8               	decfsz	wreg,f,c
  6562  002CE0  D7F9               	goto	u4545
  6563  002CE2  517F               	movf	(??_floorf+2)& (0+255),w,b
  6564  002CE4  257D               	addwf	??_floorf& (0+255),w,b
  6565  002CE6  6F87               	movwf	floorf@e& (0+255),b
  6566  002CE8  0E00               	movlw	0
  6567  002CEA  217E               	addwfc	(??_floorf+1)& (0+255),w,b
  6568  002CEC  6F88               	movwf	(floorf@e+1)& (0+255),b
  6569  002CEE  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  6570  002CF0  D013               	goto	l4265
  6571  002CF2  5188               	movf	(floorf@e+1)& (0+255),w,b
  6572  002CF4  E104               	bnz	u4550
  6573  002CF6  0E17               	movlw	23
  6574  002CF8  5D87               	subwf	floorf@e& (0+255),w,b
  6575  002CFA  A0D8               	btfss	status,0,c
  6576  002CFC  D00D               	goto	l4265
  6577  002CFE                     u4550:
  6578                           
  6579                           ; BSR set to: 0
  6580  002CFE  0060  F1E4  F079   	movff	floorf@x,?_floorf
  6581  002D04  0060  F1E8  F07A   	movff	floorf@x+1,?_floorf+1
  6582  002D0A  0060  F1EC  F07B   	movff	floorf@x+2,?_floorf+2
  6583  002D10  0060  F1F0  F07C   	movff	floorf@x+3,?_floorf+3
  6584  002D16  0012               	return	
  6585  002D18                     l4265:
  6586                           
  6587                           ; BSR set to: 0
  6588  002D18  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  6589  002D1A  D068               	goto	l4275
  6590                           
  6591                           ; BSR set to: 0
  6592  002D1C  0060  F21C  F07D   	movff	floorf@e,??_floorf
  6593  002D22  0EFF               	movlw	255
  6594  002D24  6F7E               	movwf	(??_floorf+1)& (0+255),b
  6595  002D26  0EFF               	movlw	255
  6596  002D28  6F7F               	movwf	(??_floorf+2)& (0+255),b
  6597  002D2A  0E7F               	movlw	127
  6598  002D2C  6F80               	movwf	(??_floorf+3)& (0+255),b
  6599  002D2E  0E00               	movlw	0
  6600  002D30  6F81               	movwf	(??_floorf+4)& (0+255),b
  6601  002D32                     u4575:
  6602  002D32  677D               	tstfsz	??_floorf& (0+255),b
  6603  002D34  D001               	goto	u4576
  6604  002D36  D007               	goto	u4577
  6605  002D38                     u4576:
  6606  002D38  3581               	rlcf	(??_floorf+4)& (0+255),w,b
  6607  002D3A  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  6608  002D3C  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  6609  002D3E  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  6610  002D40  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  6611  002D42  2F7D               	decfsz	??_floorf& (0+255),f,b
  6612  002D44  D7F6               	goto	u4575
  6613  002D46                     u4577:
  6614  002D46  0060  F1F8  F083   	movff	??_floorf+1,floorf@m
  6615  002D4C  0060  F1FC  F084   	movff	??_floorf+2,floorf@m+1
  6616  002D52  0060  F200  F085   	movff	??_floorf+3,floorf@m+2
  6617  002D58  0060  F204  F086   	movff	??_floorf+4,floorf@m+3
  6618  002D5E  0100               	movlb	0	; () banked
  6619  002D60  5183               	movf	floorf@m& (0+255),w,b
  6620  002D62  1589               	andwf	floorf@u& (0+255),w,b
  6621  002D64  6F7D               	movwf	??_floorf& (0+255),b
  6622  002D66  5184               	movf	(floorf@m+1)& (0+255),w,b
  6623  002D68  158A               	andwf	(floorf@u+1)& (0+255),w,b
  6624  002D6A  6F7E               	movwf	(??_floorf+1)& (0+255),b
  6625  002D6C  5185               	movf	(floorf@m+2)& (0+255),w,b
  6626  002D6E  158B               	andwf	(floorf@u+2)& (0+255),w,b
  6627  002D70  6F7F               	movwf	(??_floorf+2)& (0+255),b
  6628  002D72  5186               	movf	(floorf@m+3)& (0+255),w,b
  6629  002D74  158C               	andwf	(floorf@u+3)& (0+255),w,b
  6630  002D76  6F80               	movwf	(??_floorf+3)& (0+255),b
  6631  002D78  517D               	movf	??_floorf& (0+255),w,b
  6632  002D7A  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  6633  002D7C  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  6634  002D7E  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  6635  002D80  B4D8               	btfsc	status,2,c
  6636  002D82  D7BD               	goto	u4550
  6637                           
  6638                           ; BSR set to: 0
  6639  002D84  0060  F224  F07D   	movff	floorf@u,??_floorf
  6640  002D8A  0060  F228  F07E   	movff	floorf@u+1,??_floorf+1
  6641  002D90  0060  F22C  F07F   	movff	floorf@u+2,??_floorf+2
  6642  002D96  0060  F230  F080   	movff	floorf@u+3,??_floorf+3
  6643  002D9C  0E20               	movlw	32
  6644  002D9E  D005               	goto	u4590
  6645  002DA0                     u4595:
  6646  002DA0  90D8               	bcf	status,0,c
  6647  002DA2  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  6648  002DA4  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  6649  002DA6  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  6650  002DA8  337D               	rrcf	??_floorf& (0+255),f,b
  6651  002DAA                     u4590:
  6652  002DAA  2EE8               	decfsz	wreg,f,c
  6653  002DAC  D7F9               	goto	u4595
  6654  002DAE  517D               	movf	??_floorf& (0+255),w,b
  6655  002DB0  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  6656  002DB2  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  6657  002DB4  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  6658  002DB6  B4D8               	btfsc	status,2,c
  6659  002DB8  D008               	goto	l1321
  6660                           
  6661                           ; BSR set to: 0
  6662  002DBA  5183               	movf	floorf@m& (0+255),w,b
  6663  002DBC  2789               	addwf	floorf@u& (0+255),f,b
  6664  002DBE  5184               	movf	(floorf@m+1)& (0+255),w,b
  6665  002DC0  238A               	addwfc	(floorf@u+1)& (0+255),f,b
  6666  002DC2  5185               	movf	(floorf@m+2)& (0+255),w,b
  6667  002DC4  238B               	addwfc	(floorf@u+2)& (0+255),f,b
  6668  002DC6  5186               	movf	(floorf@m+3)& (0+255),w,b
  6669  002DC8  238C               	addwfc	(floorf@u+3)& (0+255),f,b
  6670  002DCA                     l1321:
  6671                           
  6672                           ; BSR set to: 0
  6673  002DCA  1D83               	comf	floorf@m& (0+255),w,b
  6674  002DCC  6F7D               	movwf	??_floorf& (0+255),b
  6675  002DCE  1D84               	comf	(floorf@m+1)& (0+255),w,b
  6676  002DD0  6F7E               	movwf	(??_floorf+1)& (0+255),b
  6677  002DD2  1D85               	comf	(floorf@m+2)& (0+255),w,b
  6678  002DD4  6F7F               	movwf	(??_floorf+2)& (0+255),b
  6679  002DD6  1D86               	comf	(floorf@m+3)& (0+255),w,b
  6680  002DD8  6F80               	movwf	(??_floorf+3)& (0+255),b
  6681  002DDA  517D               	movf	??_floorf& (0+255),w,b
  6682  002DDC  1789               	andwf	floorf@u& (0+255),f,b
  6683  002DDE  517E               	movf	(??_floorf+1)& (0+255),w,b
  6684  002DE0  178A               	andwf	(floorf@u+1)& (0+255),f,b
  6685  002DE2  517F               	movf	(??_floorf+2)& (0+255),w,b
  6686  002DE4  178B               	andwf	(floorf@u+2)& (0+255),f,b
  6687  002DE6  5180               	movf	(??_floorf+3)& (0+255),w,b
  6688  002DE8  178C               	andwf	(floorf@u+3)& (0+255),f,b
  6689  002DEA  D03A               	goto	l4283
  6690  002DEC                     l4275:
  6691                           
  6692                           ; BSR set to: 0
  6693  002DEC  0060  F224  F07D   	movff	floorf@u,??_floorf
  6694  002DF2  0060  F228  F07E   	movff	floorf@u+1,??_floorf+1
  6695  002DF8  0060  F22C  F07F   	movff	floorf@u+2,??_floorf+2
  6696  002DFE  0060  F230  F080   	movff	floorf@u+3,??_floorf+3
  6697  002E04  0E20               	movlw	32
  6698  002E06  D005               	goto	u4610
  6699  002E08                     u4615:
  6700  002E08  90D8               	bcf	status,0,c
  6701  002E0A  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  6702  002E0C  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  6703  002E0E  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  6704  002E10  337D               	rrcf	??_floorf& (0+255),f,b
  6705  002E12                     u4610:
  6706  002E12  2EE8               	decfsz	wreg,f,c
  6707  002E14  D7F9               	goto	u4615
  6708  002E16  517D               	movf	??_floorf& (0+255),w,b
  6709  002E18  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  6710  002E1A  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  6711  002E1C  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  6712  002E1E  A4D8               	btfss	status,2,c
  6713  002E20  D008               	goto	l4279
  6714                           
  6715                           ; BSR set to: 0
  6716  002E22  0E00               	movlw	0
  6717  002E24  6F89               	movwf	floorf@u& (0+255),b
  6718  002E26  0E00               	movlw	0
  6719  002E28  6F8A               	movwf	(floorf@u+1)& (0+255),b
  6720  002E2A  0E00               	movlw	0
  6721  002E2C  6F8B               	movwf	(floorf@u+2)& (0+255),b
  6722  002E2E  0E00               	movlw	0
  6723  002E30  D016               	goto	L10
  6724  002E32                     l4279:
  6725                           
  6726                           ; BSR set to: 0
  6727  002E32  90D8               	bcf	status,0,c
  6728  002E34  3589               	rlcf	floorf@u& (0+255),w,b
  6729  002E36  6F7D               	movwf	??_floorf& (0+255),b
  6730  002E38  358A               	rlcf	(floorf@u+1)& (0+255),w,b
  6731  002E3A  6F7E               	movwf	(??_floorf+1)& (0+255),b
  6732  002E3C  358B               	rlcf	(floorf@u+2)& (0+255),w,b
  6733  002E3E  6F7F               	movwf	(??_floorf+2)& (0+255),b
  6734  002E40  358C               	rlcf	(floorf@u+3)& (0+255),w,b
  6735  002E42  6F80               	movwf	(??_floorf+3)& (0+255),b
  6736  002E44  517D               	movf	??_floorf& (0+255),w,b
  6737  002E46  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  6738  002E48  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  6739  002E4A  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  6740  002E4C  B4D8               	btfsc	status,2,c
  6741  002E4E  D008               	goto	l4283
  6742                           
  6743                           ; BSR set to: 0
  6744  002E50  0E00               	movlw	0
  6745  002E52  6F89               	movwf	floorf@u& (0+255),b
  6746  002E54  0E00               	movlw	0
  6747  002E56  6F8A               	movwf	(floorf@u+1)& (0+255),b
  6748  002E58  0E80               	movlw	128
  6749  002E5A  6F8B               	movwf	(floorf@u+2)& (0+255),b
  6750  002E5C  0EBF               	movlw	191
  6751  002E5E                     L10:
  6752  002E5E  6F8C               	movwf	(floorf@u+3)& (0+255),b
  6753  002E60                     l4283:
  6754                           
  6755                           ; BSR set to: 0
  6756  002E60  0060  F224  F079   	movff	floorf@u,?_floorf
  6757  002E66  0060  F228  F07A   	movff	floorf@u+1,?_floorf+1
  6758  002E6C  0060  F22C  F07B   	movff	floorf@u+2,?_floorf+2
  6759  002E72  0060  F230  F07C   	movff	floorf@u+3,?_floorf+3
  6760                           
  6761                           ; BSR set to: 0
  6762  002E78  0012               	return		;funcret
  6763  002E7A                     __end_of_floorf:
  6764                           	opt callstack 0
  6765                           
  6766 ;; *************** function ___fpclassifyf *****************
  6767 ;; Defined at:
  6768 ;;		line 4 in file "D:\MPLAB\pic\sources\c99\common\__fpclassifyf.c"
  6769 ;; Parameters:    Size  Location     Type
  6770 ;;  x               4    0[BANK0 ] float 
  6771 ;; Auto vars:     Size  Location     Type
  6772 ;;  u               4   10[BANK0 ] struct .
  6773 ;;  e               2    8[BANK0 ] int 
  6774 ;; Return value:  Size  Location     Type
  6775 ;;                  2    0[BANK0 ] int 
  6776 ;; Registers used:
  6777 ;;		wreg, status,2, status,0
  6778 ;; Tracked objects:
  6779 ;;		On entry : 0/0
  6780 ;;		On exit  : 0/0
  6781 ;;		Unchanged: 0/0
  6782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6783 ;;      Params:         0       4       0       0       0       0       0       0       0
  6784 ;;      Locals:         0       6       0       0       0       0       0       0       0
  6785 ;;      Temps:          0       4       0       0       0       0       0       0       0
  6786 ;;      Totals:         0      14       0       0       0       0       0       0       0
  6787 ;;Total ram usage:       14 bytes
  6788 ;; Hardware stack levels used:    1
  6789 ;; Hardware stack levels required when called:    3
  6790 ;; This function calls:
  6791 ;;		Nothing
  6792 ;; This function is called by:
  6793 ;;		_efgtoa
  6794 ;; This function uses a non-reentrant model
  6795 ;;
  6796                           
  6797                           	psect	text10
  6798  003686                     __ptext10:
  6799                           	opt callstack 0
  6800  003686                     ___fpclassifyf:
  6801                           	opt callstack 23
  6802                           
  6803                           ; BSR set to: 0
  6804                           ;incstack = 0
  6805  003686  0060  F410  F06A   	movff	___fpclassifyf@F463,___fpclassifyf@u
  6806  00368C  0060  F414  F06B   	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  6807  003692  0060  F418  F06C   	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  6808  003698  0060  F41C  F06D   	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  6809  00369E  0060  F180  F06A   	movff	___fpclassifyf@x,___fpclassifyf@u
  6810  0036A4  0060  F184  F06B   	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6811  0036AA  0060  F188  F06C   	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6812  0036B0  0060  F18C  F06D   	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6813  0036B6  0060  F1A8  F064   	movff	___fpclassifyf@u,??___fpclassifyf
  6814  0036BC  0060  F1AC  F065   	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6815  0036C2  0060  F1B0  F066   	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6816  0036C8  0060  F1B4  F067   	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6817  0036CE  0E18               	movlw	24
  6818  0036D0  D006               	goto	u4420
  6819  0036D2                     u4425:
  6820  0036D2  0100               	movlb	0	; () banked
  6821  0036D4  90D8               	bcf	status,0,c
  6822  0036D6  3367               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
  6823  0036D8  3366               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
  6824  0036DA  3365               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
  6825  0036DC  3364               	rrcf	??___fpclassifyf& (0+255),f,b
  6826  0036DE                     u4420:
  6827  0036DE  2EE8               	decfsz	wreg,f,c
  6828  0036E0  D7F8               	goto	u4425
  6829  0036E2  5164               	movf	??___fpclassifyf& (0+255),w,b
  6830  0036E4  6F68               	movwf	___fpclassifyf@e& (0+255),b
  6831  0036E6  6B69               	clrf	(___fpclassifyf@e+1)& (0+255),b
  6832  0036E8  5168               	movf	___fpclassifyf@e& (0+255),w,b
  6833  0036EA  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  6834  0036EC  A4D8               	btfss	status,2,c
  6835  0036EE  D019               	goto	l4235
  6836                           
  6837                           ; BSR set to: 0
  6838  0036F0  90D8               	bcf	status,0,c
  6839  0036F2  356A               	rlcf	___fpclassifyf@u& (0+255),w,b
  6840  0036F4  6F64               	movwf	??___fpclassifyf& (0+255),b
  6841  0036F6  356B               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
  6842  0036F8  6F65               	movwf	(??___fpclassifyf+1)& (0+255),b
  6843  0036FA  356C               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
  6844  0036FC  6F66               	movwf	(??___fpclassifyf+2)& (0+255),b
  6845  0036FE  356D               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
  6846  003700  6F67               	movwf	(??___fpclassifyf+3)& (0+255),b
  6847  003702  5164               	movf	??___fpclassifyf& (0+255),w,b
  6848  003704  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  6849  003706  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  6850  003708  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  6851  00370A  A4D8               	btfss	status,2,c
  6852  00370C  D005               	goto	l4231
  6853                           
  6854                           ; BSR set to: 0
  6855  00370E  0E00               	movlw	0
  6856  003710  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  6857  003712  0E02               	movlw	2
  6858  003714  6F60               	movwf	?___fpclassifyf& (0+255),b
  6859  003716  0012               	return	
  6860  003718                     l4231:
  6861                           
  6862                           ; BSR set to: 0
  6863  003718  0E00               	movlw	0
  6864  00371A  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  6865  00371C  0E03               	movlw	3
  6866  00371E  6F60               	movwf	?___fpclassifyf& (0+255),b
  6867  003720  0012               	return	
  6868  003722                     l4235:
  6869                           
  6870                           ; BSR set to: 0
  6871  003722  2968               	incf	___fpclassifyf@e& (0+255),w,b
  6872  003724  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  6873  003726  A4D8               	btfss	status,2,c
  6874  003728  D020               	goto	l4241
  6875                           
  6876                           ; BSR set to: 0
  6877  00372A  0060  F1A8  F064   	movff	___fpclassifyf@u,??___fpclassifyf
  6878  003730  0060  F1AC  F065   	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6879  003736  0060  F1B0  F066   	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6880  00373C  0060  F1B4  F067   	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6881  003742  0E09               	movlw	9
  6882  003744                     u4465:
  6883  003744  90D8               	bcf	status,0,c
  6884  003746  3764               	rlcf	??___fpclassifyf& (0+255),f,b
  6885  003748  3765               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
  6886  00374A  3766               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
  6887  00374C  3767               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
  6888  00374E  2EE8               	decfsz	wreg,f,c
  6889  003750  D7F9               	goto	u4465
  6890  003752  5164               	movf	??___fpclassifyf& (0+255),w,b
  6891  003754  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  6892  003756  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  6893  003758  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  6894  00375A  A4D8               	btfss	status,2,c
  6895  00375C  D002               	goto	u4470
  6896  00375E  0E01               	movlw	1
  6897  003760  D001               	goto	u4480
  6898  003762                     u4470:
  6899  003762  0E00               	movlw	0
  6900  003764                     u4480:
  6901  003764  6F60               	movwf	?___fpclassifyf& (0+255),b
  6902  003766  6B61               	clrf	(?___fpclassifyf+1)& (0+255),b
  6903  003768  0012               	return	
  6904  00376A                     l4241:
  6905                           
  6906                           ; BSR set to: 0
  6907  00376A  0E00               	movlw	0
  6908  00376C  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  6909  00376E  0E04               	movlw	4
  6910  003770  6F60               	movwf	?___fpclassifyf& (0+255),b
  6911                           
  6912                           ; BSR set to: 0
  6913  003772  0012               	return		;funcret
  6914  003774                     __end_of___fpclassifyf:
  6915                           	opt callstack 0
  6916                           
  6917 ;; *************** function ___fltol *****************
  6918 ;; Defined at:
  6919 ;;		line 43 in file "D:\MPLAB\pic\sources\c99\common\fltol.c"
  6920 ;; Parameters:    Size  Location     Type
  6921 ;;  f1              4    0[BANK0 ] int 
  6922 ;; Auto vars:     Size  Location     Type
  6923 ;;  exp1            1    9[BANK0 ] unsigned char 
  6924 ;;  sign1           1    8[BANK0 ] unsigned char 
  6925 ;; Return value:  Size  Location     Type
  6926 ;;                  4    0[BANK0 ] long 
  6927 ;; Registers used:
  6928 ;;		wreg, status,2, status,0
  6929 ;; Tracked objects:
  6930 ;;		On entry : 0/0
  6931 ;;		On exit  : 0/0
  6932 ;;		Unchanged: 0/0
  6933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6934 ;;      Params:         0       4       0       0       0       0       0       0       0
  6935 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6936 ;;      Temps:          0       4       0       0       0       0       0       0       0
  6937 ;;      Totals:         0      10       0       0       0       0       0       0       0
  6938 ;;Total ram usage:       10 bytes
  6939 ;; Hardware stack levels used:    1
  6940 ;; Hardware stack levels required when called:    3
  6941 ;; This function calls:
  6942 ;;		Nothing
  6943 ;; This function is called by:
  6944 ;;		_efgtoa
  6945 ;; This function uses a non-reentrant model
  6946 ;;
  6947                           
  6948                           	psect	text11
  6949  00391C                     __ptext11:
  6950                           	opt callstack 0
  6951  00391C                     ___fltol:
  6952                           	opt callstack 23
  6953                           
  6954                           ; BSR set to: 0
  6955                           ;incstack = 0
  6956  00391C  0100               	movlb	0	; () banked
  6957  00391E  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6958  003920  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6959  003922  6F69               	movwf	___fltol@exp1& (0+255),b
  6960  003924  5169               	movf	___fltol@exp1& (0+255),w,b
  6961  003926  A4D8               	btfss	status,2,c
  6962  003928  D009               	goto	l4783
  6963  00392A                     u5420:
  6964                           
  6965                           ; BSR set to: 0
  6966  00392A  0E00               	movlw	0
  6967  00392C  6F60               	movwf	?___fltol& (0+255),b
  6968  00392E  0E00               	movlw	0
  6969  003930  6F61               	movwf	(?___fltol+1)& (0+255),b
  6970  003932  0E00               	movlw	0
  6971  003934  6F62               	movwf	(?___fltol+2)& (0+255),b
  6972  003936  0E00               	movlw	0
  6973  003938  6F63               	movwf	(?___fltol+3)& (0+255),b
  6974  00393A  0012               	return	
  6975  00393C                     l4783:
  6976                           
  6977                           ; BSR set to: 0
  6978  00393C  0060  F180  F064   	movff	___fltol@f1,??___fltol
  6979  003942  0060  F184  F065   	movff	___fltol@f1+1,??___fltol+1
  6980  003948  0060  F188  F066   	movff	___fltol@f1+2,??___fltol+2
  6981  00394E  0060  F18C  F067   	movff	___fltol@f1+3,??___fltol+3
  6982  003954  0E20               	movlw	32
  6983  003956  D005               	goto	u5430
  6984  003958                     u5435:
  6985  003958  90D8               	bcf	status,0,c
  6986  00395A  3367               	rrcf	(??___fltol+3)& (0+255),f,b
  6987  00395C  3366               	rrcf	(??___fltol+2)& (0+255),f,b
  6988  00395E  3365               	rrcf	(??___fltol+1)& (0+255),f,b
  6989  003960  3364               	rrcf	??___fltol& (0+255),f,b
  6990  003962                     u5430:
  6991  003962  2EE8               	decfsz	wreg,f,c
  6992  003964  D7F9               	goto	u5435
  6993  003966  5164               	movf	??___fltol& (0+255),w,b
  6994  003968  6F68               	movwf	___fltol@sign1& (0+255),b
  6995                           
  6996                           ; BSR set to: 0
  6997  00396A  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
  6998                           
  6999                           ; BSR set to: 0
  7000  00396C  0EFF               	movlw	255
  7001  00396E  1760               	andwf	___fltol@f1& (0+255),f,b
  7002  003970  0EFF               	movlw	255
  7003  003972  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
  7004  003974  0EFF               	movlw	255
  7005  003976  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
  7006  003978  0E00               	movlw	0
  7007  00397A  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
  7008                           
  7009                           ; BSR set to: 0
  7010  00397C  0E96               	movlw	150
  7011  00397E  5F69               	subwf	___fltol@exp1& (0+255),f,b
  7012                           
  7013                           ; BSR set to: 0
  7014  003980  AF69               	btfss	___fltol@exp1& (0+255),7,b
  7015  003982  D00D               	goto	l4803
  7016                           
  7017                           ; BSR set to: 0
  7018  003984  5169               	movf	___fltol@exp1& (0+255),w,b
  7019  003986  0A80               	xorlw	128
  7020  003988  0F97               	addlw	151
  7021  00398A  A0D8               	btfss	status,0,c
  7022  00398C  D7CE               	goto	u5420
  7023  00398E                     l4799:
  7024                           
  7025                           ; BSR set to: 0
  7026  00398E  90D8               	bcf	status,0,c
  7027  003990  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
  7028  003992  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
  7029  003994  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
  7030  003996  3360               	rrcf	___fltol@f1& (0+255),f,b
  7031                           
  7032                           ; BSR set to: 0
  7033  003998  3F69               	incfsz	___fltol@exp1& (0+255),f,b
  7034  00399A  D7F9               	goto	l4799
  7035  00399C  D00D               	goto	u5470
  7036  00399E                     l4803:
  7037                           
  7038                           ; BSR set to: 0
  7039  00399E  0E1F               	movlw	31
  7040  0039A0  6569               	cpfsgt	___fltol@exp1& (0+255),b
  7041  0039A2  D007               	goto	l4811
  7042  0039A4  D7C2               	goto	u5420
  7043  0039A6                     l4809:
  7044                           
  7045                           ; BSR set to: 0
  7046  0039A6  90D8               	bcf	status,0,c
  7047  0039A8  3760               	rlcf	___fltol@f1& (0+255),f,b
  7048  0039AA  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
  7049  0039AC  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
  7050  0039AE  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
  7051  0039B0  0769               	decf	___fltol@exp1& (0+255),f,b
  7052  0039B2                     l4811:
  7053                           
  7054                           ; BSR set to: 0
  7055  0039B2  5169               	movf	___fltol@exp1& (0+255),w,b
  7056  0039B4  A4D8               	btfss	status,2,c
  7057  0039B6  D7F7               	goto	l4809
  7058  0039B8                     u5470:
  7059                           
  7060                           ; BSR set to: 0
  7061  0039B8  5168               	movf	___fltol@sign1& (0+255),w,b
  7062  0039BA  B4D8               	btfsc	status,2,c
  7063  0039BC  D008               	goto	l4817
  7064                           
  7065                           ; BSR set to: 0
  7066  0039BE  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
  7067  0039C0  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
  7068  0039C2  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
  7069  0039C4  6D60               	negf	___fltol@f1& (0+255),b
  7070  0039C6  0E00               	movlw	0
  7071  0039C8  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
  7072  0039CA  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
  7073  0039CC  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
  7074  0039CE                     l4817:
  7075                           
  7076                           ; BSR set to: 0
  7077  0039CE  0060  F180  F060   	movff	___fltol@f1,?___fltol
  7078  0039D4  0060  F184  F061   	movff	___fltol@f1+1,?___fltol+1
  7079  0039DA  0060  F188  F062   	movff	___fltol@f1+2,?___fltol+2
  7080  0039E0  0060  F18C  F063   	movff	___fltol@f1+3,?___fltol+3
  7081                           
  7082                           ; BSR set to: 0
  7083  0039E6  0012               	return		;funcret
  7084  0039E8                     __end_of___fltol:
  7085                           	opt callstack 0
  7086                           
  7087 ;; *************** function ___flsub *****************
  7088 ;; Defined at:
  7089 ;;		line 245 in file "D:\MPLAB\pic\sources\c99\common\sprcadd.c"
  7090 ;; Parameters:    Size  Location     Type
  7091 ;;  b               4   25[BANK0 ] long 
  7092 ;;  a               4   29[BANK0 ] long 
  7093 ;; Auto vars:     Size  Location     Type
  7094 ;;		None
  7095 ;; Return value:  Size  Location     Type
  7096 ;;                  4   25[BANK0 ] long 
  7097 ;; Registers used:
  7098 ;;		wreg, status,2, status,0, cstack
  7099 ;; Tracked objects:
  7100 ;;		On entry : 0/0
  7101 ;;		On exit  : 0/0
  7102 ;;		Unchanged: 0/0
  7103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7104 ;;      Params:         0       8       0       0       0       0       0       0       0
  7105 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7106 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7107 ;;      Totals:         0       8       0       0       0       0       0       0       0
  7108 ;;Total ram usage:        8 bytes
  7109 ;; Hardware stack levels used:    1
  7110 ;; Hardware stack levels required when called:    4
  7111 ;; This function calls:
  7112 ;;		___fladd
  7113 ;; This function is called by:
  7114 ;;		_efgtoa
  7115 ;; This function uses a non-reentrant model
  7116 ;;
  7117                           
  7118                           	psect	text12
  7119  00429C                     __ptext12:
  7120                           	opt callstack 0
  7121  00429C                     ___flsub:
  7122                           	opt callstack 22
  7123                           
  7124                           ; BSR set to: 0
  7125                           ;incstack = 0
  7126  00429C  0E00               	movlw	0
  7127  00429E  0100               	movlb	0	; () banked
  7128  0042A0  1B7D               	xorwf	___flsub@a& (0+255),f,b
  7129  0042A2  0E00               	movlw	0
  7130  0042A4  1B7E               	xorwf	(___flsub@a+1)& (0+255),f,b
  7131  0042A6  0E00               	movlw	0
  7132  0042A8  1B7F               	xorwf	(___flsub@a+2)& (0+255),f,b
  7133  0042AA  0E80               	movlw	128
  7134  0042AC  1B80               	xorwf	(___flsub@a+3)& (0+255),f,b
  7135                           
  7136                           ; BSR set to: 0
  7137  0042AE  0060  F1E4  F060   	movff	___flsub@b,___fladd@b
  7138  0042B4  0060  F1E8  F061   	movff	___flsub@b+1,___fladd@b+1
  7139  0042BA  0060  F1EC  F062   	movff	___flsub@b+2,___fladd@b+2
  7140  0042C0  0060  F1F0  F063   	movff	___flsub@b+3,___fladd@b+3
  7141  0042C6  0060  F1F4  F064   	movff	___flsub@a,___fladd@a
  7142  0042CC  0060  F1F8  F065   	movff	___flsub@a+1,___fladd@a+1
  7143  0042D2  0060  F1FC  F066   	movff	___flsub@a+2,___fladd@a+2
  7144  0042D8  0060  F200  F067   	movff	___flsub@a+3,___fladd@a+3
  7145  0042DE  ECF0  F00E         	call	___fladd	;wreg free
  7146  0042E2  0060  F180  F079   	movff	?___fladd,?___flsub
  7147  0042E8  0060  F184  F07A   	movff	?___fladd+1,?___flsub+1
  7148  0042EE  0060  F188  F07B   	movff	?___fladd+2,?___flsub+2
  7149  0042F4  0060  F18C  F07C   	movff	?___fladd+3,?___flsub+3
  7150  0042FA  0012               	return		;funcret
  7151  0042FC                     __end_of___flsub:
  7152                           	opt callstack 0
  7153                           
  7154 ;; *************** function ___fladd *****************
  7155 ;; Defined at:
  7156 ;;		line 10 in file "D:\MPLAB\pic\sources\c99\common\sprcadd.c"
  7157 ;; Parameters:    Size  Location     Type
  7158 ;;  b               4    0[BANK0 ] long 
  7159 ;;  a               4    4[BANK0 ] long 
  7160 ;; Auto vars:     Size  Location     Type
  7161 ;;  grs             1   15[BANK0 ] unsigned char 
  7162 ;;  bexp            1   14[BANK0 ] unsigned char 
  7163 ;;  aexp            1   13[BANK0 ] unsigned char 
  7164 ;;  signs           1   12[BANK0 ] unsigned char 
  7165 ;; Return value:  Size  Location     Type
  7166 ;;                  4    0[BANK0 ] unsigned char 
  7167 ;; Registers used:
  7168 ;;		wreg, status,2, status,0
  7169 ;; Tracked objects:
  7170 ;;		On entry : 0/0
  7171 ;;		On exit  : 0/0
  7172 ;;		Unchanged: 0/0
  7173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7174 ;;      Params:         0       8       0       0       0       0       0       0       0
  7175 ;;      Locals:         0       4       0       0       0       0       0       0       0
  7176 ;;      Temps:          0       4       0       0       0       0       0       0       0
  7177 ;;      Totals:         0      16       0       0       0       0       0       0       0
  7178 ;;Total ram usage:       16 bytes
  7179 ;; Hardware stack levels used:    1
  7180 ;; Hardware stack levels required when called:    3
  7181 ;; This function calls:
  7182 ;;		Nothing
  7183 ;; This function is called by:
  7184 ;;		_efgtoa
  7185 ;;		___flsub
  7186 ;; This function uses a non-reentrant model
  7187 ;;
  7188                           
  7189                           	psect	text13
  7190  001DE0                     __ptext13:
  7191                           	opt callstack 0
  7192  001DE0                     ___fladd:
  7193                           	opt callstack 22
  7194                           
  7195                           ;incstack = 0
  7196  001DE0  0100               	movlb	0	; () banked
  7197  001DE2  5163               	movf	(___fladd@b+3)& (0+255),w,b
  7198  001DE4  0B80               	andlw	128
  7199  001DE6  6F6C               	movwf	___fladd@signs& (0+255),b
  7200  001DE8  5163               	movf	(___fladd@b+3)& (0+255),w,b
  7201  001DEA  2563               	addwf	(___fladd@b+3)& (0+255),w,b
  7202  001DEC  6F6E               	movwf	___fladd@bexp& (0+255),b
  7203                           
  7204                           ; BSR set to: 0
  7205  001DEE  BF62               	btfsc	(___fladd@b+2)& (0+255),7,b
  7206                           
  7207                           ; BSR set to: 0
  7208  001DF0  816E               	bsf	___fladd@bexp& (0+255),0,b
  7209                           
  7210                           ; BSR set to: 0
  7211  001DF2  516E               	movf	___fladd@bexp& (0+255),w,b
  7212  001DF4  B4D8               	btfsc	status,2,c
  7213  001DF6  D00D               	goto	l4011
  7214                           
  7215                           ; BSR set to: 0
  7216  001DF8  296E               	incf	___fladd@bexp& (0+255),w,b
  7217  001DFA  A4D8               	btfss	status,2,c
  7218  001DFC  D008               	goto	l4007
  7219                           
  7220                           ; BSR set to: 0
  7221  001DFE  0E00               	movlw	0
  7222  001E00  6F60               	movwf	___fladd@b& (0+255),b
  7223  001E02  0E00               	movlw	0
  7224  001E04  6F61               	movwf	(___fladd@b+1)& (0+255),b
  7225  001E06  0E00               	movlw	0
  7226  001E08  6F62               	movwf	(___fladd@b+2)& (0+255),b
  7227  001E0A  0E00               	movlw	0
  7228  001E0C  6F63               	movwf	(___fladd@b+3)& (0+255),b
  7229  001E0E                     l4007:
  7230                           
  7231                           ; BSR set to: 0
  7232  001E0E  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  7233  001E10  D006               	goto	L11
  7234  001E12                     l4011:
  7235                           
  7236                           ; BSR set to: 0
  7237  001E12  0E00               	movlw	0
  7238  001E14  6F60               	movwf	___fladd@b& (0+255),b
  7239  001E16  0E00               	movlw	0
  7240  001E18  6F61               	movwf	(___fladd@b+1)& (0+255),b
  7241  001E1A  0E00               	movlw	0
  7242  001E1C  6F62               	movwf	(___fladd@b+2)& (0+255),b
  7243  001E1E                     L11:
  7244  001E1E  0E00               	movlw	0
  7245  001E20  6F63               	movwf	(___fladd@b+3)& (0+255),b
  7246                           
  7247                           ; BSR set to: 0
  7248  001E22  5167               	movf	(___fladd@a+3)& (0+255),w,b
  7249  001E24  0B80               	andlw	128
  7250  001E26  6F6D               	movwf	___fladd@aexp& (0+255),b
  7251                           
  7252                           ; BSR set to: 0
  7253  001E28  516C               	movf	___fladd@signs& (0+255),w,b
  7254  001E2A  196D               	xorwf	___fladd@aexp& (0+255),w,b
  7255  001E2C  A4D8               	btfss	status,2,c
  7256                           
  7257                           ; BSR set to: 0
  7258  001E2E  8D6C               	bsf	___fladd@signs& (0+255),6,b
  7259                           
  7260                           ; BSR set to: 0
  7261  001E30  5167               	movf	(___fladd@a+3)& (0+255),w,b
  7262  001E32  2567               	addwf	(___fladd@a+3)& (0+255),w,b
  7263  001E34  6F6D               	movwf	___fladd@aexp& (0+255),b
  7264                           
  7265                           ; BSR set to: 0
  7266  001E36  BF66               	btfsc	(___fladd@a+2)& (0+255),7,b
  7267                           
  7268                           ; BSR set to: 0
  7269  001E38  816D               	bsf	___fladd@aexp& (0+255),0,b
  7270                           
  7271                           ; BSR set to: 0
  7272  001E3A  516D               	movf	___fladd@aexp& (0+255),w,b
  7273  001E3C  B4D8               	btfsc	status,2,c
  7274  001E3E  D00D               	goto	l4035
  7275                           
  7276                           ; BSR set to: 0
  7277  001E40  296D               	incf	___fladd@aexp& (0+255),w,b
  7278  001E42  A4D8               	btfss	status,2,c
  7279  001E44  D008               	goto	l4031
  7280                           
  7281                           ; BSR set to: 0
  7282  001E46  0E00               	movlw	0
  7283  001E48  6F64               	movwf	___fladd@a& (0+255),b
  7284  001E4A  0E00               	movlw	0
  7285  001E4C  6F65               	movwf	(___fladd@a+1)& (0+255),b
  7286  001E4E  0E00               	movlw	0
  7287  001E50  6F66               	movwf	(___fladd@a+2)& (0+255),b
  7288  001E52  0E00               	movlw	0
  7289  001E54  6F67               	movwf	(___fladd@a+3)& (0+255),b
  7290  001E56                     l4031:
  7291                           
  7292                           ; BSR set to: 0
  7293  001E56  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
  7294  001E58  D006               	goto	L12
  7295  001E5A                     l4035:
  7296                           
  7297                           ; BSR set to: 0
  7298  001E5A  0E00               	movlw	0
  7299  001E5C  6F64               	movwf	___fladd@a& (0+255),b
  7300  001E5E  0E00               	movlw	0
  7301  001E60  6F65               	movwf	(___fladd@a+1)& (0+255),b
  7302  001E62  0E00               	movlw	0
  7303  001E64  6F66               	movwf	(___fladd@a+2)& (0+255),b
  7304  001E66                     L12:
  7305  001E66  0E00               	movlw	0
  7306  001E68  6F67               	movwf	(___fladd@a+3)& (0+255),b
  7307                           
  7308                           ; BSR set to: 0
  7309  001E6A  516E               	movf	___fladd@bexp& (0+255),w,b
  7310  001E6C  5D6D               	subwf	___fladd@aexp& (0+255),w,b
  7311  001E6E  B0D8               	btfsc	status,0,c
  7312  001E70  D031               	goto	l4073
  7313                           
  7314                           ; BSR set to: 0
  7315  001E72  AD6C               	btfss	___fladd@signs& (0+255),6,b
  7316  001E74  D002               	goto	l4043
  7317                           
  7318                           ; BSR set to: 0
  7319  001E76  0E80               	movlw	128
  7320  001E78  1B6C               	xorwf	___fladd@signs& (0+255),f,b
  7321  001E7A                     l4043:
  7322                           
  7323                           ; BSR set to: 0
  7324  001E7A  0060  F1B8  F06F   	movff	___fladd@bexp,___fladd@grs
  7325                           
  7326                           ; BSR set to: 0
  7327  001E80  0060  F1B4  F06E   	movff	___fladd@aexp,___fladd@bexp
  7328                           
  7329                           ; BSR set to: 0
  7330  001E86  0060  F1BC  F06D   	movff	___fladd@grs,___fladd@aexp
  7331                           
  7332                           ; BSR set to: 0
  7333  001E8C  0060  F180  F06F   	movff	___fladd@b,___fladd@grs
  7334                           
  7335                           ; BSR set to: 0
  7336  001E92  0060  F190  F060   	movff	___fladd@a,___fladd@b
  7337                           
  7338                           ; BSR set to: 0
  7339  001E98  0060  F1BC  F064   	movff	___fladd@grs,___fladd@a
  7340                           
  7341                           ; BSR set to: 0
  7342  001E9E  0060  F184  F06F   	movff	___fladd@b+1,___fladd@grs
  7343                           
  7344                           ; BSR set to: 0
  7345  001EA4  0060  F194  F061   	movff	___fladd@a+1,___fladd@b+1
  7346                           
  7347                           ; BSR set to: 0
  7348  001EAA  0060  F1BC  F065   	movff	___fladd@grs,___fladd@a+1
  7349                           
  7350                           ; BSR set to: 0
  7351  001EB0  0060  F188  F06F   	movff	___fladd@b+2,___fladd@grs
  7352                           
  7353                           ; BSR set to: 0
  7354  001EB6  0060  F198  F062   	movff	___fladd@a+2,___fladd@b+2
  7355                           
  7356                           ; BSR set to: 0
  7357  001EBC  0060  F1BC  F066   	movff	___fladd@grs,___fladd@a+2
  7358                           
  7359                           ; BSR set to: 0
  7360  001EC2  0060  F18C  F06F   	movff	___fladd@b+3,___fladd@grs
  7361                           
  7362                           ; BSR set to: 0
  7363  001EC8  0060  F19C  F063   	movff	___fladd@a+3,___fladd@b+3
  7364                           
  7365                           ; BSR set to: 0
  7366  001ECE  0060  F1BC  F067   	movff	___fladd@grs,___fladd@a+3
  7367  001ED4                     l4073:
  7368                           
  7369                           ; BSR set to: 0
  7370  001ED4  0E00               	movlw	0
  7371  001ED6  6F6F               	movwf	___fladd@grs& (0+255),b
  7372                           
  7373                           ; BSR set to: 0
  7374  001ED8  516E               	movf	___fladd@bexp& (0+255),w,b
  7375  001EDA  0060  F1B4  F068   	movff	___fladd@aexp,??___fladd
  7376  001EE0  6B69               	clrf	(??___fladd+1)& (0+255),b
  7377  001EE2  5F68               	subwf	??___fladd& (0+255),f,b
  7378  001EE4  0E00               	movlw	0
  7379  001EE6  5B69               	subwfb	(??___fladd+1)& (0+255),f,b
  7380  001EE8  BF69               	btfsc	(??___fladd+1)& (0+255),7,b
  7381  001EEA  D02D               	goto	l1121
  7382  001EEC  5169               	movf	(??___fladd+1)& (0+255),w,b
  7383  001EEE  E104               	bnz	u4070
  7384  001EF0  0E1A               	movlw	26
  7385  001EF2  5D68               	subwf	??___fladd& (0+255),w,b
  7386  001EF4  A0D8               	btfss	status,0,c
  7387  001EF6  D027               	goto	l1121
  7388  001EF8                     u4070:
  7389                           
  7390                           ; BSR set to: 0
  7391  001EF8  5160               	movf	___fladd@b& (0+255),w,b
  7392  001EFA  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  7393  001EFC  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  7394  001EFE  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  7395  001F00  B4D8               	btfsc	status,2,c
  7396  001F02  D002               	goto	u4080
  7397  001F04  0E01               	movlw	1
  7398  001F06  D001               	goto	u4090
  7399  001F08                     u4080:
  7400  001F08  0E00               	movlw	0
  7401  001F0A                     u4090:
  7402  001F0A  6F6F               	movwf	___fladd@grs& (0+255),b
  7403                           
  7404                           ; BSR set to: 0
  7405  001F0C  0E00               	movlw	0
  7406  001F0E  6F60               	movwf	___fladd@b& (0+255),b
  7407  001F10  0E00               	movlw	0
  7408  001F12  6F61               	movwf	(___fladd@b+1)& (0+255),b
  7409  001F14  0E00               	movlw	0
  7410  001F16  6F62               	movwf	(___fladd@b+2)& (0+255),b
  7411  001F18  0E00               	movlw	0
  7412  001F1A  6F63               	movwf	(___fladd@b+3)& (0+255),b
  7413                           
  7414                           ; BSR set to: 0
  7415  001F1C  0060  F1B4  F06E   	movff	___fladd@aexp,___fladd@bexp
  7416  001F22  D015               	goto	u4120
  7417  001F24                     l1122:
  7418                           
  7419                           ; BSR set to: 0
  7420  001F24  A16F               	btfss	___fladd@grs& (0+255),0,b
  7421  001F26  D005               	goto	l4085
  7422                           
  7423                           ; BSR set to: 0
  7424  001F28  90D8               	bcf	status,0,c
  7425  001F2A  316F               	rrcf	___fladd@grs& (0+255),w,b
  7426  001F2C  0901               	iorlw	1
  7427  001F2E  6F6F               	movwf	___fladd@grs& (0+255),b
  7428  001F30  D002               	goto	l4087
  7429  001F32                     l4085:
  7430                           
  7431                           ; BSR set to: 0
  7432  001F32  90D8               	bcf	status,0,c
  7433  001F34  336F               	rrcf	___fladd@grs& (0+255),f,b
  7434  001F36                     l4087:
  7435                           
  7436                           ; BSR set to: 0
  7437  001F36  B160               	btfsc	___fladd@b& (0+255),0,b
  7438                           
  7439                           ; BSR set to: 0
  7440  001F38  8F6F               	bsf	___fladd@grs& (0+255),7,b
  7441                           
  7442                           ; BSR set to: 0
  7443  001F3A  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  7444  001F3C  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  7445  001F3E  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  7446  001F40  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  7447  001F42  3360               	rrcf	___fladd@b& (0+255),f,b
  7448                           
  7449                           ; BSR set to: 0
  7450  001F44  2B6E               	incf	___fladd@bexp& (0+255),f,b
  7451  001F46                     l1121:
  7452                           
  7453                           ; BSR set to: 0
  7454  001F46  516D               	movf	___fladd@aexp& (0+255),w,b
  7455  001F48  5D6E               	subwf	___fladd@bexp& (0+255),w,b
  7456  001F4A  A0D8               	btfss	status,0,c
  7457  001F4C  D7EB               	goto	l1122
  7458  001F4E                     u4120:
  7459                           
  7460                           ; BSR set to: 0
  7461  001F4E  BD6C               	btfsc	___fladd@signs& (0+255),6,b
  7462  001F50  D028               	goto	l4119
  7463                           
  7464                           ; BSR set to: 0
  7465  001F52  516E               	movf	___fladd@bexp& (0+255),w,b
  7466  001F54  A4D8               	btfss	status,2,c
  7467  001F56  D009               	goto	l4101
  7468                           
  7469                           ; BSR set to: 0
  7470  001F58  0E00               	movlw	0
  7471  001F5A  6F60               	movwf	?___fladd& (0+255),b
  7472  001F5C  0E00               	movlw	0
  7473  001F5E  6F61               	movwf	(?___fladd+1)& (0+255),b
  7474  001F60  0E00               	movlw	0
  7475  001F62  6F62               	movwf	(?___fladd+2)& (0+255),b
  7476  001F64  0E00               	movlw	0
  7477  001F66  6F63               	movwf	(?___fladd+3)& (0+255),b
  7478  001F68  0012               	return	
  7479  001F6A                     l4101:
  7480                           
  7481                           ; BSR set to: 0
  7482  001F6A  5164               	movf	___fladd@a& (0+255),w,b
  7483  001F6C  2760               	addwf	___fladd@b& (0+255),f,b
  7484  001F6E  5165               	movf	(___fladd@a+1)& (0+255),w,b
  7485  001F70  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  7486  001F72  5166               	movf	(___fladd@a+2)& (0+255),w,b
  7487  001F74  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  7488  001F76  5167               	movf	(___fladd@a+3)& (0+255),w,b
  7489  001F78  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  7490                           
  7491                           ; BSR set to: 0
  7492  001F7A  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  7493  001F7C  D071               	goto	u4250
  7494                           
  7495                           ; BSR set to: 0
  7496  001F7E  A16F               	btfss	___fladd@grs& (0+255),0,b
  7497  001F80  D005               	goto	l4109
  7498                           
  7499                           ; BSR set to: 0
  7500  001F82  90D8               	bcf	status,0,c
  7501  001F84  316F               	rrcf	___fladd@grs& (0+255),w,b
  7502  001F86  0901               	iorlw	1
  7503  001F88  6F6F               	movwf	___fladd@grs& (0+255),b
  7504  001F8A  D002               	goto	l4111
  7505  001F8C                     l4109:
  7506                           
  7507                           ; BSR set to: 0
  7508  001F8C  90D8               	bcf	status,0,c
  7509  001F8E  336F               	rrcf	___fladd@grs& (0+255),f,b
  7510  001F90                     l4111:
  7511                           
  7512                           ; BSR set to: 0
  7513  001F90  B160               	btfsc	___fladd@b& (0+255),0,b
  7514                           
  7515                           ; BSR set to: 0
  7516  001F92  8F6F               	bsf	___fladd@grs& (0+255),7,b
  7517                           
  7518                           ; BSR set to: 0
  7519  001F94  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  7520  001F96  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  7521  001F98  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  7522  001F9A  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  7523  001F9C  3360               	rrcf	___fladd@b& (0+255),f,b
  7524                           
  7525                           ; BSR set to: 0
  7526  001F9E  2B6E               	incf	___fladd@bexp& (0+255),f,b
  7527  001FA0  D05F               	goto	u4250
  7528  001FA2                     l4119:
  7529                           
  7530                           ; BSR set to: 0
  7531  001FA2  5164               	movf	___fladd@a& (0+255),w,b
  7532  001FA4  5D60               	subwf	___fladd@b& (0+255),w,b
  7533  001FA6  5165               	movf	(___fladd@a+1)& (0+255),w,b
  7534  001FA8  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
  7535  001FAA  5166               	movf	(___fladd@a+2)& (0+255),w,b
  7536  001FAC  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
  7537  001FAE  5163               	movf	(___fladd@b+3)& (0+255),w,b
  7538  001FB0  0A80               	xorlw	128
  7539  001FB2  6F68               	movwf	??___fladd& (0+255),b
  7540  001FB4  5167               	movf	(___fladd@a+3)& (0+255),w,b
  7541  001FB6  0A80               	xorlw	128
  7542  001FB8  5968               	subwfb	??___fladd& (0+255),w,b
  7543  001FBA  B0D8               	btfsc	status,0,c
  7544  001FBC  D025               	goto	l4129
  7545                           
  7546                           ; BSR set to: 0
  7547  001FBE  5160               	movf	___fladd@b& (0+255),w,b
  7548  001FC0  5D64               	subwf	___fladd@a& (0+255),w,b
  7549  001FC2  6F68               	movwf	??___fladd& (0+255),b
  7550  001FC4  5161               	movf	(___fladd@b+1)& (0+255),w,b
  7551  001FC6  5965               	subwfb	(___fladd@a+1)& (0+255),w,b
  7552  001FC8  6F69               	movwf	(??___fladd+1)& (0+255),b
  7553  001FCA  5162               	movf	(___fladd@b+2)& (0+255),w,b
  7554  001FCC  5966               	subwfb	(___fladd@a+2)& (0+255),w,b
  7555  001FCE  6F6A               	movwf	(??___fladd+2)& (0+255),b
  7556  001FD0  5163               	movf	(___fladd@b+3)& (0+255),w,b
  7557  001FD2  5967               	subwfb	(___fladd@a+3)& (0+255),w,b
  7558  001FD4  6F6B               	movwf	(??___fladd+3)& (0+255),b
  7559  001FD6  0EFF               	movlw	255
  7560  001FD8  2568               	addwf	??___fladd& (0+255),w,b
  7561  001FDA  6F60               	movwf	___fladd@b& (0+255),b
  7562  001FDC  0EFF               	movlw	255
  7563  001FDE  2169               	addwfc	(??___fladd+1)& (0+255),w,b
  7564  001FE0  6F61               	movwf	(___fladd@b+1)& (0+255),b
  7565  001FE2  0EFF               	movlw	255
  7566  001FE4  216A               	addwfc	(??___fladd+2)& (0+255),w,b
  7567  001FE6  6F62               	movwf	(___fladd@b+2)& (0+255),b
  7568  001FE8  0EFF               	movlw	255
  7569  001FEA  216B               	addwfc	(??___fladd+3)& (0+255),w,b
  7570  001FEC  6F63               	movwf	(___fladd@b+3)& (0+255),b
  7571  001FEE  0E80               	movlw	128
  7572  001FF0  1B6C               	xorwf	___fladd@signs& (0+255),f,b
  7573                           
  7574                           ; BSR set to: 0
  7575  001FF2  6D6F               	negf	___fladd@grs& (0+255),b
  7576                           
  7577                           ; BSR set to: 0
  7578  001FF4  516F               	movf	___fladd@grs& (0+255),w,b
  7579  001FF6  A4D8               	btfss	status,2,c
  7580  001FF8  D00F               	goto	l1137
  7581                           
  7582                           ; BSR set to: 0
  7583  001FFA  0E01               	movlw	1
  7584  001FFC  2760               	addwf	___fladd@b& (0+255),f,b
  7585  001FFE  0E00               	movlw	0
  7586  002000  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  7587  002002  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  7588  002004  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  7589  002006  D008               	goto	l1137
  7590  002008                     l4129:
  7591                           
  7592                           ; BSR set to: 0
  7593  002008  5164               	movf	___fladd@a& (0+255),w,b
  7594  00200A  5F60               	subwf	___fladd@b& (0+255),f,b
  7595  00200C  5165               	movf	(___fladd@a+1)& (0+255),w,b
  7596  00200E  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
  7597  002010  5166               	movf	(___fladd@a+2)& (0+255),w,b
  7598  002012  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
  7599  002014  5167               	movf	(___fladd@a+3)& (0+255),w,b
  7600  002016  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
  7601  002018                     l1137:
  7602                           
  7603                           ; BSR set to: 0
  7604  002018  5160               	movf	___fladd@b& (0+255),w,b
  7605  00201A  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  7606  00201C  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  7607  00201E  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  7608  002020  A4D8               	btfss	status,2,c
  7609  002022  D01C               	goto	l4153
  7610                           
  7611                           ; BSR set to: 0
  7612  002024  516F               	movf	___fladd@grs& (0+255),w,b
  7613  002026  A4D8               	btfss	status,2,c
  7614  002028  D019               	goto	l4153
  7615                           
  7616                           ; BSR set to: 0
  7617  00202A  0E00               	movlw	0
  7618  00202C  6F60               	movwf	?___fladd& (0+255),b
  7619  00202E  0E00               	movlw	0
  7620  002030  6F61               	movwf	(?___fladd+1)& (0+255),b
  7621  002032  0E00               	movlw	0
  7622  002034  6F62               	movwf	(?___fladd+2)& (0+255),b
  7623  002036  0E00               	movlw	0
  7624  002038  6F63               	movwf	(?___fladd+3)& (0+255),b
  7625  00203A  0012               	return	
  7626  00203C                     l4137:
  7627                           
  7628                           ; BSR set to: 0
  7629  00203C  90D8               	bcf	status,0,c
  7630  00203E  3760               	rlcf	___fladd@b& (0+255),f,b
  7631  002040  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
  7632  002042  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
  7633  002044  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
  7634                           
  7635                           ; BSR set to: 0
  7636  002046  BF6F               	btfsc	___fladd@grs& (0+255),7,b
  7637                           
  7638                           ; BSR set to: 0
  7639  002048  8160               	bsf	___fladd@b& (0+255),0,b
  7640                           
  7641                           ; BSR set to: 0
  7642  00204A  A16F               	btfss	___fladd@grs& (0+255),0,b
  7643  00204C  D002               	goto	l4147
  7644                           
  7645                           ; BSR set to: 0
  7646  00204E  80D8               	bsf	status,0,c
  7647  002050  D001               	goto	L13
  7648  002052                     l4147:
  7649                           
  7650                           ; BSR set to: 0
  7651  002052  90D8               	bcf	status,0,c
  7652  002054                     L13:
  7653  002054  376F               	rlcf	___fladd@grs& (0+255),f,b
  7654                           
  7655                           ; BSR set to: 0
  7656  002056  516E               	movf	___fladd@bexp& (0+255),w,b
  7657  002058  A4D8               	btfss	status,2,c
  7658                           
  7659                           ; BSR set to: 0
  7660  00205A  076E               	decf	___fladd@bexp& (0+255),f,b
  7661  00205C                     l4153:
  7662                           
  7663                           ; BSR set to: 0
  7664  00205C  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
  7665  00205E  D7EE               	goto	l4137
  7666  002060                     u4250:
  7667                           
  7668                           ; BSR set to: 0
  7669  002060  0E00               	movlw	0
  7670  002062  6F6D               	movwf	___fladd@aexp& (0+255),b
  7671                           
  7672                           ; BSR set to: 0
  7673  002064  AF6F               	btfss	___fladd@grs& (0+255),7,b
  7674  002066  D00C               	goto	l1146
  7675                           
  7676                           ; BSR set to: 0
  7677  002068  0060  F1BC  F068   	movff	___fladd@grs,??___fladd
  7678  00206E  0E7F               	movlw	127
  7679  002070  1768               	andwf	??___fladd& (0+255),f,b
  7680  002072  B4D8               	btfsc	status,2,c
  7681  002074  D003               	goto	l1147
  7682  002076                     u4270:
  7683                           
  7684                           ; BSR set to: 0
  7685  002076  0E01               	movlw	1
  7686  002078  6F6D               	movwf	___fladd@aexp& (0+255),b
  7687  00207A  D002               	goto	l1146
  7688  00207C                     l1147:
  7689                           
  7690                           ; BSR set to: 0
  7691  00207C  B160               	btfsc	___fladd@b& (0+255),0,b
  7692  00207E  D7FB               	goto	u4270
  7693  002080                     l1146:
  7694                           
  7695                           ; BSR set to: 0
  7696  002080  516D               	movf	___fladd@aexp& (0+255),w,b
  7697  002082  B4D8               	btfsc	status,2,c
  7698  002084  D028               	goto	l4173
  7699                           
  7700                           ; BSR set to: 0
  7701  002086  0E01               	movlw	1
  7702  002088  2760               	addwf	___fladd@b& (0+255),f,b
  7703  00208A  0E00               	movlw	0
  7704  00208C  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  7705  00208E  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  7706  002090  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  7707                           
  7708                           ; BSR set to: 0
  7709  002092  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  7710  002094  D020               	goto	l4173
  7711                           
  7712                           ; BSR set to: 0
  7713  002096  0060  F180  F068   	movff	___fladd@b,??___fladd
  7714  00209C  0060  F184  F069   	movff	___fladd@b+1,??___fladd+1
  7715  0020A2  0060  F188  F06A   	movff	___fladd@b+2,??___fladd+2
  7716  0020A8  0060  F18C  F06B   	movff	___fladd@b+3,??___fladd+3
  7717  0020AE  356B               	rlcf	(??___fladd+3)& (0+255),w,b
  7718  0020B0  336B               	rrcf	(??___fladd+3)& (0+255),f,b
  7719  0020B2  336A               	rrcf	(??___fladd+2)& (0+255),f,b
  7720  0020B4  3369               	rrcf	(??___fladd+1)& (0+255),f,b
  7721  0020B6  3368               	rrcf	??___fladd& (0+255),f,b
  7722  0020B8  0060  F1A0  F060   	movff	??___fladd,___fladd@b
  7723  0020BE  0060  F1A4  F061   	movff	??___fladd+1,___fladd@b+1
  7724  0020C4  0060  F1A8  F062   	movff	??___fladd+2,___fladd@b+2
  7725  0020CA  0060  F1AC  F063   	movff	??___fladd+3,___fladd@b+3
  7726  0020D0  296E               	incf	___fladd@bexp& (0+255),w,b
  7727  0020D2  A4D8               	btfss	status,2,c
  7728                           
  7729                           ; BSR set to: 0
  7730  0020D4  2B6E               	incf	___fladd@bexp& (0+255),f,b
  7731  0020D6                     l4173:
  7732                           
  7733                           ; BSR set to: 0
  7734  0020D6  296E               	incf	___fladd@bexp& (0+255),w,b
  7735  0020D8  B4D8               	btfsc	status,2,c
  7736  0020DA  D003               	goto	u4330
  7737                           
  7738                           ; BSR set to: 0
  7739  0020DC  516E               	movf	___fladd@bexp& (0+255),w,b
  7740  0020DE  A4D8               	btfss	status,2,c
  7741  0020E0  D00D               	goto	l4181
  7742  0020E2                     u4330:
  7743                           
  7744                           ; BSR set to: 0
  7745  0020E2  0E00               	movlw	0
  7746  0020E4  6F60               	movwf	___fladd@b& (0+255),b
  7747  0020E6  0E00               	movlw	0
  7748  0020E8  6F61               	movwf	(___fladd@b+1)& (0+255),b
  7749  0020EA  0E00               	movlw	0
  7750  0020EC  6F62               	movwf	(___fladd@b+2)& (0+255),b
  7751  0020EE  0E00               	movlw	0
  7752  0020F0  6F63               	movwf	(___fladd@b+3)& (0+255),b
  7753  0020F2  516E               	movf	___fladd@bexp& (0+255),w,b
  7754  0020F4  A4D8               	btfss	status,2,c
  7755  0020F6  D002               	goto	l4181
  7756                           
  7757                           ; BSR set to: 0
  7758  0020F8  0E00               	movlw	0
  7759  0020FA  6F6C               	movwf	___fladd@signs& (0+255),b
  7760  0020FC                     l4181:
  7761                           
  7762                           ; BSR set to: 0
  7763  0020FC  A16E               	btfss	___fladd@bexp& (0+255),0,b
  7764  0020FE  D002               	goto	l4185
  7765                           
  7766                           ; BSR set to: 0
  7767  002100  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  7768  002102  D001               	goto	l4187
  7769  002104                     l4185:
  7770                           
  7771                           ; BSR set to: 0
  7772  002104  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
  7773  002106                     l4187:
  7774                           
  7775                           ; BSR set to: 0
  7776  002106  90D8               	bcf	status,0,c
  7777  002108  316E               	rrcf	___fladd@bexp& (0+255),w,b
  7778  00210A  6F63               	movwf	(___fladd@b+3)& (0+255),b
  7779                           
  7780                           ; BSR set to: 0
  7781  00210C  BF6C               	btfsc	___fladd@signs& (0+255),7,b
  7782                           
  7783                           ; BSR set to: 0
  7784  00210E  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
  7785                           
  7786                           ; BSR set to: 0
  7787  002110  0060  F180  F060   	movff	___fladd@b,?___fladd
  7788  002116  0060  F184  F061   	movff	___fladd@b+1,?___fladd+1
  7789  00211C  0060  F188  F062   	movff	___fladd@b+2,?___fladd+2
  7790  002122  0060  F18C  F063   	movff	___fladd@b+3,?___fladd+3
  7791                           
  7792                           ; BSR set to: 0
  7793  002128  0012               	return		;funcret
  7794  00212A                     __end_of___fladd:
  7795                           	opt callstack 0
  7796                           
  7797 ;; *************** function ___flneg *****************
  7798 ;; Defined at:
  7799 ;;		line 15 in file "D:\MPLAB\pic\sources\c99\common\flneg.c"
  7800 ;; Parameters:    Size  Location     Type
  7801 ;;  f1              4    0[BANK0 ] unsigned char 
  7802 ;; Auto vars:     Size  Location     Type
  7803 ;;		None
  7804 ;; Return value:  Size  Location     Type
  7805 ;;                  4    0[BANK0 ] unsigned char 
  7806 ;; Registers used:
  7807 ;;		wreg, status,2, status,0
  7808 ;; Tracked objects:
  7809 ;;		On entry : 0/0
  7810 ;;		On exit  : 0/0
  7811 ;;		Unchanged: 0/0
  7812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7813 ;;      Params:         0       4       0       0       0       0       0       0       0
  7814 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7815 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7816 ;;      Totals:         0       4       0       0       0       0       0       0       0
  7817 ;;Total ram usage:        4 bytes
  7818 ;; Hardware stack levels used:    1
  7819 ;; Hardware stack levels required when called:    3
  7820 ;; This function calls:
  7821 ;;		Nothing
  7822 ;; This function is called by:
  7823 ;;		_efgtoa
  7824 ;; This function uses a non-reentrant model
  7825 ;;
  7826                           
  7827                           	psect	text14
  7828  0044FE                     __ptext14:
  7829                           	opt callstack 0
  7830  0044FE                     ___flneg:
  7831                           	opt callstack 23
  7832                           
  7833                           ; BSR set to: 0
  7834                           ;incstack = 0
  7835  0044FE  0100               	movlb	0	; () banked
  7836  004500  5160               	movf	___flneg@f1& (0+255),w,b
  7837  004502  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
  7838  004504  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
  7839  004506  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
  7840  004508  B4D8               	btfsc	status,2,c
  7841  00450A  D008               	goto	l4773
  7842                           
  7843                           ; BSR set to: 0
  7844  00450C  0E00               	movlw	0
  7845  00450E  1B60               	xorwf	___flneg@f1& (0+255),f,b
  7846  004510  0E00               	movlw	0
  7847  004512  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
  7848  004514  0E00               	movlw	0
  7849  004516  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
  7850  004518  0E80               	movlw	128
  7851  00451A  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
  7852  00451C                     l4773:
  7853                           
  7854                           ; BSR set to: 0
  7855  00451C  0060  F180  F060   	movff	___flneg@f1,?___flneg
  7856  004522  0060  F184  F061   	movff	___flneg@f1+1,?___flneg+1
  7857  004528  0060  F188  F062   	movff	___flneg@f1+2,?___flneg+2
  7858  00452E  0060  F18C  F063   	movff	___flneg@f1+3,?___flneg+3
  7859                           
  7860                           ; BSR set to: 0
  7861  004534  0012               	return		;funcret
  7862  004536                     __end_of___flneg:
  7863                           	opt callstack 0
  7864                           
  7865 ;; *************** function ___flmul *****************
  7866 ;; Defined at:
  7867 ;;		line 8 in file "D:\MPLAB\pic\sources\c99\common\sprcmul.c"
  7868 ;; Parameters:    Size  Location     Type
  7869 ;;  b               4    0[BANK0 ] unsigned char 
  7870 ;;  a               4    4[BANK0 ] unsigned char 
  7871 ;; Auto vars:     Size  Location     Type
  7872 ;;  prod            4   19[BANK0 ] struct .
  7873 ;;  grs             4   13[BANK0 ] unsigned long 
  7874 ;;  temp            2   23[BANK0 ] struct .
  7875 ;;  bexp            1   18[BANK0 ] unsigned char 
  7876 ;;  aexp            1   17[BANK0 ] unsigned char 
  7877 ;;  sign            1   12[BANK0 ] unsigned char 
  7878 ;; Return value:  Size  Location     Type
  7879 ;;                  4    0[BANK0 ] unsigned char 
  7880 ;; Registers used:
  7881 ;;		wreg, status,2, status,0, prodl, prodh
  7882 ;; Tracked objects:
  7883 ;;		On entry : 0/0
  7884 ;;		On exit  : 0/0
  7885 ;;		Unchanged: 0/0
  7886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7887 ;;      Params:         0       8       0       0       0       0       0       0       0
  7888 ;;      Locals:         0      13       0       0       0       0       0       0       0
  7889 ;;      Temps:          0       4       0       0       0       0       0       0       0
  7890 ;;      Totals:         0      25       0       0       0       0       0       0       0
  7891 ;;Total ram usage:       25 bytes
  7892 ;; Hardware stack levels used:    1
  7893 ;; Hardware stack levels required when called:    3
  7894 ;; This function calls:
  7895 ;;		Nothing
  7896 ;; This function is called by:
  7897 ;;		_efgtoa
  7898 ;; This function uses a non-reentrant model
  7899 ;;
  7900                           
  7901                           	psect	text15
  7902  001A2C                     __ptext15:
  7903                           	opt callstack 0
  7904  001A2C                     ___flmul:
  7905                           	opt callstack 23
  7906                           
  7907                           ; BSR set to: 0
  7908                           ;incstack = 0
  7909  001A2C  0100               	movlb	0	; () banked
  7910  001A2E  5163               	movf	(___flmul@b+3)& (0+255),w,b
  7911  001A30  0B80               	andlw	128
  7912  001A32  6F6C               	movwf	___flmul@sign& (0+255),b
  7913  001A34  5163               	movf	(___flmul@b+3)& (0+255),w,b
  7914  001A36  2563               	addwf	(___flmul@b+3)& (0+255),w,b
  7915  001A38  6F72               	movwf	___flmul@bexp& (0+255),b
  7916                           
  7917                           ; BSR set to: 0
  7918  001A3A  BF62               	btfsc	(___flmul@b+2)& (0+255),7,b
  7919                           
  7920                           ; BSR set to: 0
  7921  001A3C  8172               	bsf	___flmul@bexp& (0+255),0,b
  7922                           
  7923                           ; BSR set to: 0
  7924  001A3E  5172               	movf	___flmul@bexp& (0+255),w,b
  7925  001A40  B4D8               	btfsc	status,2,c
  7926  001A42  D00D               	goto	l4529
  7927                           
  7928                           ; BSR set to: 0
  7929  001A44  2972               	incf	___flmul@bexp& (0+255),w,b
  7930  001A46  A4D8               	btfss	status,2,c
  7931  001A48  D008               	goto	l4527
  7932                           
  7933                           ; BSR set to: 0
  7934  001A4A  0E00               	movlw	0
  7935  001A4C  6F60               	movwf	___flmul@b& (0+255),b
  7936  001A4E  0E00               	movlw	0
  7937  001A50  6F61               	movwf	(___flmul@b+1)& (0+255),b
  7938  001A52  0E00               	movlw	0
  7939  001A54  6F62               	movwf	(___flmul@b+2)& (0+255),b
  7940  001A56  0E00               	movlw	0
  7941  001A58  6F63               	movwf	(___flmul@b+3)& (0+255),b
  7942  001A5A                     l4527:
  7943                           
  7944                           ; BSR set to: 0
  7945  001A5A  8F62               	bsf	(___flmul@b+2)& (0+255),7,b
  7946  001A5C  D008               	goto	l4531
  7947  001A5E                     l4529:
  7948                           
  7949                           ; BSR set to: 0
  7950  001A5E  0E00               	movlw	0
  7951  001A60  6F60               	movwf	___flmul@b& (0+255),b
  7952  001A62  0E00               	movlw	0
  7953  001A64  6F61               	movwf	(___flmul@b+1)& (0+255),b
  7954  001A66  0E00               	movlw	0
  7955  001A68  6F62               	movwf	(___flmul@b+2)& (0+255),b
  7956  001A6A  0E00               	movlw	0
  7957  001A6C  6F63               	movwf	(___flmul@b+3)& (0+255),b
  7958  001A6E                     l4531:
  7959                           
  7960                           ; BSR set to: 0
  7961  001A6E  5167               	movf	(___flmul@a+3)& (0+255),w,b
  7962  001A70  0B80               	andlw	128
  7963  001A72  1B6C               	xorwf	___flmul@sign& (0+255),f,b
  7964                           
  7965                           ; BSR set to: 0
  7966  001A74  5167               	movf	(___flmul@a+3)& (0+255),w,b
  7967  001A76  2567               	addwf	(___flmul@a+3)& (0+255),w,b
  7968  001A78  6F71               	movwf	___flmul@aexp& (0+255),b
  7969                           
  7970                           ; BSR set to: 0
  7971  001A7A  BF66               	btfsc	(___flmul@a+2)& (0+255),7,b
  7972                           
  7973                           ; BSR set to: 0
  7974  001A7C  8171               	bsf	___flmul@aexp& (0+255),0,b
  7975                           
  7976                           ; BSR set to: 0
  7977  001A7E  5171               	movf	___flmul@aexp& (0+255),w,b
  7978  001A80  B4D8               	btfsc	status,2,c
  7979  001A82  D00D               	goto	l4547
  7980                           
  7981                           ; BSR set to: 0
  7982  001A84  2971               	incf	___flmul@aexp& (0+255),w,b
  7983  001A86  A4D8               	btfss	status,2,c
  7984  001A88  D008               	goto	l4545
  7985                           
  7986                           ; BSR set to: 0
  7987  001A8A  0E00               	movlw	0
  7988  001A8C  6F64               	movwf	___flmul@a& (0+255),b
  7989  001A8E  0E00               	movlw	0
  7990  001A90  6F65               	movwf	(___flmul@a+1)& (0+255),b
  7991  001A92  0E00               	movlw	0
  7992  001A94  6F66               	movwf	(___flmul@a+2)& (0+255),b
  7993  001A96  0E00               	movlw	0
  7994  001A98  6F67               	movwf	(___flmul@a+3)& (0+255),b
  7995  001A9A                     l4545:
  7996                           
  7997                           ; BSR set to: 0
  7998  001A9A  8F66               	bsf	(___flmul@a+2)& (0+255),7,b
  7999  001A9C  D008               	goto	l1206
  8000  001A9E                     l4547:
  8001                           
  8002                           ; BSR set to: 0
  8003  001A9E  0E00               	movlw	0
  8004  001AA0  6F64               	movwf	___flmul@a& (0+255),b
  8005  001AA2  0E00               	movlw	0
  8006  001AA4  6F65               	movwf	(___flmul@a+1)& (0+255),b
  8007  001AA6  0E00               	movlw	0
  8008  001AA8  6F66               	movwf	(___flmul@a+2)& (0+255),b
  8009  001AAA  0E00               	movlw	0
  8010  001AAC  6F67               	movwf	(___flmul@a+3)& (0+255),b
  8011  001AAE                     l1206:
  8012                           
  8013                           ; BSR set to: 0
  8014  001AAE  5171               	movf	___flmul@aexp& (0+255),w,b
  8015  001AB0  B4D8               	btfsc	status,2,c
  8016  001AB2  D003               	goto	u5090
  8017                           
  8018                           ; BSR set to: 0
  8019  001AB4  5172               	movf	___flmul@bexp& (0+255),w,b
  8020  001AB6  A4D8               	btfss	status,2,c
  8021  001AB8  D009               	goto	l4555
  8022  001ABA                     u5090:
  8023                           
  8024                           ; BSR set to: 0
  8025  001ABA  0E00               	movlw	0
  8026  001ABC  6F60               	movwf	?___flmul& (0+255),b
  8027  001ABE  0E00               	movlw	0
  8028  001AC0  6F61               	movwf	(?___flmul+1)& (0+255),b
  8029  001AC2  0E00               	movlw	0
  8030  001AC4  6F62               	movwf	(?___flmul+2)& (0+255),b
  8031  001AC6  0E00               	movlw	0
  8032  001AC8  6F63               	movwf	(?___flmul+3)& (0+255),b
  8033  001ACA  0012               	return	
  8034  001ACC                     l4555:
  8035                           
  8036                           ; BSR set to: 0
  8037  001ACC  5166               	movf	(___flmul@a+2)& (0+255),w,b
  8038  001ACE  0360               	mulwf	___flmul@b& (0+255),b
  8039  001AD0  006F FFCC  F077    	movff	prodl,___flmul@temp
  8040  001AD6  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  8041                           
  8042                           ; BSR set to: 0
  8043  001ADC  5177               	movf	___flmul@temp& (0+255),w,b
  8044  001ADE  6F6D               	movwf	___flmul@grs& (0+255),b
  8045  001AE0  6B6E               	clrf	(___flmul@grs+1)& (0+255),b
  8046  001AE2  6B6F               	clrf	(___flmul@grs+2)& (0+255),b
  8047  001AE4  6B70               	clrf	(___flmul@grs+3)& (0+255),b
  8048                           
  8049                           ; BSR set to: 0
  8050  001AE6  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  8051  001AE8  6F73               	movwf	___flmul@prod& (0+255),b
  8052  001AEA  6B74               	clrf	(___flmul@prod+1)& (0+255),b
  8053  001AEC  6B75               	clrf	(___flmul@prod+2)& (0+255),b
  8054  001AEE  6B76               	clrf	(___flmul@prod+3)& (0+255),b
  8055  001AF0  5165               	movf	(___flmul@a+1)& (0+255),w,b
  8056  001AF2  0361               	mulwf	(___flmul@b+1)& (0+255),b
  8057  001AF4  006F FFCC  F077    	movff	prodl,___flmul@temp
  8058  001AFA  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  8059                           
  8060                           ; BSR set to: 0
  8061  001B00  5177               	movf	___flmul@temp& (0+255),w,b
  8062  001B02  276D               	addwf	___flmul@grs& (0+255),f,b
  8063  001B04  0E00               	movlw	0
  8064  001B06  236E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8065  001B08  236F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8066  001B0A  2370               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8067                           
  8068                           ; BSR set to: 0
  8069  001B0C  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  8070  001B0E  2773               	addwf	___flmul@prod& (0+255),f,b
  8071  001B10  0E00               	movlw	0
  8072  001B12  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8073  001B14  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8074  001B16  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8075  001B18  5164               	movf	___flmul@a& (0+255),w,b
  8076  001B1A  0362               	mulwf	(___flmul@b+2)& (0+255),b
  8077  001B1C  006F FFCC  F077    	movff	prodl,___flmul@temp
  8078  001B22  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  8079                           
  8080                           ; BSR set to: 0
  8081  001B28  5177               	movf	___flmul@temp& (0+255),w,b
  8082  001B2A  276D               	addwf	___flmul@grs& (0+255),f,b
  8083  001B2C  0E00               	movlw	0
  8084  001B2E  236E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8085  001B30  236F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8086  001B32  2370               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8087                           
  8088                           ; BSR set to: 0
  8089  001B34  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  8090  001B36  2773               	addwf	___flmul@prod& (0+255),f,b
  8091  001B38  0E00               	movlw	0
  8092  001B3A  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8093  001B3C  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8094  001B3E  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8095                           
  8096                           ; BSR set to: 0
  8097  001B40  0060  F1BC  F070   	movff	___flmul@grs+2,___flmul@grs+3
  8098  001B46  0060  F1B8  F06F   	movff	___flmul@grs+1,___flmul@grs+2
  8099  001B4C  0060  F1B4  F06E   	movff	___flmul@grs,___flmul@grs+1
  8100  001B52  6B6D               	clrf	___flmul@grs& (0+255),b
  8101                           
  8102                           ; BSR set to: 0
  8103  001B54  5164               	movf	___flmul@a& (0+255),w,b
  8104  001B56  0361               	mulwf	(___flmul@b+1)& (0+255),b
  8105  001B58  006F FFCC  F077    	movff	prodl,___flmul@temp
  8106  001B5E  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  8107                           
  8108                           ; BSR set to: 0
  8109  001B64  5177               	movf	___flmul@temp& (0+255),w,b
  8110  001B66  276D               	addwf	___flmul@grs& (0+255),f,b
  8111  001B68  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  8112  001B6A  236E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8113  001B6C  0E00               	movlw	0
  8114  001B6E  236F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8115  001B70  0E00               	movlw	0
  8116  001B72  2370               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8117                           
  8118                           ; BSR set to: 0
  8119  001B74  5165               	movf	(___flmul@a+1)& (0+255),w,b
  8120  001B76  0360               	mulwf	___flmul@b& (0+255),b
  8121  001B78  006F FFCC  F077    	movff	prodl,___flmul@temp
  8122  001B7E  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  8123                           
  8124                           ; BSR set to: 0
  8125  001B84  5177               	movf	___flmul@temp& (0+255),w,b
  8126  001B86  276D               	addwf	___flmul@grs& (0+255),f,b
  8127  001B88  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  8128  001B8A  236E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8129  001B8C  0E00               	movlw	0
  8130  001B8E  236F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8131  001B90  0E00               	movlw	0
  8132  001B92  2370               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8133                           
  8134                           ; BSR set to: 0
  8135  001B94  0060  F1BC  F070   	movff	___flmul@grs+2,___flmul@grs+3
  8136  001B9A  0060  F1B8  F06F   	movff	___flmul@grs+1,___flmul@grs+2
  8137  001BA0  0060  F1B4  F06E   	movff	___flmul@grs,___flmul@grs+1
  8138  001BA6  6B6D               	clrf	___flmul@grs& (0+255),b
  8139  001BA8  5164               	movf	___flmul@a& (0+255),w,b
  8140  001BAA  0360               	mulwf	___flmul@b& (0+255),b
  8141  001BAC  006F FFCC  F077    	movff	prodl,___flmul@temp
  8142  001BB2  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  8143                           
  8144                           ; BSR set to: 0
  8145  001BB8  5177               	movf	___flmul@temp& (0+255),w,b
  8146  001BBA  276D               	addwf	___flmul@grs& (0+255),f,b
  8147  001BBC  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  8148  001BBE  236E               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8149  001BC0  0E00               	movlw	0
  8150  001BC2  236F               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8151  001BC4  0E00               	movlw	0
  8152  001BC6  2370               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8153                           
  8154                           ; BSR set to: 0
  8155  001BC8  5166               	movf	(___flmul@a+2)& (0+255),w,b
  8156  001BCA  0361               	mulwf	(___flmul@b+1)& (0+255),b
  8157  001BCC  006F FFCC  F077    	movff	prodl,___flmul@temp
  8158  001BD2  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  8159  001BD8  5177               	movf	___flmul@temp& (0+255),w,b
  8160  001BDA  2773               	addwf	___flmul@prod& (0+255),f,b
  8161  001BDC  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  8162  001BDE  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8163  001BE0  0E00               	movlw	0
  8164  001BE2  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8165  001BE4  0E00               	movlw	0
  8166  001BE6  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8167                           
  8168                           ; BSR set to: 0
  8169  001BE8  5165               	movf	(___flmul@a+1)& (0+255),w,b
  8170  001BEA  0362               	mulwf	(___flmul@b+2)& (0+255),b
  8171  001BEC  006F FFCC  F077    	movff	prodl,___flmul@temp
  8172  001BF2  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  8173                           
  8174                           ; BSR set to: 0
  8175  001BF8  5177               	movf	___flmul@temp& (0+255),w,b
  8176  001BFA  2773               	addwf	___flmul@prod& (0+255),f,b
  8177  001BFC  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  8178  001BFE  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8179  001C00  0E00               	movlw	0
  8180  001C02  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8181  001C04  0E00               	movlw	0
  8182  001C06  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8183  001C08  5166               	movf	(___flmul@a+2)& (0+255),w,b
  8184  001C0A  0362               	mulwf	(___flmul@b+2)& (0+255),b
  8185  001C0C  006F FFCC  F077    	movff	prodl,___flmul@temp
  8186  001C12  006F FFD0  F078    	movff	prodh,___flmul@temp+1
  8187                           
  8188                           ; BSR set to: 0
  8189  001C18  5177               	movf	___flmul@temp& (0+255),w,b
  8190  001C1A  6F68               	movwf	??___flmul& (0+255),b
  8191  001C1C  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  8192  001C1E  6F69               	movwf	(??___flmul+1)& (0+255),b
  8193  001C20  6B6A               	clrf	(??___flmul+2)& (0+255),b
  8194  001C22  6B6B               	clrf	(??___flmul+3)& (0+255),b
  8195  001C24  0060  F1A8  F06B   	movff	??___flmul+2,??___flmul+3
  8196  001C2A  0060  F1A4  F06A   	movff	??___flmul+1,??___flmul+2
  8197  001C30  0060  F1A0  F069   	movff	??___flmul,??___flmul+1
  8198  001C36  6B68               	clrf	??___flmul& (0+255),b
  8199  001C38  5168               	movf	??___flmul& (0+255),w,b
  8200  001C3A  2773               	addwf	___flmul@prod& (0+255),f,b
  8201  001C3C  5169               	movf	(??___flmul+1)& (0+255),w,b
  8202  001C3E  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8203  001C40  516A               	movf	(??___flmul+2)& (0+255),w,b
  8204  001C42  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8205  001C44  516B               	movf	(??___flmul+3)& (0+255),w,b
  8206  001C46  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8207                           
  8208                           ; BSR set to: 0
  8209  001C48  0060  F1B4  F068   	movff	___flmul@grs,??___flmul
  8210  001C4E  0060  F1B8  F069   	movff	___flmul@grs+1,??___flmul+1
  8211  001C54  0060  F1BC  F06A   	movff	___flmul@grs+2,??___flmul+2
  8212  001C5A  0060  F1C0  F06B   	movff	___flmul@grs+3,??___flmul+3
  8213  001C60  0E19               	movlw	25
  8214  001C62  D005               	goto	u5100
  8215  001C64                     u5105:
  8216  001C64  90D8               	bcf	status,0,c
  8217  001C66  336B               	rrcf	(??___flmul+3)& (0+255),f,b
  8218  001C68  336A               	rrcf	(??___flmul+2)& (0+255),f,b
  8219  001C6A  3369               	rrcf	(??___flmul+1)& (0+255),f,b
  8220  001C6C  3368               	rrcf	??___flmul& (0+255),f,b
  8221  001C6E                     u5100:
  8222  001C6E  2EE8               	decfsz	wreg,f,c
  8223  001C70  D7F9               	goto	u5105
  8224  001C72  5168               	movf	??___flmul& (0+255),w,b
  8225  001C74  2773               	addwf	___flmul@prod& (0+255),f,b
  8226  001C76  5169               	movf	(??___flmul+1)& (0+255),w,b
  8227  001C78  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8228  001C7A  516A               	movf	(??___flmul+2)& (0+255),w,b
  8229  001C7C  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8230  001C7E  516B               	movf	(??___flmul+3)& (0+255),w,b
  8231  001C80  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8232                           
  8233                           ; BSR set to: 0
  8234  001C82  0060  F1BC  F070   	movff	___flmul@grs+2,___flmul@grs+3
  8235  001C88  0060  F1B8  F06F   	movff	___flmul@grs+1,___flmul@grs+2
  8236  001C8E  0060  F1B4  F06E   	movff	___flmul@grs,___flmul@grs+1
  8237  001C94  6B6D               	clrf	___flmul@grs& (0+255),b
  8238                           
  8239                           ; BSR set to: 0
  8240  001C96  5171               	movf	___flmul@aexp& (0+255),w,b
  8241  001C98  0060  F1C8  F068   	movff	___flmul@bexp,??___flmul
  8242  001C9E  6B69               	clrf	(??___flmul+1)& (0+255),b
  8243  001CA0  2768               	addwf	??___flmul& (0+255),f,b
  8244  001CA2  0E00               	movlw	0
  8245  001CA4  2369               	addwfc	(??___flmul+1)& (0+255),f,b
  8246  001CA6  0E82               	movlw	130
  8247  001CA8  2568               	addwf	??___flmul& (0+255),w,b
  8248  001CAA  6F77               	movwf	___flmul@temp& (0+255),b
  8249  001CAC  0EFF               	movlw	255
  8250  001CAE  2169               	addwfc	(??___flmul+1)& (0+255),w,b
  8251  001CB0  6F78               	movwf	(___flmul@temp+1)& (0+255),b
  8252  001CB2  D00F               	goto	l4603
  8253  001CB4                     l4597:
  8254                           
  8255                           ; BSR set to: 0
  8256  001CB4  90D8               	bcf	status,0,c
  8257  001CB6  3773               	rlcf	___flmul@prod& (0+255),f,b
  8258  001CB8  3774               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8259  001CBA  3775               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8260  001CBC  3776               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8261                           
  8262                           ; BSR set to: 0
  8263  001CBE  BF70               	btfsc	(___flmul@grs+3)& (0+255),7,b
  8264                           
  8265                           ; BSR set to: 0
  8266  001CC0  8173               	bsf	___flmul@prod& (0+255),0,b
  8267                           
  8268                           ; BSR set to: 0
  8269  001CC2  90D8               	bcf	status,0,c
  8270  001CC4  376D               	rlcf	___flmul@grs& (0+255),f,b
  8271  001CC6  376E               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8272  001CC8  376F               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8273  001CCA  3770               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8274  001CCC  0777               	decf	___flmul@temp& (0+255),f,b
  8275  001CCE  A0D8               	btfss	status,0,c
  8276  001CD0  0778               	decf	(___flmul@temp+1)& (0+255),f,b
  8277  001CD2                     l4603:
  8278                           
  8279                           ; BSR set to: 0
  8280  001CD2  AF75               	btfss	(___flmul@prod+2)& (0+255),7,b
  8281  001CD4  D7EF               	goto	l4597
  8282                           
  8283                           ; BSR set to: 0
  8284  001CD6  0E00               	movlw	0
  8285  001CD8  6F71               	movwf	___flmul@aexp& (0+255),b
  8286                           
  8287                           ; BSR set to: 0
  8288  001CDA  AF70               	btfss	(___flmul@grs+3)& (0+255),7,b
  8289  001CDC  D017               	goto	l1215
  8290                           
  8291                           ; BSR set to: 0
  8292  001CDE  0EFF               	movlw	255
  8293  001CE0  156D               	andwf	___flmul@grs& (0+255),w,b
  8294  001CE2  6F68               	movwf	??___flmul& (0+255),b
  8295  001CE4  0EFF               	movlw	255
  8296  001CE6  156E               	andwf	(___flmul@grs+1)& (0+255),w,b
  8297  001CE8  6F69               	movwf	(??___flmul+1)& (0+255),b
  8298  001CEA  0EFF               	movlw	255
  8299  001CEC  156F               	andwf	(___flmul@grs+2)& (0+255),w,b
  8300  001CEE  6F6A               	movwf	(??___flmul+2)& (0+255),b
  8301  001CF0  0E7F               	movlw	127
  8302  001CF2  1570               	andwf	(___flmul@grs+3)& (0+255),w,b
  8303  001CF4  6F6B               	movwf	(??___flmul+3)& (0+255),b
  8304  001CF6  5168               	movf	??___flmul& (0+255),w,b
  8305  001CF8  1169               	iorwf	(??___flmul+1)& (0+255),w,b
  8306  001CFA  116A               	iorwf	(??___flmul+2)& (0+255),w,b
  8307  001CFC  116B               	iorwf	(??___flmul+3)& (0+255),w,b
  8308  001CFE  B4D8               	btfsc	status,2,c
  8309  001D00  D003               	goto	l1216
  8310  001D02                     u5140:
  8311                           
  8312                           ; BSR set to: 0
  8313  001D02  0E01               	movlw	1
  8314  001D04  6F71               	movwf	___flmul@aexp& (0+255),b
  8315  001D06  D002               	goto	l1215
  8316  001D08                     l1216:
  8317                           
  8318                           ; BSR set to: 0
  8319  001D08  B173               	btfsc	___flmul@prod& (0+255),0,b
  8320  001D0A  D7FB               	goto	u5140
  8321  001D0C                     l1215:
  8322                           
  8323                           ; BSR set to: 0
  8324  001D0C  5171               	movf	___flmul@aexp& (0+255),w,b
  8325  001D0E  B4D8               	btfsc	status,2,c
  8326  001D10  D027               	goto	l4623
  8327                           
  8328                           ; BSR set to: 0
  8329  001D12  0E01               	movlw	1
  8330  001D14  2773               	addwf	___flmul@prod& (0+255),f,b
  8331  001D16  0E00               	movlw	0
  8332  001D18  2374               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8333  001D1A  2375               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8334  001D1C  2376               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8335                           
  8336                           ; BSR set to: 0
  8337  001D1E  A176               	btfss	(___flmul@prod+3)& (0+255),0,b
  8338  001D20  D01F               	goto	l4623
  8339                           
  8340                           ; BSR set to: 0
  8341  001D22  0060  F1CC  F068   	movff	___flmul@prod,??___flmul
  8342  001D28  0060  F1D0  F069   	movff	___flmul@prod+1,??___flmul+1
  8343  001D2E  0060  F1D4  F06A   	movff	___flmul@prod+2,??___flmul+2
  8344  001D34  0060  F1D8  F06B   	movff	___flmul@prod+3,??___flmul+3
  8345  001D3A  356B               	rlcf	(??___flmul+3)& (0+255),w,b
  8346  001D3C  336B               	rrcf	(??___flmul+3)& (0+255),f,b
  8347  001D3E  336A               	rrcf	(??___flmul+2)& (0+255),f,b
  8348  001D40  3369               	rrcf	(??___flmul+1)& (0+255),f,b
  8349  001D42  3368               	rrcf	??___flmul& (0+255),f,b
  8350  001D44  0060  F1A0  F073   	movff	??___flmul,___flmul@prod
  8351  001D4A  0060  F1A4  F074   	movff	??___flmul+1,___flmul@prod+1
  8352  001D50  0060  F1A8  F075   	movff	??___flmul+2,___flmul@prod+2
  8353  001D56  0060  F1AC  F076   	movff	??___flmul+3,___flmul@prod+3
  8354                           
  8355                           ; BSR set to: 0
  8356  001D5C  4B77               	infsnz	___flmul@temp& (0+255),f,b
  8357  001D5E  2B78               	incf	(___flmul@temp+1)& (0+255),f,b
  8358  001D60                     l4623:
  8359                           
  8360                           ; BSR set to: 0
  8361  001D60  BF78               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8362  001D62  D00D               	goto	l4627
  8363  001D64  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  8364  001D66  E103               	bnz	u5180
  8365  001D68  2977               	incf	___flmul@temp& (0+255),w,b
  8366  001D6A  A0D8               	btfss	status,0,c
  8367  001D6C  D008               	goto	l4627
  8368  001D6E                     u5180:
  8369                           
  8370                           ; BSR set to: 0
  8371  001D6E  0E00               	movlw	0
  8372  001D70  6F73               	movwf	___flmul@prod& (0+255),b
  8373  001D72  0E00               	movlw	0
  8374  001D74  6F74               	movwf	(___flmul@prod+1)& (0+255),b
  8375  001D76  0E80               	movlw	128
  8376  001D78  6F75               	movwf	(___flmul@prod+2)& (0+255),b
  8377  001D7A  0E7F               	movlw	127
  8378  001D7C  D021               	goto	L14
  8379  001D7E                     l4627:
  8380                           
  8381                           ; BSR set to: 0
  8382  001D7E  BF78               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8383  001D80  D005               	goto	u5190
  8384  001D82  5178               	movf	(___flmul@temp+1)& (0+255),w,b
  8385  001D84  E10E               	bnz	l1223
  8386  001D86  0577               	decf	___flmul@temp& (0+255),w,b
  8387  001D88  B0D8               	btfsc	status,0,c
  8388  001D8A  D00B               	goto	l1223
  8389  001D8C                     u5190:
  8390                           
  8391                           ; BSR set to: 0
  8392  001D8C  0E00               	movlw	0
  8393  001D8E  6F73               	movwf	___flmul@prod& (0+255),b
  8394  001D90  0E00               	movlw	0
  8395  001D92  6F74               	movwf	(___flmul@prod+1)& (0+255),b
  8396  001D94  0E00               	movlw	0
  8397  001D96  6F75               	movwf	(___flmul@prod+2)& (0+255),b
  8398  001D98  0E00               	movlw	0
  8399  001D9A  6F76               	movwf	(___flmul@prod+3)& (0+255),b
  8400  001D9C  0E00               	movlw	0
  8401  001D9E  6F6C               	movwf	___flmul@sign& (0+255),b
  8402  001DA0  D010               	goto	l4639
  8403  001DA2                     l1223:
  8404                           
  8405                           ; BSR set to: 0
  8406  001DA2  0060  F1DC  F072   	movff	___flmul@temp,___flmul@bexp
  8407                           
  8408                           ; BSR set to: 0
  8409  001DA8  0EFF               	movlw	255
  8410  001DAA  1773               	andwf	___flmul@prod& (0+255),f,b
  8411  001DAC  0EFF               	movlw	255
  8412  001DAE  1774               	andwf	(___flmul@prod+1)& (0+255),f,b
  8413  001DB0  0E7F               	movlw	127
  8414  001DB2  1775               	andwf	(___flmul@prod+2)& (0+255),f,b
  8415  001DB4  0E00               	movlw	0
  8416  001DB6  1776               	andwf	(___flmul@prod+3)& (0+255),f,b
  8417                           
  8418                           ; BSR set to: 0
  8419  001DB8  B172               	btfsc	___flmul@bexp& (0+255),0,b
  8420                           
  8421                           ; BSR set to: 0
  8422  001DBA  8F75               	bsf	(___flmul@prod+2)& (0+255),7,b
  8423                           
  8424                           ; BSR set to: 0
  8425  001DBC  90D8               	bcf	status,0,c
  8426  001DBE  3172               	rrcf	___flmul@bexp& (0+255),w,b
  8427  001DC0                     L14:
  8428  001DC0  6F76               	movwf	(___flmul@prod+3)& (0+255),b
  8429  001DC2                     l4639:
  8430                           
  8431                           ; BSR set to: 0
  8432  001DC2  516C               	movf	___flmul@sign& (0+255),w,b
  8433  001DC4  1376               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8434                           
  8435                           ; BSR set to: 0
  8436  001DC6  0060  F1CC  F060   	movff	___flmul@prod,?___flmul
  8437  001DCC  0060  F1D0  F061   	movff	___flmul@prod+1,?___flmul+1
  8438  001DD2  0060  F1D4  F062   	movff	___flmul@prod+2,?___flmul+2
  8439  001DD8  0060  F1D8  F063   	movff	___flmul@prod+3,?___flmul+3
  8440                           
  8441                           ; BSR set to: 0
  8442  001DDE  0012               	return		;funcret
  8443  001DE0                     __end_of___flmul:
  8444                           	opt callstack 0
  8445                           
  8446 ;; *************** function ___flge *****************
  8447 ;; Defined at:
  8448 ;;		line 4 in file "D:\MPLAB\pic\sources\c99\common\flge.c"
  8449 ;; Parameters:    Size  Location     Type
  8450 ;;  ff1             4   25[BANK0 ] unsigned char 
  8451 ;;  ff2             4   29[BANK0 ] unsigned char 
  8452 ;; Auto vars:     Size  Location     Type
  8453 ;;		None
  8454 ;; Return value:  Size  Location     Type
  8455 ;;		None               void
  8456 ;; Registers used:
  8457 ;;		wreg, status,2, status,0
  8458 ;; Tracked objects:
  8459 ;;		On entry : 0/0
  8460 ;;		On exit  : 0/0
  8461 ;;		Unchanged: 0/0
  8462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8463 ;;      Params:         0       8       0       0       0       0       0       0       0
  8464 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8465 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8466 ;;      Totals:         0      12       0       0       0       0       0       0       0
  8467 ;;Total ram usage:       12 bytes
  8468 ;; Hardware stack levels used:    1
  8469 ;; Hardware stack levels required when called:    3
  8470 ;; This function calls:
  8471 ;;		Nothing
  8472 ;; This function is called by:
  8473 ;;		_efgtoa
  8474 ;; This function uses a non-reentrant model
  8475 ;;
  8476                           
  8477                           	psect	text16
  8478  00384A                     __ptext16:
  8479                           	opt callstack 0
  8480  00384A                     ___flge:
  8481                           	opt callstack 23
  8482                           
  8483                           ; BSR set to: 0
  8484                           ;incstack = 0
  8485  00384A  0E00               	movlw	0
  8486  00384C  0100               	movlb	0	; () banked
  8487  00384E  1579               	andwf	___flge@ff1& (0+255),w,b
  8488  003850  6F81               	movwf	??___flge& (0+255),b
  8489  003852  0E00               	movlw	0
  8490  003854  157A               	andwf	(___flge@ff1+1)& (0+255),w,b
  8491  003856  6F82               	movwf	(??___flge+1)& (0+255),b
  8492  003858  0E80               	movlw	128
  8493  00385A  157B               	andwf	(___flge@ff1+2)& (0+255),w,b
  8494  00385C  6F83               	movwf	(??___flge+2)& (0+255),b
  8495  00385E  0E7F               	movlw	127
  8496  003860  157C               	andwf	(___flge@ff1+3)& (0+255),w,b
  8497  003862  6F84               	movwf	(??___flge+3)& (0+255),b
  8498  003864  5181               	movf	??___flge& (0+255),w,b
  8499  003866  1182               	iorwf	(??___flge+1)& (0+255),w,b
  8500  003868  1183               	iorwf	(??___flge+2)& (0+255),w,b
  8501  00386A  1184               	iorwf	(??___flge+3)& (0+255),w,b
  8502  00386C  A4D8               	btfss	status,2,c
  8503  00386E  D008               	goto	l4751
  8504                           
  8505                           ; BSR set to: 0
  8506  003870  0E00               	movlw	0
  8507  003872  6F79               	movwf	___flge@ff1& (0+255),b
  8508  003874  0E00               	movlw	0
  8509  003876  6F7A               	movwf	(___flge@ff1+1)& (0+255),b
  8510  003878  0E00               	movlw	0
  8511  00387A  6F7B               	movwf	(___flge@ff1+2)& (0+255),b
  8512  00387C  0E00               	movlw	0
  8513  00387E  6F7C               	movwf	(___flge@ff1+3)& (0+255),b
  8514  003880                     l4751:
  8515                           
  8516                           ; BSR set to: 0
  8517  003880  0E00               	movlw	0
  8518  003882  157D               	andwf	___flge@ff2& (0+255),w,b
  8519  003884  6F81               	movwf	??___flge& (0+255),b
  8520  003886  0E00               	movlw	0
  8521  003888  157E               	andwf	(___flge@ff2+1)& (0+255),w,b
  8522  00388A  6F82               	movwf	(??___flge+1)& (0+255),b
  8523  00388C  0E80               	movlw	128
  8524  00388E  157F               	andwf	(___flge@ff2+2)& (0+255),w,b
  8525  003890  6F83               	movwf	(??___flge+2)& (0+255),b
  8526  003892  0E7F               	movlw	127
  8527  003894  1580               	andwf	(___flge@ff2+3)& (0+255),w,b
  8528  003896  6F84               	movwf	(??___flge+3)& (0+255),b
  8529  003898  5181               	movf	??___flge& (0+255),w,b
  8530  00389A  1182               	iorwf	(??___flge+1)& (0+255),w,b
  8531  00389C  1183               	iorwf	(??___flge+2)& (0+255),w,b
  8532  00389E  1184               	iorwf	(??___flge+3)& (0+255),w,b
  8533  0038A0  A4D8               	btfss	status,2,c
  8534  0038A2  D008               	goto	l4755
  8535                           
  8536                           ; BSR set to: 0
  8537  0038A4  0E00               	movlw	0
  8538  0038A6  6F7D               	movwf	___flge@ff2& (0+255),b
  8539  0038A8  0E00               	movlw	0
  8540  0038AA  6F7E               	movwf	(___flge@ff2+1)& (0+255),b
  8541  0038AC  0E00               	movlw	0
  8542  0038AE  6F7F               	movwf	(___flge@ff2+2)& (0+255),b
  8543  0038B0  0E00               	movlw	0
  8544  0038B2  6F80               	movwf	(___flge@ff2+3)& (0+255),b
  8545  0038B4                     l4755:
  8546                           
  8547                           ; BSR set to: 0
  8548  0038B4  AF7C               	btfss	(___flge@ff1+3)& (0+255),7,b
  8549  0038B6  D009               	goto	l4759
  8550                           
  8551                           ; BSR set to: 0
  8552  0038B8  6D79               	negf	___flge@ff1& (0+255),b
  8553  0038BA  1F7A               	comf	(___flge@ff1+1)& (0+255),f,b
  8554  0038BC  B0D8               	btfsc	status,0,c
  8555  0038BE  2B7A               	incf	(___flge@ff1+1)& (0+255),f,b
  8556  0038C0  1F7B               	comf	(___flge@ff1+2)& (0+255),f,b
  8557  0038C2  B0D8               	btfsc	status,0,c
  8558  0038C4  2B7B               	incf	(___flge@ff1+2)& (0+255),f,b
  8559  0038C6  0E80               	movlw	128
  8560  0038C8  577C               	subfwb	(___flge@ff1+3)& (0+255),f,b
  8561  0038CA                     l4759:
  8562                           
  8563                           ; BSR set to: 0
  8564  0038CA  AF80               	btfss	(___flge@ff2+3)& (0+255),7,b
  8565  0038CC  D009               	goto	l857
  8566                           
  8567                           ; BSR set to: 0
  8568  0038CE  6D7D               	negf	___flge@ff2& (0+255),b
  8569  0038D0  1F7E               	comf	(___flge@ff2+1)& (0+255),f,b
  8570  0038D2  B0D8               	btfsc	status,0,c
  8571  0038D4  2B7E               	incf	(___flge@ff2+1)& (0+255),f,b
  8572  0038D6  1F7F               	comf	(___flge@ff2+2)& (0+255),f,b
  8573  0038D8  B0D8               	btfsc	status,0,c
  8574  0038DA  2B7F               	incf	(___flge@ff2+2)& (0+255),f,b
  8575  0038DC  0E80               	movlw	128
  8576  0038DE  5780               	subfwb	(___flge@ff2+3)& (0+255),f,b
  8577  0038E0                     l857:
  8578                           
  8579                           ; BSR set to: 0
  8580  0038E0  0E00               	movlw	0
  8581  0038E2  1B79               	xorwf	___flge@ff1& (0+255),f,b
  8582  0038E4  0E00               	movlw	0
  8583  0038E6  1B7A               	xorwf	(___flge@ff1+1)& (0+255),f,b
  8584  0038E8  0E00               	movlw	0
  8585  0038EA  1B7B               	xorwf	(___flge@ff1+2)& (0+255),f,b
  8586  0038EC  0E80               	movlw	128
  8587  0038EE  1B7C               	xorwf	(___flge@ff1+3)& (0+255),f,b
  8588  0038F0  0E00               	movlw	0
  8589  0038F2  1B7D               	xorwf	___flge@ff2& (0+255),f,b
  8590  0038F4  0E00               	movlw	0
  8591  0038F6  1B7E               	xorwf	(___flge@ff2+1)& (0+255),f,b
  8592  0038F8  0E00               	movlw	0
  8593  0038FA  1B7F               	xorwf	(___flge@ff2+2)& (0+255),f,b
  8594  0038FC  0E80               	movlw	128
  8595  0038FE  1B80               	xorwf	(___flge@ff2+3)& (0+255),f,b
  8596  003900  517D               	movf	___flge@ff2& (0+255),w,b
  8597  003902  5D79               	subwf	___flge@ff1& (0+255),w,b
  8598  003904  517E               	movf	(___flge@ff2+1)& (0+255),w,b
  8599  003906  597A               	subwfb	(___flge@ff1+1)& (0+255),w,b
  8600  003908  517F               	movf	(___flge@ff2+2)& (0+255),w,b
  8601  00390A  597B               	subwfb	(___flge@ff1+2)& (0+255),w,b
  8602  00390C  5180               	movf	(___flge@ff2+3)& (0+255),w,b
  8603  00390E  597C               	subwfb	(___flge@ff1+3)& (0+255),w,b
  8604  003910  B0D8               	btfsc	status,0,c
  8605  003912  D002               	goto	l4765
  8606                           
  8607                           ; BSR set to: 0
  8608  003914  90D8               	bcf	status,0,c
  8609  003916  0012               	return	
  8610  003918                     l4765:
  8611                           
  8612                           ; BSR set to: 0
  8613  003918  80D8               	bsf	status,0,c
  8614                           
  8615                           ; BSR set to: 0
  8616  00391A  0012               	return		;funcret
  8617  00391C                     __end_of___flge:
  8618                           	opt callstack 0
  8619                           
  8620 ;; *************** function ___fleq *****************
  8621 ;; Defined at:
  8622 ;;		line 4 in file "D:\MPLAB\pic\sources\c99\common\fleq.c"
  8623 ;; Parameters:    Size  Location     Type
  8624 ;;  ff1             4    0[BANK0 ] unsigned char 
  8625 ;;  ff2             4    4[BANK0 ] unsigned char 
  8626 ;; Auto vars:     Size  Location     Type
  8627 ;;		None
  8628 ;; Return value:  Size  Location     Type
  8629 ;;		None               void
  8630 ;; Registers used:
  8631 ;;		wreg, status,2, status,0
  8632 ;; Tracked objects:
  8633 ;;		On entry : 0/0
  8634 ;;		On exit  : 0/0
  8635 ;;		Unchanged: 0/0
  8636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8637 ;;      Params:         0       8       0       0       0       0       0       0       0
  8638 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8639 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8640 ;;      Totals:         0      12       0       0       0       0       0       0       0
  8641 ;;Total ram usage:       12 bytes
  8642 ;; Hardware stack levels used:    1
  8643 ;; Hardware stack levels required when called:    3
  8644 ;; This function calls:
  8645 ;;		Nothing
  8646 ;; This function is called by:
  8647 ;;		_efgtoa
  8648 ;; This function uses a non-reentrant model
  8649 ;;
  8650                           
  8651                           	psect	text17
  8652  003F4C                     __ptext17:
  8653                           	opt callstack 0
  8654  003F4C                     ___fleq:
  8655                           	opt callstack 23
  8656                           
  8657                           ; BSR set to: 0
  8658                           ;incstack = 0
  8659  003F4C  0E00               	movlw	0
  8660  003F4E  0100               	movlb	0	; () banked
  8661  003F50  1560               	andwf	___fleq@ff1& (0+255),w,b
  8662  003F52  6F68               	movwf	??___fleq& (0+255),b
  8663  003F54  0E00               	movlw	0
  8664  003F56  1561               	andwf	(___fleq@ff1+1)& (0+255),w,b
  8665  003F58  6F69               	movwf	(??___fleq+1)& (0+255),b
  8666  003F5A  0E80               	movlw	128
  8667  003F5C  1562               	andwf	(___fleq@ff1+2)& (0+255),w,b
  8668  003F5E  6F6A               	movwf	(??___fleq+2)& (0+255),b
  8669  003F60  0E7F               	movlw	127
  8670  003F62  1563               	andwf	(___fleq@ff1+3)& (0+255),w,b
  8671  003F64  6F6B               	movwf	(??___fleq+3)& (0+255),b
  8672  003F66  5168               	movf	??___fleq& (0+255),w,b
  8673  003F68  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  8674  003F6A  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  8675  003F6C  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  8676  003F6E  A4D8               	btfss	status,2,c
  8677  003F70  D008               	goto	l4735
  8678                           
  8679                           ; BSR set to: 0
  8680  003F72  0E00               	movlw	0
  8681  003F74  6F60               	movwf	___fleq@ff1& (0+255),b
  8682  003F76  0E00               	movlw	0
  8683  003F78  6F61               	movwf	(___fleq@ff1+1)& (0+255),b
  8684  003F7A  0E00               	movlw	0
  8685  003F7C  6F62               	movwf	(___fleq@ff1+2)& (0+255),b
  8686  003F7E  0E00               	movlw	0
  8687  003F80  6F63               	movwf	(___fleq@ff1+3)& (0+255),b
  8688  003F82                     l4735:
  8689                           
  8690                           ; BSR set to: 0
  8691  003F82  0E00               	movlw	0
  8692  003F84  1564               	andwf	___fleq@ff2& (0+255),w,b
  8693  003F86  6F68               	movwf	??___fleq& (0+255),b
  8694  003F88  0E00               	movlw	0
  8695  003F8A  1565               	andwf	(___fleq@ff2+1)& (0+255),w,b
  8696  003F8C  6F69               	movwf	(??___fleq+1)& (0+255),b
  8697  003F8E  0E80               	movlw	128
  8698  003F90  1566               	andwf	(___fleq@ff2+2)& (0+255),w,b
  8699  003F92  6F6A               	movwf	(??___fleq+2)& (0+255),b
  8700  003F94  0E7F               	movlw	127
  8701  003F96  1567               	andwf	(___fleq@ff2+3)& (0+255),w,b
  8702  003F98  6F6B               	movwf	(??___fleq+3)& (0+255),b
  8703  003F9A  5168               	movf	??___fleq& (0+255),w,b
  8704  003F9C  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  8705  003F9E  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  8706  003FA0  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  8707  003FA2  A4D8               	btfss	status,2,c
  8708  003FA4  D008               	goto	l4739
  8709                           
  8710                           ; BSR set to: 0
  8711  003FA6  0E00               	movlw	0
  8712  003FA8  6F64               	movwf	___fleq@ff2& (0+255),b
  8713  003FAA  0E00               	movlw	0
  8714  003FAC  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  8715  003FAE  0E00               	movlw	0
  8716  003FB0  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  8717  003FB2  0E00               	movlw	0
  8718  003FB4  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  8719  003FB6                     l4739:
  8720                           
  8721                           ; BSR set to: 0
  8722  003FB6  5164               	movf	___fleq@ff2& (0+255),w,b
  8723  003FB8  1960               	xorwf	___fleq@ff1& (0+255),w,b
  8724  003FBA  E10A               	bnz	u5350
  8725  003FBC  5165               	movf	(___fleq@ff2+1)& (0+255),w,b
  8726  003FBE  1961               	xorwf	(___fleq@ff1+1)& (0+255),w,b
  8727  003FC0  E107               	bnz	u5350
  8728  003FC2  5166               	movf	(___fleq@ff2+2)& (0+255),w,b
  8729  003FC4  1962               	xorwf	(___fleq@ff1+2)& (0+255),w,b
  8730  003FC6  E104               	bnz	u5350
  8731  003FC8  5167               	movf	(___fleq@ff2+3)& (0+255),w,b
  8732  003FCA  1963               	xorwf	(___fleq@ff1+3)& (0+255),w,b
  8733  003FCC  B4D8               	btfsc	status,2,c
  8734  003FCE  D002               	goto	l4743
  8735  003FD0                     u5350:
  8736                           
  8737                           ; BSR set to: 0
  8738  003FD0  90D8               	bcf	status,0,c
  8739  003FD2  0012               	return	
  8740  003FD4                     l4743:
  8741                           
  8742                           ; BSR set to: 0
  8743  003FD4  80D8               	bsf	status,0,c
  8744                           
  8745                           ; BSR set to: 0
  8746  003FD6  0012               	return		;funcret
  8747  003FD8                     __end_of___fleq:
  8748                           	opt callstack 0
  8749                           
  8750 ;; *************** function ___fldiv *****************
  8751 ;; Defined at:
  8752 ;;		line 11 in file "D:\MPLAB\pic\sources\c99\common\sprcdiv.c"
  8753 ;; Parameters:    Size  Location     Type
  8754 ;;  b               4    0[BANK0 ] unsigned char 
  8755 ;;  a               4    4[BANK0 ] unsigned char 
  8756 ;; Auto vars:     Size  Location     Type
  8757 ;;  grs             4   19[BANK0 ] unsigned long 
  8758 ;;  rem             4   12[BANK0 ] unsigned long 
  8759 ;;  new_exp         2   17[BANK0 ] short 
  8760 ;;  aexp            1   24[BANK0 ] unsigned char 
  8761 ;;  bexp            1   23[BANK0 ] unsigned char 
  8762 ;;  sign            1   16[BANK0 ] unsigned char 
  8763 ;; Return value:  Size  Location     Type
  8764 ;;                  4    0[BANK0 ] unsigned char 
  8765 ;; Registers used:
  8766 ;;		wreg, status,2, status,0
  8767 ;; Tracked objects:
  8768 ;;		On entry : 0/0
  8769 ;;		On exit  : 0/0
  8770 ;;		Unchanged: 0/0
  8771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8772 ;;      Params:         0       8       0       0       0       0       0       0       0
  8773 ;;      Locals:         0      13       0       0       0       0       0       0       0
  8774 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8775 ;;      Totals:         0      25       0       0       0       0       0       0       0
  8776 ;;Total ram usage:       25 bytes
  8777 ;; Hardware stack levels used:    1
  8778 ;; Hardware stack levels required when called:    3
  8779 ;; This function calls:
  8780 ;;		Nothing
  8781 ;; This function is called by:
  8782 ;;		_efgtoa
  8783 ;; This function uses a non-reentrant model
  8784 ;;
  8785                           
  8786                           	psect	text18
  8787  002724                     __ptext18:
  8788                           	opt callstack 0
  8789  002724                     ___fldiv:
  8790                           	opt callstack 23
  8791                           
  8792                           ; BSR set to: 0
  8793                           ;incstack = 0
  8794  002724  0100               	movlb	0	; () banked
  8795  002726  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  8796  002728  0B80               	andlw	128
  8797  00272A  6F70               	movwf	___fldiv@sign& (0+255),b
  8798  00272C  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  8799  00272E  2563               	addwf	(___fldiv@b+3)& (0+255),w,b
  8800  002730  6F77               	movwf	___fldiv@bexp& (0+255),b
  8801                           
  8802                           ; BSR set to: 0
  8803  002732  BF62               	btfsc	(___fldiv@b+2)& (0+255),7,b
  8804                           
  8805                           ; BSR set to: 0
  8806  002734  8177               	bsf	___fldiv@bexp& (0+255),0,b
  8807                           
  8808                           ; BSR set to: 0
  8809  002736  5177               	movf	___fldiv@bexp& (0+255),w,b
  8810  002738  B4D8               	btfsc	status,2,c
  8811  00273A  D00D               	goto	l4393
  8812                           
  8813                           ; BSR set to: 0
  8814  00273C  2977               	incf	___fldiv@bexp& (0+255),w,b
  8815  00273E  A4D8               	btfss	status,2,c
  8816  002740  D008               	goto	l4389
  8817                           
  8818                           ; BSR set to: 0
  8819  002742  0E00               	movlw	0
  8820  002744  6F60               	movwf	___fldiv@b& (0+255),b
  8821  002746  0E00               	movlw	0
  8822  002748  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  8823  00274A  0E00               	movlw	0
  8824  00274C  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  8825  00274E  0E00               	movlw	0
  8826  002750  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  8827  002752                     l4389:
  8828                           
  8829                           ; BSR set to: 0
  8830  002752  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  8831  002754  D006               	goto	L15
  8832  002756                     l4393:
  8833                           
  8834                           ; BSR set to: 0
  8835  002756  0E00               	movlw	0
  8836  002758  6F60               	movwf	___fldiv@b& (0+255),b
  8837  00275A  0E00               	movlw	0
  8838  00275C  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  8839  00275E  0E00               	movlw	0
  8840  002760  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  8841  002762                     L15:
  8842  002762  0E00               	movlw	0
  8843  002764  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  8844                           
  8845                           ; BSR set to: 0
  8846  002766  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  8847  002768  0B80               	andlw	128
  8848  00276A  1B70               	xorwf	___fldiv@sign& (0+255),f,b
  8849                           
  8850                           ; BSR set to: 0
  8851  00276C  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  8852  00276E  2567               	addwf	(___fldiv@a+3)& (0+255),w,b
  8853  002770  6F78               	movwf	___fldiv@aexp& (0+255),b
  8854                           
  8855                           ; BSR set to: 0
  8856  002772  BF66               	btfsc	(___fldiv@a+2)& (0+255),7,b
  8857                           
  8858                           ; BSR set to: 0
  8859  002774  8178               	bsf	___fldiv@aexp& (0+255),0,b
  8860                           
  8861                           ; BSR set to: 0
  8862  002776  5178               	movf	___fldiv@aexp& (0+255),w,b
  8863  002778  B4D8               	btfsc	status,2,c
  8864  00277A  D00D               	goto	l4413
  8865                           
  8866                           ; BSR set to: 0
  8867  00277C  2978               	incf	___fldiv@aexp& (0+255),w,b
  8868  00277E  A4D8               	btfss	status,2,c
  8869  002780  D008               	goto	l4409
  8870                           
  8871                           ; BSR set to: 0
  8872  002782  0E00               	movlw	0
  8873  002784  6F64               	movwf	___fldiv@a& (0+255),b
  8874  002786  0E00               	movlw	0
  8875  002788  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  8876  00278A  0E00               	movlw	0
  8877  00278C  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  8878  00278E  0E00               	movlw	0
  8879  002790  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  8880  002792                     l4409:
  8881                           
  8882                           ; BSR set to: 0
  8883  002792  8F66               	bsf	(___fldiv@a+2)& (0+255),7,b
  8884  002794  D006               	goto	L16
  8885  002796                     l4413:
  8886                           
  8887                           ; BSR set to: 0
  8888  002796  0E00               	movlw	0
  8889  002798  6F64               	movwf	___fldiv@a& (0+255),b
  8890  00279A  0E00               	movlw	0
  8891  00279C  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  8892  00279E  0E00               	movlw	0
  8893  0027A0  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  8894  0027A2                     L16:
  8895  0027A2  0E00               	movlw	0
  8896  0027A4  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  8897                           
  8898                           ; BSR set to: 0
  8899  0027A6  5164               	movf	___fldiv@a& (0+255),w,b
  8900  0027A8  1165               	iorwf	(___fldiv@a+1)& (0+255),w,b
  8901  0027AA  1166               	iorwf	(___fldiv@a+2)& (0+255),w,b
  8902  0027AC  1167               	iorwf	(___fldiv@a+3)& (0+255),w,b
  8903  0027AE  A4D8               	btfss	status,2,c
  8904  0027B0  D01B               	goto	l4427
  8905                           
  8906                           ; BSR set to: 0
  8907  0027B2  0E00               	movlw	0
  8908  0027B4  6F60               	movwf	___fldiv@b& (0+255),b
  8909  0027B6  0E00               	movlw	0
  8910  0027B8  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  8911  0027BA  0E00               	movlw	0
  8912  0027BC  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  8913  0027BE  0E00               	movlw	0
  8914  0027C0  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  8915                           
  8916                           ; BSR set to: 0
  8917  0027C2  0E80               	movlw	128
  8918  0027C4  1362               	iorwf	(___fldiv@b+2)& (0+255),f,b
  8919  0027C6  0E7F               	movlw	127
  8920  0027C8  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  8921  0027CA                     l4421:
  8922                           
  8923                           ; BSR set to: 0
  8924  0027CA  5170               	movf	___fldiv@sign& (0+255),w,b
  8925  0027CC  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  8926                           
  8927                           ; BSR set to: 0
  8928  0027CE  0060  F180  F060   	movff	___fldiv@b,?___fldiv
  8929  0027D4  0060  F184  F061   	movff	___fldiv@b+1,?___fldiv+1
  8930  0027DA  0060  F188  F062   	movff	___fldiv@b+2,?___fldiv+2
  8931  0027E0  0060  F18C  F063   	movff	___fldiv@b+3,?___fldiv+3
  8932  0027E6  0012               	return	
  8933  0027E8                     l4427:
  8934                           
  8935                           ; BSR set to: 0
  8936  0027E8  5177               	movf	___fldiv@bexp& (0+255),w,b
  8937  0027EA  A4D8               	btfss	status,2,c
  8938  0027EC  D009               	goto	l4435
  8939                           
  8940                           ; BSR set to: 0
  8941                           
  8942                           ; BSR set to: 0
  8943  0027EE  0E00               	movlw	0
  8944  0027F0  6F60               	movwf	?___fldiv& (0+255),b
  8945  0027F2  0E00               	movlw	0
  8946  0027F4  6F61               	movwf	(?___fldiv+1)& (0+255),b
  8947  0027F6  0E00               	movlw	0
  8948  0027F8  6F62               	movwf	(?___fldiv+2)& (0+255),b
  8949  0027FA  0E00               	movlw	0
  8950  0027FC  6F63               	movwf	(?___fldiv+3)& (0+255),b
  8951  0027FE  0012               	return	
  8952  002800                     l4435:
  8953                           
  8954                           ; BSR set to: 0
  8955  002800  5178               	movf	___fldiv@aexp& (0+255),w,b
  8956  002802  0060  F1DC  F068   	movff	___fldiv@bexp,??___fldiv
  8957  002808  6B69               	clrf	(??___fldiv+1)& (0+255),b
  8958  00280A  5F68               	subwf	??___fldiv& (0+255),f,b
  8959  00280C  0E00               	movlw	0
  8960  00280E  5B69               	subwfb	(??___fldiv+1)& (0+255),f,b
  8961  002810  0E7F               	movlw	127
  8962  002812  2568               	addwf	??___fldiv& (0+255),w,b
  8963  002814  6F71               	movwf	___fldiv@new_exp& (0+255),b
  8964  002816  0E00               	movlw	0
  8965  002818  2169               	addwfc	(??___fldiv+1)& (0+255),w,b
  8966  00281A  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8967                           
  8968                           ; BSR set to: 0
  8969  00281C  0060  F180  F06C   	movff	___fldiv@b,___fldiv@rem
  8970  002822  0060  F184  F06D   	movff	___fldiv@b+1,___fldiv@rem+1
  8971  002828  0060  F188  F06E   	movff	___fldiv@b+2,___fldiv@rem+2
  8972  00282E  0060  F18C  F06F   	movff	___fldiv@b+3,___fldiv@rem+3
  8973                           
  8974                           ; BSR set to: 0
  8975  002834  0E00               	movlw	0
  8976  002836  6F60               	movwf	___fldiv@b& (0+255),b
  8977  002838  0E00               	movlw	0
  8978  00283A  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  8979  00283C  0E00               	movlw	0
  8980  00283E  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  8981  002840  0E00               	movlw	0
  8982  002842  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  8983                           
  8984                           ; BSR set to: 0
  8985  002844  0E00               	movlw	0
  8986  002846  6F73               	movwf	___fldiv@grs& (0+255),b
  8987  002848  0E00               	movlw	0
  8988  00284A  6F74               	movwf	(___fldiv@grs+1)& (0+255),b
  8989  00284C  0E00               	movlw	0
  8990  00284E  6F75               	movwf	(___fldiv@grs+2)& (0+255),b
  8991  002850  0E00               	movlw	0
  8992  002852  6F76               	movwf	(___fldiv@grs+3)& (0+255),b
  8993                           
  8994                           ; BSR set to: 0
  8995  002854  0E00               	movlw	0
  8996  002856  6F78               	movwf	___fldiv@aexp& (0+255),b
  8997  002858  D028               	goto	l1176
  8998  00285A                     l4445:
  8999                           
  9000                           ; BSR set to: 0
  9001  00285A  5178               	movf	___fldiv@aexp& (0+255),w,b
  9002  00285C  B4D8               	btfsc	status,2,c
  9003  00285E  D011               	goto	l4453
  9004                           
  9005                           ; BSR set to: 0
  9006  002860  90D8               	bcf	status,0,c
  9007  002862  376C               	rlcf	___fldiv@rem& (0+255),f,b
  9008  002864  376D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  9009  002866  376E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  9010  002868  376F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  9011  00286A  90D8               	bcf	status,0,c
  9012  00286C  3760               	rlcf	___fldiv@b& (0+255),f,b
  9013  00286E  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  9014  002870  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  9015  002872  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  9016                           
  9017                           ; BSR set to: 0
  9018  002874  BF76               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  9019                           
  9020                           ; BSR set to: 0
  9021  002876  8160               	bsf	___fldiv@b& (0+255),0,b
  9022                           
  9023                           ; BSR set to: 0
  9024  002878  90D8               	bcf	status,0,c
  9025  00287A  3773               	rlcf	___fldiv@grs& (0+255),f,b
  9026  00287C  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9027  00287E  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9028  002880  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9029  002882                     l4453:
  9030                           
  9031                           ; BSR set to: 0
  9032  002882  5164               	movf	___fldiv@a& (0+255),w,b
  9033  002884  5D6C               	subwf	___fldiv@rem& (0+255),w,b
  9034  002886  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  9035  002888  596D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  9036  00288A  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  9037  00288C  596E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  9038  00288E  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  9039  002890  596F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  9040  002892  A0D8               	btfss	status,0,c
  9041  002894  D009               	goto	l4459
  9042                           
  9043                           ; BSR set to: 0
  9044  002896  8D76               	bsf	(___fldiv@grs+3)& (0+255),6,b
  9045                           
  9046                           ; BSR set to: 0
  9047  002898  5164               	movf	___fldiv@a& (0+255),w,b
  9048  00289A  5F6C               	subwf	___fldiv@rem& (0+255),f,b
  9049  00289C  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  9050  00289E  5B6D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  9051  0028A0  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  9052  0028A2  5B6E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  9053  0028A4  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  9054  0028A6  5B6F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  9055  0028A8                     l4459:
  9056                           
  9057                           ; BSR set to: 0
  9058  0028A8  2B78               	incf	___fldiv@aexp& (0+255),f,b
  9059  0028AA                     l1176:
  9060                           
  9061                           ; BSR set to: 0
  9062  0028AA  0E19               	movlw	25
  9063  0028AC  6578               	cpfsgt	___fldiv@aexp& (0+255),b
  9064  0028AE  D7D5               	goto	l4445
  9065                           
  9066                           ; BSR set to: 0
  9067  0028B0  516C               	movf	___fldiv@rem& (0+255),w,b
  9068  0028B2  116D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  9069  0028B4  116E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  9070  0028B6  116F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  9071  0028B8  B4D8               	btfsc	status,2,c
  9072  0028BA  D011               	goto	l4471
  9073                           
  9074                           ; BSR set to: 0
  9075  0028BC  8173               	bsf	___fldiv@grs& (0+255),0,b
  9076  0028BE  D00F               	goto	l4471
  9077  0028C0                     l4465:
  9078                           
  9079                           ; BSR set to: 0
  9080  0028C0  90D8               	bcf	status,0,c
  9081  0028C2  3760               	rlcf	___fldiv@b& (0+255),f,b
  9082  0028C4  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  9083  0028C6  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  9084  0028C8  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  9085                           
  9086                           ; BSR set to: 0
  9087  0028CA  BF76               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  9088                           
  9089                           ; BSR set to: 0
  9090  0028CC  8160               	bsf	___fldiv@b& (0+255),0,b
  9091                           
  9092                           ; BSR set to: 0
  9093  0028CE  90D8               	bcf	status,0,c
  9094  0028D0  3773               	rlcf	___fldiv@grs& (0+255),f,b
  9095  0028D2  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9096  0028D4  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9097  0028D6  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9098  0028D8  0771               	decf	___fldiv@new_exp& (0+255),f,b
  9099  0028DA  A0D8               	btfss	status,0,c
  9100  0028DC  0772               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  9101  0028DE                     l4471:
  9102                           
  9103                           ; BSR set to: 0
  9104  0028DE  AF62               	btfss	(___fldiv@b+2)& (0+255),7,b
  9105  0028E0  D7EF               	goto	l4465
  9106                           
  9107                           ; BSR set to: 0
  9108  0028E2  0E00               	movlw	0
  9109  0028E4  6F78               	movwf	___fldiv@aexp& (0+255),b
  9110                           
  9111                           ; BSR set to: 0
  9112  0028E6  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9113  0028E8  D017               	goto	l1187
  9114                           
  9115                           ; BSR set to: 0
  9116  0028EA  0EFF               	movlw	255
  9117  0028EC  1573               	andwf	___fldiv@grs& (0+255),w,b
  9118  0028EE  6F68               	movwf	??___fldiv& (0+255),b
  9119  0028F0  0EFF               	movlw	255
  9120  0028F2  1574               	andwf	(___fldiv@grs+1)& (0+255),w,b
  9121  0028F4  6F69               	movwf	(??___fldiv+1)& (0+255),b
  9122  0028F6  0EFF               	movlw	255
  9123  0028F8  1575               	andwf	(___fldiv@grs+2)& (0+255),w,b
  9124  0028FA  6F6A               	movwf	(??___fldiv+2)& (0+255),b
  9125  0028FC  0E7F               	movlw	127
  9126  0028FE  1576               	andwf	(___fldiv@grs+3)& (0+255),w,b
  9127  002900  6F6B               	movwf	(??___fldiv+3)& (0+255),b
  9128  002902  5168               	movf	??___fldiv& (0+255),w,b
  9129  002904  1169               	iorwf	(??___fldiv+1)& (0+255),w,b
  9130  002906  116A               	iorwf	(??___fldiv+2)& (0+255),w,b
  9131  002908  116B               	iorwf	(??___fldiv+3)& (0+255),w,b
  9132  00290A  B4D8               	btfsc	status,2,c
  9133  00290C  D003               	goto	l1188
  9134  00290E                     u4950:
  9135                           
  9136                           ; BSR set to: 0
  9137  00290E  0E01               	movlw	1
  9138  002910  6F78               	movwf	___fldiv@aexp& (0+255),b
  9139  002912  D002               	goto	l1187
  9140  002914                     l1188:
  9141                           
  9142                           ; BSR set to: 0
  9143  002914  B160               	btfsc	___fldiv@b& (0+255),0,b
  9144  002916  D7FB               	goto	u4950
  9145  002918                     l1187:
  9146                           
  9147                           ; BSR set to: 0
  9148  002918  5178               	movf	___fldiv@aexp& (0+255),w,b
  9149  00291A  B4D8               	btfsc	status,2,c
  9150  00291C  D027               	goto	l4491
  9151                           
  9152                           ; BSR set to: 0
  9153  00291E  0E01               	movlw	1
  9154  002920  2760               	addwf	___fldiv@b& (0+255),f,b
  9155  002922  0E00               	movlw	0
  9156  002924  2361               	addwfc	(___fldiv@b+1)& (0+255),f,b
  9157  002926  2362               	addwfc	(___fldiv@b+2)& (0+255),f,b
  9158  002928  2363               	addwfc	(___fldiv@b+3)& (0+255),f,b
  9159                           
  9160                           ; BSR set to: 0
  9161  00292A  A163               	btfss	(___fldiv@b+3)& (0+255),0,b
  9162  00292C  D01F               	goto	l4491
  9163                           
  9164                           ; BSR set to: 0
  9165  00292E  0060  F180  F068   	movff	___fldiv@b,??___fldiv
  9166  002934  0060  F184  F069   	movff	___fldiv@b+1,??___fldiv+1
  9167  00293A  0060  F188  F06A   	movff	___fldiv@b+2,??___fldiv+2
  9168  002940  0060  F18C  F06B   	movff	___fldiv@b+3,??___fldiv+3
  9169  002946  356B               	rlcf	(??___fldiv+3)& (0+255),w,b
  9170  002948  336B               	rrcf	(??___fldiv+3)& (0+255),f,b
  9171  00294A  336A               	rrcf	(??___fldiv+2)& (0+255),f,b
  9172  00294C  3369               	rrcf	(??___fldiv+1)& (0+255),f,b
  9173  00294E  3368               	rrcf	??___fldiv& (0+255),f,b
  9174  002950  0060  F1A0  F060   	movff	??___fldiv,___fldiv@b
  9175  002956  0060  F1A4  F061   	movff	??___fldiv+1,___fldiv@b+1
  9176  00295C  0060  F1A8  F062   	movff	??___fldiv+2,___fldiv@b+2
  9177  002962  0060  F1AC  F063   	movff	??___fldiv+3,___fldiv@b+3
  9178                           
  9179                           ; BSR set to: 0
  9180  002968  4B71               	infsnz	___fldiv@new_exp& (0+255),f,b
  9181  00296A  2B72               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  9182  00296C                     l4491:
  9183                           
  9184                           ; BSR set to: 0
  9185  00296C  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9186  00296E  D010               	goto	l4495
  9187  002970  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9188  002972  E103               	bnz	u4990
  9189  002974  2971               	incf	___fldiv@new_exp& (0+255),w,b
  9190  002976  A0D8               	btfss	status,0,c
  9191  002978  D00B               	goto	l4495
  9192  00297A                     u4990:
  9193                           
  9194                           ; BSR set to: 0
  9195  00297A  0E00               	movlw	0
  9196  00297C  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9197  00297E  6971               	setf	___fldiv@new_exp& (0+255),b
  9198  002980  0E00               	movlw	0
  9199  002982  6F60               	movwf	___fldiv@b& (0+255),b
  9200  002984  0E00               	movlw	0
  9201  002986  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  9202  002988  0E00               	movlw	0
  9203  00298A  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  9204  00298C  0E00               	movlw	0
  9205  00298E  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  9206  002990                     l4495:
  9207                           
  9208                           ; BSR set to: 0
  9209  002990  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9210  002992  D005               	goto	u5000
  9211  002994  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9212  002996  E111               	bnz	l4499
  9213  002998  0571               	decf	___fldiv@new_exp& (0+255),w,b
  9214  00299A  B0D8               	btfsc	status,0,c
  9215  00299C  D00E               	goto	l4499
  9216  00299E                     u5000:
  9217                           
  9218                           ; BSR set to: 0
  9219  00299E  0E00               	movlw	0
  9220  0029A0  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9221  0029A2  0E00               	movlw	0
  9222  0029A4  6F71               	movwf	___fldiv@new_exp& (0+255),b
  9223  0029A6  0E00               	movlw	0
  9224  0029A8  6F60               	movwf	___fldiv@b& (0+255),b
  9225  0029AA  0E00               	movlw	0
  9226  0029AC  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  9227  0029AE  0E00               	movlw	0
  9228  0029B0  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  9229  0029B2  0E00               	movlw	0
  9230  0029B4  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  9231  0029B6  0E00               	movlw	0
  9232  0029B8  6F70               	movwf	___fldiv@sign& (0+255),b
  9233  0029BA                     l4499:
  9234                           
  9235                           ; BSR set to: 0
  9236  0029BA  0060  F1C4  F077   	movff	___fldiv@new_exp,___fldiv@bexp
  9237                           
  9238                           ; BSR set to: 0
  9239  0029C0  A177               	btfss	___fldiv@bexp& (0+255),0,b
  9240  0029C2  D002               	goto	l4505
  9241                           
  9242                           ; BSR set to: 0
  9243  0029C4  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  9244  0029C6  D001               	goto	l4507
  9245  0029C8                     l4505:
  9246                           
  9247                           ; BSR set to: 0
  9248  0029C8  9F62               	bcf	(___fldiv@b+2)& (0+255),7,b
  9249  0029CA                     l4507:
  9250                           
  9251                           ; BSR set to: 0
  9252  0029CA  90D8               	bcf	status,0,c
  9253  0029CC  3177               	rrcf	___fldiv@bexp& (0+255),w,b
  9254  0029CE  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  9255  0029D0  D6FC               	goto	l4421
  9256  0029D2                     __end_of___fldiv:
  9257                           	opt callstack 0
  9258                           
  9259 ;; *************** function ___awmod *****************
  9260 ;; Defined at:
  9261 ;;		line 7 in file "D:\MPLAB\pic\sources\c99\common\awmod.c"
  9262 ;; Parameters:    Size  Location     Type
  9263 ;;  dividend        2    0[BANK0 ] int 
  9264 ;;  divisor         2    2[BANK0 ] int 
  9265 ;; Auto vars:     Size  Location     Type
  9266 ;;  sign            1    5[BANK0 ] unsigned char 
  9267 ;;  counter         1    4[BANK0 ] unsigned char 
  9268 ;; Return value:  Size  Location     Type
  9269 ;;                  2    0[BANK0 ] int 
  9270 ;; Registers used:
  9271 ;;		wreg, status,2, status,0
  9272 ;; Tracked objects:
  9273 ;;		On entry : 0/0
  9274 ;;		On exit  : 0/0
  9275 ;;		Unchanged: 0/0
  9276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9277 ;;      Params:         0       4       0       0       0       0       0       0       0
  9278 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9279 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9280 ;;      Totals:         0       6       0       0       0       0       0       0       0
  9281 ;;Total ram usage:        6 bytes
  9282 ;; Hardware stack levels used:    1
  9283 ;; Hardware stack levels required when called:    3
  9284 ;; This function calls:
  9285 ;;		Nothing
  9286 ;; This function is called by:
  9287 ;;		_efgtoa
  9288 ;; This function uses a non-reentrant model
  9289 ;;
  9290                           
  9291                           	psect	text19
  9292  0040EA                     __ptext19:
  9293                           	opt callstack 0
  9294  0040EA                     ___awmod:
  9295                           	opt callstack 23
  9296                           
  9297                           ; BSR set to: 0
  9298                           ;incstack = 0
  9299  0040EA  0E00               	movlw	0
  9300  0040EC  0100               	movlb	0	; () banked
  9301  0040EE  6F65               	movwf	___awmod@sign& (0+255),b
  9302                           
  9303                           ; BSR set to: 0
  9304  0040F0  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
  9305  0040F2  D006               	goto	l4703
  9306                           
  9307                           ; BSR set to: 0
  9308  0040F4  6D60               	negf	___awmod@dividend& (0+255),b
  9309  0040F6  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  9310  0040F8  B0D8               	btfsc	status,0,c
  9311  0040FA  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  9312                           
  9313                           ; BSR set to: 0
  9314  0040FC  0E01               	movlw	1
  9315  0040FE  6F65               	movwf	___awmod@sign& (0+255),b
  9316  004100                     l4703:
  9317                           
  9318                           ; BSR set to: 0
  9319  004100  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9320  004102  D004               	goto	l4707
  9321                           
  9322                           ; BSR set to: 0
  9323  004104  6D62               	negf	___awmod@divisor& (0+255),b
  9324  004106  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  9325  004108  B0D8               	btfsc	status,0,c
  9326  00410A  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  9327  00410C                     l4707:
  9328                           
  9329                           ; BSR set to: 0
  9330  00410C  5162               	movf	___awmod@divisor& (0+255),w,b
  9331  00410E  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  9332  004110  B4D8               	btfsc	status,2,c
  9333  004112  D018               	goto	l4723
  9334                           
  9335                           ; BSR set to: 0
  9336  004114  0E01               	movlw	1
  9337  004116  6F64               	movwf	___awmod@counter& (0+255),b
  9338  004118  D004               	goto	l4713
  9339  00411A                     l4711:
  9340                           
  9341                           ; BSR set to: 0
  9342  00411A  90D8               	bcf	status,0,c
  9343  00411C  3762               	rlcf	___awmod@divisor& (0+255),f,b
  9344  00411E  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  9345  004120  2B64               	incf	___awmod@counter& (0+255),f,b
  9346  004122                     l4713:
  9347                           
  9348                           ; BSR set to: 0
  9349  004122  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9350  004124  D7FA               	goto	l4711
  9351  004126                     u5300:
  9352                           
  9353                           ; BSR set to: 0
  9354  004126  5162               	movf	___awmod@divisor& (0+255),w,b
  9355  004128  5D60               	subwf	___awmod@dividend& (0+255),w,b
  9356  00412A  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  9357  00412C  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  9358  00412E  A0D8               	btfss	status,0,c
  9359  004130  D004               	goto	l4719
  9360                           
  9361                           ; BSR set to: 0
  9362  004132  5162               	movf	___awmod@divisor& (0+255),w,b
  9363  004134  5F60               	subwf	___awmod@dividend& (0+255),f,b
  9364  004136  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  9365  004138  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  9366  00413A                     l4719:
  9367                           
  9368                           ; BSR set to: 0
  9369  00413A  90D8               	bcf	status,0,c
  9370  00413C  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  9371  00413E  3362               	rrcf	___awmod@divisor& (0+255),f,b
  9372                           
  9373                           ; BSR set to: 0
  9374  004140  2F64               	decfsz	___awmod@counter& (0+255),f,b
  9375  004142  D7F1               	goto	u5300
  9376  004144                     l4723:
  9377                           
  9378                           ; BSR set to: 0
  9379  004144  5165               	movf	___awmod@sign& (0+255),w,b
  9380  004146  B4D8               	btfsc	status,2,c
  9381  004148  D004               	goto	l4727
  9382                           
  9383                           ; BSR set to: 0
  9384  00414A  6D60               	negf	___awmod@dividend& (0+255),b
  9385  00414C  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  9386  00414E  B0D8               	btfsc	status,0,c
  9387  004150  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  9388  004152                     l4727:
  9389                           
  9390                           ; BSR set to: 0
  9391  004152  0060  F180  F060   	movff	___awmod@dividend,?___awmod
  9392  004158  0060  F184  F061   	movff	___awmod@dividend+1,?___awmod+1
  9393                           
  9394                           ; BSR set to: 0
  9395  00415E  0012               	return		;funcret
  9396  004160                     __end_of___awmod:
  9397                           	opt callstack 0
  9398                           
  9399 ;; *************** function ___awdiv *****************
  9400 ;; Defined at:
  9401 ;;		line 7 in file "D:\MPLAB\pic\sources\c99\common\awdiv.c"
  9402 ;; Parameters:    Size  Location     Type
  9403 ;;  dividend        2    0[BANK0 ] int 
  9404 ;;  divisor         2    2[BANK0 ] int 
  9405 ;; Auto vars:     Size  Location     Type
  9406 ;;  quotient        2    6[BANK0 ] int 
  9407 ;;  sign            1    5[BANK0 ] unsigned char 
  9408 ;;  counter         1    4[BANK0 ] unsigned char 
  9409 ;; Return value:  Size  Location     Type
  9410 ;;                  2    0[BANK0 ] int 
  9411 ;; Registers used:
  9412 ;;		wreg, status,2, status,0
  9413 ;; Tracked objects:
  9414 ;;		On entry : 0/0
  9415 ;;		On exit  : 0/0
  9416 ;;		Unchanged: 0/0
  9417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9418 ;;      Params:         0       4       0       0       0       0       0       0       0
  9419 ;;      Locals:         0       4       0       0       0       0       0       0       0
  9420 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9421 ;;      Totals:         0       8       0       0       0       0       0       0       0
  9422 ;;Total ram usage:        8 bytes
  9423 ;; Hardware stack levels used:    1
  9424 ;; Hardware stack levels required when called:    3
  9425 ;; This function calls:
  9426 ;;		Nothing
  9427 ;; This function is called by:
  9428 ;;		_efgtoa
  9429 ;; This function uses a non-reentrant model
  9430 ;;
  9431                           
  9432                           	psect	text20
  9433  003FD8                     __ptext20:
  9434                           	opt callstack 0
  9435  003FD8                     ___awdiv:
  9436                           	opt callstack 23
  9437                           
  9438                           ; BSR set to: 0
  9439                           ;incstack = 0
  9440  003FD8  0E00               	movlw	0
  9441  003FDA  0100               	movlb	0	; () banked
  9442  003FDC  6F65               	movwf	___awdiv@sign& (0+255),b
  9443                           
  9444                           ; BSR set to: 0
  9445  003FDE  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9446  003FE0  D006               	goto	l4659
  9447                           
  9448                           ; BSR set to: 0
  9449  003FE2  6D62               	negf	___awdiv@divisor& (0+255),b
  9450  003FE4  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  9451  003FE6  B0D8               	btfsc	status,0,c
  9452  003FE8  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  9453                           
  9454                           ; BSR set to: 0
  9455  003FEA  0E01               	movlw	1
  9456  003FEC  6F65               	movwf	___awdiv@sign& (0+255),b
  9457  003FEE                     l4659:
  9458                           
  9459                           ; BSR set to: 0
  9460  003FEE  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  9461  003FF0  D006               	goto	l4665
  9462                           
  9463                           ; BSR set to: 0
  9464  003FF2  6D60               	negf	___awdiv@dividend& (0+255),b
  9465  003FF4  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  9466  003FF6  B0D8               	btfsc	status,0,c
  9467  003FF8  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  9468                           
  9469                           ; BSR set to: 0
  9470  003FFA  0E01               	movlw	1
  9471  003FFC  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  9472  003FFE                     l4665:
  9473                           
  9474                           ; BSR set to: 0
  9475  003FFE  0E00               	movlw	0
  9476  004000  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  9477  004002  0E00               	movlw	0
  9478  004004  6F66               	movwf	___awdiv@quotient& (0+255),b
  9479                           
  9480                           ; BSR set to: 0
  9481  004006  5162               	movf	___awdiv@divisor& (0+255),w,b
  9482  004008  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  9483  00400A  B4D8               	btfsc	status,2,c
  9484  00400C  D01C               	goto	l4687
  9485                           
  9486                           ; BSR set to: 0
  9487  00400E  0E01               	movlw	1
  9488  004010  6F64               	movwf	___awdiv@counter& (0+255),b
  9489  004012  D004               	goto	l4673
  9490  004014                     l4671:
  9491                           
  9492                           ; BSR set to: 0
  9493  004014  90D8               	bcf	status,0,c
  9494  004016  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  9495  004018  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  9496  00401A  2B64               	incf	___awdiv@counter& (0+255),f,b
  9497  00401C                     l4673:
  9498                           
  9499                           ; BSR set to: 0
  9500  00401C  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9501  00401E  D7FA               	goto	l4671
  9502  004020                     u5240:
  9503                           
  9504                           ; BSR set to: 0
  9505  004020  90D8               	bcf	status,0,c
  9506  004022  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  9507  004024  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9508                           
  9509                           ; BSR set to: 0
  9510  004026  5162               	movf	___awdiv@divisor& (0+255),w,b
  9511  004028  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  9512  00402A  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9513  00402C  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9514  00402E  A0D8               	btfss	status,0,c
  9515  004030  D005               	goto	l4683
  9516                           
  9517                           ; BSR set to: 0
  9518  004032  5162               	movf	___awdiv@divisor& (0+255),w,b
  9519  004034  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  9520  004036  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9521  004038  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9522                           
  9523                           ; BSR set to: 0
  9524  00403A  8166               	bsf	___awdiv@quotient& (0+255),0,b
  9525  00403C                     l4683:
  9526                           
  9527                           ; BSR set to: 0
  9528  00403C  90D8               	bcf	status,0,c
  9529  00403E  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9530  004040  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  9531                           
  9532                           ; BSR set to: 0
  9533  004042  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  9534  004044  D7ED               	goto	u5240
  9535  004046                     l4687:
  9536                           
  9537                           ; BSR set to: 0
  9538  004046  5165               	movf	___awdiv@sign& (0+255),w,b
  9539  004048  B4D8               	btfsc	status,2,c
  9540  00404A  D004               	goto	l4691
  9541                           
  9542                           ; BSR set to: 0
  9543  00404C  6D66               	negf	___awdiv@quotient& (0+255),b
  9544  00404E  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9545  004050  B0D8               	btfsc	status,0,c
  9546  004052  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9547  004054                     l4691:
  9548                           
  9549                           ; BSR set to: 0
  9550  004054  0060  F198  F060   	movff	___awdiv@quotient,?___awdiv
  9551  00405A  0060  F19C  F061   	movff	___awdiv@quotient+1,?___awdiv+1
  9552                           
  9553                           ; BSR set to: 0
  9554  004060  0012               	return		;funcret
  9555  004062                     __end_of___awdiv:
  9556                           	opt callstack 0
  9557                           
  9558 ;; *************** function _dtoa *****************
  9559 ;; Defined at:
  9560 ;;		line 274 in file "D:\MPLAB\pic\sources\c99\common\doprnt.c"
  9561 ;; Parameters:    Size  Location     Type
  9562 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  9563 ;;		 -> sprintf@f(6), 
  9564 ;;  d               8   29[BANK0 ] long long 
  9565 ;; Auto vars:     Size  Location     Type
  9566 ;;  n               8   53[BANK0 ] long long 
  9567 ;;  i               2   61[BANK0 ] int 
  9568 ;;  s               2   51[BANK0 ] int 
  9569 ;;  w               2   49[BANK0 ] int 
  9570 ;;  p               2   47[BANK0 ] int 
  9571 ;; Return value:  Size  Location     Type
  9572 ;;                  2   27[BANK0 ] int 
  9573 ;; Registers used:
  9574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9575 ;; Tracked objects:
  9576 ;;		On entry : 0/0
  9577 ;;		On exit  : 0/0
  9578 ;;		Unchanged: 0/0
  9579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9580 ;;      Params:         0      10       0       0       0       0       0       0       0
  9581 ;;      Locals:         0      18       0       0       0       0       0       0       0
  9582 ;;      Temps:          0       8       0       0       0       0       0       0       0
  9583 ;;      Totals:         0      36       0       0       0       0       0       0       0
  9584 ;;Total ram usage:       36 bytes
  9585 ;; Hardware stack levels used:    1
  9586 ;; Hardware stack levels required when called:    7
  9587 ;; This function calls:
  9588 ;;		___aodiv
  9589 ;;		___aomod
  9590 ;;		_abs
  9591 ;;		_pad
  9592 ;; This function is called by:
  9593 ;;		_vfpfcnvrt
  9594 ;; This function uses a non-reentrant model
  9595 ;;
  9596                           
  9597                           	psect	text21
  9598  002472                     __ptext21:
  9599                           	opt callstack 0
  9600  002472                     _dtoa:
  9601                           	opt callstack 20
  9602                           
  9603                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 274: static int dtoa(FILE *fp, long long d);D
      +                          :\MPLAB\pic\sources\c99\common\doprnt.c: 275: {;D:\MPLAB\pic\sources\c99\common\doprnt.c
      +                          : 276:     int i, p, s, w;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 277:     long long 
      +                          n;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 280:     n = d;
  9604                           
  9605                           ; BSR set to: 0
  9606                           ;incstack = 0
  9607  002472  0060  F1F4  F095   	movff	dtoa@d,dtoa@n
  9608  002478  0060  F1F8  F096   	movff	dtoa@d+1,dtoa@n+1
  9609  00247E  0060  F1FC  F097   	movff	dtoa@d+2,dtoa@n+2
  9610  002484  0060  F200  F098   	movff	dtoa@d+3,dtoa@n+3
  9611  00248A  0060  F204  F099   	movff	dtoa@d+4,dtoa@n+4
  9612  002490  0060  F208  F09A   	movff	dtoa@d+5,dtoa@n+5
  9613  002496  0060  F20C  F09B   	movff	dtoa@d+6,dtoa@n+6
  9614  00249C  0060  F210  F09C   	movff	dtoa@d+7,dtoa@n+7
  9615                           
  9616                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 281:     s = n < 0 ? 1 : 0;
  9617  0024A2  0100               	movlb	0	; () banked
  9618  0024A4  AF9C               	btfss	(dtoa@n+7)& (0+255),7,b
  9619  0024A6  D002               	goto	u5550
  9620  0024A8  0E01               	movlw	1
  9621  0024AA  D001               	goto	u5560
  9622  0024AC                     u5550:
  9623  0024AC  0E00               	movlw	0
  9624  0024AE                     u5560:
  9625  0024AE  6F93               	movwf	dtoa@s& (0+255),b
  9626  0024B0  6B94               	clrf	(dtoa@s+1)& (0+255),b
  9627                           
  9628                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  9629  0024B2  5193               	movf	dtoa@s& (0+255),w,b
  9630  0024B4  1194               	iorwf	(dtoa@s+1)& (0+255),w,b
  9631  0024B6  B4D8               	btfsc	status,2,c
  9632  0024B8  D010               	goto	l4855
  9633                           
  9634                           ; BSR set to: 0
  9635                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 283:         n = -n;
  9636  0024BA  1F9C               	comf	(dtoa@n+7)& (0+255),f,b
  9637  0024BC  1F9B               	comf	(dtoa@n+6)& (0+255),f,b
  9638  0024BE  1F9A               	comf	(dtoa@n+5)& (0+255),f,b
  9639  0024C0  1F99               	comf	(dtoa@n+4)& (0+255),f,b
  9640  0024C2  1F98               	comf	(dtoa@n+3)& (0+255),f,b
  9641  0024C4  1F97               	comf	(dtoa@n+2)& (0+255),f,b
  9642  0024C6  1F96               	comf	(dtoa@n+1)& (0+255),f,b
  9643  0024C8  6D95               	negf	dtoa@n& (0+255),b
  9644  0024CA  0E00               	movlw	0
  9645  0024CC  2396               	addwfc	(dtoa@n+1)& (0+255),f,b
  9646  0024CE  2397               	addwfc	(dtoa@n+2)& (0+255),f,b
  9647  0024D0  2398               	addwfc	(dtoa@n+3)& (0+255),f,b
  9648  0024D2  2399               	addwfc	(dtoa@n+4)& (0+255),f,b
  9649  0024D4  239A               	addwfc	(dtoa@n+5)& (0+255),f,b
  9650  0024D6  239B               	addwfc	(dtoa@n+6)& (0+255),f,b
  9651  0024D8  239C               	addwfc	(dtoa@n+7)& (0+255),f,b
  9652  0024DA                     l4855:
  9653                           
  9654                           ; BSR set to: 0
  9655                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 287:     if (!(prec < 0)) {
  9656  0024DA  AFFC               	btfss	(_prec+1)& (0+255),7,b
  9657                           
  9658                           ; BSR set to: 0
  9659                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 288:         flags &= ~(1 << 1);
  9660  0024DC  93FD               	bcf	_flags& (0+255),1,b
  9661                           
  9662                           ; BSR set to: 0
  9663                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 290:     p = (0 < prec) ? prec : 1;
  9664  0024DE  BFFC               	btfsc	(_prec+1)& (0+255),7,b
  9665  0024E0  D005               	goto	u5590
  9666  0024E2  51FC               	movf	(_prec+1)& (0+255),w,b
  9667  0024E4  E108               	bnz	l434
  9668  0024E6  05FB               	decf	_prec& (0+255),w,b
  9669  0024E8  B0D8               	btfsc	status,0,c
  9670  0024EA  D005               	goto	l434
  9671  0024EC                     u5590:
  9672                           
  9673                           ; BSR set to: 0
  9674  0024EC  0E00               	movlw	0
  9675  0024EE  6F90               	movwf	(dtoa@p+1)& (0+255),b
  9676  0024F0  0E01               	movlw	1
  9677  0024F2  6F8F               	movwf	dtoa@p& (0+255),b
  9678  0024F4  D006               	goto	l436
  9679  0024F6                     l434:
  9680                           
  9681                           ; BSR set to: 0
  9682  0024F6  0060  F3EC  F08F   	movff	_prec,dtoa@p
  9683  0024FC  0060  F3F0  F090   	movff	_prec+1,dtoa@p+1
  9684  002502                     l436:
  9685                           
  9686                           ; BSR set to: 0
  9687                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 291:     w = width;
  9688  002502  0060  F134  F091   	movff	_width,dtoa@w
  9689  002508  0060  F138  F092   	movff	_width+1,dtoa@w+1
  9690                           
  9691                           ; BSR set to: 0
  9692                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 292:     if (s || (flags & (1 << 2))) {
  9693  00250E  5193               	movf	dtoa@s& (0+255),w,b
  9694  002510  1194               	iorwf	(dtoa@s+1)& (0+255),w,b
  9695  002512  A4D8               	btfss	status,2,c
  9696  002514  D002               	goto	u5610
  9697                           
  9698                           ; BSR set to: 0
  9699  002516  A5FD               	btfss	_flags& (0+255),2,b
  9700  002518  D003               	goto	l4869
  9701  00251A                     u5610:
  9702                           
  9703                           ; BSR set to: 0
  9704                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 293:         --w;
  9705  00251A  0791               	decf	dtoa@w& (0+255),f,b
  9706  00251C  A0D8               	btfss	status,0,c
  9707  00251E  0792               	decf	(dtoa@w+1)& (0+255),f,b
  9708  002520                     l4869:
  9709                           
  9710                           ; BSR set to: 0
  9711                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 297:     i = sizeof(dbuf) - 1;
  9712  002520  0E00               	movlw	0
  9713  002522  6F9E               	movwf	(dtoa@i+1)& (0+255),b
  9714  002524  0E4F               	movlw	79
  9715  002526  6F9D               	movwf	dtoa@i& (0+255),b
  9716                           
  9717                           ; BSR set to: 0
  9718                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] = '\0';
  9719  002528  0E00               	movlw	0
  9720  00252A  0101               	movlb	1	; () banked
  9721  00252C  6F62               	movwf	(_dbuf+79)& (0+255),b
  9722                           
  9723                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 299:     while (!(i < 1) && (n || (0 < p) || 
      +                          ((0 < w) && (flags & (1 << 1))))) {
  9724  00252E  D09F               	goto	l4883
  9725  002530                     l4873:
  9726                           
  9727                           ; BSR set to: 0
  9728                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 300:         --i;
  9729  002530  079D               	decf	dtoa@i& (0+255),f,b
  9730  002532  A0D8               	btfss	status,0,c
  9731  002534  079E               	decf	(dtoa@i+1)& (0+255),f,b
  9732                           
  9733                           ; BSR set to: 0
  9734                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 301:         dbuf[i] = '0' + abs(n % 10);
  9735  002536  0E13               	movlw	low _dbuf
  9736  002538  259D               	addwf	dtoa@i& (0+255),w,b
  9737  00253A  6ED9               	movwf	fsr2l,c
  9738  00253C  0E01               	movlw	high _dbuf
  9739  00253E  219E               	addwfc	(dtoa@i+1)& (0+255),w,b
  9740  002540  6EDA               	movwf	fsr2h,c
  9741  002542  0060  F254  F060   	movff	dtoa@n,___aomod@dividend
  9742  002548  0060  F258  F061   	movff	dtoa@n+1,___aomod@dividend+1
  9743  00254E  0060  F25C  F062   	movff	dtoa@n+2,___aomod@dividend+2
  9744  002554  0060  F260  F063   	movff	dtoa@n+3,___aomod@dividend+3
  9745  00255A  0060  F264  F064   	movff	dtoa@n+4,___aomod@dividend+4
  9746  002560  0060  F268  F065   	movff	dtoa@n+5,___aomod@dividend+5
  9747  002566  0060  F26C  F066   	movff	dtoa@n+6,___aomod@dividend+6
  9748  00256C  0060  F270  F067   	movff	dtoa@n+7,___aomod@dividend+7
  9749  002572  0E0A               	movlw	10
  9750  002574  6F68               	movwf	___aomod@divisor& (0+255),b
  9751  002576  0E00               	movlw	0
  9752  002578  6F69               	movwf	(___aomod@divisor+1)& (0+255),b
  9753  00257A  0E00               	movlw	0
  9754  00257C  6F6A               	movwf	(___aomod@divisor+2)& (0+255),b
  9755  00257E  0E00               	movlw	0
  9756  002580  6F6B               	movwf	(___aomod@divisor+3)& (0+255),b
  9757  002582  0E00               	movlw	0
  9758  002584  6F6C               	movwf	(___aomod@divisor+4)& (0+255),b
  9759  002586  0E00               	movlw	0
  9760  002588  6F6D               	movwf	(___aomod@divisor+5)& (0+255),b
  9761  00258A  0E00               	movlw	0
  9762  00258C  6F6E               	movwf	(___aomod@divisor+6)& (0+255),b
  9763  00258E  0E00               	movlw	0
  9764  002590  6F6F               	movwf	(___aomod@divisor+7)& (0+255),b
  9765  002592  ECA8  F01A         	call	___aomod	;wreg free
  9766  002596  0060  F180  F085   	movff	?___aomod,??_dtoa
  9767  00259C  0060  F184  F086   	movff	?___aomod+1,??_dtoa+1
  9768  0025A2  0060  F188  F087   	movff	?___aomod+2,??_dtoa+2
  9769  0025A8  0060  F18C  F088   	movff	?___aomod+3,??_dtoa+3
  9770  0025AE  0060  F190  F089   	movff	?___aomod+4,??_dtoa+4
  9771  0025B4  0060  F194  F08A   	movff	?___aomod+5,??_dtoa+5
  9772  0025BA  0060  F198  F08B   	movff	?___aomod+6,??_dtoa+6
  9773  0025C0  0060  F19C  F08C   	movff	?___aomod+7,??_dtoa+7
  9774  0025C6  0060  F214  F072   	movff	??_dtoa,abs@a
  9775  0025CC  0060  F21C  F073   	movff	??_dtoa+2,abs@a+1
  9776  0025D2  EC40  F022         	call	_abs	;wreg free
  9777  0025D6  0100               	movlb	0	; () banked
  9778  0025D8  5172               	movf	?_abs& (0+255),w,b
  9779  0025DA  0F30               	addlw	48
  9780  0025DC  6EDF               	movwf	indf2,c
  9781                           
  9782                           ; BSR set to: 0
  9783                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 302:         --p;
  9784  0025DE  078F               	decf	dtoa@p& (0+255),f,b
  9785  0025E0  A0D8               	btfss	status,0,c
  9786  0025E2  0790               	decf	(dtoa@p+1)& (0+255),f,b
  9787                           
  9788                           ; BSR set to: 0
  9789                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 303:         --w;
  9790  0025E4  0791               	decf	dtoa@w& (0+255),f,b
  9791  0025E6  A0D8               	btfss	status,0,c
  9792  0025E8  0792               	decf	(dtoa@w+1)& (0+255),f,b
  9793                           
  9794                           ; BSR set to: 0
  9795                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 304:         n = n / 10;
  9796  0025EA  0060  F254  F060   	movff	dtoa@n,___aodiv@dividend
  9797  0025F0  0060  F258  F061   	movff	dtoa@n+1,___aodiv@dividend+1
  9798  0025F6  0060  F25C  F062   	movff	dtoa@n+2,___aodiv@dividend+2
  9799  0025FC  0060  F260  F063   	movff	dtoa@n+3,___aodiv@dividend+3
  9800  002602  0060  F264  F064   	movff	dtoa@n+4,___aodiv@dividend+4
  9801  002608  0060  F268  F065   	movff	dtoa@n+5,___aodiv@dividend+5
  9802  00260E  0060  F26C  F066   	movff	dtoa@n+6,___aodiv@dividend+6
  9803  002614  0060  F270  F067   	movff	dtoa@n+7,___aodiv@dividend+7
  9804  00261A  0E0A               	movlw	10
  9805  00261C  6F68               	movwf	___aodiv@divisor& (0+255),b
  9806  00261E  0E00               	movlw	0
  9807  002620  6F69               	movwf	(___aodiv@divisor+1)& (0+255),b
  9808  002622  0E00               	movlw	0
  9809  002624  6F6A               	movwf	(___aodiv@divisor+2)& (0+255),b
  9810  002626  0E00               	movlw	0
  9811  002628  6F6B               	movwf	(___aodiv@divisor+3)& (0+255),b
  9812  00262A  0E00               	movlw	0
  9813  00262C  6F6C               	movwf	(___aodiv@divisor+4)& (0+255),b
  9814  00262E  0E00               	movlw	0
  9815  002630  6F6D               	movwf	(___aodiv@divisor+5)& (0+255),b
  9816  002632  0E00               	movlw	0
  9817  002634  6F6E               	movwf	(___aodiv@divisor+6)& (0+255),b
  9818  002636  0E00               	movlw	0
  9819  002638  6F6F               	movwf	(___aodiv@divisor+7)& (0+255),b
  9820  00263A  EC58  F019         	call	___aodiv	;wreg free
  9821  00263E  0060  F180  F095   	movff	?___aodiv,dtoa@n
  9822  002644  0060  F184  F096   	movff	?___aodiv+1,dtoa@n+1
  9823  00264A  0060  F188  F097   	movff	?___aodiv+2,dtoa@n+2
  9824  002650  0060  F18C  F098   	movff	?___aodiv+3,dtoa@n+3
  9825  002656  0060  F190  F099   	movff	?___aodiv+4,dtoa@n+4
  9826  00265C  0060  F194  F09A   	movff	?___aodiv+5,dtoa@n+5
  9827  002662  0060  F198  F09B   	movff	?___aodiv+6,dtoa@n+6
  9828  002668  0060  F19C  F09C   	movff	?___aodiv+7,dtoa@n+7
  9829  00266E                     l4883:
  9830                           
  9831                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 299:     while (!(i < 1) && (n || (0 < p) || 
      +                          ((0 < w) && (flags & (1 << 1))))) {
  9832  00266E  0100               	movlb	0	; () banked
  9833  002670  BF9E               	btfsc	(dtoa@i+1)& (0+255),7,b
  9834  002672  D01F               	goto	u5660
  9835  002674  519E               	movf	(dtoa@i+1)& (0+255),w,b
  9836  002676  E103               	bnz	u5620
  9837  002678  059D               	decf	dtoa@i& (0+255),w,b
  9838  00267A  A0D8               	btfss	status,0,c
  9839  00267C  D01A               	goto	u5660
  9840  00267E                     u5620:
  9841                           
  9842                           ; BSR set to: 0
  9843  00267E  5195               	movf	dtoa@n& (0+255),w,b
  9844  002680  1196               	iorwf	(dtoa@n+1)& (0+255),w,b
  9845  002682  1197               	iorwf	(dtoa@n+2)& (0+255),w,b
  9846  002684  1198               	iorwf	(dtoa@n+3)& (0+255),w,b
  9847  002686  1199               	iorwf	(dtoa@n+4)& (0+255),w,b
  9848  002688  119A               	iorwf	(dtoa@n+5)& (0+255),w,b
  9849  00268A  119B               	iorwf	(dtoa@n+6)& (0+255),w,b
  9850  00268C  119C               	iorwf	(dtoa@n+7)& (0+255),w,b
  9851  00268E  A4D8               	btfss	status,2,c
  9852  002690  D74F               	goto	l4873
  9853                           
  9854                           ; BSR set to: 0
  9855  002692  BF90               	btfsc	(dtoa@p+1)& (0+255),7,b
  9856  002694  D005               	goto	u5640
  9857  002696  5190               	movf	(dtoa@p+1)& (0+255),w,b
  9858  002698  E102               	bnz	u5641
  9859  00269A  058F               	decf	dtoa@p& (0+255),w,b
  9860  00269C  B0D8               	btfsc	status,0,c
  9861  00269E                     u5641:
  9862  00269E  D748               	goto	l4873
  9863  0026A0                     u5640:
  9864                           
  9865                           ; BSR set to: 0
  9866  0026A0  BF92               	btfsc	(dtoa@w+1)& (0+255),7,b
  9867  0026A2  D007               	goto	u5660
  9868  0026A4  5192               	movf	(dtoa@w+1)& (0+255),w,b
  9869  0026A6  E103               	bnz	u5650
  9870  0026A8  0591               	decf	dtoa@w& (0+255),w,b
  9871  0026AA  A0D8               	btfss	status,0,c
  9872  0026AC  D002               	goto	u5660
  9873  0026AE                     u5650:
  9874                           
  9875                           ; BSR set to: 0
  9876  0026AE  B3FD               	btfsc	_flags& (0+255),1,b
  9877  0026B0  D73F               	goto	l4873
  9878  0026B2                     u5660:
  9879                           
  9880                           ; BSR set to: 0
  9881                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 308:     if (s || (flags & (1 << 2))) {
  9882  0026B2  5193               	movf	dtoa@s& (0+255),w,b
  9883  0026B4  1194               	iorwf	(dtoa@s+1)& (0+255),w,b
  9884  0026B6  A4D8               	btfss	status,2,c
  9885  0026B8  D002               	goto	u5680
  9886                           
  9887                           ; BSR set to: 0
  9888  0026BA  A5FD               	btfss	_flags& (0+255),2,b
  9889  0026BC  D018               	goto	l4907
  9890  0026BE                     u5680:
  9891                           
  9892                           ; BSR set to: 0
  9893                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 309:         --i;
  9894  0026BE  079D               	decf	dtoa@i& (0+255),f,b
  9895  0026C0  A0D8               	btfss	status,0,c
  9896  0026C2  079E               	decf	(dtoa@i+1)& (0+255),f,b
  9897                           
  9898                           ; BSR set to: 0
  9899                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 310:         dbuf[i] = s ? '-' : '+';
  9900  0026C4  5193               	movf	dtoa@s& (0+255),w,b
  9901  0026C6  1194               	iorwf	(dtoa@s+1)& (0+255),w,b
  9902  0026C8  A4D8               	btfss	status,2,c
  9903  0026CA  D004               	goto	l4903
  9904                           
  9905                           ; BSR set to: 0
  9906  0026CC  0E00               	movlw	0
  9907  0026CE  6F8E               	movwf	(_dtoa$1761+1)& (0+255),b
  9908  0026D0  0E2B               	movlw	43
  9909  0026D2  D003               	goto	L17
  9910  0026D4                     l4903:
  9911                           
  9912                           ; BSR set to: 0
  9913  0026D4  0E00               	movlw	0
  9914  0026D6  6F8E               	movwf	(_dtoa$1761+1)& (0+255),b
  9915  0026D8  0E2D               	movlw	45
  9916  0026DA                     L17:
  9917  0026DA  6F8D               	movwf	_dtoa$1761& (0+255),b
  9918                           
  9919                           ; BSR set to: 0
  9920  0026DC  0E13               	movlw	low _dbuf
  9921  0026DE  259D               	addwf	dtoa@i& (0+255),w,b
  9922  0026E0  6ED9               	movwf	fsr2l,c
  9923  0026E2  0E01               	movlw	high _dbuf
  9924  0026E4  219E               	addwfc	(dtoa@i+1)& (0+255),w,b
  9925  0026E6  6EDA               	movwf	fsr2h,c
  9926  0026E8  0060  F237  FFDF   	movff	_dtoa$1761,indf2
  9927  0026EE                     l4907:
  9928                           
  9929                           ; BSR set to: 0
  9930                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 314:     return pad(fp, &dbuf[i], w);
  9931  0026EE  0060  F1EC  F070   	movff	dtoa@fp,pad@fp
  9932  0026F4  0060  F1F0  F071   	movff	dtoa@fp+1,pad@fp+1
  9933  0026FA  0E13               	movlw	low _dbuf
  9934  0026FC  259D               	addwf	dtoa@i& (0+255),w,b
  9935  0026FE  6F72               	movwf	pad@buf& (0+255),b
  9936  002700  0E01               	movlw	high _dbuf
  9937  002702  219E               	addwfc	(dtoa@i+1)& (0+255),w,b
  9938  002704  6F73               	movwf	(pad@buf+1)& (0+255),b
  9939  002706  0060  F244  F074   	movff	dtoa@w,pad@p
  9940  00270C  0060  F248  F075   	movff	dtoa@w+1,pad@p+1
  9941  002712  ECB8  F01D         	call	_pad	;wreg free
  9942  002716  0060  F1C0  F07B   	movff	?_pad,?_dtoa
  9943  00271C  0060  F1C4  F07C   	movff	?_pad+1,?_dtoa+1
  9944  002722  0012               	return		;funcret
  9945  002724                     __end_of_dtoa:
  9946                           	opt callstack 0
  9947                           
  9948 ;; *************** function _pad *****************
  9949 ;; Defined at:
  9950 ;;		line 72 in file "D:\MPLAB\pic\sources\c99\common\doprnt.c"
  9951 ;; Parameters:    Size  Location     Type
  9952 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  9953 ;;		 -> sprintf@f(6), 
  9954 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  9955 ;;		 -> dbuf(80), 
  9956 ;;  p               2   20[BANK0 ] int 
  9957 ;; Auto vars:     Size  Location     Type
  9958 ;;  w               2   25[BANK0 ] int 
  9959 ;;  i               2   23[BANK0 ] int 
  9960 ;; Return value:  Size  Location     Type
  9961 ;;                  2   16[BANK0 ] int 
  9962 ;; Registers used:
  9963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9964 ;; Tracked objects:
  9965 ;;		On entry : 0/0
  9966 ;;		On exit  : 0/0
  9967 ;;		Unchanged: 0/0
  9968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9969 ;;      Params:         0       6       0       0       0       0       0       0       0
  9970 ;;      Locals:         0       4       0       0       0       0       0       0       0
  9971 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9972 ;;      Totals:         0      11       0       0       0       0       0       0       0
  9973 ;;Total ram usage:       11 bytes
  9974 ;; Hardware stack levels used:    1
  9975 ;; Hardware stack levels required when called:    6
  9976 ;; This function calls:
  9977 ;;		_fputc
  9978 ;;		_fputs
  9979 ;;		_strlen
  9980 ;; This function is called by:
  9981 ;;		_dtoa
  9982 ;;		_efgtoa
  9983 ;; This function uses a non-reentrant model
  9984 ;;
  9985                           
  9986                           	psect	text22
  9987  003B70                     __ptext22:
  9988                           	opt callstack 0
  9989  003B70                     _pad:
  9990                           	opt callstack 20
  9991                           
  9992                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 72: static int pad(FILE *fp, char *buf, int p
      +                          );D:\MPLAB\pic\sources\c99\common\doprnt.c: 73: {;D:\MPLAB\pic\sources\c99\common\doprnt
      +                          .c: 74:     int i, w;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 77:     if (flags & (1 <
      +                          < 0)) {
  9993                           
  9994                           ;incstack = 0
  9995  003B70  0100               	movlb	0	; () banked
  9996  003B72  A1FD               	btfss	_flags& (0+255),0,b
  9997  003B74  D00E               	goto	l4201
  9998                           
  9999                           ; BSR set to: 0
 10000                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 78:         fputs((const char *)buf, fp);
 10001  003B76  0060  F1C8  F069   	movff	pad@buf,fputs@s
 10002  003B7C  0060  F1CC  F06A   	movff	pad@buf+1,fputs@s+1
 10003  003B82  0060  F1C0  F06B   	movff	pad@fp,fputs@fp
 10004  003B88  0060  F1C4  F06C   	movff	pad@fp+1,fputs@fp+1
 10005  003B8E  EC1F  F022         	call	_fputs	;wreg free
 10006  003B92                     l4201:
 10007                           
 10008                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ? 0 : p;
 10009  003B92  0100               	movlb	0	; () banked
 10010  003B94  BF75               	btfsc	(pad@p+1)& (0+255),7,b
 10011  003B96  D007               	goto	l4205
 10012                           
 10013                           ; BSR set to: 0
 10014  003B98  0060  F1D0  F079   	movff	pad@p,pad@w
 10015  003B9E  0060  F1D4  F07A   	movff	pad@p+1,pad@w+1
 10016  003BA4  D004               	goto	l423
 10017  003BA6                     l4205:
 10018                           
 10019                           ; BSR set to: 0
 10020  003BA6  0E00               	movlw	0
 10021  003BA8  6F7A               	movwf	(pad@w+1)& (0+255),b
 10022  003BAA  0E00               	movlw	0
 10023  003BAC  6F79               	movwf	pad@w& (0+255),b
 10024  003BAE                     l423:
 10025                           
 10026                           ; BSR set to: 0
 10027                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 10028  003BAE  0E00               	movlw	0
 10029  003BB0  6F78               	movwf	(pad@i+1)& (0+255),b
 10030  003BB2  0E00               	movlw	0
 10031  003BB4  6F77               	movwf	pad@i& (0+255),b
 10032                           
 10033                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 84:     while (i < w) {
 10034  003BB6  D00F               	goto	l4211
 10035  003BB8                     l4207:
 10036                           
 10037                           ; BSR set to: 0
 10038                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 85:         fputc(' ', fp);
 10039  003BB8  0E00               	movlw	0
 10040  003BBA  6F61               	movwf	(fputc@c+1)& (0+255),b
 10041  003BBC  0E20               	movlw	32
 10042  003BBE  6F60               	movwf	fputc@c& (0+255),b
 10043  003BC0  0060  F1C0  F062   	movff	pad@fp,fputc@fp
 10044  003BC6  0060  F1C4  F063   	movff	pad@fp+1,fputc@fp+1
 10045  003BCC  EC15  F01E         	call	_fputc	;wreg free
 10046                           
 10047                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 86:         ++i;
 10048  003BD0  0100               	movlb	0	; () banked
 10049  003BD2  4B77               	infsnz	pad@i& (0+255),f,b
 10050  003BD4  2B78               	incf	(pad@i+1)& (0+255),f,b
 10051  003BD6                     l4211:
 10052                           
 10053                           ; BSR set to: 0
 10054                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 84:     while (i < w) {
 10055  003BD6  5179               	movf	pad@w& (0+255),w,b
 10056  003BD8  5D77               	subwf	pad@i& (0+255),w,b
 10057  003BDA  5178               	movf	(pad@i+1)& (0+255),w,b
 10058  003BDC  0A80               	xorlw	128
 10059  003BDE  6F76               	movwf	??_pad& (0+255),b
 10060  003BE0  517A               	movf	(pad@w+1)& (0+255),w,b
 10061  003BE2  0A80               	xorlw	128
 10062  003BE4  5976               	subwfb	??_pad& (0+255),w,b
 10063  003BE6  A0D8               	btfss	status,0,c
 10064  003BE8  D7E7               	goto	l4207
 10065                           
 10066                           ; BSR set to: 0
 10067                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 90:     if (!(flags & (1 << 0))) {
 10068  003BEA  B1FD               	btfsc	_flags& (0+255),0,b
 10069  003BEC  D00E               	goto	l4215
 10070                           
 10071                           ; BSR set to: 0
 10072                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 91:         fputs((const char *)buf, fp);
 10073  003BEE  0060  F1C8  F069   	movff	pad@buf,fputs@s
 10074  003BF4  0060  F1CC  F06A   	movff	pad@buf+1,fputs@s+1
 10075  003BFA  0060  F1C0  F06B   	movff	pad@fp,fputs@fp
 10076  003C00  0060  F1C4  F06C   	movff	pad@fp+1,fputs@fp+1
 10077  003C06  EC1F  F022         	call	_fputs	;wreg free
 10078  003C0A                     l4215:
 10079                           
 10080                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 94:     return strlen(buf) + w;
 10081  003C0A  0060  F1C8  F060   	movff	pad@buf,strlen@s
 10082  003C10  0060  F1CC  F061   	movff	pad@buf+1,strlen@s+1
 10083  003C16  ECB6  F022         	call	_strlen	;wreg free
 10084  003C1A  0100               	movlb	0	; () banked
 10085  003C1C  5179               	movf	pad@w& (0+255),w,b
 10086  003C1E  2560               	addwf	?_strlen& (0+255),w,b
 10087  003C20  6F70               	movwf	?_pad& (0+255),b
 10088  003C22  517A               	movf	(pad@w+1)& (0+255),w,b
 10089  003C24  2161               	addwfc	(?_strlen+1)& (0+255),w,b
 10090  003C26  6F71               	movwf	(?_pad+1)& (0+255),b
 10091                           
 10092                           ; BSR set to: 0
 10093  003C28  0012               	return		;funcret
 10094  003C2A                     __end_of_pad:
 10095                           	opt callstack 0
 10096                           
 10097 ;; *************** function _strlen *****************
 10098 ;; Defined at:
 10099 ;;		line 12 in file "D:\MPLAB\pic\sources\c99\common\strlen.c"
 10100 ;; Parameters:    Size  Location     Type
 10101 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 10102 ;;		 -> dbuf(80), 
 10103 ;; Auto vars:     Size  Location     Type
 10104 ;;  a               2    2[BANK0 ] PTR const unsigned char 
 10105 ;;		 -> dbuf(80), 
 10106 ;; Return value:  Size  Location     Type
 10107 ;;                  2    0[BANK0 ] unsigned int 
 10108 ;; Registers used:
 10109 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10110 ;; Tracked objects:
 10111 ;;		On entry : 0/0
 10112 ;;		On exit  : 0/0
 10113 ;;		Unchanged: 0/0
 10114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10115 ;;      Params:         0       2       0       0       0       0       0       0       0
 10116 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10117 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10118 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10119 ;;Total ram usage:        4 bytes
 10120 ;; Hardware stack levels used:    1
 10121 ;; Hardware stack levels required when called:    3
 10122 ;; This function calls:
 10123 ;;		Nothing
 10124 ;; This function is called by:
 10125 ;;		_pad
 10126 ;; This function uses a non-reentrant model
 10127 ;;
 10128                           
 10129                           	psect	text23
 10130  00456C                     __ptext23:
 10131                           	opt callstack 0
 10132  00456C                     _strlen:
 10133                           	opt callstack 22
 10134                           
 10135                           ; BSR set to: 0
 10136                           ;incstack = 0
 10137  00456C  0060  F180  F062   	movff	strlen@s,strlen@a
 10138  004572  0060  F184  F063   	movff	strlen@s+1,strlen@a+1
 10139  004578  D003               	goto	l3985
 10140  00457A                     l3983:
 10141  00457A  0100               	movlb	0	; () banked
 10142  00457C  4B60               	infsnz	strlen@s& (0+255),f,b
 10143  00457E  2B61               	incf	(strlen@s+1)& (0+255),f,b
 10144  004580                     l3985:
 10145  004580  0060  F183  FFD9   	movff	strlen@s,fsr2l
 10146  004586  0060  F187  FFDA   	movff	strlen@s+1,fsr2h
 10147  00458C  50DF               	movf	indf2,w,c
 10148  00458E  A4D8               	btfss	status,2,c
 10149  004590  D7F4               	goto	l3983
 10150  004592  0100               	movlb	0	; () banked
 10151  004594  5162               	movf	strlen@a& (0+255),w,b
 10152  004596  5D60               	subwf	strlen@s& (0+255),w,b
 10153  004598  6F60               	movwf	?_strlen& (0+255),b
 10154  00459A  5163               	movf	(strlen@a+1)& (0+255),w,b
 10155  00459C  5961               	subwfb	(strlen@s+1)& (0+255),w,b
 10156  00459E  6F61               	movwf	(?_strlen+1)& (0+255),b
 10157                           
 10158                           ; BSR set to: 0
 10159  0045A0  0012               	return		;funcret
 10160  0045A2                     __end_of_strlen:
 10161                           	opt callstack 0
 10162                           
 10163 ;; *************** function _fputs *****************
 10164 ;; Defined at:
 10165 ;;		line 8 in file "D:\MPLAB\pic\sources\c99\common\nf_fputs.c"
 10166 ;; Parameters:    Size  Location     Type
 10167 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 10168 ;;		 -> dbuf(80), 
 10169 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
 10170 ;;		 -> sprintf@f(6), 
 10171 ;; Auto vars:     Size  Location     Type
 10172 ;;  i               2   14[BANK0 ] int 
 10173 ;;  c               1   13[BANK0 ] unsigned char 
 10174 ;; Return value:  Size  Location     Type
 10175 ;;                  2    9[BANK0 ] int 
 10176 ;; Registers used:
 10177 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10178 ;; Tracked objects:
 10179 ;;		On entry : 0/0
 10180 ;;		On exit  : 0/0
 10181 ;;		Unchanged: 0/0
 10182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10183 ;;      Params:         0       4       0       0       0       0       0       0       0
 10184 ;;      Locals:         0       3       0       0       0       0       0       0       0
 10185 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10186 ;;      Totals:         0       7       0       0       0       0       0       0       0
 10187 ;;Total ram usage:        7 bytes
 10188 ;; Hardware stack levels used:    1
 10189 ;; Hardware stack levels required when called:    5
 10190 ;; This function calls:
 10191 ;;		_fputc
 10192 ;; This function is called by:
 10193 ;;		_pad
 10194 ;; This function uses a non-reentrant model
 10195 ;;
 10196                           
 10197                           	psect	text24
 10198  00443E                     __ptext24:
 10199                           	opt callstack 0
 10200  00443E                     _fputs:
 10201                           	opt callstack 20
 10202                           
 10203                           ; BSR set to: 0
 10204                           ;incstack = 0
 10205  00443E  0E00               	movlw	0
 10206  004440  0100               	movlb	0	; () banked
 10207  004442  6F6F               	movwf	(fputs@i+1)& (0+255),b
 10208  004444  0E00               	movlw	0
 10209  004446  6F6E               	movwf	fputs@i& (0+255),b
 10210  004448  D00F               	goto	l3979
 10211  00444A                     l3975:
 10212                           
 10213                           ; BSR set to: 0
 10214  00444A  0060  F1B4  F060   	movff	fputs@c,fputc@c
 10215  004450  6B61               	clrf	(fputc@c+1)& (0+255),b
 10216  004452  0060  F1AC  F062   	movff	fputs@fp,fputc@fp
 10217  004458  0060  F1B0  F063   	movff	fputs@fp+1,fputc@fp+1
 10218  00445E  EC15  F01E         	call	_fputc	;wreg free
 10219  004462  0100               	movlb	0	; () banked
 10220  004464  4B6E               	infsnz	fputs@i& (0+255),f,b
 10221  004466  2B6F               	incf	(fputs@i+1)& (0+255),f,b
 10222  004468                     l3979:
 10223                           
 10224                           ; BSR set to: 0
 10225  004468  516E               	movf	fputs@i& (0+255),w,b
 10226  00446A  2569               	addwf	fputs@s& (0+255),w,b
 10227  00446C  6ED9               	movwf	fsr2l,c
 10228  00446E  516F               	movf	(fputs@i+1)& (0+255),w,b
 10229  004470  216A               	addwfc	(fputs@s+1)& (0+255),w,b
 10230  004472  6EDA               	movwf	fsr2h,c
 10231  004474  50DF               	movf	indf2,w,c
 10232  004476  6F6D               	movwf	fputs@c& (0+255),b
 10233  004478  516D               	movf	fputs@c& (0+255),w,b
 10234  00447A  B4D8               	btfsc	status,2,c
 10235  00447C  0012               	return	
 10236  00447E  D7E5               	goto	l3975
 10237  004480                     __end_of_fputs:
 10238                           	opt callstack 0
 10239                           
 10240 ;; *************** function _fputc *****************
 10241 ;; Defined at:
 10242 ;;		line 8 in file "D:\MPLAB\pic\sources\c99\common\nf_fputc.c"
 10243 ;; Parameters:    Size  Location     Type
 10244 ;;  c               2    0[BANK0 ] int 
 10245 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
 10246 ;;		 -> sprintf@f(6), 
 10247 ;; Auto vars:     Size  Location     Type
 10248 ;;		None
 10249 ;; Return value:  Size  Location     Type
 10250 ;;                  2    0[BANK0 ] int 
 10251 ;; Registers used:
 10252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10253 ;; Tracked objects:
 10254 ;;		On entry : 0/0
 10255 ;;		On exit  : 0/0
 10256 ;;		Unchanged: 0/0
 10257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10258 ;;      Params:         0       4       0       0       0       0       0       0       0
 10259 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10260 ;;      Temps:          0       5       0       0       0       0       0       0       0
 10261 ;;      Totals:         0       9       0       0       0       0       0       0       0
 10262 ;;Total ram usage:        9 bytes
 10263 ;; Hardware stack levels used:    1
 10264 ;; Hardware stack levels required when called:    4
 10265 ;; This function calls:
 10266 ;;		_putch
 10267 ;; This function is called by:
 10268 ;;		_pad
 10269 ;;		_vfpfcnvrt
 10270 ;;		_fputs
 10271 ;; This function uses a non-reentrant model
 10272 ;;
 10273                           
 10274                           	psect	text25
 10275  003C2A                     __ptext25:
 10276                           	opt callstack 0
 10277  003C2A                     _fputc:
 10278                           	opt callstack 23
 10279                           
 10280                           ; BSR set to: 0
 10281                           ;incstack = 0
 10282  003C2A  0100               	movlb	0	; () banked
 10283  003C2C  5162               	movf	fputc@fp& (0+255),w,b
 10284  003C2E  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
 10285  003C30  B4D8               	btfsc	status,2,c
 10286  003C32  D004               	goto	u3910
 10287                           
 10288                           ; BSR set to: 0
 10289  003C34  5162               	movf	fputc@fp& (0+255),w,b
 10290  003C36  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
 10291  003C38  A4D8               	btfss	status,2,c
 10292  003C3A  D004               	goto	l3965
 10293  003C3C                     u3910:
 10294                           
 10295                           ; BSR set to: 0
 10296  003C3C  5160               	movf	fputc@c& (0+255),w,b
 10297  003C3E  EC66  F023         	call	_putch
 10298  003C42  0012               	return	
 10299  003C44                     l3965:
 10300                           
 10301                           ; BSR set to: 0
 10302  003C44  EE20 F004          	lfsr	2,4
 10303  003C48  5162               	movf	fputc@fp& (0+255),w,b
 10304  003C4A  26D9               	addwf	fsr2l,f,c
 10305  003C4C  5163               	movf	(fputc@fp+1)& (0+255),w,b
 10306  003C4E  22DA               	addwfc	fsr2h,f,c
 10307  003C50  50DE               	movf	postinc2,w,c
 10308  003C52  10DE               	iorwf	postinc2,w,c
 10309  003C54  B4D8               	btfsc	status,2,c
 10310  003C56  D016               	goto	u3930
 10311                           
 10312                           ; BSR set to: 0
 10313  003C58  EE20 F004          	lfsr	2,4
 10314  003C5C  5162               	movf	fputc@fp& (0+255),w,b
 10315  003C5E  26D9               	addwf	fsr2l,f,c
 10316  003C60  5163               	movf	(fputc@fp+1)& (0+255),w,b
 10317  003C62  22DA               	addwfc	fsr2h,f,c
 10318  003C64  EE10 F002          	lfsr	1,2
 10319  003C68  5162               	movf	fputc@fp& (0+255),w,b
 10320  003C6A  26E1               	addwf	fsr1l,f,c
 10321  003C6C  5163               	movf	(fputc@fp+1)& (0+255),w,b
 10322  003C6E  22E2               	addwfc	fsr1h,f,c
 10323  003C70  50DE               	movf	postinc2,w,c
 10324  003C72  5CE6               	subwf	postinc1,w,c
 10325  003C74  50E6               	movf	postinc1,w,c
 10326  003C76  0A80               	xorlw	128
 10327  003C78  6F68               	movwf	(??_fputc+4)& (0+255),b
 10328  003C7A  50DE               	movf	postinc2,w,c
 10329  003C7C  0A80               	xorlw	128
 10330  003C7E  5968               	subwfb	(??_fputc+4)& (0+255),w,b
 10331  003C80  B0D8               	btfsc	status,0,c
 10332  003C82  0012               	return	
 10333  003C84                     u3930:
 10334                           
 10335                           ; BSR set to: 0
 10336  003C84  EE20 F002          	lfsr	2,2
 10337  003C88  5162               	movf	fputc@fp& (0+255),w,b
 10338  003C8A  26D9               	addwf	fsr2l,f,c
 10339  003C8C  5163               	movf	(fputc@fp+1)& (0+255),w,b
 10340  003C8E  22DA               	addwfc	fsr2h,f,c
 10341  003C90  006F FF78  F064    	movff	postinc2,??_fputc
 10342  003C96  006F FF74  F065    	movff	postdec2,??_fputc+1
 10343  003C9C  0060  F18B  FFD9   	movff	fputc@fp,fsr2l
 10344  003CA2  0060  F18F  FFDA   	movff	fputc@fp+1,fsr2h
 10345  003CA8  006F FF78  F066    	movff	postinc2,??_fputc+2
 10346  003CAE  006F FF74  F067    	movff	postdec2,??_fputc+3
 10347  003CB4  5164               	movf	??_fputc& (0+255),w,b
 10348  003CB6  2566               	addwf	(??_fputc+2)& (0+255),w,b
 10349  003CB8  6ED9               	movwf	fsr2l,c
 10350  003CBA  5165               	movf	(??_fputc+1)& (0+255),w,b
 10351  003CBC  2167               	addwfc	(??_fputc+3)& (0+255),w,b
 10352  003CBE  6EDA               	movwf	fsr2h,c
 10353  003CC0  0060  F183  FFDF   	movff	fputc@c,indf2
 10354  003CC6  EE20 F002          	lfsr	2,2
 10355  003CCA  5162               	movf	fputc@fp& (0+255),w,b
 10356  003CCC  26D9               	addwf	fsr2l,f,c
 10357  003CCE  5163               	movf	(fputc@fp+1)& (0+255),w,b
 10358  003CD0  22DA               	addwfc	fsr2h,f,c
 10359  003CD2  2ADE               	incf	postinc2,f,c
 10360  003CD4  0E00               	movlw	0
 10361  003CD6  22DD               	addwfc	postdec2,f,c
 10362  003CD8  0012               	return		;funcret
 10363  003CDA                     __end_of_fputc:
 10364                           	opt callstack 0
 10365                           
 10366 ;; *************** function _putch *****************
 10367 ;; Defined at:
 10368 ;;		line 7 in file "D:\MPLAB\pic\sources\c99\common\putch.c"
 10369 ;; Parameters:    Size  Location     Type
 10370 ;;  c               1    wreg     unsigned char 
 10371 ;; Auto vars:     Size  Location     Type
 10372 ;;  c               1    0[COMRAM] unsigned char 
 10373 ;; Return value:  Size  Location     Type
 10374 ;;                  1    wreg      void 
 10375 ;; Registers used:
 10376 ;;		wreg
 10377 ;; Tracked objects:
 10378 ;;		On entry : 0/0
 10379 ;;		On exit  : 0/0
 10380 ;;		Unchanged: 0/0
 10381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10382 ;;      Params:         0       0       0       0       0       0       0       0       0
 10383 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10384 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10385 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10386 ;;Total ram usage:        0 bytes
 10387 ;; Hardware stack levels used:    1
 10388 ;; Hardware stack levels required when called:    3
 10389 ;; This function calls:
 10390 ;;		Nothing
 10391 ;; This function is called by:
 10392 ;;		_fputc
 10393 ;; This function uses a non-reentrant model
 10394 ;;
 10395                           
 10396                           	psect	text26
 10397  0046CC                     __ptext26:
 10398                           	opt callstack 0
 10399  0046CC                     _putch:
 10400                           	opt callstack 23
 10401                           
 10402                           ;incstack = 0
 10403  0046CC  0012               	return		;funcret
 10404  0046CE                     __end_of_putch:
 10405                           	opt callstack 0
 10406                           
 10407 ;; *************** function _abs *****************
 10408 ;; Defined at:
 10409 ;;		line 1 in file "D:\MPLAB\pic\sources\c99\common\abs.c"
 10410 ;; Parameters:    Size  Location     Type
 10411 ;;  a               2   18[BANK0 ] int 
 10412 ;; Auto vars:     Size  Location     Type
 10413 ;;		None
 10414 ;; Return value:  Size  Location     Type
 10415 ;;                  2   18[BANK0 ] int 
 10416 ;; Registers used:
 10417 ;;		wreg, status,2, status,0
 10418 ;; Tracked objects:
 10419 ;;		On entry : 0/0
 10420 ;;		On exit  : 0/0
 10421 ;;		Unchanged: 0/0
 10422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10423 ;;      Params:         0       2       0       0       0       0       0       0       0
 10424 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10425 ;;      Temps:          0       2       0       0       0       0       0       0       0
 10426 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10427 ;;Total ram usage:        4 bytes
 10428 ;; Hardware stack levels used:    1
 10429 ;; Hardware stack levels required when called:    3
 10430 ;; This function calls:
 10431 ;;		Nothing
 10432 ;; This function is called by:
 10433 ;;		_dtoa
 10434 ;; This function uses a non-reentrant model
 10435 ;;
 10436                           
 10437                           	psect	text27
 10438  004480                     __ptext27:
 10439                           	opt callstack 0
 10440  004480                     _abs:
 10441                           	opt callstack 23
 10442                           
 10443                           ;incstack = 0
 10444  004480  0100               	movlb	0	; () banked
 10445  004482  BF73               	btfsc	(abs@a+1)& (0+255),7,b
 10446  004484  D005               	goto	u4410
 10447  004486  5173               	movf	(abs@a+1)& (0+255),w,b
 10448  004488  E114               	bnz	l1278
 10449  00448A  0572               	decf	abs@a& (0+255),w,b
 10450  00448C  B0D8               	btfsc	status,0,c
 10451  00448E  D011               	goto	l1278
 10452  004490                     u4410:
 10453                           
 10454                           ; BSR set to: 0
 10455  004490  0060  F1C8  F074   	movff	abs@a,??_abs
 10456  004496  0060  F1CC  F075   	movff	abs@a+1,??_abs+1
 10457  00449C  1F74               	comf	??_abs& (0+255),f,b
 10458  00449E  1F75               	comf	(??_abs+1)& (0+255),f,b
 10459  0044A0  4B74               	infsnz	??_abs& (0+255),f,b
 10460  0044A2  2B75               	incf	(??_abs+1)& (0+255),f,b
 10461  0044A4  0060  F1D0  F072   	movff	??_abs,?_abs
 10462  0044AA  0060  F1D4  F073   	movff	??_abs+1,?_abs+1
 10463  0044B0  0012               	return	
 10464  0044B2                     l1278:
 10465                           
 10466                           ; BSR set to: 0
 10467  0044B2  0060  F1C8  F072   	movff	abs@a,?_abs
 10468  0044B8  0060  F1CC  F073   	movff	abs@a+1,?_abs+1
 10469                           
 10470                           ; BSR set to: 0
 10471  0044BE  0012               	return		;funcret
 10472  0044C0                     __end_of_abs:
 10473                           	opt callstack 0
 10474                           
 10475 ;; *************** function ___aomod *****************
 10476 ;; Defined at:
 10477 ;;		line 9 in file "D:\MPLAB\pic\sources\c99\common\aomod.c"
 10478 ;; Parameters:    Size  Location     Type
 10479 ;;  dividend        8    0[BANK0 ] long long 
 10480 ;;  divisor         8    8[BANK0 ] long long 
 10481 ;; Auto vars:     Size  Location     Type
 10482 ;;  sign            1   17[BANK0 ] unsigned char 
 10483 ;;  counter         1   16[BANK0 ] unsigned char 
 10484 ;; Return value:  Size  Location     Type
 10485 ;;                  8    0[BANK0 ] long long 
 10486 ;; Registers used:
 10487 ;;		wreg, status,2, status,0
 10488 ;; Tracked objects:
 10489 ;;		On entry : 0/0
 10490 ;;		On exit  : 0/0
 10491 ;;		Unchanged: 0/0
 10492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10493 ;;      Params:         0      16       0       0       0       0       0       0       0
 10494 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10495 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10496 ;;      Totals:         0      18       0       0       0       0       0       0       0
 10497 ;;Total ram usage:       18 bytes
 10498 ;; Hardware stack levels used:    1
 10499 ;; Hardware stack levels required when called:    3
 10500 ;; This function calls:
 10501 ;;		Nothing
 10502 ;; This function is called by:
 10503 ;;		_dtoa
 10504 ;; This function uses a non-reentrant model
 10505 ;;
 10506                           
 10507                           	psect	text28
 10508  003550                     __ptext28:
 10509                           	opt callstack 0
 10510  003550                     ___aomod:
 10511                           	opt callstack 23
 10512                           
 10513                           ; BSR set to: 0
 10514                           ;incstack = 0
 10515  003550  0E00               	movlw	0
 10516  003552  0100               	movlb	0	; () banked
 10517  003554  6F71               	movwf	___aomod@sign& (0+255),b
 10518                           
 10519                           ; BSR set to: 0
 10520  003556  AF67               	btfss	(___aomod@dividend+7)& (0+255),7,b
 10521  003558  D012               	goto	l4349
 10522                           
 10523                           ; BSR set to: 0
 10524  00355A  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
 10525  00355C  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
 10526  00355E  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
 10527  003560  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
 10528  003562  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
 10529  003564  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
 10530  003566  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
 10531  003568  6D60               	negf	___aomod@dividend& (0+255),b
 10532  00356A  0E00               	movlw	0
 10533  00356C  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 10534  00356E  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 10535  003570  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 10536  003572  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 10537  003574  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 10538  003576  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 10539  003578  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 10540                           
 10541                           ; BSR set to: 0
 10542  00357A  0E01               	movlw	1
 10543  00357C  6F71               	movwf	___aomod@sign& (0+255),b
 10544  00357E                     l4349:
 10545                           
 10546                           ; BSR set to: 0
 10547  00357E  AF6F               	btfss	(___aomod@divisor+7)& (0+255),7,b
 10548  003580  D010               	goto	l4353
 10549                           
 10550                           ; BSR set to: 0
 10551  003582  1F6F               	comf	(___aomod@divisor+7)& (0+255),f,b
 10552  003584  1F6E               	comf	(___aomod@divisor+6)& (0+255),f,b
 10553  003586  1F6D               	comf	(___aomod@divisor+5)& (0+255),f,b
 10554  003588  1F6C               	comf	(___aomod@divisor+4)& (0+255),f,b
 10555  00358A  1F6B               	comf	(___aomod@divisor+3)& (0+255),f,b
 10556  00358C  1F6A               	comf	(___aomod@divisor+2)& (0+255),f,b
 10557  00358E  1F69               	comf	(___aomod@divisor+1)& (0+255),f,b
 10558  003590  6D68               	negf	___aomod@divisor& (0+255),b
 10559  003592  0E00               	movlw	0
 10560  003594  2369               	addwfc	(___aomod@divisor+1)& (0+255),f,b
 10561  003596  236A               	addwfc	(___aomod@divisor+2)& (0+255),f,b
 10562  003598  236B               	addwfc	(___aomod@divisor+3)& (0+255),f,b
 10563  00359A  236C               	addwfc	(___aomod@divisor+4)& (0+255),f,b
 10564  00359C  236D               	addwfc	(___aomod@divisor+5)& (0+255),f,b
 10565  00359E  236E               	addwfc	(___aomod@divisor+6)& (0+255),f,b
 10566  0035A0  236F               	addwfc	(___aomod@divisor+7)& (0+255),f,b
 10567  0035A2                     l4353:
 10568                           
 10569                           ; BSR set to: 0
 10570  0035A2  5168               	movf	___aomod@divisor& (0+255),w,b
 10571  0035A4  1169               	iorwf	(___aomod@divisor+1)& (0+255),w,b
 10572  0035A6  116A               	iorwf	(___aomod@divisor+2)& (0+255),w,b
 10573  0035A8  116B               	iorwf	(___aomod@divisor+3)& (0+255),w,b
 10574  0035AA  116C               	iorwf	(___aomod@divisor+4)& (0+255),w,b
 10575  0035AC  116D               	iorwf	(___aomod@divisor+5)& (0+255),w,b
 10576  0035AE  116E               	iorwf	(___aomod@divisor+6)& (0+255),w,b
 10577  0035B0  116F               	iorwf	(___aomod@divisor+7)& (0+255),w,b
 10578  0035B2  B4D8               	btfsc	status,2,c
 10579  0035B4  D03C               	goto	l4369
 10580                           
 10581                           ; BSR set to: 0
 10582  0035B6  0E01               	movlw	1
 10583  0035B8  6F70               	movwf	___aomod@counter& (0+255),b
 10584  0035BA  D00A               	goto	l4359
 10585  0035BC                     l4357:
 10586                           
 10587                           ; BSR set to: 0
 10588  0035BC  90D8               	bcf	status,0,c
 10589  0035BE  3768               	rlcf	___aomod@divisor& (0+255),f,b
 10590  0035C0  3769               	rlcf	(___aomod@divisor+1)& (0+255),f,b
 10591  0035C2  376A               	rlcf	(___aomod@divisor+2)& (0+255),f,b
 10592  0035C4  376B               	rlcf	(___aomod@divisor+3)& (0+255),f,b
 10593  0035C6  376C               	rlcf	(___aomod@divisor+4)& (0+255),f,b
 10594  0035C8  376D               	rlcf	(___aomod@divisor+5)& (0+255),f,b
 10595  0035CA  376E               	rlcf	(___aomod@divisor+6)& (0+255),f,b
 10596  0035CC  376F               	rlcf	(___aomod@divisor+7)& (0+255),f,b
 10597  0035CE  2B70               	incf	___aomod@counter& (0+255),f,b
 10598  0035D0                     l4359:
 10599                           
 10600                           ; BSR set to: 0
 10601  0035D0  AF6F               	btfss	(___aomod@divisor+7)& (0+255),7,b
 10602  0035D2  D7F4               	goto	l4357
 10603  0035D4                     u4760:
 10604                           
 10605                           ; BSR set to: 0
 10606  0035D4  5168               	movf	___aomod@divisor& (0+255),w,b
 10607  0035D6  5D60               	subwf	___aomod@dividend& (0+255),w,b
 10608  0035D8  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
 10609  0035DA  5961               	subwfb	(___aomod@dividend+1)& (0+255),w,b
 10610  0035DC  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
 10611  0035DE  5962               	subwfb	(___aomod@dividend+2)& (0+255),w,b
 10612  0035E0  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
 10613  0035E2  5963               	subwfb	(___aomod@dividend+3)& (0+255),w,b
 10614  0035E4  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
 10615  0035E6  5964               	subwfb	(___aomod@dividend+4)& (0+255),w,b
 10616  0035E8  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
 10617  0035EA  5965               	subwfb	(___aomod@dividend+5)& (0+255),w,b
 10618  0035EC  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
 10619  0035EE  5966               	subwfb	(___aomod@dividend+6)& (0+255),w,b
 10620  0035F0  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
 10621  0035F2  5967               	subwfb	(___aomod@dividend+7)& (0+255),w,b
 10622  0035F4  A0D8               	btfss	status,0,c
 10623  0035F6  D010               	goto	l4365
 10624                           
 10625                           ; BSR set to: 0
 10626  0035F8  5168               	movf	___aomod@divisor& (0+255),w,b
 10627  0035FA  5F60               	subwf	___aomod@dividend& (0+255),f,b
 10628  0035FC  5169               	movf	(___aomod@divisor+1)& (0+255),w,b
 10629  0035FE  5B61               	subwfb	(___aomod@dividend+1)& (0+255),f,b
 10630  003600  516A               	movf	(___aomod@divisor+2)& (0+255),w,b
 10631  003602  5B62               	subwfb	(___aomod@dividend+2)& (0+255),f,b
 10632  003604  516B               	movf	(___aomod@divisor+3)& (0+255),w,b
 10633  003606  5B63               	subwfb	(___aomod@dividend+3)& (0+255),f,b
 10634  003608  516C               	movf	(___aomod@divisor+4)& (0+255),w,b
 10635  00360A  5B64               	subwfb	(___aomod@dividend+4)& (0+255),f,b
 10636  00360C  516D               	movf	(___aomod@divisor+5)& (0+255),w,b
 10637  00360E  5B65               	subwfb	(___aomod@dividend+5)& (0+255),f,b
 10638  003610  516E               	movf	(___aomod@divisor+6)& (0+255),w,b
 10639  003612  5B66               	subwfb	(___aomod@dividend+6)& (0+255),f,b
 10640  003614  516F               	movf	(___aomod@divisor+7)& (0+255),w,b
 10641  003616  5B67               	subwfb	(___aomod@dividend+7)& (0+255),f,b
 10642  003618                     l4365:
 10643                           
 10644                           ; BSR set to: 0
 10645  003618  90D8               	bcf	status,0,c
 10646  00361A  336F               	rrcf	(___aomod@divisor+7)& (0+255),f,b
 10647  00361C  336E               	rrcf	(___aomod@divisor+6)& (0+255),f,b
 10648  00361E  336D               	rrcf	(___aomod@divisor+5)& (0+255),f,b
 10649  003620  336C               	rrcf	(___aomod@divisor+4)& (0+255),f,b
 10650  003622  336B               	rrcf	(___aomod@divisor+3)& (0+255),f,b
 10651  003624  336A               	rrcf	(___aomod@divisor+2)& (0+255),f,b
 10652  003626  3369               	rrcf	(___aomod@divisor+1)& (0+255),f,b
 10653  003628  3368               	rrcf	___aomod@divisor& (0+255),f,b
 10654                           
 10655                           ; BSR set to: 0
 10656  00362A  2F70               	decfsz	___aomod@counter& (0+255),f,b
 10657  00362C  D7D3               	goto	u4760
 10658  00362E                     l4369:
 10659                           
 10660                           ; BSR set to: 0
 10661  00362E  5171               	movf	___aomod@sign& (0+255),w,b
 10662  003630  B4D8               	btfsc	status,2,c
 10663  003632  D010               	goto	l4373
 10664                           
 10665                           ; BSR set to: 0
 10666  003634  1F67               	comf	(___aomod@dividend+7)& (0+255),f,b
 10667  003636  1F66               	comf	(___aomod@dividend+6)& (0+255),f,b
 10668  003638  1F65               	comf	(___aomod@dividend+5)& (0+255),f,b
 10669  00363A  1F64               	comf	(___aomod@dividend+4)& (0+255),f,b
 10670  00363C  1F63               	comf	(___aomod@dividend+3)& (0+255),f,b
 10671  00363E  1F62               	comf	(___aomod@dividend+2)& (0+255),f,b
 10672  003640  1F61               	comf	(___aomod@dividend+1)& (0+255),f,b
 10673  003642  6D60               	negf	___aomod@dividend& (0+255),b
 10674  003644  0E00               	movlw	0
 10675  003646  2361               	addwfc	(___aomod@dividend+1)& (0+255),f,b
 10676  003648  2362               	addwfc	(___aomod@dividend+2)& (0+255),f,b
 10677  00364A  2363               	addwfc	(___aomod@dividend+3)& (0+255),f,b
 10678  00364C  2364               	addwfc	(___aomod@dividend+4)& (0+255),f,b
 10679  00364E  2365               	addwfc	(___aomod@dividend+5)& (0+255),f,b
 10680  003650  2366               	addwfc	(___aomod@dividend+6)& (0+255),f,b
 10681  003652  2367               	addwfc	(___aomod@dividend+7)& (0+255),f,b
 10682  003654                     l4373:
 10683                           
 10684                           ; BSR set to: 0
 10685  003654  0060  F180  F060   	movff	___aomod@dividend,?___aomod
 10686  00365A  0060  F184  F061   	movff	___aomod@dividend+1,?___aomod+1
 10687  003660  0060  F188  F062   	movff	___aomod@dividend+2,?___aomod+2
 10688  003666  0060  F18C  F063   	movff	___aomod@dividend+3,?___aomod+3
 10689  00366C  0060  F190  F064   	movff	___aomod@dividend+4,?___aomod+4
 10690  003672  0060  F194  F065   	movff	___aomod@dividend+5,?___aomod+5
 10691  003678  0060  F198  F066   	movff	___aomod@dividend+6,?___aomod+6
 10692  00367E  0060  F19C  F067   	movff	___aomod@dividend+7,?___aomod+7
 10693                           
 10694                           ; BSR set to: 0
 10695  003684  0012               	return		;funcret
 10696  003686                     __end_of___aomod:
 10697                           	opt callstack 0
 10698                           
 10699 ;; *************** function ___aodiv *****************
 10700 ;; Defined at:
 10701 ;;		line 9 in file "D:\MPLAB\pic\sources\c99\common\aodiv.c"
 10702 ;; Parameters:    Size  Location     Type
 10703 ;;  dividend        8    0[BANK0 ] long long 
 10704 ;;  divisor         8    8[BANK0 ] long long 
 10705 ;; Auto vars:     Size  Location     Type
 10706 ;;  quotient        8   18[BANK0 ] long long 
 10707 ;;  sign            1   17[BANK0 ] unsigned char 
 10708 ;;  counter         1   16[BANK0 ] unsigned char 
 10709 ;; Return value:  Size  Location     Type
 10710 ;;                  8    0[BANK0 ] long long 
 10711 ;; Registers used:
 10712 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10713 ;; Tracked objects:
 10714 ;;		On entry : 0/0
 10715 ;;		On exit  : 0/0
 10716 ;;		Unchanged: 0/0
 10717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10718 ;;      Params:         0      16       0       0       0       0       0       0       0
 10719 ;;      Locals:         0      10       0       0       0       0       0       0       0
 10720 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10721 ;;      Totals:         0      26       0       0       0       0       0       0       0
 10722 ;;Total ram usage:       26 bytes
 10723 ;; Hardware stack levels used:    1
 10724 ;; Hardware stack levels required when called:    3
 10725 ;; This function calls:
 10726 ;;		Nothing
 10727 ;; This function is called by:
 10728 ;;		_dtoa
 10729 ;; This function uses a non-reentrant model
 10730 ;;
 10731                           
 10732                           	psect	text29
 10733  0032B0                     __ptext29:
 10734                           	opt callstack 0
 10735  0032B0                     ___aodiv:
 10736                           	opt callstack 23
 10737                           
 10738                           ; BSR set to: 0
 10739                           ;incstack = 0
 10740  0032B0  0E00               	movlw	0
 10741  0032B2  0100               	movlb	0	; () banked
 10742  0032B4  6F71               	movwf	___aodiv@sign& (0+255),b
 10743                           
 10744                           ; BSR set to: 0
 10745  0032B6  AF6F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 10746  0032B8  D012               	goto	l4305
 10747                           
 10748                           ; BSR set to: 0
 10749  0032BA  1F6F               	comf	(___aodiv@divisor+7)& (0+255),f,b
 10750  0032BC  1F6E               	comf	(___aodiv@divisor+6)& (0+255),f,b
 10751  0032BE  1F6D               	comf	(___aodiv@divisor+5)& (0+255),f,b
 10752  0032C0  1F6C               	comf	(___aodiv@divisor+4)& (0+255),f,b
 10753  0032C2  1F6B               	comf	(___aodiv@divisor+3)& (0+255),f,b
 10754  0032C4  1F6A               	comf	(___aodiv@divisor+2)& (0+255),f,b
 10755  0032C6  1F69               	comf	(___aodiv@divisor+1)& (0+255),f,b
 10756  0032C8  6D68               	negf	___aodiv@divisor& (0+255),b
 10757  0032CA  0E00               	movlw	0
 10758  0032CC  2369               	addwfc	(___aodiv@divisor+1)& (0+255),f,b
 10759  0032CE  236A               	addwfc	(___aodiv@divisor+2)& (0+255),f,b
 10760  0032D0  236B               	addwfc	(___aodiv@divisor+3)& (0+255),f,b
 10761  0032D2  236C               	addwfc	(___aodiv@divisor+4)& (0+255),f,b
 10762  0032D4  236D               	addwfc	(___aodiv@divisor+5)& (0+255),f,b
 10763  0032D6  236E               	addwfc	(___aodiv@divisor+6)& (0+255),f,b
 10764  0032D8  236F               	addwfc	(___aodiv@divisor+7)& (0+255),f,b
 10765                           
 10766                           ; BSR set to: 0
 10767  0032DA  0E01               	movlw	1
 10768  0032DC  6F71               	movwf	___aodiv@sign& (0+255),b
 10769  0032DE                     l4305:
 10770                           
 10771                           ; BSR set to: 0
 10772  0032DE  AF67               	btfss	(___aodiv@dividend+7)& (0+255),7,b
 10773  0032E0  D012               	goto	l4311
 10774                           
 10775                           ; BSR set to: 0
 10776  0032E2  1F67               	comf	(___aodiv@dividend+7)& (0+255),f,b
 10777  0032E4  1F66               	comf	(___aodiv@dividend+6)& (0+255),f,b
 10778  0032E6  1F65               	comf	(___aodiv@dividend+5)& (0+255),f,b
 10779  0032E8  1F64               	comf	(___aodiv@dividend+4)& (0+255),f,b
 10780  0032EA  1F63               	comf	(___aodiv@dividend+3)& (0+255),f,b
 10781  0032EC  1F62               	comf	(___aodiv@dividend+2)& (0+255),f,b
 10782  0032EE  1F61               	comf	(___aodiv@dividend+1)& (0+255),f,b
 10783  0032F0  6D60               	negf	___aodiv@dividend& (0+255),b
 10784  0032F2  0E00               	movlw	0
 10785  0032F4  2361               	addwfc	(___aodiv@dividend+1)& (0+255),f,b
 10786  0032F6  2362               	addwfc	(___aodiv@dividend+2)& (0+255),f,b
 10787  0032F8  2363               	addwfc	(___aodiv@dividend+3)& (0+255),f,b
 10788  0032FA  2364               	addwfc	(___aodiv@dividend+4)& (0+255),f,b
 10789  0032FC  2365               	addwfc	(___aodiv@dividend+5)& (0+255),f,b
 10790  0032FE  2366               	addwfc	(___aodiv@dividend+6)& (0+255),f,b
 10791  003300  2367               	addwfc	(___aodiv@dividend+7)& (0+255),f,b
 10792                           
 10793                           ; BSR set to: 0
 10794  003302  0E01               	movlw	1
 10795  003304  1B71               	xorwf	___aodiv@sign& (0+255),f,b
 10796  003306                     l4311:
 10797                           
 10798                           ; BSR set to: 0
 10799  003306  EE20  F072         	lfsr	2,___aodiv@quotient
 10800  00330A  0E07               	movlw	7
 10801  00330C                     u4681:
 10802  00330C  6ADE               	clrf	postinc2,c
 10803  00330E  06E8               	decf	wreg,f,c
 10804  003310  E2FD               	bc	u4681
 10805                           
 10806                           ; BSR set to: 0
 10807  003312  5168               	movf	___aodiv@divisor& (0+255),w,b
 10808  003314  1169               	iorwf	(___aodiv@divisor+1)& (0+255),w,b
 10809  003316  116A               	iorwf	(___aodiv@divisor+2)& (0+255),w,b
 10810  003318  116B               	iorwf	(___aodiv@divisor+3)& (0+255),w,b
 10811  00331A  116C               	iorwf	(___aodiv@divisor+4)& (0+255),w,b
 10812  00331C  116D               	iorwf	(___aodiv@divisor+5)& (0+255),w,b
 10813  00331E  116E               	iorwf	(___aodiv@divisor+6)& (0+255),w,b
 10814  003320  116F               	iorwf	(___aodiv@divisor+7)& (0+255),w,b
 10815  003322  B4D8               	btfsc	status,2,c
 10816  003324  D046               	goto	l4333
 10817                           
 10818                           ; BSR set to: 0
 10819  003326  0E01               	movlw	1
 10820  003328  6F70               	movwf	___aodiv@counter& (0+255),b
 10821  00332A  D00A               	goto	l4319
 10822  00332C                     l4317:
 10823                           
 10824                           ; BSR set to: 0
 10825  00332C  90D8               	bcf	status,0,c
 10826  00332E  3768               	rlcf	___aodiv@divisor& (0+255),f,b
 10827  003330  3769               	rlcf	(___aodiv@divisor+1)& (0+255),f,b
 10828  003332  376A               	rlcf	(___aodiv@divisor+2)& (0+255),f,b
 10829  003334  376B               	rlcf	(___aodiv@divisor+3)& (0+255),f,b
 10830  003336  376C               	rlcf	(___aodiv@divisor+4)& (0+255),f,b
 10831  003338  376D               	rlcf	(___aodiv@divisor+5)& (0+255),f,b
 10832  00333A  376E               	rlcf	(___aodiv@divisor+6)& (0+255),f,b
 10833  00333C  376F               	rlcf	(___aodiv@divisor+7)& (0+255),f,b
 10834  00333E  2B70               	incf	___aodiv@counter& (0+255),f,b
 10835  003340                     l4319:
 10836                           
 10837                           ; BSR set to: 0
 10838  003340  AF6F               	btfss	(___aodiv@divisor+7)& (0+255),7,b
 10839  003342  D7F4               	goto	l4317
 10840  003344                     u4700:
 10841                           
 10842                           ; BSR set to: 0
 10843  003344  90D8               	bcf	status,0,c
 10844  003346  3772               	rlcf	___aodiv@quotient& (0+255),f,b
 10845  003348  3773               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 10846  00334A  3774               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 10847  00334C  3775               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 10848  00334E  3776               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 10849  003350  3777               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 10850  003352  3778               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 10851  003354  3779               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 10852                           
 10853                           ; BSR set to: 0
 10854  003356  5168               	movf	___aodiv@divisor& (0+255),w,b
 10855  003358  5D60               	subwf	___aodiv@dividend& (0+255),w,b
 10856  00335A  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
 10857  00335C  5961               	subwfb	(___aodiv@dividend+1)& (0+255),w,b
 10858  00335E  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 10859  003360  5962               	subwfb	(___aodiv@dividend+2)& (0+255),w,b
 10860  003362  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 10861  003364  5963               	subwfb	(___aodiv@dividend+3)& (0+255),w,b
 10862  003366  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 10863  003368  5964               	subwfb	(___aodiv@dividend+4)& (0+255),w,b
 10864  00336A  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 10865  00336C  5965               	subwfb	(___aodiv@dividend+5)& (0+255),w,b
 10866  00336E  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 10867  003370  5966               	subwfb	(___aodiv@dividend+6)& (0+255),w,b
 10868  003372  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 10869  003374  5967               	subwfb	(___aodiv@dividend+7)& (0+255),w,b
 10870  003376  A0D8               	btfss	status,0,c
 10871  003378  D011               	goto	l4329
 10872                           
 10873                           ; BSR set to: 0
 10874  00337A  5168               	movf	___aodiv@divisor& (0+255),w,b
 10875  00337C  5F60               	subwf	___aodiv@dividend& (0+255),f,b
 10876  00337E  5169               	movf	(___aodiv@divisor+1)& (0+255),w,b
 10877  003380  5B61               	subwfb	(___aodiv@dividend+1)& (0+255),f,b
 10878  003382  516A               	movf	(___aodiv@divisor+2)& (0+255),w,b
 10879  003384  5B62               	subwfb	(___aodiv@dividend+2)& (0+255),f,b
 10880  003386  516B               	movf	(___aodiv@divisor+3)& (0+255),w,b
 10881  003388  5B63               	subwfb	(___aodiv@dividend+3)& (0+255),f,b
 10882  00338A  516C               	movf	(___aodiv@divisor+4)& (0+255),w,b
 10883  00338C  5B64               	subwfb	(___aodiv@dividend+4)& (0+255),f,b
 10884  00338E  516D               	movf	(___aodiv@divisor+5)& (0+255),w,b
 10885  003390  5B65               	subwfb	(___aodiv@dividend+5)& (0+255),f,b
 10886  003392  516E               	movf	(___aodiv@divisor+6)& (0+255),w,b
 10887  003394  5B66               	subwfb	(___aodiv@dividend+6)& (0+255),f,b
 10888  003396  516F               	movf	(___aodiv@divisor+7)& (0+255),w,b
 10889  003398  5B67               	subwfb	(___aodiv@dividend+7)& (0+255),f,b
 10890                           
 10891                           ; BSR set to: 0
 10892  00339A  8172               	bsf	___aodiv@quotient& (0+255),0,b
 10893  00339C                     l4329:
 10894                           
 10895                           ; BSR set to: 0
 10896  00339C  90D8               	bcf	status,0,c
 10897  00339E  336F               	rrcf	(___aodiv@divisor+7)& (0+255),f,b
 10898  0033A0  336E               	rrcf	(___aodiv@divisor+6)& (0+255),f,b
 10899  0033A2  336D               	rrcf	(___aodiv@divisor+5)& (0+255),f,b
 10900  0033A4  336C               	rrcf	(___aodiv@divisor+4)& (0+255),f,b
 10901  0033A6  336B               	rrcf	(___aodiv@divisor+3)& (0+255),f,b
 10902  0033A8  336A               	rrcf	(___aodiv@divisor+2)& (0+255),f,b
 10903  0033AA  3369               	rrcf	(___aodiv@divisor+1)& (0+255),f,b
 10904  0033AC  3368               	rrcf	___aodiv@divisor& (0+255),f,b
 10905                           
 10906                           ; BSR set to: 0
 10907  0033AE  2F70               	decfsz	___aodiv@counter& (0+255),f,b
 10908  0033B0  D7C9               	goto	u4700
 10909  0033B2                     l4333:
 10910                           
 10911                           ; BSR set to: 0
 10912  0033B2  5171               	movf	___aodiv@sign& (0+255),w,b
 10913  0033B4  B4D8               	btfsc	status,2,c
 10914  0033B6  D010               	goto	l4337
 10915                           
 10916                           ; BSR set to: 0
 10917  0033B8  1F79               	comf	(___aodiv@quotient+7)& (0+255),f,b
 10918  0033BA  1F78               	comf	(___aodiv@quotient+6)& (0+255),f,b
 10919  0033BC  1F77               	comf	(___aodiv@quotient+5)& (0+255),f,b
 10920  0033BE  1F76               	comf	(___aodiv@quotient+4)& (0+255),f,b
 10921  0033C0  1F75               	comf	(___aodiv@quotient+3)& (0+255),f,b
 10922  0033C2  1F74               	comf	(___aodiv@quotient+2)& (0+255),f,b
 10923  0033C4  1F73               	comf	(___aodiv@quotient+1)& (0+255),f,b
 10924  0033C6  6D72               	negf	___aodiv@quotient& (0+255),b
 10925  0033C8  0E00               	movlw	0
 10926  0033CA  2373               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 10927  0033CC  2374               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 10928  0033CE  2375               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 10929  0033D0  2376               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 10930  0033D2  2377               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 10931  0033D4  2378               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 10932  0033D6  2379               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 10933  0033D8                     l4337:
 10934                           
 10935                           ; BSR set to: 0
 10936  0033D8  0060  F1C8  F060   	movff	___aodiv@quotient,?___aodiv
 10937  0033DE  0060  F1CC  F061   	movff	___aodiv@quotient+1,?___aodiv+1
 10938  0033E4  0060  F1D0  F062   	movff	___aodiv@quotient+2,?___aodiv+2
 10939  0033EA  0060  F1D4  F063   	movff	___aodiv@quotient+3,?___aodiv+3
 10940  0033F0  0060  F1D8  F064   	movff	___aodiv@quotient+4,?___aodiv+4
 10941  0033F6  0060  F1DC  F065   	movff	___aodiv@quotient+5,?___aodiv+5
 10942  0033FC  0060  F1E0  F066   	movff	___aodiv@quotient+6,?___aodiv+6
 10943  003402  0060  F1E4  F067   	movff	___aodiv@quotient+7,?___aodiv+7
 10944                           
 10945                           ; BSR set to: 0
 10946  003408  0012               	return		;funcret
 10947  00340A                     __end_of___aodiv:
 10948                           	opt callstack 0
 10949                           
 10950 ;; *************** function _atoi *****************
 10951 ;; Defined at:
 10952 ;;		line 4 in file "D:\MPLAB\pic\sources\c99\common\atoi.c"
 10953 ;; Parameters:    Size  Location     Type
 10954 ;;  s               2    7[BANK0 ] PTR const unsigned char 
 10955 ;;		 -> STR_26(4), STR_22(6), STR_17(4), STR_15(4), 
 10956 ;; Auto vars:     Size  Location     Type
 10957 ;;  n               2   20[BANK0 ] int 
 10958 ;;  neg             2   13[BANK0 ] int 
 10959 ;; Return value:  Size  Location     Type
 10960 ;;                  2    7[BANK0 ] int 
 10961 ;; Registers used:
 10962 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10963 ;; Tracked objects:
 10964 ;;		On entry : 0/0
 10965 ;;		On exit  : 0/0
 10966 ;;		Unchanged: 0/0
 10967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10968 ;;      Params:         0       2       0       0       0       0       0       0       0
 10969 ;;      Locals:         0       9       0       0       0       0       0       0       0
 10970 ;;      Temps:          0       4       0       0       0       0       0       0       0
 10971 ;;      Totals:         0      15       0       0       0       0       0       0       0
 10972 ;;Total ram usage:       15 bytes
 10973 ;; Hardware stack levels used:    1
 10974 ;; Hardware stack levels required when called:    4
 10975 ;; This function calls:
 10976 ;;		___wmul
 10977 ;;		_isdigit
 10978 ;;		_isspace
 10979 ;; This function is called by:
 10980 ;;		_vfpfcnvrt
 10981 ;; This function uses a non-reentrant model
 10982 ;;
 10983                           
 10984                           	psect	text30
 10985  002E7A                     __ptext30:
 10986                           	opt callstack 0
 10987  002E7A                     _atoi:
 10988                           	opt callstack 23
 10989                           
 10990                           ; BSR set to: 0
 10991                           ;incstack = 0
 10992  002E7A  0E00               	movlw	0
 10993  002E7C  0100               	movlb	0	; () banked
 10994  002E7E  6F75               	movwf	(atoi@n+1)& (0+255),b
 10995  002E80  0E00               	movlw	0
 10996  002E82  6F74               	movwf	atoi@n& (0+255),b
 10997  002E84  0E00               	movlw	0
 10998  002E86  6F6E               	movwf	(atoi@neg+1)& (0+255),b
 10999  002E88  0E00               	movlw	0
 11000  002E8A  6F6D               	movwf	atoi@neg& (0+255),b
 11001  002E8C  D002               	goto	l5213
 11002  002E8E                     l5211:
 11003                           
 11004                           ; BSR set to: 0
 11005  002E8E  4B67               	infsnz	atoi@s& (0+255),f,b
 11006  002E90  2B68               	incf	(atoi@s+1)& (0+255),f,b
 11007  002E92                     l5213:
 11008                           
 11009                           ; BSR set to: 0
 11010  002E92  0E01               	movlw	1
 11011  002E94  6F73               	movwf	_atoi$2290& (0+255),b
 11012                           
 11013                           ; BSR set to: 0
 11014  002E96  0060  F19F  FFF6   	movff	atoi@s,tblptrl
 11015  002E9C  0060  F1A3  FFF7   	movff	atoi@s+1,tblptrh
 11016  002EA2                     	if	0	;tblptru may be non-zero
 11017  002EA2                     	endif
 11018  002EA2                     	if	0	;tblptru may be non-zero
 11019  002EA2                     	endif
 11020  002EA2  0008               	tblrd		*
 11021  002EA4  50F5               	movf	tablat,w,c
 11022  002EA6  0A20               	xorlw	32
 11023  002EA8  B4D8               	btfsc	status,2,c
 11024  002EAA  D01A               	goto	l5221
 11025                           
 11026                           ; BSR set to: 0
 11027  002EAC  0EF7               	movlw	247
 11028  002EAE  6F69               	movwf	??_atoi& (0+255),b
 11029  002EB0  0EFF               	movlw	255
 11030  002EB2  6F6A               	movwf	(??_atoi+1)& (0+255),b
 11031  002EB4  0060  F19F  FFF6   	movff	atoi@s,tblptrl
 11032  002EBA  0060  F1A3  FFF7   	movff	atoi@s+1,tblptrh
 11033  002EC0                     	if	0	;tblptru may be non-zero
 11034  002EC0                     	endif
 11035  002EC0                     	if	0	;tblptru may be non-zero
 11036  002EC0                     	endif
 11037  002EC0  0008               	tblrd		*
 11038  002EC2  50F5               	movf	tablat,w,c
 11039  002EC4  6F6B               	movwf	(??_atoi+2)& (0+255),b
 11040  002EC6  6B6C               	clrf	(??_atoi+3)& (0+255),b
 11041  002EC8  5169               	movf	??_atoi& (0+255),w,b
 11042  002ECA  276B               	addwf	(??_atoi+2)& (0+255),f,b
 11043  002ECC  516A               	movf	(??_atoi+1)& (0+255),w,b
 11044  002ECE  236C               	addwfc	(??_atoi+3)& (0+255),f,b
 11045  002ED0  516C               	movf	(??_atoi+3)& (0+255),w,b
 11046  002ED2  E104               	bnz	u6230
 11047  002ED4  0E05               	movlw	5
 11048  002ED6  5D6B               	subwf	(??_atoi+2)& (0+255),w,b
 11049  002ED8  A0D8               	btfss	status,0,c
 11050  002EDA  D002               	goto	l5221
 11051  002EDC                     u6230:
 11052                           
 11053                           ; BSR set to: 0
 11054  002EDC  0E00               	movlw	0
 11055  002EDE  6F73               	movwf	_atoi$2290& (0+255),b
 11056  002EE0                     l5221:
 11057                           
 11058                           ; BSR set to: 0
 11059  002EE0  0060  F1CC  F06F   	movff	_atoi$2290,_atoi$2289
 11060  002EE6  6B70               	clrf	(_atoi$2289+1)& (0+255),b
 11061                           
 11062                           ; BSR set to: 0
 11063  002EE8  516F               	movf	_atoi$2289& (0+255),w,b
 11064  002EEA  1170               	iorwf	(_atoi$2289+1)& (0+255),w,b
 11065  002EEC  B4D8               	btfsc	status,2,c
 11066  002EEE  D008               	goto	l5231
 11067  002EF0  D7CE               	goto	l5211
 11068  002EF2                     l5227:
 11069                           
 11070                           ; BSR set to: 0
 11071  002EF2  0E00               	movlw	0
 11072  002EF4  6F6E               	movwf	(atoi@neg+1)& (0+255),b
 11073  002EF6  0E01               	movlw	1
 11074  002EF8  6F6D               	movwf	atoi@neg& (0+255),b
 11075  002EFA                     l5229:
 11076                           
 11077                           ; BSR set to: 0
 11078  002EFA  4B67               	infsnz	atoi@s& (0+255),f,b
 11079  002EFC  2B68               	incf	(atoi@s+1)& (0+255),f,b
 11080  002EFE  D035               	goto	l5237
 11081  002F00                     l5231:
 11082                           
 11083                           ; BSR set to: 0
 11084  002F00  0060  F19F  FFF6   	movff	atoi@s,tblptrl
 11085  002F06  0060  F1A3  FFF7   	movff	atoi@s+1,tblptrh
 11086  002F0C                     	if	0	;tblptru may be non-zero
 11087  002F0C                     	endif
 11088  002F0C                     	if	0	;tblptru may be non-zero
 11089  002F0C                     	endif
 11090  002F0C  0008               	tblrd		*
 11091  002F0E  50F5               	movf	tablat,w,c
 11092  002F10  6F69               	movwf	??_atoi& (0+255),b
 11093  002F12  6B6A               	clrf	(??_atoi+1)& (0+255),b
 11094                           
 11095                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11096                           ; Switch size 1, requested type "simple"
 11097                           ; Number of cases is 1, Range of values is 0 to 0
 11098                           ; switch strategies available:
 11099                           ; Name         Instructions Cycles
 11100                           ; simple_byte            4     3 (average)
 11101                           ;	Chosen strategy is simple_byte
 11102  002F14  516A               	movf	(??_atoi+1)& (0+255),w,b
 11103  002F16  0A00               	xorlw	0	; case 0
 11104  002F18  A4D8               	btfss	status,2,c
 11105  002F1A  D027               	goto	l5237
 11106                           
 11107                           ; BSR set to: 0
 11108                           ; Switch size 1, requested type "simple"
 11109                           ; Number of cases is 2, Range of values is 43 to 45
 11110                           ; switch strategies available:
 11111                           ; Name         Instructions Cycles
 11112                           ; simple_byte            7     4 (average)
 11113                           ;	Chosen strategy is simple_byte
 11114  002F1C  5169               	movf	??_atoi& (0+255),w,b
 11115  002F1E  0A2B               	xorlw	43	; case 43
 11116  002F20  B4D8               	btfsc	status,2,c
 11117  002F22  D7EB               	goto	l5229
 11118  002F24  0A06               	xorlw	6	; case 45
 11119  002F26  B4D8               	btfsc	status,2,c
 11120  002F28  D7E4               	goto	l5227
 11121  002F2A  D01F               	goto	l5237
 11122  002F2C                     l5233:
 11123                           
 11124                           ; BSR set to: 0
 11125  002F2C  0060  F1D0  F060   	movff	atoi@n,___wmul@multiplier
 11126  002F32  0060  F1D4  F061   	movff	atoi@n+1,___wmul@multiplier+1
 11127  002F38  0E00               	movlw	0
 11128  002F3A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11129  002F3C  0E0A               	movlw	10
 11130  002F3E  6F62               	movwf	___wmul@multiplicand& (0+255),b
 11131  002F40  EC05  F023         	call	___wmul	;wreg free
 11132  002F44  0060  F19F  FFF6   	movff	atoi@s,tblptrl
 11133  002F4A  0060  F1A3  FFF7   	movff	atoi@s+1,tblptrh
 11134  002F50                     	if	0	;tblptru may be non-zero
 11135  002F50                     	endif
 11136  002F50                     	if	0	;tblptru may be non-zero
 11137  002F50                     	endif
 11138  002F50  0008               	tblrd		*
 11139  002F52  50F5               	movf	tablat,w,c
 11140  002F54  0100               	movlb	0	; () banked
 11141  002F56  5F60               	subwf	?___wmul& (0+255),f,b
 11142  002F58  0E00               	movlw	0
 11143  002F5A  5B61               	subwfb	(?___wmul+1)& (0+255),f,b
 11144  002F5C  0E30               	movlw	48
 11145  002F5E  2560               	addwf	?___wmul& (0+255),w,b
 11146  002F60  6F74               	movwf	atoi@n& (0+255),b
 11147  002F62  0E00               	movlw	0
 11148  002F64  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 11149  002F66  6F75               	movwf	(atoi@n+1)& (0+255),b
 11150  002F68  D7C8               	goto	l5229
 11151  002F6A                     l5237:
 11152                           
 11153                           ; BSR set to: 0
 11154  002F6A  0ED0               	movlw	208
 11155  002F6C  6F69               	movwf	??_atoi& (0+255),b
 11156  002F6E  0EFF               	movlw	255
 11157  002F70  6F6A               	movwf	(??_atoi+1)& (0+255),b
 11158  002F72  0060  F19F  FFF6   	movff	atoi@s,tblptrl
 11159  002F78  0060  F1A3  FFF7   	movff	atoi@s+1,tblptrh
 11160  002F7E                     	if	0	;tblptru may be non-zero
 11161  002F7E                     	endif
 11162  002F7E                     	if	0	;tblptru may be non-zero
 11163  002F7E                     	endif
 11164  002F7E  0008               	tblrd		*
 11165  002F80  50F5               	movf	tablat,w,c
 11166  002F82  6F6B               	movwf	(??_atoi+2)& (0+255),b
 11167  002F84  6B6C               	clrf	(??_atoi+3)& (0+255),b
 11168  002F86  5169               	movf	??_atoi& (0+255),w,b
 11169  002F88  276B               	addwf	(??_atoi+2)& (0+255),f,b
 11170  002F8A  516A               	movf	(??_atoi+1)& (0+255),w,b
 11171  002F8C  236C               	addwfc	(??_atoi+3)& (0+255),f,b
 11172  002F8E  516C               	movf	(??_atoi+3)& (0+255),w,b
 11173  002F90  E106               	bnz	u6250
 11174  002F92  0E0A               	movlw	10
 11175  002F94  5D6B               	subwf	(??_atoi+2)& (0+255),w,b
 11176  002F96  B0D8               	btfsc	status,0,c
 11177  002F98  D002               	goto	u6250
 11178  002F9A  0E01               	movlw	1
 11179  002F9C  D001               	goto	u6260
 11180  002F9E                     u6250:
 11181  002F9E  0E00               	movlw	0
 11182  002FA0                     u6260:
 11183  002FA0  6F71               	movwf	_atoi$2291& (0+255),b
 11184  002FA2  6B72               	clrf	(_atoi$2291+1)& (0+255),b
 11185                           
 11186                           ; BSR set to: 0
 11187  002FA4  5171               	movf	_atoi$2291& (0+255),w,b
 11188  002FA6  1172               	iorwf	(_atoi$2291+1)& (0+255),w,b
 11189  002FA8  A4D8               	btfss	status,2,c
 11190  002FAA  D7C0               	goto	l5233
 11191                           
 11192                           ; BSR set to: 0
 11193  002FAC  516D               	movf	atoi@neg& (0+255),w,b
 11194  002FAE  116E               	iorwf	(atoi@neg+1)& (0+255),w,b
 11195  002FB0  A4D8               	btfss	status,2,c
 11196  002FB2  D011               	goto	l1309
 11197                           
 11198                           ; BSR set to: 0
 11199  002FB4  0060  F1D0  F069   	movff	atoi@n,??_atoi
 11200  002FBA  0060  F1D4  F06A   	movff	atoi@n+1,??_atoi+1
 11201  002FC0  1F69               	comf	??_atoi& (0+255),f,b
 11202  002FC2  1F6A               	comf	(??_atoi+1)& (0+255),f,b
 11203  002FC4  4B69               	infsnz	??_atoi& (0+255),f,b
 11204  002FC6  2B6A               	incf	(??_atoi+1)& (0+255),f,b
 11205  002FC8  0060  F1A4  F067   	movff	??_atoi,?_atoi
 11206  002FCE  0060  F1A8  F068   	movff	??_atoi+1,?_atoi+1
 11207  002FD4  0012               	return	
 11208  002FD6                     l1309:
 11209                           
 11210                           ; BSR set to: 0
 11211  002FD6  0060  F1D0  F067   	movff	atoi@n,?_atoi
 11212  002FDC  0060  F1D4  F068   	movff	atoi@n+1,?_atoi+1
 11213                           
 11214                           ; BSR set to: 0
 11215  002FE2  0012               	return		;funcret
 11216  002FE4                     __end_of_atoi:
 11217                           	opt callstack 0
 11218                           
 11219 ;; *************** function _isspace *****************
 11220 ;; Defined at:
 11221 ;;		line 5 in file "D:\MPLAB\pic\sources\c99\common\isspace.c"
 11222 ;; Parameters:    Size  Location     Type
 11223 ;;  c               2    0[BANK0 ] int 
 11224 ;; Auto vars:     Size  Location     Type
 11225 ;;		None
 11226 ;; Return value:  Size  Location     Type
 11227 ;;                  2    0[BANK0 ] int 
 11228 ;; Registers used:
 11229 ;;		wreg, status,2, status,0
 11230 ;; Tracked objects:
 11231 ;;		On entry : 0/0
 11232 ;;		On exit  : 0/0
 11233 ;;		Unchanged: 0/0
 11234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11235 ;;      Params:         0       2       0       0       0       0       0       0       0
 11236 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11237 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11238 ;;      Totals:         0       7       0       0       0       0       0       0       0
 11239 ;;Total ram usage:        7 bytes
 11240 ;; Hardware stack levels used:    1
 11241 ;; Hardware stack levels required when called:    3
 11242 ;; This function calls:
 11243 ;;		Nothing
 11244 ;; This function is called by:
 11245 ;;		_atoi
 11246 ;; This function uses a non-reentrant model
 11247 ;;
 11248                           
 11249                           	psect	text31
 11250  0043F8                     __ptext31:
 11251                           	opt callstack 0
 11252  0043F8                     _isspace:
 11253                           	opt callstack 23
 11254                           
 11255                           ; BSR set to: 0
 11256                           ;incstack = 0
 11257  0043F8  0E01               	movlw	1
 11258  0043FA  0100               	movlb	0	; () banked
 11259  0043FC  6F66               	movwf	_isspace$2320& (0+255),b
 11260                           
 11261                           ; BSR set to: 0
 11262  0043FE  0E20               	movlw	32
 11263  004400  1960               	xorwf	isspace@c& (0+255),w,b
 11264  004402  1161               	iorwf	(isspace@c+1)& (0+255),w,b
 11265  004404  B4D8               	btfsc	status,2,c
 11266  004406  D016               	goto	l4829
 11267                           
 11268                           ; BSR set to: 0
 11269  004408  0EF7               	movlw	247
 11270  00440A  6F62               	movwf	??_isspace& (0+255),b
 11271  00440C  0EFF               	movlw	255
 11272  00440E  6F63               	movwf	(??_isspace+1)& (0+255),b
 11273  004410  0060  F180  F064   	movff	isspace@c,??_isspace+2
 11274  004416  0060  F184  F065   	movff	isspace@c+1,??_isspace+3
 11275  00441C  5162               	movf	??_isspace& (0+255),w,b
 11276  00441E  2764               	addwf	(??_isspace+2)& (0+255),f,b
 11277  004420  5163               	movf	(??_isspace+1)& (0+255),w,b
 11278  004422  2365               	addwfc	(??_isspace+3)& (0+255),f,b
 11279  004424  5165               	movf	(??_isspace+3)& (0+255),w,b
 11280  004426  E104               	bnz	u5500
 11281  004428  0E05               	movlw	5
 11282  00442A  5D64               	subwf	(??_isspace+2)& (0+255),w,b
 11283  00442C  A0D8               	btfss	status,0,c
 11284  00442E  D002               	goto	l4829
 11285  004430                     u5500:
 11286                           
 11287                           ; BSR set to: 0
 11288  004430  0E00               	movlw	0
 11289  004432  6F66               	movwf	_isspace$2320& (0+255),b
 11290  004434                     l4829:
 11291                           
 11292                           ; BSR set to: 0
 11293  004434  0060  F198  F060   	movff	_isspace$2320,?_isspace
 11294  00443A  6B61               	clrf	(?_isspace+1)& (0+255),b
 11295                           
 11296                           ; BSR set to: 0
 11297  00443C  0012               	return		;funcret
 11298  00443E                     __end_of_isspace:
 11299                           	opt callstack 0
 11300                           
 11301 ;; *************** function _isdigit *****************
 11302 ;; Defined at:
 11303 ;;		line 5 in file "D:\MPLAB\pic\sources\c99\common\isdigit.c"
 11304 ;; Parameters:    Size  Location     Type
 11305 ;;  c               2    0[BANK0 ] int 
 11306 ;; Auto vars:     Size  Location     Type
 11307 ;;		None
 11308 ;; Return value:  Size  Location     Type
 11309 ;;                  2    0[BANK0 ] int 
 11310 ;; Registers used:
 11311 ;;		wreg, status,2, status,0
 11312 ;; Tracked objects:
 11313 ;;		On entry : 0/0
 11314 ;;		On exit  : 0/0
 11315 ;;		Unchanged: 0/0
 11316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11317 ;;      Params:         0       2       0       0       0       0       0       0       0
 11318 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11319 ;;      Temps:          0       4       0       0       0       0       0       0       0
 11320 ;;      Totals:         0       6       0       0       0       0       0       0       0
 11321 ;;Total ram usage:        6 bytes
 11322 ;; Hardware stack levels used:    1
 11323 ;; Hardware stack levels required when called:    3
 11324 ;; This function calls:
 11325 ;;		Nothing
 11326 ;; This function is called by:
 11327 ;;		_vfpfcnvrt
 11328 ;;		_atoi
 11329 ;; This function uses a non-reentrant model
 11330 ;;
 11331                           
 11332                           	psect	text32
 11333  0045A2                     __ptext32:
 11334                           	opt callstack 0
 11335  0045A2                     _isdigit:
 11336                           	opt callstack 24
 11337                           
 11338                           ; BSR set to: 0
 11339                           ;incstack = 0
 11340  0045A2  0ED0               	movlw	208
 11341  0045A4  0100               	movlb	0	; () banked
 11342  0045A6  6F62               	movwf	??_isdigit& (0+255),b
 11343  0045A8  0EFF               	movlw	255
 11344  0045AA  6F63               	movwf	(??_isdigit+1)& (0+255),b
 11345  0045AC  0060  F180  F064   	movff	isdigit@c,??_isdigit+2
 11346  0045B2  0060  F184  F065   	movff	isdigit@c+1,??_isdigit+3
 11347  0045B8  5162               	movf	??_isdigit& (0+255),w,b
 11348  0045BA  2764               	addwf	(??_isdigit+2)& (0+255),f,b
 11349  0045BC  5163               	movf	(??_isdigit+1)& (0+255),w,b
 11350  0045BE  2365               	addwfc	(??_isdigit+3)& (0+255),f,b
 11351  0045C0  5165               	movf	(??_isdigit+3)& (0+255),w,b
 11352  0045C2  E106               	bnz	u4640
 11353  0045C4  0E0A               	movlw	10
 11354  0045C6  5D64               	subwf	(??_isdigit+2)& (0+255),w,b
 11355  0045C8  B0D8               	btfsc	status,0,c
 11356  0045CA  D002               	goto	u4640
 11357  0045CC  0E01               	movlw	1
 11358  0045CE  D001               	goto	u4650
 11359  0045D0                     u4640:
 11360  0045D0  0E00               	movlw	0
 11361  0045D2                     u4650:
 11362  0045D2  6F60               	movwf	?_isdigit& (0+255),b
 11363  0045D4  6B61               	clrf	(?_isdigit+1)& (0+255),b
 11364                           
 11365                           ; BSR set to: 0
 11366  0045D6  0012               	return		;funcret
 11367  0045D8                     __end_of_isdigit:
 11368                           	opt callstack 0
 11369                           
 11370 ;; *************** function ___wmul *****************
 11371 ;; Defined at:
 11372 ;;		line 15 in file "D:\MPLAB\pic\sources\c99\common\Umul16.c"
 11373 ;; Parameters:    Size  Location     Type
 11374 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11375 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11376 ;; Auto vars:     Size  Location     Type
 11377 ;;  product         2    4[BANK0 ] unsigned int 
 11378 ;; Return value:  Size  Location     Type
 11379 ;;                  2    0[BANK0 ] unsigned int 
 11380 ;; Registers used:
 11381 ;;		wreg, status,2, status,0, prodl, prodh
 11382 ;; Tracked objects:
 11383 ;;		On entry : 0/0
 11384 ;;		On exit  : 0/0
 11385 ;;		Unchanged: 0/0
 11386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11387 ;;      Params:         0       4       0       0       0       0       0       0       0
 11388 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11389 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11390 ;;      Totals:         0       6       0       0       0       0       0       0       0
 11391 ;;Total ram usage:        6 bytes
 11392 ;; Hardware stack levels used:    1
 11393 ;; Hardware stack levels required when called:    3
 11394 ;; This function calls:
 11395 ;;		Nothing
 11396 ;; This function is called by:
 11397 ;;		_main
 11398 ;;		_atoi
 11399 ;; This function uses a non-reentrant model
 11400 ;;
 11401                           
 11402                           	psect	text33
 11403  00460A                     __ptext33:
 11404                           	opt callstack 0
 11405  00460A                     ___wmul:
 11406                           	opt callstack 23
 11407                           
 11408                           ; BSR set to: 0
 11409                           ;incstack = 0
 11410  00460A  0100               	movlb	0	; () banked
 11411  00460C  5160               	movf	___wmul@multiplier& (0+255),w,b
 11412  00460E  0362               	mulwf	___wmul@multiplicand& (0+255),b
 11413  004610  006F FFCC  F064    	movff	prodl,___wmul@product
 11414  004616  006F FFD0  F065    	movff	prodh,___wmul@product+1
 11415  00461C  5160               	movf	___wmul@multiplier& (0+255),w,b
 11416  00461E  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11417  004620  50F3               	movf	prodl,w,c
 11418  004622  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 11419  004624  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11420  004626  0362               	mulwf	___wmul@multiplicand& (0+255),b
 11421  004628  50F3               	movf	prodl,w,c
 11422  00462A  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 11423                           
 11424                           ; BSR set to: 0
 11425  00462C  0060  F190  F060   	movff	___wmul@product,?___wmul
 11426  004632  0060  F194  F061   	movff	___wmul@product+1,?___wmul+1
 11427                           
 11428                           ; BSR set to: 0
 11429  004638  0012               	return		;funcret
 11430  00463A                     __end_of___wmul:
 11431                           	opt callstack 0
 11432                           
 11433 ;; *************** function _initCAN *****************
 11434 ;; Defined at:
 11435 ;;		line 707 in file "MainCode.c"
 11436 ;; Parameters:    Size  Location     Type
 11437 ;;		None
 11438 ;; Auto vars:     Size  Location     Type
 11439 ;;		None
 11440 ;; Return value:  Size  Location     Type
 11441 ;;                  1    wreg      void 
 11442 ;; Registers used:
 11443 ;;		wreg, status,2, status,0
 11444 ;; Tracked objects:
 11445 ;;		On entry : 0/0
 11446 ;;		On exit  : 0/0
 11447 ;;		Unchanged: 0/0
 11448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11449 ;;      Params:         0       0       0       0       0       0       0       0       0
 11450 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11451 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11452 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11453 ;;Total ram usage:        0 bytes
 11454 ;; Hardware stack levels used:    1
 11455 ;; Hardware stack levels required when called:    3
 11456 ;; This function calls:
 11457 ;;		Nothing
 11458 ;; This function is called by:
 11459 ;;		_main
 11460 ;; This function uses a non-reentrant model
 11461 ;;
 11462                           
 11463                           	psect	text34
 11464  0041CA                     __ptext34:
 11465                           	opt callstack 0
 11466  0041CA                     _initCAN:
 11467                           	opt callstack 27
 11468                           
 11469                           ;MainCode.c: 712:     RB2PPS = 0b110011;
 11470                           
 11471                           ; BSR set to: 0
 11472                           ;incstack = 0
 11473  0041CA  0E33               	movlw	51
 11474  0041CC  013A               	movlb	58	; () banked
 11475  0041CE  6F0A               	movwf	10,b	;volatile
 11476                           
 11477                           ; BSR set to: 58
 11478                           ;MainCode.c: 714:     TRISBbits.TRISB2 = 0;
 11479  0041D0  94C3               	bcf	16323,2,c	;volatile
 11480                           
 11481                           ; BSR set to: 58
 11482                           ;MainCode.c: 715:     TRISBbits.TRISB3 = 1;
 11483  0041D2  86C3               	bsf	16323,3,c	;volatile
 11484                           
 11485                           ; BSR set to: 58
 11486                           ;MainCode.c: 717:     ANSELBbits.ANSELB2 = 0;
 11487  0041D4  9550               	bcf	80,2,b	;volatile
 11488                           
 11489                           ; BSR set to: 58
 11490                           ;MainCode.c: 718:     ANSELBbits.ANSELB3 = 0;
 11491  0041D6  9750               	bcf	80,3,b	;volatile
 11492                           
 11493                           ; BSR set to: 58
 11494                           ;MainCode.c: 720:     CANCONbits.REQOP2 = 1;
 11495  0041D8  8E8F               	bsf	16271,7,c	;volatile
 11496                           
 11497                           ; BSR set to: 58
 11498                           ;MainCode.c: 721:     CANCONbits.REQOP1 = 0;
 11499  0041DA  9C8F               	bcf	16271,6,c	;volatile
 11500                           
 11501                           ; BSR set to: 58
 11502                           ;MainCode.c: 722:     CANCONbits.REQOP0 = 0;
 11503  0041DC  9A8F               	bcf	16271,5,c	;volatile
 11504  0041DE                     l5483:
 11505  0041DE  388E               	swapf	16270,w,c	;volatile
 11506  0041E0  32E8               	rrcf	wreg,f,c
 11507  0041E2  0B07               	andlw	7
 11508  0041E4  0A04               	xorlw	4
 11509  0041E6  A4D8               	btfss	status,2,c
 11510  0041E8  D7FA               	goto	l5483
 11511                           
 11512                           ;MainCode.c: 726:     BRGCON1bits.BRP = 0b011111;
 11513  0041EA  0137               	movlb	55	; () banked
 11514  0041EC  5103               	movf	3,w,b	;volatile
 11515  0041EE  0BC0               	andlw	-64
 11516  0041F0  091F               	iorlw	31
 11517  0041F2  6F03               	movwf	3,b	;volatile
 11518                           
 11519                           ;MainCode.c: 728:     RXF0SIDH = 0;
 11520  0041F4  0E00               	movlw	0
 11521  0041F6  6FA0               	movwf	160,b	;volatile
 11522                           
 11523                           ;MainCode.c: 729:     RXF0SIDLbits.SID = 2;
 11524  0041F8  51A1               	movf	161,w,b	;volatile
 11525  0041FA  0B1F               	andlw	-225
 11526  0041FC  0940               	iorlw	64
 11527  0041FE  6FA1               	movwf	161,b	;volatile
 11528                           
 11529                           ; BSR set to: 55
 11530                           ;MainCode.c: 730:     RXF0SIDLbits.EXIDEN = 0;
 11531  004200  97A1               	bcf	161,3,b	;volatile
 11532                           
 11533                           ; BSR set to: 55
 11534                           ;MainCode.c: 731:     RXM0SIDH = 255;
 11535  004202  69B8               	setf	184,b	;volatile
 11536                           
 11537                           ;MainCode.c: 732:     RXM0SIDLbits.SID = 0b111;
 11538  004204  0EE0               	movlw	224
 11539  004206  13B9               	iorwf	185,f,b	;volatile
 11540                           
 11541                           ; BSR set to: 55
 11542                           ;MainCode.c: 733:     RXB0CONbits.RXM1 = 0;
 11543  004208  9C80               	bcf	16256,6,c	;volatile
 11544                           
 11545                           ; BSR set to: 55
 11546                           ;MainCode.c: 734:     RXB0CONbits.RXM0 = 1;
 11547  00420A  8A80               	bsf	16256,5,c	;volatile
 11548                           
 11549                           ; BSR set to: 55
 11550                           ;MainCode.c: 735:     RXB0CONbits.FILHIT0 = 0;
 11551  00420C  9080               	bcf	16256,0,c	;volatile
 11552                           
 11553                           ; BSR set to: 55
 11554                           ;MainCode.c: 737:     RXF1SIDH = 255;
 11555  00420E  69A4               	setf	164,b	;volatile
 11556                           
 11557                           ;MainCode.c: 738:     RXF1SIDLbits.SID = 0b111;
 11558  004210  0EE0               	movlw	224
 11559  004212  13A5               	iorwf	165,f,b	;volatile
 11560                           
 11561                           ; BSR set to: 55
 11562                           ;MainCode.c: 739:     RXF1SIDLbits.EXIDEN = 0;
 11563  004214  97A5               	bcf	165,3,b	;volatile
 11564                           
 11565                           ; BSR set to: 55
 11566                           ;MainCode.c: 740:     RXM1SIDH = 255;
 11567  004216  69BC               	setf	188,b	;volatile
 11568                           
 11569                           ;MainCode.c: 741:     RXM1SIDLbits.SID = 0b111;
 11570  004218  0EE0               	movlw	224
 11571  00421A  13BD               	iorwf	189,f,b	;volatile
 11572                           
 11573                           ; BSR set to: 55
 11574                           ;MainCode.c: 742:     RXB1CONbits.RXM1 = 0;
 11575  00421C  9DF0               	bcf	240,6,b	;volatile
 11576                           
 11577                           ; BSR set to: 55
 11578                           ;MainCode.c: 743:     RXB1CONbits.RXM0 = 1;
 11579  00421E  8BF0               	bsf	240,5,b	;volatile
 11580                           
 11581                           ; BSR set to: 55
 11582                           ;MainCode.c: 744:     RXB1CONbits.FILHIT0 = 0;
 11583  004220  91F0               	bcf	240,0,b	;volatile
 11584                           
 11585                           ;MainCode.c: 746:     CANCONbits.REQOP = 0b000;
 11586  004222  0E1F               	movlw	-225
 11587  004224  168F               	andwf	16271,f,c	;volatile
 11588  004226                     l5509:
 11589  004226  388E               	swapf	16270,w,c	;volatile
 11590  004228  32E8               	rrcf	wreg,f,c
 11591  00422A  0B07               	andlw	7
 11592  00422C  0900               	iorlw	0
 11593  00422E  B4D8               	btfsc	status,2,c
 11594  004230  0012               	return	
 11595  004232  D7F9               	goto	l5509
 11596  004234                     __end_of_initCAN:
 11597                           	opt callstack 0
 11598                           
 11599 ;; *************** function _initBuzzer *****************
 11600 ;; Defined at:
 11601 ;;		line 787 in file "MainCode.c"
 11602 ;; Parameters:    Size  Location     Type
 11603 ;;		None
 11604 ;; Auto vars:     Size  Location     Type
 11605 ;;		None
 11606 ;; Return value:  Size  Location     Type
 11607 ;;                  1    wreg      void 
 11608 ;; Registers used:
 11609 ;;		wreg, status,2
 11610 ;; Tracked objects:
 11611 ;;		On entry : 0/0
 11612 ;;		On exit  : 0/0
 11613 ;;		Unchanged: 0/0
 11614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11615 ;;      Params:         0       0       0       0       0       0       0       0       0
 11616 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11617 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11618 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11619 ;;Total ram usage:        0 bytes
 11620 ;; Hardware stack levels used:    1
 11621 ;; Hardware stack levels required when called:    3
 11622 ;; This function calls:
 11623 ;;		Nothing
 11624 ;; This function is called by:
 11625 ;;		_main
 11626 ;; This function uses a non-reentrant model
 11627 ;;
 11628                           
 11629                           	psect	text35
 11630  0045D8                     __ptext35:
 11631                           	opt callstack 0
 11632  0045D8                     _initBuzzer:
 11633                           	opt callstack 27
 11634                           
 11635                           ;MainCode.c: 789:     ANSELBbits.ANSELB1 = 0;
 11636                           
 11637                           ;incstack = 0
 11638  0045D8  013A               	movlb	58	; () banked
 11639  0045DA  9350               	bcf	80,1,b	;volatile
 11640                           
 11641                           ;MainCode.c: 790:     TRISBbits.TRISB1 = 0;
 11642  0045DC  92C3               	bcf	16323,1,c	;volatile
 11643                           
 11644                           ;MainCode.c: 791:     PORTBbits.RB1 = 1;
 11645  0045DE  82CB               	bsf	16331,1,c	;volatile
 11646                           
 11647                           ;MainCode.c: 792:     T0CON0bits.EN = 1;
 11648  0045E0  8EB8               	bsf	16312,7,c	;volatile
 11649                           
 11650                           ;MainCode.c: 793:     T0CON0bits.MD16 = 0;
 11651  0045E2  98B8               	bcf	16312,4,c	;volatile
 11652                           
 11653                           ; BSR set to: 58
 11654                           ;MainCode.c: 794:     T0CON0bits.OUTPS = 0;
 11655  0045E4  0EF0               	movlw	-16
 11656  0045E6  16B8               	andwf	16312,f,c	;volatile
 11657                           
 11658                           ;MainCode.c: 795:     T0CON1bits.CS = 0b101;
 11659  0045E8  50B9               	movf	16313,w,c	;volatile
 11660  0045EA  0B1F               	andlw	-225
 11661  0045EC  09A0               	iorlw	160
 11662  0045EE  6EB9               	movwf	16313,c	;volatile
 11663                           
 11664                           ; BSR set to: 58
 11665                           ;MainCode.c: 796:     T0CON1bits.ASYNC = 1;
 11666  0045F0  88B9               	bsf	16313,4,c	;volatile
 11667                           
 11668                           ;MainCode.c: 797:     T0CON1bits.CKPS = 0b1001;
 11669  0045F2  50B9               	movf	16313,w,c	;volatile
 11670  0045F4  0BF0               	andlw	-16
 11671  0045F6  0909               	iorlw	9
 11672  0045F8  6EB9               	movwf	16313,c	;volatile
 11673                           
 11674                           ;MainCode.c: 798:     TMR0L = 0;
 11675  0045FA  0E00               	movlw	0
 11676  0045FC  6EB6               	movwf	16310,c	;volatile
 11677                           
 11678                           ;MainCode.c: 799:     TMR0H = 50;
 11679  0045FE  0E32               	movlw	50
 11680  004600  6EB7               	movwf	16311,c	;volatile
 11681                           
 11682                           ; BSR set to: 58
 11683                           ;MainCode.c: 800:     PIE3bits.TMR0IE = 1;
 11684  004602  0139               	movlb	57	; () banked
 11685  004604  8F93               	bsf	147,7,b	;volatile
 11686                           
 11687                           ; BSR set to: 57
 11688                           ;MainCode.c: 801:     PIR3bits.TMR0IF = 0;
 11689  004606  9FA3               	bcf	163,7,b	;volatile
 11690                           
 11691                           ; BSR set to: 57
 11692  004608  0012               	return		;funcret
 11693  00460A                     __end_of_initBuzzer:
 11694                           	opt callstack 0
 11695                           
 11696 ;; *************** function _MenuYesNo *****************
 11697 ;; Defined at:
 11698 ;;		line 637 in file "MainCode.c"
 11699 ;; Parameters:    Size  Location     Type
 11700 ;;		None
 11701 ;; Auto vars:     Size  Location     Type
 11702 ;;  str            20    0        unsigned char [20]
 11703 ;;  value           2    0        unsigned int 
 11704 ;; Return value:  Size  Location     Type
 11705 ;;                  1    wreg      void 
 11706 ;; Registers used:
 11707 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11708 ;; Tracked objects:
 11709 ;;		On entry : 0/0
 11710 ;;		On exit  : 0/0
 11711 ;;		Unchanged: 0/0
 11712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11713 ;;      Params:         0       0       0       0       0       0       0       0       0
 11714 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11715 ;;      Temps:          0       2       0       0       0       0       0       0       0
 11716 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11717 ;;Total ram usage:        4 bytes
 11718 ;; Hardware stack levels used:    1
 11719 ;; Hardware stack levels required when called:    6
 11720 ;; This function calls:
 11721 ;;		_Lcd_Set_Cursor
 11722 ;;		_Lcd_Write_String
 11723 ;; This function is called by:
 11724 ;;		_main
 11725 ;; This function uses a non-reentrant model
 11726 ;;
 11727                           
 11728                           	psect	text36
 11729  003D86                     __ptext36:
 11730                           	opt callstack 0
 11731  003D86                     _MenuYesNo:
 11732                           	opt callstack 24
 11733                           
 11734                           ; BSR set to: 57
 11735                           ;incstack = 0
 11736  003D86  D041               	goto	l5575
 11737  003D88                     l5557:
 11738                           
 11739                           ; BSR set to: 0
 11740  003D88  0E02               	movlw	2
 11741  003D8A  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 11742  003D8C  0E03               	movlw	3
 11743  003D8E  EC6D  F01E         	call	_Lcd_Set_Cursor
 11744  003D92  0ED8               	movlw	low STR_31
 11745  003D94  0100               	movlb	0	; () banked
 11746  003D96  6F66               	movwf	Lcd_Write_String@a& (0+255),b
 11747  003D98  0E7F               	movlw	high STR_31
 11748  003D9A  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
 11749  003D9C  EC31  F020         	call	_Lcd_Write_String	;wreg free
 11750  003DA0  0E02               	movlw	2
 11751  003DA2  0100               	movlb	0	; () banked
 11752  003DA4  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 11753  003DA6  0E04               	movlw	4
 11754  003DA8  EC6D  F01E         	call	_Lcd_Set_Cursor
 11755  003DAC  0EDE               	movlw	low STR_32
 11756  003DAE  0100               	movlb	0	; () banked
 11757  003DB0  6F66               	movwf	Lcd_Write_String@a& (0+255),b
 11758  003DB2  0E7F               	movlw	high STR_32
 11759  003DB4  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
 11760  003DB6  EC31  F020         	call	_Lcd_Write_String	;wreg free
 11761  003DBA  0012               	return	
 11762  003DBC                     l5563:
 11763                           
 11764                           ; BSR set to: 0
 11765  003DBC  0E02               	movlw	2
 11766  003DBE  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 11767  003DC0  0E03               	movlw	3
 11768  003DC2  EC6D  F01E         	call	_Lcd_Set_Cursor
 11769  003DC6  0EC0               	movlw	low STR_33
 11770  003DC8  0100               	movlb	0	; () banked
 11771  003DCA  6F66               	movwf	Lcd_Write_String@a& (0+255),b
 11772  003DCC  0E7F               	movlw	high STR_33
 11773  003DCE  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
 11774  003DD0  EC31  F020         	call	_Lcd_Write_String	;wreg free
 11775  003DD4  0E02               	movlw	2
 11776  003DD6  0100               	movlb	0	; () banked
 11777  003DD8  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 11778  003DDA  0E04               	movlw	4
 11779  003DDC  EC6D  F01E         	call	_Lcd_Set_Cursor
 11780  003DE0  0EE3               	movlw	low STR_34
 11781  003DE2  0100               	movlb	0	; () banked
 11782  003DE4  6F66               	movwf	Lcd_Write_String@a& (0+255),b
 11783  003DE6  0E7F               	movlw	high STR_34
 11784  003DE8  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
 11785  003DEA  EC31  F020         	call	_Lcd_Write_String	;wreg free
 11786  003DEE  0012               	return	
 11787  003DF0                     l5569:
 11788                           
 11789                           ; BSR set to: 0
 11790  003DF0  0E01               	movlw	1
 11791  003DF2  6F63               	movwf	Lcd_Set_Cursor@b& (0+255),b
 11792  003DF4  0E03               	movlw	3
 11793  003DF6  EC6D  F01E         	call	_Lcd_Set_Cursor
 11794  003DFA  0ED2               	movlw	low STR_35
 11795  003DFC  0100               	movlb	0	; () banked
 11796  003DFE  6F66               	movwf	Lcd_Write_String@a& (0+255),b
 11797  003E00  0E7F               	movlw	high STR_35
 11798  003E02  6F67               	movwf	(Lcd_Write_String@a+1)& (0+255),b
 11799  003E04  EC31  F020         	call	_Lcd_Write_String	;wreg free
 11800  003E08  0012               	return	
 11801  003E0A                     l5575:
 11802  003E0A  0060  F440  F06C   	movff	_tick_count,??_MenuYesNo
 11803  003E10  0060  F444  F06D   	movff	_tick_count+1,??_MenuYesNo+1
 11804                           
 11805                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11806                           ; Switch size 1, requested type "simple"
 11807                           ; Number of cases is 1, Range of values is 0 to 0
 11808                           ; switch strategies available:
 11809                           ; Name         Instructions Cycles
 11810                           ; simple_byte            4     3 (average)
 11811                           ;	Chosen strategy is simple_byte
 11812  003E16  0100               	movlb	0	; () banked
 11813  003E18  516D               	movf	(??_MenuYesNo+1)& (0+255),w,b
 11814  003E1A  0A00               	xorlw	0	; case 0
 11815  003E1C  A4D8               	btfss	status,2,c
 11816  003E1E  D7E8               	goto	l5569
 11817                           
 11818                           ; BSR set to: 0
 11819                           ; Switch size 1, requested type "simple"
 11820                           ; Number of cases is 2, Range of values is 0 to 1
 11821                           ; switch strategies available:
 11822                           ; Name         Instructions Cycles
 11823                           ; simple_byte            7     4 (average)
 11824                           ;	Chosen strategy is simple_byte
 11825  003E20  516C               	movf	??_MenuYesNo& (0+255),w,b
 11826  003E22  0A00               	xorlw	0	; case 0
 11827  003E24  B4D8               	btfsc	status,2,c
 11828  003E26  D7B0               	goto	l5557
 11829  003E28  0A01               	xorlw	1	; case 1
 11830  003E2A  B4D8               	btfsc	status,2,c
 11831  003E2C  D7C7               	goto	l5563
 11832  003E2E  D7E0               	goto	l5569
 11833  003E30                     __end_of_MenuYesNo:
 11834                           	opt callstack 0
 11835                           
 11836 ;; *************** function _Lcd_Write_String *****************
 11837 ;; Defined at:
 11838 ;;		line 621 in file "MainCode.c"
 11839 ;; Parameters:    Size  Location     Type
 11840 ;;  a               2    6[BANK0 ] PTR unsigned char 
 11841 ;;		 -> STR_35(6), STR_34(5), STR_33(6), STR_32(5), 
 11842 ;;		 -> STR_31(6), STR_30(19), STR_29(16), STR_28(15), 
 11843 ;;		 -> STR_27(20), STR_25(14), STR_24(6), STR_23(15), 
 11844 ;;		 -> charging_state_lut(140), main@str_1454(8), STR_21(10), STR_20(15), 
 11845 ;;		 -> STR_19(17), STR_18(19), STR_16(20), master_state_lut(360), 
 11846 ;;		 -> STR_14(14), STR_13(6), STR_12(12), STR_11(15), 
 11847 ;;		 -> STR_10(20), STR_9(11), STR_8(16), STR_7(17), 
 11848 ;;		 -> STR_6(6), STR_5(19), STR_4(15), STR_3(16), 
 11849 ;;		 -> STR_2(18), STR_1(21), 
 11850 ;; Auto vars:     Size  Location     Type
 11851 ;;  i               2   10[BANK0 ] int 
 11852 ;; Return value:  Size  Location     Type
 11853 ;;                  1    wreg      void 
 11854 ;; Registers used:
 11855 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11856 ;; Tracked objects:
 11857 ;;		On entry : 0/0
 11858 ;;		On exit  : 0/0
 11859 ;;		Unchanged: 0/0
 11860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11861 ;;      Params:         0       2       0       0       0       0       0       0       0
 11862 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11863 ;;      Temps:          0       2       0       0       0       0       0       0       0
 11864 ;;      Totals:         0       6       0       0       0       0       0       0       0
 11865 ;;Total ram usage:        6 bytes
 11866 ;; Hardware stack levels used:    1
 11867 ;; Hardware stack levels required when called:    5
 11868 ;; This function calls:
 11869 ;;		_Lcd_Write_Char
 11870 ;; This function is called by:
 11871 ;;		_main
 11872 ;;		_MenuYesNo
 11873 ;; This function uses a non-reentrant model
 11874 ;;
 11875                           
 11876                           	psect	text37
 11877  004062                     __ptext37:
 11878                           	opt callstack 0
 11879  004062                     _Lcd_Write_String:
 11880                           	opt callstack 24
 11881                           
 11882                           ;incstack = 0
 11883  004062  0E00               	movlw	0
 11884  004064  0100               	movlb	0	; () banked
 11885  004066  6F6B               	movwf	(Lcd_Write_String@i+1)& (0+255),b
 11886  004068  0E00               	movlw	0
 11887  00406A  6F6A               	movwf	Lcd_Write_String@i& (0+255),b
 11888  00406C  D020               	goto	l5457
 11889  00406E                     l5453:
 11890  00406E  0100               	movlb	0	; () banked
 11891  004070  516A               	movf	Lcd_Write_String@i& (0+255),w,b
 11892  004072  2566               	addwf	Lcd_Write_String@a& (0+255),w,b
 11893  004074  6F68               	movwf	??_Lcd_Write_String& (0+255),b
 11894  004076  516B               	movf	(Lcd_Write_String@i+1)& (0+255),w,b
 11895  004078  2167               	addwfc	(Lcd_Write_String@a+1)& (0+255),w,b
 11896  00407A  6F69               	movwf	(??_Lcd_Write_String+1)& (0+255),b
 11897  00407C  0060  F1A3  FFF6   	movff	??_Lcd_Write_String,tblptrl
 11898  004082  0060  F1A7  FFF7   	movff	??_Lcd_Write_String+1,tblptrh
 11899  004088  6AF8               	clrf	tblptru,c
 11900  00408A  0E07               	movlw	(high __ramtop+-1)
 11901  00408C  64F7               	cpfsgt	tblptrh,c
 11902  00408E  D003               	bra	u6597
 11903  004090  0008               	tblrd		*
 11904  004092  50F5               	movf	tablat,w,c
 11905  004094  D007               	bra	u6590
 11906  004096                     u6597:
 11907  004096  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11908  00409C  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11909  0040A2  50E7               	movf	indf1,w,c
 11910  0040A4                     u6590:
 11911  0040A4  EC60  F022         	call	_Lcd_Write_Char
 11912  0040A8  0100               	movlb	0	; () banked
 11913  0040AA  4B6A               	infsnz	Lcd_Write_String@i& (0+255),f,b
 11914  0040AC  2B6B               	incf	(Lcd_Write_String@i+1)& (0+255),f,b
 11915  0040AE                     l5457:
 11916                           
 11917                           ; BSR set to: 0
 11918  0040AE  516A               	movf	Lcd_Write_String@i& (0+255),w,b
 11919  0040B0  2566               	addwf	Lcd_Write_String@a& (0+255),w,b
 11920  0040B2  6F68               	movwf	??_Lcd_Write_String& (0+255),b
 11921  0040B4  516B               	movf	(Lcd_Write_String@i+1)& (0+255),w,b
 11922  0040B6  2167               	addwfc	(Lcd_Write_String@a+1)& (0+255),w,b
 11923  0040B8  6F69               	movwf	(??_Lcd_Write_String+1)& (0+255),b
 11924  0040BA  0060  F1A3  FFF6   	movff	??_Lcd_Write_String,tblptrl
 11925  0040C0  0060  F1A7  FFF7   	movff	??_Lcd_Write_String+1,tblptrh
 11926  0040C6  6AF8               	clrf	tblptru,c
 11927  0040C8  0E07               	movlw	(high __ramtop+-1)
 11928  0040CA  64F7               	cpfsgt	tblptrh,c
 11929  0040CC  D003               	bra	u6607
 11930  0040CE  0008               	tblrd		*
 11931  0040D0  50F5               	movf	tablat,w,c
 11932  0040D2  D007               	bra	u6600
 11933  0040D4                     u6607:
 11934  0040D4  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11935  0040DA  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11936  0040E0  50E7               	movf	indf1,w,c
 11937  0040E2                     u6600:
 11938  0040E2  0900               	iorlw	0
 11939  0040E4  B4D8               	btfsc	status,2,c
 11940  0040E6  0012               	return	
 11941  0040E8  D7C2               	goto	l5453
 11942  0040EA                     __end_of_Lcd_Write_String:
 11943                           	opt callstack 0
 11944                           
 11945 ;; *************** function _Lcd_Write_Char *****************
 11946 ;; Defined at:
 11947 ;;		line 606 in file "MainCode.c"
 11948 ;; Parameters:    Size  Location     Type
 11949 ;;  a               1    wreg     unsigned char 
 11950 ;; Auto vars:     Size  Location     Type
 11951 ;;  a               1    3[BANK0 ] unsigned char 
 11952 ;;  y               1    2[BANK0 ] unsigned char 
 11953 ;;  temp            1    1[BANK0 ] unsigned char 
 11954 ;; Return value:  Size  Location     Type
 11955 ;;                  1    wreg      void 
 11956 ;; Registers used:
 11957 ;;		wreg, status,2, status,0, cstack
 11958 ;; Tracked objects:
 11959 ;;		On entry : 0/0
 11960 ;;		On exit  : 0/0
 11961 ;;		Unchanged: 0/0
 11962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11963 ;;      Params:         0       0       0       0       0       0       0       0       0
 11964 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11965 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11966 ;;      Totals:         0       3       0       0       0       0       0       0       0
 11967 ;;Total ram usage:        3 bytes
 11968 ;; Hardware stack levels used:    1
 11969 ;; Hardware stack levels required when called:    4
 11970 ;; This function calls:
 11971 ;;		_Lcd_Port
 11972 ;; This function is called by:
 11973 ;;		_Lcd_Write_String
 11974 ;; This function uses a non-reentrant model
 11975 ;;
 11976                           
 11977                           	psect	text38
 11978  0044C0                     __ptext38:
 11979                           	opt callstack 0
 11980  0044C0                     _Lcd_Write_Char:
 11981                           	opt callstack 24
 11982                           
 11983                           ;incstack = 0
 11984                           ;Lcd_Write_Char@a stored from wreg
 11985  0044C0  0100               	movlb	0	; () banked
 11986  0044C2  6F63               	movwf	Lcd_Write_Char@a& (0+255),b
 11987  0044C4  0100               	movlb	0	; () banked
 11988  0044C6  5163               	movf	Lcd_Write_Char@a& (0+255),w,b
 11989  0044C8  0B0F               	andlw	15
 11990  0044CA  6F61               	movwf	Lcd_Write_Char@temp& (0+255),b
 11991  0044CC  5163               	movf	Lcd_Write_Char@a& (0+255),w,b
 11992  0044CE  0BF0               	andlw	240
 11993  0044D0  6F62               	movwf	Lcd_Write_Char@y& (0+255),b
 11994                           
 11995                           ; BSR set to: 0
 11996  0044D2  80CC               	bsf	16332,0,c	;volatile
 11997                           
 11998                           ; BSR set to: 0
 11999  0044D4  3962               	swapf	Lcd_Write_Char@y& (0+255),w,b
 12000  0044D6  0B0F               	andlw	15
 12001  0044D8  EC1D  F023         	call	_Lcd_Port
 12002  0044DC  82CC               	bsf	16332,1,c	;volatile
 12003  0044DE  0ED5               	movlw	213
 12004  0044E0                     u7777:
 12005  0044E0  2EE8               	decfsz	wreg,f,c
 12006  0044E2  D7FE               	bra	u7777
 12007  0044E4  F000               	nop	
 12008  0044E6  92CC               	bcf	16332,1,c	;volatile
 12009  0044E8  0100               	movlb	0	; () banked
 12010  0044EA  5161               	movf	Lcd_Write_Char@temp& (0+255),w,b
 12011  0044EC  EC1D  F023         	call	_Lcd_Port
 12012  0044F0  82CC               	bsf	16332,1,c	;volatile
 12013  0044F2  0ED5               	movlw	213
 12014  0044F4                     u7787:
 12015  0044F4  2EE8               	decfsz	wreg,f,c
 12016  0044F6  D7FE               	bra	u7787
 12017  0044F8  F000               	nop	
 12018  0044FA  92CC               	bcf	16332,1,c	;volatile
 12019  0044FC  0012               	return		;funcret
 12020  0044FE                     __end_of_Lcd_Write_Char:
 12021                           	opt callstack 0
 12022                           
 12023 ;; *************** function _Lcd_Set_Cursor *****************
 12024 ;; Defined at:
 12025 ;;		line 553 in file "MainCode.c"
 12026 ;; Parameters:    Size  Location     Type
 12027 ;;  a               1    wreg     unsigned char 
 12028 ;;  b               1    3[BANK0 ] unsigned char 
 12029 ;; Auto vars:     Size  Location     Type
 12030 ;;  a               1    4[BANK0 ] unsigned char 
 12031 ;;  temp            1    7[BANK0 ] unsigned char 
 12032 ;;  y               1    6[BANK0 ] unsigned char 
 12033 ;;  z               1    5[BANK0 ] unsigned char 
 12034 ;; Return value:  Size  Location     Type
 12035 ;;                  1    wreg      void 
 12036 ;; Registers used:
 12037 ;;		wreg, status,2, status,0, cstack
 12038 ;; Tracked objects:
 12039 ;;		On entry : 0/0
 12040 ;;		On exit  : 0/0
 12041 ;;		Unchanged: 0/0
 12042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12043 ;;      Params:         0       1       0       0       0       0       0       0       0
 12044 ;;      Locals:         0       4       0       0       0       0       0       0       0
 12045 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12046 ;;      Totals:         0       5       0       0       0       0       0       0       0
 12047 ;;Total ram usage:        5 bytes
 12048 ;; Hardware stack levels used:    1
 12049 ;; Hardware stack levels required when called:    5
 12050 ;; This function calls:
 12051 ;;		_Lcd_Cmd
 12052 ;; This function is called by:
 12053 ;;		_main
 12054 ;;		_MenuYesNo
 12055 ;; This function uses a non-reentrant model
 12056 ;;
 12057                           
 12058                           	psect	text39
 12059  003CDA                     __ptext39:
 12060                           	opt callstack 0
 12061  003CDA                     _Lcd_Set_Cursor:
 12062                           	opt callstack 24
 12063                           
 12064                           ;incstack = 0
 12065                           ;Lcd_Set_Cursor@a stored from wreg
 12066  003CDA  0100               	movlb	0	; () banked
 12067  003CDC  6F64               	movwf	Lcd_Set_Cursor@a& (0+255),b
 12068                           
 12069                           ;MainCode.c: 554:     PORTCbits.RC1 = 1;;MainCode.c: 555:     _delay((unsigned long)((40
      +                          )*(64000000/4000000.0)));
 12070  003CDE  0100               	movlb	0	; () banked
 12071  003CE0  0564               	decf	Lcd_Set_Cursor@a& (0+255),w,b
 12072  003CE2  A4D8               	btfss	status,2,c
 12073  003CE4  D011               	goto	l5427
 12074                           
 12075                           ; BSR set to: 0
 12076                           ;MainCode.c: 556:     PORTCbits.RC1 = 0;
 12077  003CE6  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 12078  003CE8  0F7F               	addlw	127
 12079  003CEA  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 12080                           
 12081                           ;MainCode.c: 557:     Lcd_Port(temp);
 12082  003CEC  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 12083  003CEE  0B0F               	andlw	15
 12084  003CF0  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 12085                           
 12086                           ;MainCode.c: 558:     PORTCbits.RC1 = 1;
 12087  003CF2  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 12088  003CF4  0B0F               	andlw	15
 12089  003CF6  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 12090                           
 12091                           ; BSR set to: 0
 12092                           ;MainCode.c: 559:     _delay((unsigned long)((40)*(64000000/4000000.0)));
 12093  003CF8  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 12094  003CFA  EC35  F023         	call	_Lcd_Cmd
 12095                           
 12096                           ;MainCode.c: 560:     PORTCbits.RC1 = 0;
 12097  003CFE  0100               	movlb	0	; () banked
 12098  003D00  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 12099  003D02  EC35  F023         	call	_Lcd_Cmd
 12100                           
 12101                           ;MainCode.c: 561: }
 12102  003D06  0012               	return	
 12103  003D08                     l5427:
 12104                           
 12105                           ; BSR set to: 0
 12106  003D08  0E02               	movlw	2
 12107  003D0A  1964               	xorwf	Lcd_Set_Cursor@a& (0+255),w,b
 12108  003D0C  A4D8               	btfss	status,2,c
 12109  003D0E  D011               	goto	l5435
 12110                           
 12111                           ; BSR set to: 0
 12112                           ;MainCode.c: 562: 
 12113  003D10  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 12114  003D12  0FBF               	addlw	191
 12115  003D14  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 12116                           
 12117                           ;MainCode.c: 563: void Lcd_Write_String(char *a) {
 12118  003D16  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 12119  003D18  0B0F               	andlw	15
 12120  003D1A  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 12121                           
 12122                           ;MainCode.c: 564:     int i;
 12123  003D1C  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 12124  003D1E  0B0F               	andlw	15
 12125  003D20  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 12126                           
 12127                           ; BSR set to: 0
 12128                           ;MainCode.c: 565:     for (i = 0; a[i] != '\0'; i++)
 12129  003D22  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 12130  003D24  EC35  F023         	call	_Lcd_Cmd
 12131                           
 12132                           ;MainCode.c: 566:         Lcd_Write_Char(a[i]);
 12133  003D28  0100               	movlb	0	; () banked
 12134  003D2A  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 12135  003D2C  EC35  F023         	call	_Lcd_Cmd
 12136                           
 12137                           ;MainCode.c: 567: }
 12138  003D30  0012               	return	
 12139  003D32                     l5435:
 12140                           
 12141                           ; BSR set to: 0
 12142  003D32  0E03               	movlw	3
 12143  003D34  1964               	xorwf	Lcd_Set_Cursor@a& (0+255),w,b
 12144  003D36  A4D8               	btfss	status,2,c
 12145  003D38  D011               	goto	l5443
 12146                           
 12147                           ; BSR set to: 0
 12148                           ;MainCode.c: 568: 
 12149  003D3A  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 12150  003D3C  0F93               	addlw	147
 12151  003D3E  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 12152                           
 12153                           ;MainCode.c: 569: void Lcd_Shift_Right() {
 12154  003D40  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 12155  003D42  0B0F               	andlw	15
 12156  003D44  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 12157                           
 12158                           ;MainCode.c: 570:     Lcd_Cmd(0x01);
 12159  003D46  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 12160  003D48  0B0F               	andlw	15
 12161  003D4A  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 12162                           
 12163                           ; BSR set to: 0
 12164                           ;MainCode.c: 571:     Lcd_Cmd(0x0C);
 12165  003D4C  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 12166  003D4E  EC35  F023         	call	_Lcd_Cmd
 12167                           
 12168                           ;MainCode.c: 572: }
 12169  003D52  0100               	movlb	0	; () banked
 12170  003D54  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 12171  003D56  EC35  F023         	call	_Lcd_Cmd
 12172                           
 12173                           ;MainCode.c: 573: 
 12174  003D5A  0012               	return	
 12175  003D5C                     l5443:
 12176                           
 12177                           ; BSR set to: 0
 12178  003D5C  0E04               	movlw	4
 12179  003D5E  1964               	xorwf	Lcd_Set_Cursor@a& (0+255),w,b
 12180  003D60  A4D8               	btfss	status,2,c
 12181  003D62  0012               	return	
 12182                           
 12183                           ; BSR set to: 0
 12184                           ;MainCode.c: 574: void Lcd_Shift_Left() {
 12185  003D64  5163               	movf	Lcd_Set_Cursor@b& (0+255),w,b
 12186  003D66  0FD3               	addlw	211
 12187  003D68  6F67               	movwf	Lcd_Set_Cursor@temp& (0+255),b
 12188                           
 12189                           ;MainCode.c: 575:     Lcd_Cmd(0x01);
 12190  003D6A  3967               	swapf	Lcd_Set_Cursor@temp& (0+255),w,b
 12191  003D6C  0B0F               	andlw	15
 12192  003D6E  6F65               	movwf	Lcd_Set_Cursor@z& (0+255),b
 12193                           
 12194                           ;MainCode.c: 576:     Lcd_Cmd(0x08);
 12195  003D70  5167               	movf	Lcd_Set_Cursor@temp& (0+255),w,b
 12196  003D72  0B0F               	andlw	15
 12197  003D74  6F66               	movwf	Lcd_Set_Cursor@y& (0+255),b
 12198                           
 12199                           ; BSR set to: 0
 12200                           ;MainCode.c: 577: }
 12201  003D76  5165               	movf	Lcd_Set_Cursor@z& (0+255),w,b
 12202  003D78  EC35  F023         	call	_Lcd_Cmd
 12203                           
 12204                           ;MainCode.c: 578: 
 12205  003D7C  0100               	movlb	0	; () banked
 12206  003D7E  5166               	movf	Lcd_Set_Cursor@y& (0+255),w,b
 12207  003D80  EC35  F023         	call	_Lcd_Cmd
 12208  003D84  0012               	return	
 12209  003D86                     __end_of_Lcd_Set_Cursor:
 12210                           	opt callstack 0
 12211                           
 12212 ;; *************** function _Lcd_Init *****************
 12213 ;; Defined at:
 12214 ;;		line 582 in file "MainCode.c"
 12215 ;; Parameters:    Size  Location     Type
 12216 ;;		None
 12217 ;; Auto vars:     Size  Location     Type
 12218 ;;		None
 12219 ;; Return value:  Size  Location     Type
 12220 ;;                  1    wreg      void 
 12221 ;; Registers used:
 12222 ;;		wreg, status,2, cstack
 12223 ;; Tracked objects:
 12224 ;;		On entry : 0/0
 12225 ;;		On exit  : 0/0
 12226 ;;		Unchanged: 0/0
 12227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12228 ;;      Params:         0       0       0       0       0       0       0       0       0
 12229 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12230 ;;      Temps:          0       2       0       0       0       0       0       0       0
 12231 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12232 ;;Total ram usage:        2 bytes
 12233 ;; Hardware stack levels used:    1
 12234 ;; Hardware stack levels required when called:    5
 12235 ;; This function calls:
 12236 ;;		_Lcd_Cmd
 12237 ;;		_Lcd_Port
 12238 ;; This function is called by:
 12239 ;;		_main
 12240 ;; This function uses a non-reentrant model
 12241 ;;
 12242                           
 12243                           	psect	text40
 12244  003E30                     __ptext40:
 12245                           	opt callstack 0
 12246  003E30                     _Lcd_Init:
 12247                           	opt callstack 25
 12248                           
 12249                           ;MainCode.c: 583:     switch (tick_count) {
 12250                           
 12251                           ;incstack = 0
 12252  003E30  0E00               	movlw	0
 12253  003E32  6EC4               	movwf	16324,c	;volatile
 12254                           
 12255                           ;MainCode.c: 584:         case 0:
 12256  003E34  90C3               	bcf	16323,0,c	;volatile
 12257                           
 12258                           ;MainCode.c: 585:             Lcd_Set_Cursor(3, 2);
 12259  003E36  013A               	movlb	58	; () banked
 12260  003E38  9150               	bcf	80,0,b	;volatile
 12261                           
 12262                           ; BSR set to: 58
 12263                           ;MainCode.c: 586:             Lcd_Write_String("|Yes|");
 12264  003E3A  80CB               	bsf	16331,0,c	;volatile
 12265                           
 12266                           ;MainCode.c: 587:             Lcd_Set_Cursor(4, 2);
 12267  003E3C  0E00               	movlw	0
 12268  003E3E  6F60               	movwf	96,b	;volatile
 12269                           
 12270                           ; BSR set to: 58
 12271                           ;MainCode.c: 588:             Lcd_Write_String(" No ");
 12272  003E40  0E00               	movlw	0
 12273  003E42  EC1D  F023         	call	_Lcd_Port
 12274                           
 12275                           ;MainCode.c: 590:         case 1:
 12276  003E46  0E02               	movlw	2
 12277  003E48  0100               	movlb	0	; () banked
 12278  003E4A  6F64               	movwf	(??_Lcd_Init+1)& (0+255),b
 12279  003E4C  0EA0               	movlw	160
 12280  003E4E  6F63               	movwf	??_Lcd_Init& (0+255),b
 12281  003E50  0E92               	movlw	146
 12282  003E52                     u7797:
 12283  003E52  2EE8               	decfsz	wreg,f,c
 12284  003E54  D7FE               	bra	u7797
 12285  003E56  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
 12286  003E58  D7FC               	bra	u7797
 12287  003E5A  2F64               	decfsz	(??_Lcd_Init+1)& (0+255),f,b
 12288  003E5C  D7FA               	bra	u7797
 12289  003E5E  F000               	nop	
 12290                           
 12291                           ;MainCode.c: 591:             Lcd_Set_Cursor(3, 2);
 12292  003E60  0E03               	movlw	3
 12293  003E62  EC35  F023         	call	_Lcd_Cmd
 12294                           
 12295                           ;MainCode.c: 592:             Lcd_Write_String(" Yes ");
 12296  003E66  0E68               	movlw	104
 12297  003E68  0100               	movlb	0	; () banked
 12298  003E6A  6F63               	movwf	??_Lcd_Init& (0+255),b
 12299  003E6C  0EE4               	movlw	228
 12300  003E6E                     u7807:
 12301  003E6E  2EE8               	decfsz	wreg,f,c
 12302  003E70  D7FE               	bra	u7807
 12303  003E72  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
 12304  003E74  D7FC               	bra	u7807
 12305  003E76  F000               	nop	
 12306                           
 12307                           ;MainCode.c: 593:             Lcd_Set_Cursor(4, 2);
 12308  003E78  0E03               	movlw	3
 12309  003E7A  EC35  F023         	call	_Lcd_Cmd
 12310                           
 12311                           ;MainCode.c: 594:             Lcd_Write_String("|No|");
 12312  003E7E  0EE5               	movlw	229
 12313  003E80  0100               	movlb	0	; () banked
 12314  003E82  6F63               	movwf	??_Lcd_Init& (0+255),b
 12315  003E84  0E91               	movlw	145
 12316  003E86                     u7817:
 12317  003E86  2EE8               	decfsz	wreg,f,c
 12318  003E88  D7FE               	bra	u7817
 12319  003E8A  2F63               	decfsz	??_Lcd_Init& (0+255),f,b
 12320  003E8C  D7FC               	bra	u7817
 12321                           
 12322                           ;MainCode.c: 595:             break;
 12323  003E8E  0E03               	movlw	3
 12324  003E90  EC35  F023         	call	_Lcd_Cmd
 12325                           
 12326                           ;MainCode.c: 596:         default:
 12327  003E94  0E02               	movlw	2
 12328  003E96  EC35  F023         	call	_Lcd_Cmd
 12329                           
 12330                           ;MainCode.c: 597:             Lcd_Set_Cursor(3, 1);
 12331  003E9A  0E02               	movlw	2
 12332  003E9C  EC35  F023         	call	_Lcd_Cmd
 12333                           
 12334                           ;MainCode.c: 598:             Lcd_Write_String("Error");
 12335  003EA0  0E08               	movlw	8
 12336  003EA2  EC35  F023         	call	_Lcd_Cmd
 12337                           
 12338                           ;MainCode.c: 599:             break;
 12339  003EA6  0E00               	movlw	0
 12340  003EA8  EC35  F023         	call	_Lcd_Cmd
 12341                           
 12342                           ;MainCode.c: 600:     }
 12343  003EAC  0E0C               	movlw	12
 12344  003EAE  EC35  F023         	call	_Lcd_Cmd
 12345                           
 12346                           ;MainCode.c: 601: }
 12347  003EB2  0E00               	movlw	0
 12348  003EB4  EC35  F023         	call	_Lcd_Cmd
 12349  003EB8  0E06               	movlw	6
 12350  003EBA  EC35  F023         	call	_Lcd_Cmd
 12351  003EBE  0012               	return		;funcret
 12352  003EC0                     __end_of_Lcd_Init:
 12353                           	opt callstack 0
 12354                           
 12355 ;; *************** function _Lcd_Clear *****************
 12356 ;; Defined at:
 12357 ;;		line 548 in file "MainCode.c"
 12358 ;; Parameters:    Size  Location     Type
 12359 ;;		None
 12360 ;; Auto vars:     Size  Location     Type
 12361 ;;		None
 12362 ;; Return value:  Size  Location     Type
 12363 ;;                  1    wreg      void 
 12364 ;; Registers used:
 12365 ;;		wreg, status,2, cstack
 12366 ;; Tracked objects:
 12367 ;;		On entry : 0/0
 12368 ;;		On exit  : 0/0
 12369 ;;		Unchanged: 0/0
 12370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12371 ;;      Params:         0       0       0       0       0       0       0       0       0
 12372 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12373 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12374 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12375 ;;Total ram usage:        0 bytes
 12376 ;; Hardware stack levels used:    1
 12377 ;; Hardware stack levels required when called:    5
 12378 ;; This function calls:
 12379 ;;		_Lcd_Cmd
 12380 ;; This function is called by:
 12381 ;;		_main
 12382 ;; This function uses a non-reentrant model
 12383 ;;
 12384                           
 12385                           	psect	text41
 12386  004690                     __ptext41:
 12387                           	opt callstack 0
 12388  004690                     _Lcd_Clear:
 12389                           	opt callstack 25
 12390                           
 12391                           ;MainCode.c: 549:     char temp, y;
 12392                           
 12393                           ;incstack = 0
 12394  004690  0E00               	movlw	0
 12395  004692  EC35  F023         	call	_Lcd_Cmd
 12396                           
 12397                           ;MainCode.c: 550:     temp = a & 0x0F;
 12398  004696  0E01               	movlw	1
 12399  004698  EC35  F023         	call	_Lcd_Cmd
 12400  00469C  0012               	return		;funcret
 12401  00469E                     __end_of_Lcd_Clear:
 12402                           	opt callstack 0
 12403                           
 12404 ;; *************** function _Lcd_Cmd *****************
 12405 ;; Defined at:
 12406 ;;		line 540 in file "MainCode.c"
 12407 ;; Parameters:    Size  Location     Type
 12408 ;;  a               1    wreg     unsigned char 
 12409 ;; Auto vars:     Size  Location     Type
 12410 ;;  a               1    2[BANK0 ] unsigned char 
 12411 ;; Return value:  Size  Location     Type
 12412 ;;                  1    wreg      void 
 12413 ;; Registers used:
 12414 ;;		wreg, status,2, cstack
 12415 ;; Tracked objects:
 12416 ;;		On entry : 0/0
 12417 ;;		On exit  : 0/0
 12418 ;;		Unchanged: 0/0
 12419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12420 ;;      Params:         0       0       0       0       0       0       0       0       0
 12421 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12422 ;;      Temps:          0       1       0       0       0       0       0       0       0
 12423 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12424 ;;Total ram usage:        2 bytes
 12425 ;; Hardware stack levels used:    1
 12426 ;; Hardware stack levels required when called:    4
 12427 ;; This function calls:
 12428 ;;		_Lcd_Port
 12429 ;; This function is called by:
 12430 ;;		_Lcd_Clear
 12431 ;;		_Lcd_Set_Cursor
 12432 ;;		_Lcd_Init
 12433 ;;		_Lcd_Shift_Right
 12434 ;;		_Lcd_Shift_Left
 12435 ;; This function uses a non-reentrant model
 12436 ;;
 12437                           
 12438                           	psect	text42
 12439  00466A                     __ptext42:
 12440                           	opt callstack 0
 12441  00466A                     _Lcd_Cmd:
 12442                           	opt callstack 24
 12443                           
 12444                           ;incstack = 0
 12445                           ;Lcd_Cmd@a stored from wreg
 12446  00466A  0100               	movlb	0	; () banked
 12447  00466C  6F62               	movwf	Lcd_Cmd@a& (0+255),b
 12448                           
 12449                           ;MainCode.c: 541:     Lcd_Cmd(0x00);
 12450  00466E  90CC               	bcf	16332,0,c	;volatile
 12451                           
 12452                           ;MainCode.c: 542:     Lcd_Cmd(0x0C);
 12453  004670  0100               	movlb	0	; () banked
 12454  004672  5162               	movf	Lcd_Cmd@a& (0+255),w,b
 12455  004674  EC1D  F023         	call	_Lcd_Port
 12456                           
 12457                           ;MainCode.c: 543:     Lcd_Cmd(0x00);
 12458  004678  82CC               	bsf	16332,1,c	;volatile
 12459                           
 12460                           ;MainCode.c: 544:     Lcd_Cmd(0x06);
 12461  00467A  0E54               	movlw	84
 12462  00467C  0100               	movlb	0	; () banked
 12463  00467E  6F61               	movwf	??_Lcd_Cmd& (0+255),b
 12464  004680  0E1C               	movlw	28
 12465  004682                     u7827:
 12466  004682  2EE8               	decfsz	wreg,f,c
 12467  004684  D7FE               	bra	u7827
 12468  004686  2F61               	decfsz	??_Lcd_Cmd& (0+255),f,b
 12469  004688  D7FC               	bra	u7827
 12470  00468A  F000               	nop	
 12471                           
 12472                           ;MainCode.c: 545: 
 12473  00468C  92CC               	bcf	16332,1,c	;volatile
 12474  00468E  0012               	return		;funcret
 12475  004690                     __end_of_Lcd_Cmd:
 12476                           	opt callstack 0
 12477                           
 12478 ;; *************** function _Lcd_Port *****************
 12479 ;; Defined at:
 12480 ;;		line 518 in file "MainCode.c"
 12481 ;; Parameters:    Size  Location     Type
 12482 ;;  a               1    wreg     unsigned char 
 12483 ;; Auto vars:     Size  Location     Type
 12484 ;;  a               1    0[BANK0 ] unsigned char 
 12485 ;; Return value:  Size  Location     Type
 12486 ;;                  1    wreg      void 
 12487 ;; Registers used:
 12488 ;;		wreg
 12489 ;; Tracked objects:
 12490 ;;		On entry : 0/0
 12491 ;;		On exit  : 0/0
 12492 ;;		Unchanged: 0/0
 12493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12494 ;;      Params:         0       0       0       0       0       0       0       0       0
 12495 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12496 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12497 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12498 ;;Total ram usage:        1 bytes
 12499 ;; Hardware stack levels used:    1
 12500 ;; Hardware stack levels required when called:    3
 12501 ;; This function calls:
 12502 ;;		Nothing
 12503 ;; This function is called by:
 12504 ;;		_Lcd_Cmd
 12505 ;;		_Lcd_Init
 12506 ;;		_Lcd_Write_Char
 12507 ;; This function uses a non-reentrant model
 12508 ;;
 12509                           
 12510                           	psect	text43
 12511  00463A                     __ptext43:
 12512                           	opt callstack 0
 12513  00463A                     _Lcd_Port:
 12514                           	opt callstack 24
 12515                           
 12516                           ;incstack = 0
 12517                           ;Lcd_Port@a stored from wreg
 12518  00463A  0100               	movlb	0	; () banked
 12519  00463C  6F60               	movwf	Lcd_Port@a& (0+255),b
 12520                           
 12521                           ;MainCode.c: 519:         Lcd_Cmd(z);
 12522  00463E  0100               	movlb	0	; () banked
 12523  004640  A160               	btfss	Lcd_Port@a& (0+255),0,b
 12524  004642  D002               	goto	l300
 12525                           
 12526                           ; BSR set to: 0
 12527                           ;MainCode.c: 520:         Lcd_Cmd(y);
 12528  004644  84CC               	bsf	16332,2,c	;volatile
 12529  004646  D001               	goto	l4837
 12530  004648                     l300:
 12531                           
 12532                           ; BSR set to: 0
 12533                           ;MainCode.c: 522: }
 12534  004648  94CC               	bcf	16332,2,c	;volatile
 12535  00464A                     l4837:
 12536                           
 12537                           ; BSR set to: 0
 12538                           ;MainCode.c: 524: void Lcd_Init(void) {
 12539  00464A  A360               	btfss	Lcd_Port@a& (0+255),1,b
 12540  00464C  D002               	goto	l302
 12541                           
 12542                           ; BSR set to: 0
 12543                           ;MainCode.c: 525:     TRISC = 0x00;
 12544  00464E  8ACC               	bsf	16332,5,c	;volatile
 12545  004650  D001               	goto	l4841
 12546  004652                     l302:
 12547                           
 12548                           ; BSR set to: 0
 12549                           ;MainCode.c: 527:     ANSELBbits.ANSELB0 = 0;
 12550  004652  9ACC               	bcf	16332,5,c	;volatile
 12551  004654                     l4841:
 12552                           
 12553                           ; BSR set to: 0
 12554                           ;MainCode.c: 529:     ANSELC = 0x00;
 12555  004654  A560               	btfss	Lcd_Port@a& (0+255),2,b
 12556  004656  D002               	goto	l304
 12557                           
 12558                           ; BSR set to: 0
 12559                           ;MainCode.c: 530:     Lcd_Port(0x00);
 12560  004658  8CCC               	bsf	16332,6,c	;volatile
 12561  00465A  D001               	goto	l4845
 12562  00465C                     l304:
 12563                           
 12564                           ; BSR set to: 0
 12565                           ;MainCode.c: 532:     _delay((unsigned long)((20)*(64000000/4000.0)));
 12566  00465C  9CCC               	bcf	16332,6,c	;volatile
 12567  00465E                     l4845:
 12568                           
 12569                           ; BSR set to: 0
 12570                           ;MainCode.c: 534:     _delay((unsigned long)((5)*(64000000/4000.0)));
 12571  00465E  A760               	btfss	Lcd_Port@a& (0+255),3,b
 12572  004660  D002               	goto	l306
 12573                           
 12574                           ; BSR set to: 0
 12575                           ;MainCode.c: 535:     Lcd_Cmd(0x03);
 12576  004662  8ECC               	bsf	16332,7,c	;volatile
 12577  004664  0012               	return	
 12578  004666                     l306:
 12579                           
 12580                           ; BSR set to: 0
 12581                           ;MainCode.c: 537:     Lcd_Cmd(0x03);
 12582  004666  9ECC               	bcf	16332,7,c	;volatile
 12583                           
 12584                           ; BSR set to: 0
 12585  004668  0012               	return		;funcret
 12586  00466A                     __end_of_Lcd_Port:
 12587                           	opt callstack 0
 12588                           
 12589 ;; *************** function _buzzerInt *****************
 12590 ;; Defined at:
 12591 ;;		line 455 in file "MainCode.c"
 12592 ;; Parameters:    Size  Location     Type
 12593 ;;		None
 12594 ;; Auto vars:     Size  Location     Type
 12595 ;;		None
 12596 ;; Return value:  Size  Location     Type
 12597 ;;                  1    wreg      void 
 12598 ;; Registers used:
 12599 ;;		None
 12600 ;; Tracked objects:
 12601 ;;		On entry : 0/0
 12602 ;;		On exit  : 0/0
 12603 ;;		Unchanged: 0/0
 12604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12605 ;;      Params:         0       0       0       0       0       0       0       0       0
 12606 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12607 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12608 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12609 ;;Total ram usage:        0 bytes
 12610 ;; Hardware stack levels used:    1
 12611 ;; Hardware stack levels required when called:    2
 12612 ;; This function calls:
 12613 ;;		Nothing
 12614 ;; This function is called by:
 12615 ;;		Interrupt level 1
 12616 ;; This function uses a non-reentrant model
 12617 ;;
 12618                           
 12619                           	psect	text44
 12620  0046B0                     __ptext44:
 12621                           	opt callstack 0
 12622  0046B0                     _buzzerInt:
 12623                           	opt callstack 20
 12624                           
 12625                           ;MainCode.c: 456:     tick_count = 255;
 12626                           
 12627                           ; BSR set to: 0
 12628                           ;incstack = 0
 12629  0046B0  92CB               	bcf	16331,1,c	;volatile
 12630                           
 12631                           ;MainCode.c: 457:     PIR5bits.RXB1IF = 0;
 12632  0046B2  9EB8               	bcf	16312,7,c	;volatile
 12633                           
 12634                           ;MainCode.c: 458: }
 12635  0046B4  0139               	movlb	57	; () banked
 12636  0046B6  9FA3               	bcf	163,7,b	;volatile
 12637                           
 12638                           ; BSR set to: 57
 12639  0046B8  0011               	retfie		f
 12640  0046BA                     __end_of_buzzerInt:
 12641                           	opt callstack 0
 12642                           
 12643 ;; *************** function _encInt *****************
 12644 ;; Defined at:
 12645 ;;		line 461 in file "MainCode.c"
 12646 ;; Parameters:    Size  Location     Type
 12647 ;;		None
 12648 ;; Auto vars:     Size  Location     Type
 12649 ;;		None
 12650 ;; Return value:  Size  Location     Type
 12651 ;;                  1    wreg      void 
 12652 ;; Registers used:
 12653 ;;		wreg, status,2, status,0, cstack
 12654 ;; Tracked objects:
 12655 ;;		On entry : 0/0
 12656 ;;		On exit  : 0/0
 12657 ;;		Unchanged: 0/0
 12658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12659 ;;      Params:         0       0       0       0       0       0       0       0       0
 12660 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12661 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12662 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12663 ;;Total ram usage:        1 bytes
 12664 ;; Hardware stack levels used:    1
 12665 ;; Hardware stack levels required when called:    1
 12666 ;; This function calls:
 12667 ;;		_playBuzzer
 12668 ;; This function is called by:
 12669 ;;		Interrupt level 2
 12670 ;; This function uses a non-reentrant model
 12671 ;;
 12672                           
 12673                           	psect	text45
 12674  0043B0                     __ptext45:
 12675                           	opt callstack 0
 12676  0043B0                     _encInt:
 12677                           	opt callstack 20
 12678                           
 12679                           ;MainCode.c: 462:         PORTCbits.RC2 = 1;
 12680                           
 12681                           ; BSR set to: 57
 12682                           ;incstack = 0
 12683  0043B0  A0CA               	btfss	16330,0,c	;volatile
 12684  0043B2  D011               	goto	i2l6365
 12685                           
 12686                           ;MainCode.c: 463:     else
 12687  0043B4  0101               	movlb	1	; () banked
 12688  0043B6  5110               	movf	_tick_count& (0+255),w,b
 12689  0043B8  5C4F               	subwf	_min_tick_count,w,c
 12690  0043BA  5050               	movf	_min_tick_count+1,w,c
 12691  0043BC  0A80               	xorlw	128
 12692  0043BE  6E01               	movwf	??_encInt& (0+255),c
 12693  0043C0  5111               	movf	(_tick_count+1)& (0+255),w,b
 12694  0043C2  0A80               	xorlw	128
 12695  0043C4  5801               	subwfb	??_encInt& (0+255),w,c
 12696  0043C6  B0D8               	btfsc	status,0,c
 12697  0043C8  D014               	goto	i2l6371
 12698                           
 12699                           ; BSR set to: 1
 12700                           ;MainCode.c: 464:         PORTCbits.RC2 = 0;
 12701  0043CA  0710               	decf	_tick_count& (0+255),f,b
 12702  0043CC  A0D8               	btfss	status,0,c
 12703  0043CE  0711               	decf	(_tick_count+1)& (0+255),f,b
 12704  0043D0                     i2l6363:
 12705                           
 12706                           ; BSR set to: 1
 12707                           ;MainCode.c: 465: 
 12708  0043D0  EC5D  F023         	call	_playBuzzer	;wreg free
 12709  0043D4  D00E               	goto	i2l6371
 12710  0043D6                     i2l6365:
 12711                           
 12712                           ;MainCode.c: 468:     else
 12713  0043D6  505B               	movf	_max_tick_count,w,c
 12714  0043D8  0101               	movlb	1	; () banked
 12715  0043DA  5D10               	subwf	_tick_count& (0+255),w,b
 12716  0043DC  5111               	movf	(_tick_count+1)& (0+255),w,b
 12717  0043DE  0A80               	xorlw	128
 12718  0043E0  6E01               	movwf	??_encInt& (0+255),c
 12719  0043E2  505C               	movf	_max_tick_count+1,w,c
 12720  0043E4  0A80               	xorlw	128
 12721  0043E6  5801               	subwfb	??_encInt& (0+255),w,c
 12722  0043E8  B0D8               	btfsc	status,0,c
 12723  0043EA  D003               	goto	i2l6371
 12724                           
 12725                           ; BSR set to: 1
 12726                           ;MainCode.c: 469:         PORTCbits.RC5 = 0;
 12727  0043EC  4B10               	infsnz	_tick_count& (0+255),f,b
 12728  0043EE  2B11               	incf	(_tick_count+1)& (0+255),f,b
 12729  0043F0  D7EF               	goto	i2l6363
 12730  0043F2                     i2l6371:
 12731                           
 12732                           ;MainCode.c: 473:     else
 12733  0043F2  0139               	movlb	57	; () banked
 12734  0043F4  91A1               	bcf	161,0,b	;volatile
 12735                           
 12736                           ; BSR set to: 57
 12737  0043F6  0011               	retfie		f
 12738  0043F8                     __end_of_encInt:
 12739                           	opt callstack 0
 12740                           
 12741 ;; *************** function _playBuzzer *****************
 12742 ;; Defined at:
 12743 ;;		line 804 in file "MainCode.c"
 12744 ;; Parameters:    Size  Location     Type
 12745 ;;		None
 12746 ;; Auto vars:     Size  Location     Type
 12747 ;;		None
 12748 ;; Return value:  Size  Location     Type
 12749 ;;                  1    wreg      void 
 12750 ;; Registers used:
 12751 ;;		wreg, status,2
 12752 ;; Tracked objects:
 12753 ;;		On entry : 0/0
 12754 ;;		On exit  : 0/0
 12755 ;;		Unchanged: 0/0
 12756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12757 ;;      Params:         0       0       0       0       0       0       0       0       0
 12758 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12759 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12760 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12761 ;;Total ram usage:        0 bytes
 12762 ;; Hardware stack levels used:    1
 12763 ;; This function calls:
 12764 ;;		Nothing
 12765 ;; This function is called by:
 12766 ;;		_encInt
 12767 ;; This function uses a non-reentrant model
 12768 ;;
 12769                           
 12770                           	psect	text46
 12771  0046BA                     __ptext46:
 12772                           	opt callstack 0
 12773  0046BA                     _playBuzzer:
 12774                           	opt callstack 20
 12775                           
 12776                           ;MainCode.c: 805:     PORTBbits.RB1 = 1;
 12777                           
 12778                           ; BSR set to: 57
 12779                           ;incstack = 0
 12780  0046BA  82CB               	bsf	16331,1,c	;volatile
 12781                           
 12782                           ;MainCode.c: 806:     T0CON0bits.EN = 1;
 12783  0046BC  8EB8               	bsf	16312,7,c	;volatile
 12784                           
 12785                           ;MainCode.c: 807:     TMR0L = 0;
 12786  0046BE  0E00               	movlw	0
 12787  0046C0  6EB6               	movwf	16310,c	;volatile
 12788  0046C2  0012               	return		;funcret
 12789  0046C4                     __end_of_playBuzzer:
 12790                           	opt callstack 0
 12791                           
 12792 ;; *************** function _adcInt *****************
 12793 ;; Defined at:
 12794 ;;		line 476 in file "MainCode.c"
 12795 ;; Parameters:    Size  Location     Type
 12796 ;;		None
 12797 ;; Auto vars:     Size  Location     Type
 12798 ;;		None
 12799 ;; Return value:  Size  Location     Type
 12800 ;;                  1    wreg      void 
 12801 ;; Registers used:
 12802 ;;		None
 12803 ;; Tracked objects:
 12804 ;;		On entry : 0/0
 12805 ;;		On exit  : 0/0
 12806 ;;		Unchanged: 0/0
 12807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12808 ;;      Params:         0       0       0       0       0       0       0       0       0
 12809 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12810 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12811 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12812 ;;Total ram usage:        0 bytes
 12813 ;; Hardware stack levels used:    1
 12814 ;; This function calls:
 12815 ;;		Nothing
 12816 ;; This function is called by:
 12817 ;;		Interrupt level 2
 12818 ;; This function uses a non-reentrant model
 12819 ;;
 12820                           
 12821                           	psect	text47
 12822  0046D0                     __ptext47:
 12823                           	opt callstack 0
 12824  0046D0                     _adcInt:
 12825                           	opt callstack 21
 12826                           
 12827                           ;incstack = 0
 12828  0046D0  0011               	retfie		f
 12829  0046D2                     __end_of_adcInt:
 12830                           	opt callstack 0
 12831                           
 12832 ;; *************** function _canRecInt2 *****************
 12833 ;; Defined at:
 12834 ;;		line 482 in file "MainCode.c"
 12835 ;; Parameters:    Size  Location     Type
 12836 ;;		None
 12837 ;; Auto vars:     Size  Location     Type
 12838 ;;  message        16   58[COMRAM] int [8]
 12839 ;; Return value:  Size  Location     Type
 12840 ;;                  1    wreg      void 
 12841 ;; Registers used:
 12842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12843 ;; Tracked objects:
 12844 ;;		On entry : 0/0
 12845 ;;		On exit  : 0/0
 12846 ;;		Unchanged: 0/0
 12847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12848 ;;      Params:         0       0       0       0       0       0       0       0       0
 12849 ;;      Locals:        16       0       0       0       0       0       0       0       0
 12850 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12851 ;;      Totals:        18       0       0       0       0       0       0       0       0
 12852 ;;Total ram usage:       18 bytes
 12853 ;; Hardware stack levels used:    1
 12854 ;; Hardware stack levels required when called:    1
 12855 ;; This function calls:
 12856 ;;		___xxtofl
 12857 ;;		_sendCANmessage
 12858 ;;		i2___fladd
 12859 ;;		i2___fldiv
 12860 ;; This function is called by:
 12861 ;;		Interrupt level 2
 12862 ;; This function uses a non-reentrant model
 12863 ;;
 12864                           
 12865                           	psect	text48
 12866  00340C                     __ptext48:
 12867                           	opt callstack 0
 12868  00340C                     _canRecInt2:
 12869                           	opt callstack 20
 12870                           
 12871                           ;MainCode.c: 483:     PORTCbits.RC0 = 0;
 12872                           
 12873                           ;incstack = 0
 12874  00340C  BE80               	btfsc	16256,7,c	;volatile
 12875  00340E  D082               	goto	i2l6389
 12876  003410  D09C               	goto	i2l283
 12877  003412                     i2l285:
 12878                           
 12879                           ;MainCode.c: 487:     PORTCbits.RC1 = 0;
 12880  003412  0060  F164  F03B   	movff	_status,canRecInt2@message
 12881  003418  0060  F168  F03C   	movff	_status+1,canRecInt2@message+1
 12882                           
 12883                           ;MainCode.c: 488: }
 12884  00341E  0E00               	movlw	0
 12885  003420  6E03               	movwf	sendCANmessage@id+1,c
 12886  003422  0E00               	movlw	0
 12887  003424  6E02               	movwf	sendCANmessage@id,c
 12888  003426  0E3B               	movlw	low canRecInt2@message
 12889  003428  6E04               	movwf	sendCANmessage@message,c
 12890  00342A  0E00               	movlw	high canRecInt2@message
 12891  00342C  6E05               	movwf	sendCANmessage@message+1,c
 12892  00342E  0E00               	movlw	0
 12893  003430  6E07               	movwf	sendCANmessage@length+1,c
 12894  003432  0E01               	movlw	1
 12895  003434  6E06               	movwf	sendCANmessage@length,c
 12896  003436  ECBA  F01B         	call	_sendCANmessage	;wreg free
 12897                           
 12898                           ;MainCode.c: 489: 
 12899  00343A  D086               	goto	i2l286
 12900  00343C                     i2l287:
 12901                           
 12902                           ;MainCode.c: 491:     Lcd_Cmd(0);
 12903  00343C  006F FE1C  F10E    	movff	16263,_feedback	;volatile
 12904  003442  0101               	movlb	1	; () banked
 12905  003444  6B0F               	clrf	(_feedback+1)& (0+255),b
 12906                           
 12907                           ;MainCode.c: 492:     Lcd_Cmd(1);
 12908  003446  D080               	goto	i2l286
 12909  003448                     i2l6379:
 12910                           
 12911                           ;MainCode.c: 494: 
 12912  003448  0E00               	movlw	0
 12913  00344A  0101               	movlb	1	; () banked
 12914  00344C  6FBC               	movwf	(_enter_state+1)& (0+255),b
 12915  00344E  0E01               	movlw	1
 12916  003450  6FBB               	movwf	_enter_state& (0+255),b
 12917                           
 12918                           ; BSR set to: 1
 12919                           ;MainCode.c: 495: void Lcd_Set_Cursor(char a, char b) {
 12920  003452  006F FE1C  F112    	movff	16263,_state	;volatile
 12921                           
 12922                           ; BSR set to: 1
 12923                           ;MainCode.c: 496:     char temp, z, y;
 12924  003458  0060  F448  F059   	movff	_state,_status
 12925  00345E  6A5A               	clrf	_status+1,c
 12926                           
 12927                           ;MainCode.c: 497:     if (a == 1) {
 12928  003460  D073               	goto	i2l286
 12929  003462                     i2l289:
 12930                           
 12931                           ;MainCode.c: 499:         z = temp >> 4;
 12932  003462  006F FE1C  F10C    	movff	16263,_master_state	;volatile
 12933  003468  0101               	movlb	1	; () banked
 12934  00346A  6B0D               	clrf	(_master_state+1)& (0+255),b
 12935                           
 12936                           ;MainCode.c: 500:         y = temp & 0x0F;
 12937  00346C  D06D               	goto	i2l286
 12938  00346E                     i2l290:
 12939                           
 12940                           ;MainCode.c: 502:         Lcd_Cmd(y);
 12941  00346E  006F FE1C  F1B9    	movff	16263,_charging_state	;volatile
 12942  003474  0101               	movlb	1	; () banked
 12943  003476  6BBA               	clrf	(_charging_state+1)& (0+255),b
 12944                           
 12945                           ;MainCode.c: 503:     } else if (a == 2) {
 12946  003478  D067               	goto	i2l286
 12947  00347A                     i2l6385:
 12948                           
 12949                           ;MainCode.c: 505:         z = temp >> 4;
 12950  00347A  5087               	movf	16263,w,c	;volatile
 12951  00347C  6E02               	movwf	___xxtofl@val,c
 12952  00347E  6A03               	clrf	___xxtofl@val+1,c
 12953  003480  6A04               	clrf	___xxtofl@val+2,c
 12954  003482  6A05               	clrf	___xxtofl@val+3,c
 12955  003484  0E01               	movlw	1
 12956  003486  ECA6  F018         	call	___xxtofl
 12957  00348A  0060  F008  F029   	movff	?___xxtofl,i2___fladd@b
 12958  003490  0060  F00C  F02A   	movff	?___xxtofl+1,i2___fladd@b+1
 12959  003496  0060  F010  F02B   	movff	?___xxtofl+2,i2___fladd@b+2
 12960  00349C  0060  F014  F02C   	movff	?___xxtofl+3,i2___fladd@b+3
 12961  0034A2  0E00               	movlw	0
 12962  0034A4  6E14               	movwf	i2___fldiv@a,c
 12963  0034A6  0E00               	movlw	0
 12964  0034A8  6E15               	movwf	i2___fldiv@a+1,c
 12965  0034AA  0EC8               	movlw	200
 12966  0034AC  6E16               	movwf	i2___fldiv@a+2,c
 12967  0034AE  0E42               	movlw	66
 12968  0034B0  6E17               	movwf	i2___fldiv@a+3,c
 12969  0034B2  5088               	movf	16264,w,c	;volatile
 12970  0034B4  6E02               	movwf	___xxtofl@val,c
 12971  0034B6  6A03               	clrf	___xxtofl@val+1,c
 12972  0034B8  6A04               	clrf	___xxtofl@val+2,c
 12973  0034BA  6A05               	clrf	___xxtofl@val+3,c
 12974  0034BC  0E01               	movlw	1
 12975  0034BE  ECA6  F018         	call	___xxtofl
 12976  0034C2  0060  F008  F010   	movff	?___xxtofl,i2___fldiv@b
 12977  0034C8  0060  F00C  F011   	movff	?___xxtofl+1,i2___fldiv@b+1
 12978  0034CE  0060  F010  F012   	movff	?___xxtofl+2,i2___fldiv@b+2
 12979  0034D4  0060  F014  F013   	movff	?___xxtofl+3,i2___fldiv@b+3
 12980  0034DA  ECE9  F014         	call	i2___fldiv	;wreg free
 12981  0034DE  0060  F040  F02D   	movff	?i2___fldiv,i2___fladd@a
 12982  0034E4  0060  F044  F02E   	movff	?i2___fldiv+1,i2___fladd@a+1
 12983  0034EA  0060  F048  F02F   	movff	?i2___fldiv+2,i2___fladd@a+2
 12984  0034F0  0060  F04C  F030   	movff	?i2___fldiv+3,i2___fladd@a+3
 12985  0034F6  EC95  F010         	call	i2___fladd	;wreg free
 12986  0034FA  0060  F0A4  F108   	movff	?i2___fladd,_charging_voltage
 12987  003500  0060  F0A8  F109   	movff	?i2___fladd+1,_charging_voltage+1
 12988  003506  0060  F0AC  F10A   	movff	?i2___fladd+2,_charging_voltage+2
 12989  00350C  0060  F0B0  F10B   	movff	?i2___fladd+3,_charging_voltage+3
 12990                           
 12991                           ;MainCode.c: 506:         y = temp & 0x0F;
 12992  003512  D01A               	goto	i2l286
 12993  003514                     i2l6389:
 12994  003514  5086               	movf	16262,w,c	;volatile
 12995  003516  6E39               	movwf	??_canRecInt2& (0+255),c
 12996  003518  6A3A               	clrf	(??_canRecInt2+1)& (0+255),c
 12997                           
 12998                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12999                           ; Switch size 1, requested type "simple"
 13000                           ; Number of cases is 1, Range of values is 0 to 0
 13001                           ; switch strategies available:
 13002                           ; Name         Instructions Cycles
 13003                           ; simple_byte            4     3 (average)
 13004                           ;	Chosen strategy is simple_byte
 13005  00351A  503A               	movf	??_canRecInt2+1,w,c
 13006  00351C  0A00               	xorlw	0	; case 0
 13007  00351E  A4D8               	btfss	status,2,c
 13008  003520  D013               	goto	i2l286
 13009                           
 13010                           ; Switch size 1, requested type "simple"
 13011                           ; Number of cases is 6, Range of values is 0 to 5
 13012                           ; switch strategies available:
 13013                           ; Name         Instructions Cycles
 13014                           ; simple_byte           19    10 (average)
 13015                           ;	Chosen strategy is simple_byte
 13016  003522  5039               	movf	??_canRecInt2,w,c
 13017  003524  0A00               	xorlw	0	; case 0
 13018  003526  B4D8               	btfsc	status,2,c
 13019  003528  D774               	goto	i2l285
 13020  00352A  0A01               	xorlw	1	; case 1
 13021  00352C  B4D8               	btfsc	status,2,c
 13022  00352E  D786               	goto	i2l287
 13023  003530  0A03               	xorlw	3	; case 2
 13024  003532  B4D8               	btfsc	status,2,c
 13025  003534  D789               	goto	i2l6379
 13026  003536  0A01               	xorlw	1	; case 3
 13027  003538  B4D8               	btfsc	status,2,c
 13028  00353A  D793               	goto	i2l289
 13029  00353C  0A07               	xorlw	7	; case 4
 13030  00353E  B4D8               	btfsc	status,2,c
 13031  003540  D796               	goto	i2l290
 13032  003542  0A01               	xorlw	1	; case 5
 13033  003544  B4D8               	btfsc	status,2,c
 13034  003546  D799               	goto	i2l6385
 13035  003548                     i2l286:
 13036                           
 13037                           ;MainCode.c: 508:         Lcd_Cmd(y);
 13038  003548  9E80               	bcf	16256,7,c	;volatile
 13039  00354A                     i2l283:
 13040                           
 13041                           ;MainCode.c: 510:         temp = 0x94 + b - 1;
 13042  00354A  0139               	movlb	57	; () banked
 13043  00354C  91A5               	bcf	165,0,b	;volatile
 13044                           
 13045                           ; BSR set to: 57
 13046  00354E  0011               	retfie		f
 13047  003550                     __end_of_canRecInt2:
 13048                           	opt callstack 0
 13049                           
 13050 ;; *************** function i2___fldiv *****************
 13051 ;; Defined at:
 13052 ;;		line 11 in file "D:\MPLAB\pic\sources\c99\common\sprcdiv.c"
 13053 ;; Parameters:    Size  Location     Type
 13054 ;;  b               4   15[COMRAM] void 
 13055 ;;  a               4   19[COMRAM] void 
 13056 ;; Auto vars:     Size  Location     Type
 13057 ;;  __fldiv         4   34[COMRAM] unsigned long 
 13058 ;;  __fldiv         4   27[COMRAM] unsigned long 
 13059 ;;  __fldiv         2   32[COMRAM] short 
 13060 ;;  __fldiv         1   39[COMRAM] unsigned char 
 13061 ;;  __fldiv         1   38[COMRAM] unsigned char 
 13062 ;;  __fldiv         1   31[COMRAM] unsigned char 
 13063 ;; Return value:  Size  Location     Type
 13064 ;;                  4   15[COMRAM] unsigned char 
 13065 ;; Registers used:
 13066 ;;		wreg, status,2, status,0
 13067 ;; Tracked objects:
 13068 ;;		On entry : 0/0
 13069 ;;		On exit  : 0/0
 13070 ;;		Unchanged: 0/0
 13071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13072 ;;      Params:         8       0       0       0       0       0       0       0       0
 13073 ;;      Locals:        13       0       0       0       0       0       0       0       0
 13074 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13075 ;;      Totals:        25       0       0       0       0       0       0       0       0
 13076 ;;Total ram usage:       25 bytes
 13077 ;; Hardware stack levels used:    1
 13078 ;; This function calls:
 13079 ;;		Nothing
 13080 ;; This function is called by:
 13081 ;;		_canRecInt2
 13082 ;; This function uses a non-reentrant model
 13083 ;;
 13084                           
 13085                           	psect	text49
 13086  0029D2                     __ptext49:
 13087                           	opt callstack 0
 13088  0029D2                     i2___fldiv:
 13089                           	opt callstack 20
 13090                           
 13091                           ; BSR set to: 57
 13092                           ;incstack = 0
 13093  0029D2  5013               	movf	i2___fldiv@b+3,w,c
 13094  0029D4  0B80               	andlw	128
 13095  0029D6  6E20               	movwf	i2___fldiv@sign,c
 13096  0029D8  5013               	movf	i2___fldiv@b+3,w,c
 13097  0029DA  2413               	addwf	i2___fldiv@b+3,w,c
 13098  0029DC  6E27               	movwf	i2___fldiv@bexp,c
 13099  0029DE  BE12               	btfsc	i2___fldiv@b+2,7,c
 13100  0029E0  8027               	bsf	i2___fldiv@bexp,0,c
 13101  0029E2  5027               	movf	i2___fldiv@bexp,w,c
 13102  0029E4  B4D8               	btfsc	status,2,c
 13103  0029E6  D00D               	goto	i2l5885
 13104  0029E8  2827               	incf	i2___fldiv@bexp,w,c
 13105  0029EA  A4D8               	btfss	status,2,c
 13106  0029EC  D008               	goto	i2l5881
 13107  0029EE  0E00               	movlw	0
 13108  0029F0  6E10               	movwf	i2___fldiv@b,c
 13109  0029F2  0E00               	movlw	0
 13110  0029F4  6E11               	movwf	i2___fldiv@b+1,c
 13111  0029F6  0E00               	movlw	0
 13112  0029F8  6E12               	movwf	i2___fldiv@b+2,c
 13113  0029FA  0E00               	movlw	0
 13114  0029FC  6E13               	movwf	i2___fldiv@b+3,c
 13115  0029FE                     i2l5881:
 13116  0029FE  8E12               	bsf	i2___fldiv@b+2,7,c
 13117  002A00  D006               	goto	L18
 13118  002A02                     i2l5885:
 13119  002A02  0E00               	movlw	0
 13120  002A04  6E10               	movwf	i2___fldiv@b,c
 13121  002A06  0E00               	movlw	0
 13122  002A08  6E11               	movwf	i2___fldiv@b+1,c
 13123  002A0A  0E00               	movlw	0
 13124  002A0C  6E12               	movwf	i2___fldiv@b+2,c
 13125  002A0E                     L18:
 13126  002A0E  0E00               	movlw	0
 13127  002A10  6E13               	movwf	i2___fldiv@b+3,c
 13128  002A12  5017               	movf	i2___fldiv@a+3,w,c
 13129  002A14  0B80               	andlw	128
 13130  002A16  1A20               	xorwf	i2___fldiv@sign,f,c
 13131  002A18  5017               	movf	i2___fldiv@a+3,w,c
 13132  002A1A  2417               	addwf	i2___fldiv@a+3,w,c
 13133  002A1C  6E28               	movwf	i2___fldiv@aexp,c
 13134  002A1E  BE16               	btfsc	i2___fldiv@a+2,7,c
 13135  002A20  8028               	bsf	i2___fldiv@aexp,0,c
 13136  002A22  5028               	movf	i2___fldiv@aexp,w,c
 13137  002A24  B4D8               	btfsc	status,2,c
 13138  002A26  D00D               	goto	i2l5905
 13139  002A28  2828               	incf	i2___fldiv@aexp,w,c
 13140  002A2A  A4D8               	btfss	status,2,c
 13141  002A2C  D008               	goto	i2l5901
 13142  002A2E  0E00               	movlw	0
 13143  002A30  6E14               	movwf	i2___fldiv@a,c
 13144  002A32  0E00               	movlw	0
 13145  002A34  6E15               	movwf	i2___fldiv@a+1,c
 13146  002A36  0E00               	movlw	0
 13147  002A38  6E16               	movwf	i2___fldiv@a+2,c
 13148  002A3A  0E00               	movlw	0
 13149  002A3C  6E17               	movwf	i2___fldiv@a+3,c
 13150  002A3E                     i2l5901:
 13151  002A3E  8E16               	bsf	i2___fldiv@a+2,7,c
 13152  002A40  D006               	goto	L19
 13153  002A42                     i2l5905:
 13154  002A42  0E00               	movlw	0
 13155  002A44  6E14               	movwf	i2___fldiv@a,c
 13156  002A46  0E00               	movlw	0
 13157  002A48  6E15               	movwf	i2___fldiv@a+1,c
 13158  002A4A  0E00               	movlw	0
 13159  002A4C  6E16               	movwf	i2___fldiv@a+2,c
 13160  002A4E                     L19:
 13161  002A4E  0E00               	movlw	0
 13162  002A50  6E17               	movwf	i2___fldiv@a+3,c
 13163  002A52  5014               	movf	i2___fldiv@a,w,c
 13164  002A54  1015               	iorwf	i2___fldiv@a+1,w,c
 13165  002A56  1016               	iorwf	i2___fldiv@a+2,w,c
 13166  002A58  1017               	iorwf	i2___fldiv@a+3,w,c
 13167  002A5A  A4D8               	btfss	status,2,c
 13168  002A5C  D01B               	goto	i2l5919
 13169  002A5E  0E00               	movlw	0
 13170  002A60  6E10               	movwf	i2___fldiv@b,c
 13171  002A62  0E00               	movlw	0
 13172  002A64  6E11               	movwf	i2___fldiv@b+1,c
 13173  002A66  0E00               	movlw	0
 13174  002A68  6E12               	movwf	i2___fldiv@b+2,c
 13175  002A6A  0E00               	movlw	0
 13176  002A6C  6E13               	movwf	i2___fldiv@b+3,c
 13177  002A6E  0E80               	movlw	128
 13178  002A70  1212               	iorwf	i2___fldiv@b+2,f,c
 13179  002A72  0E7F               	movlw	127
 13180  002A74  1213               	iorwf	i2___fldiv@b+3,f,c
 13181  002A76                     i2l5913:
 13182  002A76  5020               	movf	i2___fldiv@sign,w,c
 13183  002A78  1213               	iorwf	i2___fldiv@b+3,f,c
 13184  002A7A  0060  F040  F010   	movff	i2___fldiv@b,?i2___fldiv
 13185  002A80  0060  F044  F011   	movff	i2___fldiv@b+1,?i2___fldiv+1
 13186  002A86  0060  F048  F012   	movff	i2___fldiv@b+2,?i2___fldiv+2
 13187  002A8C  0060  F04C  F013   	movff	i2___fldiv@b+3,?i2___fldiv+3
 13188  002A92  0012               	return	
 13189  002A94                     i2l5919:
 13190  002A94  5027               	movf	i2___fldiv@bexp,w,c
 13191  002A96  A4D8               	btfss	status,2,c
 13192  002A98  D009               	goto	i2l5927
 13193  002A9A  0E00               	movlw	0
 13194  002A9C  6E10               	movwf	?i2___fldiv,c
 13195  002A9E  0E00               	movlw	0
 13196  002AA0  6E11               	movwf	?i2___fldiv+1,c
 13197  002AA2  0E00               	movlw	0
 13198  002AA4  6E12               	movwf	?i2___fldiv+2,c
 13199  002AA6  0E00               	movlw	0
 13200  002AA8  6E13               	movwf	?i2___fldiv+3,c
 13201  002AAA  0012               	return	
 13202  002AAC                     i2l5927:
 13203  002AAC  5028               	movf	i2___fldiv@aexp,w,c
 13204  002AAE  0060  F09C  F018   	movff	i2___fldiv@bexp,??i2___fldiv
 13205  002AB4  6A19               	clrf	(??i2___fldiv+1)& (0+255),c
 13206  002AB6  5E18               	subwf	??i2___fldiv,f,c
 13207  002AB8  0E00               	movlw	0
 13208  002ABA  5A19               	subwfb	??i2___fldiv+1,f,c
 13209  002ABC  0E7F               	movlw	127
 13210  002ABE  2418               	addwf	??i2___fldiv,w,c
 13211  002AC0  6E21               	movwf	i2___fldiv@new_exp,c
 13212  002AC2  0E00               	movlw	0
 13213  002AC4  2019               	addwfc	??i2___fldiv+1,w,c
 13214  002AC6  6E22               	movwf	i2___fldiv@new_exp+1,c
 13215  002AC8  0060  F040  F01C   	movff	i2___fldiv@b,i2___fldiv@rem
 13216  002ACE  0060  F044  F01D   	movff	i2___fldiv@b+1,i2___fldiv@rem+1
 13217  002AD4  0060  F048  F01E   	movff	i2___fldiv@b+2,i2___fldiv@rem+2
 13218  002ADA  0060  F04C  F01F   	movff	i2___fldiv@b+3,i2___fldiv@rem+3
 13219  002AE0  0E00               	movlw	0
 13220  002AE2  6E10               	movwf	i2___fldiv@b,c
 13221  002AE4  0E00               	movlw	0
 13222  002AE6  6E11               	movwf	i2___fldiv@b+1,c
 13223  002AE8  0E00               	movlw	0
 13224  002AEA  6E12               	movwf	i2___fldiv@b+2,c
 13225  002AEC  0E00               	movlw	0
 13226  002AEE  6E13               	movwf	i2___fldiv@b+3,c
 13227  002AF0  0E00               	movlw	0
 13228  002AF2  6E23               	movwf	i2___fldiv@grs,c
 13229  002AF4  0E00               	movlw	0
 13230  002AF6  6E24               	movwf	i2___fldiv@grs+1,c
 13231  002AF8  0E00               	movlw	0
 13232  002AFA  6E25               	movwf	i2___fldiv@grs+2,c
 13233  002AFC  0E00               	movlw	0
 13234  002AFE  6E26               	movwf	i2___fldiv@grs+3,c
 13235  002B00  0E00               	movlw	0
 13236  002B02  6E28               	movwf	i2___fldiv@aexp,c
 13237  002B04  D028               	goto	i2l1176
 13238  002B06                     i2l5937:
 13239  002B06  5028               	movf	i2___fldiv@aexp,w,c
 13240  002B08  B4D8               	btfsc	status,2,c
 13241  002B0A  D011               	goto	i2l5945
 13242  002B0C  90D8               	bcf	status,0,c
 13243  002B0E  361C               	rlcf	i2___fldiv@rem,f,c
 13244  002B10  361D               	rlcf	i2___fldiv@rem+1,f,c
 13245  002B12  361E               	rlcf	i2___fldiv@rem+2,f,c
 13246  002B14  361F               	rlcf	i2___fldiv@rem+3,f,c
 13247  002B16  90D8               	bcf	status,0,c
 13248  002B18  3610               	rlcf	i2___fldiv@b,f,c
 13249  002B1A  3611               	rlcf	i2___fldiv@b+1,f,c
 13250  002B1C  3612               	rlcf	i2___fldiv@b+2,f,c
 13251  002B1E  3613               	rlcf	i2___fldiv@b+3,f,c
 13252  002B20  BE26               	btfsc	i2___fldiv@grs+3,7,c
 13253  002B22  8010               	bsf	i2___fldiv@b,0,c
 13254  002B24  90D8               	bcf	status,0,c
 13255  002B26  3623               	rlcf	i2___fldiv@grs,f,c
 13256  002B28  3624               	rlcf	i2___fldiv@grs+1,f,c
 13257  002B2A  3625               	rlcf	i2___fldiv@grs+2,f,c
 13258  002B2C  3626               	rlcf	i2___fldiv@grs+3,f,c
 13259  002B2E                     i2l5945:
 13260  002B2E  5014               	movf	i2___fldiv@a,w,c
 13261  002B30  5C1C               	subwf	i2___fldiv@rem,w,c
 13262  002B32  5015               	movf	i2___fldiv@a+1,w,c
 13263  002B34  581D               	subwfb	i2___fldiv@rem+1,w,c
 13264  002B36  5016               	movf	i2___fldiv@a+2,w,c
 13265  002B38  581E               	subwfb	i2___fldiv@rem+2,w,c
 13266  002B3A  5017               	movf	i2___fldiv@a+3,w,c
 13267  002B3C  581F               	subwfb	i2___fldiv@rem+3,w,c
 13268  002B3E  A0D8               	btfss	status,0,c
 13269  002B40  D009               	goto	i2l5951
 13270  002B42  8C26               	bsf	i2___fldiv@grs+3,6,c
 13271  002B44  5014               	movf	i2___fldiv@a,w,c
 13272  002B46  5E1C               	subwf	i2___fldiv@rem,f,c
 13273  002B48  5015               	movf	i2___fldiv@a+1,w,c
 13274  002B4A  5A1D               	subwfb	i2___fldiv@rem+1,f,c
 13275  002B4C  5016               	movf	i2___fldiv@a+2,w,c
 13276  002B4E  5A1E               	subwfb	i2___fldiv@rem+2,f,c
 13277  002B50  5017               	movf	i2___fldiv@a+3,w,c
 13278  002B52  5A1F               	subwfb	i2___fldiv@rem+3,f,c
 13279  002B54                     i2l5951:
 13280  002B54  2A28               	incf	i2___fldiv@aexp,f,c
 13281  002B56                     i2l1176:
 13282  002B56  0E19               	movlw	25
 13283  002B58  6428               	cpfsgt	i2___fldiv@aexp,c
 13284  002B5A  D7D5               	goto	i2l5937
 13285  002B5C  501C               	movf	i2___fldiv@rem,w,c
 13286  002B5E  101D               	iorwf	i2___fldiv@rem+1,w,c
 13287  002B60  101E               	iorwf	i2___fldiv@rem+2,w,c
 13288  002B62  101F               	iorwf	i2___fldiv@rem+3,w,c
 13289  002B64  B4D8               	btfsc	status,2,c
 13290  002B66  D011               	goto	i2l5963
 13291  002B68  8023               	bsf	i2___fldiv@grs,0,c
 13292  002B6A  D00F               	goto	i2l5963
 13293  002B6C                     i2l5957:
 13294  002B6C  90D8               	bcf	status,0,c
 13295  002B6E  3610               	rlcf	i2___fldiv@b,f,c
 13296  002B70  3611               	rlcf	i2___fldiv@b+1,f,c
 13297  002B72  3612               	rlcf	i2___fldiv@b+2,f,c
 13298  002B74  3613               	rlcf	i2___fldiv@b+3,f,c
 13299  002B76  BE26               	btfsc	i2___fldiv@grs+3,7,c
 13300  002B78  8010               	bsf	i2___fldiv@b,0,c
 13301  002B7A  90D8               	bcf	status,0,c
 13302  002B7C  3623               	rlcf	i2___fldiv@grs,f,c
 13303  002B7E  3624               	rlcf	i2___fldiv@grs+1,f,c
 13304  002B80  3625               	rlcf	i2___fldiv@grs+2,f,c
 13305  002B82  3626               	rlcf	i2___fldiv@grs+3,f,c
 13306  002B84  0621               	decf	i2___fldiv@new_exp,f,c
 13307  002B86  A0D8               	btfss	status,0,c
 13308  002B88  0622               	decf	i2___fldiv@new_exp+1,f,c
 13309  002B8A                     i2l5963:
 13310  002B8A  AE12               	btfss	i2___fldiv@b+2,7,c
 13311  002B8C  D7EF               	goto	i2l5957
 13312  002B8E  0E00               	movlw	0
 13313  002B90  6E28               	movwf	i2___fldiv@aexp,c
 13314  002B92  AE26               	btfss	i2___fldiv@grs+3,7,c
 13315  002B94  D017               	goto	i2l1187
 13316  002B96  0EFF               	movlw	255
 13317  002B98  1423               	andwf	i2___fldiv@grs,w,c
 13318  002B9A  6E18               	movwf	??i2___fldiv& (0+255),c
 13319  002B9C  0EFF               	movlw	255
 13320  002B9E  1424               	andwf	i2___fldiv@grs+1,w,c
 13321  002BA0  6E19               	movwf	(??i2___fldiv+1)& (0+255),c
 13322  002BA2  0EFF               	movlw	255
 13323  002BA4  1425               	andwf	i2___fldiv@grs+2,w,c
 13324  002BA6  6E1A               	movwf	(??i2___fldiv+2)& (0+255),c
 13325  002BA8  0E7F               	movlw	127
 13326  002BAA  1426               	andwf	i2___fldiv@grs+3,w,c
 13327  002BAC  6E1B               	movwf	(??i2___fldiv+3)& (0+255),c
 13328  002BAE  5018               	movf	??i2___fldiv,w,c
 13329  002BB0  1019               	iorwf	??i2___fldiv+1,w,c
 13330  002BB2  101A               	iorwf	??i2___fldiv+2,w,c
 13331  002BB4  101B               	iorwf	??i2___fldiv+3,w,c
 13332  002BB6  B4D8               	btfsc	status,2,c
 13333  002BB8  D003               	goto	i2l1188
 13334  002BBA                     i2u731_40:
 13335  002BBA  0E01               	movlw	1
 13336  002BBC  6E28               	movwf	i2___fldiv@aexp,c
 13337  002BBE  D002               	goto	i2l1187
 13338  002BC0                     i2l1188:
 13339  002BC0  B010               	btfsc	i2___fldiv@b,0,c
 13340  002BC2  D7FB               	goto	i2u731_40
 13341  002BC4                     i2l1187:
 13342  002BC4  5028               	movf	i2___fldiv@aexp,w,c
 13343  002BC6  B4D8               	btfsc	status,2,c
 13344  002BC8  D027               	goto	i2l5983
 13345  002BCA  0E01               	movlw	1
 13346  002BCC  2610               	addwf	i2___fldiv@b,f,c
 13347  002BCE  0E00               	movlw	0
 13348  002BD0  2211               	addwfc	i2___fldiv@b+1,f,c
 13349  002BD2  2212               	addwfc	i2___fldiv@b+2,f,c
 13350  002BD4  2213               	addwfc	i2___fldiv@b+3,f,c
 13351  002BD6  A013               	btfss	i2___fldiv@b+3,0,c
 13352  002BD8  D01F               	goto	i2l5983
 13353  002BDA  0060  F040  F018   	movff	i2___fldiv@b,??i2___fldiv
 13354  002BE0  0060  F044  F019   	movff	i2___fldiv@b+1,??i2___fldiv+1
 13355  002BE6  0060  F048  F01A   	movff	i2___fldiv@b+2,??i2___fldiv+2
 13356  002BEC  0060  F04C  F01B   	movff	i2___fldiv@b+3,??i2___fldiv+3
 13357  002BF2  341B               	rlcf	??i2___fldiv+3,w,c
 13358  002BF4  321B               	rrcf	??i2___fldiv+3,f,c
 13359  002BF6  321A               	rrcf	??i2___fldiv+2,f,c
 13360  002BF8  3219               	rrcf	??i2___fldiv+1,f,c
 13361  002BFA  3218               	rrcf	??i2___fldiv,f,c
 13362  002BFC  0060  F060  F010   	movff	??i2___fldiv,i2___fldiv@b
 13363  002C02  0060  F064  F011   	movff	??i2___fldiv+1,i2___fldiv@b+1
 13364  002C08  0060  F068  F012   	movff	??i2___fldiv+2,i2___fldiv@b+2
 13365  002C0E  0060  F06C  F013   	movff	??i2___fldiv+3,i2___fldiv@b+3
 13366  002C14  4A21               	infsnz	i2___fldiv@new_exp,f,c
 13367  002C16  2A22               	incf	i2___fldiv@new_exp+1,f,c
 13368  002C18                     i2l5983:
 13369  002C18  BE22               	btfsc	i2___fldiv@new_exp+1,7,c
 13370  002C1A  D010               	goto	i2l5987
 13371  002C1C  5022               	movf	i2___fldiv@new_exp+1,w,c
 13372  002C1E  E103               	bnz	i2u735_40
 13373  002C20  2821               	incf	i2___fldiv@new_exp,w,c
 13374  002C22  A0D8               	btfss	status,0,c
 13375  002C24  D00B               	goto	i2l5987
 13376  002C26                     i2u735_40:
 13377  002C26  0E00               	movlw	0
 13378  002C28  6E22               	movwf	i2___fldiv@new_exp+1,c
 13379  002C2A  6821               	setf	i2___fldiv@new_exp,c
 13380  002C2C  0E00               	movlw	0
 13381  002C2E  6E10               	movwf	i2___fldiv@b,c
 13382  002C30  0E00               	movlw	0
 13383  002C32  6E11               	movwf	i2___fldiv@b+1,c
 13384  002C34  0E00               	movlw	0
 13385  002C36  6E12               	movwf	i2___fldiv@b+2,c
 13386  002C38  0E00               	movlw	0
 13387  002C3A  6E13               	movwf	i2___fldiv@b+3,c
 13388  002C3C                     i2l5987:
 13389  002C3C  BE22               	btfsc	i2___fldiv@new_exp+1,7,c
 13390  002C3E  D005               	goto	i2u736_40
 13391  002C40  5022               	movf	i2___fldiv@new_exp+1,w,c
 13392  002C42  E111               	bnz	i2l5991
 13393  002C44  0421               	decf	i2___fldiv@new_exp,w,c
 13394  002C46  B0D8               	btfsc	status,0,c
 13395  002C48  D00E               	goto	i2l5991
 13396  002C4A                     i2u736_40:
 13397  002C4A  0E00               	movlw	0
 13398  002C4C  6E22               	movwf	i2___fldiv@new_exp+1,c
 13399  002C4E  0E00               	movlw	0
 13400  002C50  6E21               	movwf	i2___fldiv@new_exp,c
 13401  002C52  0E00               	movlw	0
 13402  002C54  6E10               	movwf	i2___fldiv@b,c
 13403  002C56  0E00               	movlw	0
 13404  002C58  6E11               	movwf	i2___fldiv@b+1,c
 13405  002C5A  0E00               	movlw	0
 13406  002C5C  6E12               	movwf	i2___fldiv@b+2,c
 13407  002C5E  0E00               	movlw	0
 13408  002C60  6E13               	movwf	i2___fldiv@b+3,c
 13409  002C62  0E00               	movlw	0
 13410  002C64  6E20               	movwf	i2___fldiv@sign,c
 13411  002C66                     i2l5991:
 13412  002C66  0060  F084  F027   	movff	i2___fldiv@new_exp,i2___fldiv@bexp
 13413  002C6C  A027               	btfss	i2___fldiv@bexp,0,c
 13414  002C6E  D002               	goto	i2l5997
 13415  002C70  8E12               	bsf	i2___fldiv@b+2,7,c
 13416  002C72  D001               	goto	i2l5999
 13417  002C74                     i2l5997:
 13418  002C74  9E12               	bcf	i2___fldiv@b+2,7,c
 13419  002C76                     i2l5999:
 13420  002C76  90D8               	bcf	status,0,c
 13421  002C78  3027               	rrcf	i2___fldiv@bexp,w,c
 13422  002C7A  6E13               	movwf	i2___fldiv@b+3,c
 13423  002C7C  D6FC               	goto	i2l5913
 13424  002C7E                     __end_ofi2___fldiv:
 13425                           	opt callstack 0
 13426                           
 13427 ;; *************** function i2___fladd *****************
 13428 ;; Defined at:
 13429 ;;		line 10 in file "D:\MPLAB\pic\sources\c99\common\sprcadd.c"
 13430 ;; Parameters:    Size  Location     Type
 13431 ;;  b               4   40[COMRAM] unsigned char 
 13432 ;;  a               4   44[COMRAM] unsigned char 
 13433 ;; Auto vars:     Size  Location     Type
 13434 ;;  __fladd         1   55[COMRAM] unsigned char 
 13435 ;;  __fladd         1   54[COMRAM] unsigned char 
 13436 ;;  __fladd         1   53[COMRAM] unsigned char 
 13437 ;;  __fladd         1   52[COMRAM] unsigned char 
 13438 ;; Return value:  Size  Location     Type
 13439 ;;                  4   40[COMRAM] unsigned char 
 13440 ;; Registers used:
 13441 ;;		wreg, status,2, status,0
 13442 ;; Tracked objects:
 13443 ;;		On entry : 0/0
 13444 ;;		On exit  : 0/0
 13445 ;;		Unchanged: 0/0
 13446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13447 ;;      Params:         8       0       0       0       0       0       0       0       0
 13448 ;;      Locals:         4       0       0       0       0       0       0       0       0
 13449 ;;      Temps:          4       0       0       0       0       0       0       0       0
 13450 ;;      Totals:        16       0       0       0       0       0       0       0       0
 13451 ;;Total ram usage:       16 bytes
 13452 ;; Hardware stack levels used:    1
 13453 ;; This function calls:
 13454 ;;		Nothing
 13455 ;; This function is called by:
 13456 ;;		_canRecInt2
 13457 ;; This function uses a non-reentrant model
 13458 ;;
 13459                           
 13460                           	psect	text50
 13461  00212A                     __ptext50:
 13462                           	opt callstack 0
 13463  00212A                     i2___fladd:
 13464                           	opt callstack 20
 13465                           
 13466                           ;incstack = 0
 13467  00212A  502C               	movf	i2___fladd@b+3,w,c
 13468  00212C  0B80               	andlw	128
 13469  00212E  6E35               	movwf	i2___fladd@signs,c
 13470  002130  502C               	movf	i2___fladd@b+3,w,c
 13471  002132  242C               	addwf	i2___fladd@b+3,w,c
 13472  002134  6E37               	movwf	i2___fladd@bexp,c
 13473  002136  BE2B               	btfsc	i2___fladd@b+2,7,c
 13474  002138  8037               	bsf	i2___fladd@bexp,0,c
 13475  00213A  5037               	movf	i2___fladd@bexp,w,c
 13476  00213C  B4D8               	btfsc	status,2,c
 13477  00213E  D00D               	goto	i2l5683
 13478  002140  2837               	incf	i2___fladd@bexp,w,c
 13479  002142  A4D8               	btfss	status,2,c
 13480  002144  D008               	goto	i2l5679
 13481  002146  0E00               	movlw	0
 13482  002148  6E29               	movwf	i2___fladd@b,c
 13483  00214A  0E00               	movlw	0
 13484  00214C  6E2A               	movwf	i2___fladd@b+1,c
 13485  00214E  0E00               	movlw	0
 13486  002150  6E2B               	movwf	i2___fladd@b+2,c
 13487  002152  0E00               	movlw	0
 13488  002154  6E2C               	movwf	i2___fladd@b+3,c
 13489  002156                     i2l5679:
 13490  002156  8E2B               	bsf	i2___fladd@b+2,7,c
 13491  002158  D006               	goto	L20
 13492  00215A                     i2l5683:
 13493  00215A  0E00               	movlw	0
 13494  00215C  6E29               	movwf	i2___fladd@b,c
 13495  00215E  0E00               	movlw	0
 13496  002160  6E2A               	movwf	i2___fladd@b+1,c
 13497  002162  0E00               	movlw	0
 13498  002164  6E2B               	movwf	i2___fladd@b+2,c
 13499  002166                     L20:
 13500  002166  0E00               	movlw	0
 13501  002168  6E2C               	movwf	i2___fladd@b+3,c
 13502  00216A  5030               	movf	i2___fladd@a+3,w,c
 13503  00216C  0B80               	andlw	128
 13504  00216E  6E36               	movwf	i2___fladd@aexp,c
 13505  002170  5035               	movf	i2___fladd@signs,w,c
 13506  002172  1836               	xorwf	i2___fladd@aexp,w,c
 13507  002174  A4D8               	btfss	status,2,c
 13508  002176  8C35               	bsf	i2___fladd@signs,6,c
 13509  002178  5030               	movf	i2___fladd@a+3,w,c
 13510  00217A  2430               	addwf	i2___fladd@a+3,w,c
 13511  00217C  6E36               	movwf	i2___fladd@aexp,c
 13512  00217E  BE2F               	btfsc	i2___fladd@a+2,7,c
 13513  002180  8036               	bsf	i2___fladd@aexp,0,c
 13514  002182  5036               	movf	i2___fladd@aexp,w,c
 13515  002184  B4D8               	btfsc	status,2,c
 13516  002186  D00D               	goto	i2l5707
 13517  002188  2836               	incf	i2___fladd@aexp,w,c
 13518  00218A  A4D8               	btfss	status,2,c
 13519  00218C  D008               	goto	i2l5703
 13520  00218E  0E00               	movlw	0
 13521  002190  6E2D               	movwf	i2___fladd@a,c
 13522  002192  0E00               	movlw	0
 13523  002194  6E2E               	movwf	i2___fladd@a+1,c
 13524  002196  0E00               	movlw	0
 13525  002198  6E2F               	movwf	i2___fladd@a+2,c
 13526  00219A  0E00               	movlw	0
 13527  00219C  6E30               	movwf	i2___fladd@a+3,c
 13528  00219E                     i2l5703:
 13529  00219E  8E2F               	bsf	i2___fladd@a+2,7,c
 13530  0021A0  D006               	goto	L21
 13531  0021A2                     i2l5707:
 13532  0021A2  0E00               	movlw	0
 13533  0021A4  6E2D               	movwf	i2___fladd@a,c
 13534  0021A6  0E00               	movlw	0
 13535  0021A8  6E2E               	movwf	i2___fladd@a+1,c
 13536  0021AA  0E00               	movlw	0
 13537  0021AC  6E2F               	movwf	i2___fladd@a+2,c
 13538  0021AE                     L21:
 13539  0021AE  0E00               	movlw	0
 13540  0021B0  6E30               	movwf	i2___fladd@a+3,c
 13541  0021B2  5037               	movf	i2___fladd@bexp,w,c
 13542  0021B4  5C36               	subwf	i2___fladd@aexp,w,c
 13543  0021B6  B0D8               	btfsc	status,0,c
 13544  0021B8  D031               	goto	i2l5745
 13545  0021BA  AC35               	btfss	i2___fladd@signs,6,c
 13546  0021BC  D002               	goto	i2l5715
 13547  0021BE  0E80               	movlw	128
 13548  0021C0  1A35               	xorwf	i2___fladd@signs,f,c
 13549  0021C2                     i2l5715:
 13550  0021C2  0060  F0DC  F038   	movff	i2___fladd@bexp,i2___fladd@grs
 13551  0021C8  0060  F0D8  F037   	movff	i2___fladd@aexp,i2___fladd@bexp
 13552  0021CE  0060  F0E0  F036   	movff	i2___fladd@grs,i2___fladd@aexp
 13553  0021D4  0060  F0A4  F038   	movff	i2___fladd@b,i2___fladd@grs
 13554  0021DA  0060  F0B4  F029   	movff	i2___fladd@a,i2___fladd@b
 13555  0021E0  0060  F0E0  F02D   	movff	i2___fladd@grs,i2___fladd@a
 13556  0021E6  0060  F0A8  F038   	movff	i2___fladd@b+1,i2___fladd@grs
 13557  0021EC  0060  F0B8  F02A   	movff	i2___fladd@a+1,i2___fladd@b+1
 13558  0021F2  0060  F0E0  F02E   	movff	i2___fladd@grs,i2___fladd@a+1
 13559  0021F8  0060  F0AC  F038   	movff	i2___fladd@b+2,i2___fladd@grs
 13560  0021FE  0060  F0BC  F02B   	movff	i2___fladd@a+2,i2___fladd@b+2
 13561  002204  0060  F0E0  F02F   	movff	i2___fladd@grs,i2___fladd@a+2
 13562  00220A  0060  F0B0  F038   	movff	i2___fladd@b+3,i2___fladd@grs
 13563  002210  0060  F0C0  F02C   	movff	i2___fladd@a+3,i2___fladd@b+3
 13564  002216  0060  F0E0  F030   	movff	i2___fladd@grs,i2___fladd@a+3
 13565  00221C                     i2l5745:
 13566  00221C  0E00               	movlw	0
 13567  00221E  6E38               	movwf	i2___fladd@grs,c
 13568  002220  5037               	movf	i2___fladd@bexp,w,c
 13569  002222  0060  F0D8  F031   	movff	i2___fladd@aexp,??i2___fladd
 13570  002228  6A32               	clrf	(??i2___fladd+1)& (0+255),c
 13571  00222A  5E31               	subwf	??i2___fladd,f,c
 13572  00222C  0E00               	movlw	0
 13573  00222E  5A32               	subwfb	??i2___fladd+1,f,c
 13574  002230  BE32               	btfsc	??i2___fladd+1,7,c
 13575  002232  D02D               	goto	i2l1121
 13576  002234  5032               	movf	??i2___fladd+1,w,c
 13577  002236  E104               	bnz	i2u685_40
 13578  002238  0E1A               	movlw	26
 13579  00223A  5C31               	subwf	??i2___fladd,w,c
 13580  00223C  A0D8               	btfss	status,0,c
 13581  00223E  D027               	goto	i2l1121
 13582  002240                     i2u685_40:
 13583  002240  5029               	movf	i2___fladd@b,w,c
 13584  002242  102A               	iorwf	i2___fladd@b+1,w,c
 13585  002244  102B               	iorwf	i2___fladd@b+2,w,c
 13586  002246  102C               	iorwf	i2___fladd@b+3,w,c
 13587  002248  B4D8               	btfsc	status,2,c
 13588  00224A  D002               	goto	i2u686_40
 13589  00224C  0E01               	movlw	1
 13590  00224E  D001               	goto	i2u687_40
 13591  002250                     i2u686_40:
 13592  002250  0E00               	movlw	0
 13593  002252                     i2u687_40:
 13594  002252  6E38               	movwf	i2___fladd@grs,c
 13595  002254  0E00               	movlw	0
 13596  002256  6E29               	movwf	i2___fladd@b,c
 13597  002258  0E00               	movlw	0
 13598  00225A  6E2A               	movwf	i2___fladd@b+1,c
 13599  00225C  0E00               	movlw	0
 13600  00225E  6E2B               	movwf	i2___fladd@b+2,c
 13601  002260  0E00               	movlw	0
 13602  002262  6E2C               	movwf	i2___fladd@b+3,c
 13603  002264  0060  F0D8  F037   	movff	i2___fladd@aexp,i2___fladd@bexp
 13604  00226A  D015               	goto	i2u690_40
 13605  00226C                     i2l1122:
 13606  00226C  A038               	btfss	i2___fladd@grs,0,c
 13607  00226E  D005               	goto	i2l5757
 13608  002270  90D8               	bcf	status,0,c
 13609  002272  3038               	rrcf	i2___fladd@grs,w,c
 13610  002274  0901               	iorlw	1
 13611  002276  6E38               	movwf	i2___fladd@grs,c
 13612  002278  D002               	goto	i2l5759
 13613  00227A                     i2l5757:
 13614  00227A  90D8               	bcf	status,0,c
 13615  00227C  3238               	rrcf	i2___fladd@grs,f,c
 13616  00227E                     i2l5759:
 13617  00227E  B029               	btfsc	i2___fladd@b,0,c
 13618  002280  8E38               	bsf	i2___fladd@grs,7,c
 13619  002282  342C               	rlcf	i2___fladd@b+3,w,c
 13620  002284  322C               	rrcf	i2___fladd@b+3,f,c
 13621  002286  322B               	rrcf	i2___fladd@b+2,f,c
 13622  002288  322A               	rrcf	i2___fladd@b+1,f,c
 13623  00228A  3229               	rrcf	i2___fladd@b,f,c
 13624  00228C  2A37               	incf	i2___fladd@bexp,f,c
 13625  00228E                     i2l1121:
 13626  00228E  5036               	movf	i2___fladd@aexp,w,c
 13627  002290  5C37               	subwf	i2___fladd@bexp,w,c
 13628  002292  A0D8               	btfss	status,0,c
 13629  002294  D7EB               	goto	i2l1122
 13630  002296                     i2u690_40:
 13631  002296  BC35               	btfsc	i2___fladd@signs,6,c
 13632  002298  D028               	goto	i2l5791
 13633  00229A  5037               	movf	i2___fladd@bexp,w,c
 13634  00229C  A4D8               	btfss	status,2,c
 13635  00229E  D009               	goto	i2l5773
 13636  0022A0  0E00               	movlw	0
 13637  0022A2  6E29               	movwf	?i2___fladd,c
 13638  0022A4  0E00               	movlw	0
 13639  0022A6  6E2A               	movwf	?i2___fladd+1,c
 13640  0022A8  0E00               	movlw	0
 13641  0022AA  6E2B               	movwf	?i2___fladd+2,c
 13642  0022AC  0E00               	movlw	0
 13643  0022AE  6E2C               	movwf	?i2___fladd+3,c
 13644  0022B0  0012               	return	
 13645  0022B2                     i2l5773:
 13646  0022B2  502D               	movf	i2___fladd@a,w,c
 13647  0022B4  2629               	addwf	i2___fladd@b,f,c
 13648  0022B6  502E               	movf	i2___fladd@a+1,w,c
 13649  0022B8  222A               	addwfc	i2___fladd@b+1,f,c
 13650  0022BA  502F               	movf	i2___fladd@a+2,w,c
 13651  0022BC  222B               	addwfc	i2___fladd@b+2,f,c
 13652  0022BE  5030               	movf	i2___fladd@a+3,w,c
 13653  0022C0  222C               	addwfc	i2___fladd@b+3,f,c
 13654  0022C2  A02C               	btfss	i2___fladd@b+3,0,c
 13655  0022C4  D071               	goto	i2u703_40
 13656  0022C6  A038               	btfss	i2___fladd@grs,0,c
 13657  0022C8  D005               	goto	i2l5781
 13658  0022CA  90D8               	bcf	status,0,c
 13659  0022CC  3038               	rrcf	i2___fladd@grs,w,c
 13660  0022CE  0901               	iorlw	1
 13661  0022D0  6E38               	movwf	i2___fladd@grs,c
 13662  0022D2  D002               	goto	i2l5783
 13663  0022D4                     i2l5781:
 13664  0022D4  90D8               	bcf	status,0,c
 13665  0022D6  3238               	rrcf	i2___fladd@grs,f,c
 13666  0022D8                     i2l5783:
 13667  0022D8  B029               	btfsc	i2___fladd@b,0,c
 13668  0022DA  8E38               	bsf	i2___fladd@grs,7,c
 13669  0022DC  342C               	rlcf	i2___fladd@b+3,w,c
 13670  0022DE  322C               	rrcf	i2___fladd@b+3,f,c
 13671  0022E0  322B               	rrcf	i2___fladd@b+2,f,c
 13672  0022E2  322A               	rrcf	i2___fladd@b+1,f,c
 13673  0022E4  3229               	rrcf	i2___fladd@b,f,c
 13674  0022E6  2A37               	incf	i2___fladd@bexp,f,c
 13675  0022E8  D05F               	goto	i2u703_40
 13676  0022EA                     i2l5791:
 13677  0022EA  502D               	movf	i2___fladd@a,w,c
 13678  0022EC  5C29               	subwf	i2___fladd@b,w,c
 13679  0022EE  502E               	movf	i2___fladd@a+1,w,c
 13680  0022F0  582A               	subwfb	i2___fladd@b+1,w,c
 13681  0022F2  502F               	movf	i2___fladd@a+2,w,c
 13682  0022F4  582B               	subwfb	i2___fladd@b+2,w,c
 13683  0022F6  502C               	movf	i2___fladd@b+3,w,c
 13684  0022F8  0A80               	xorlw	128
 13685  0022FA  6E31               	movwf	??i2___fladd& (0+255),c
 13686  0022FC  5030               	movf	i2___fladd@a+3,w,c
 13687  0022FE  0A80               	xorlw	128
 13688  002300  5831               	subwfb	??i2___fladd& (0+255),w,c
 13689  002302  B0D8               	btfsc	status,0,c
 13690  002304  D025               	goto	i2l5801
 13691  002306  5029               	movf	i2___fladd@b,w,c
 13692  002308  5C2D               	subwf	i2___fladd@a,w,c
 13693  00230A  6E31               	movwf	??i2___fladd& (0+255),c
 13694  00230C  502A               	movf	i2___fladd@b+1,w,c
 13695  00230E  582E               	subwfb	i2___fladd@a+1,w,c
 13696  002310  6E32               	movwf	(??i2___fladd+1)& (0+255),c
 13697  002312  502B               	movf	i2___fladd@b+2,w,c
 13698  002314  582F               	subwfb	i2___fladd@a+2,w,c
 13699  002316  6E33               	movwf	(??i2___fladd+2)& (0+255),c
 13700  002318  502C               	movf	i2___fladd@b+3,w,c
 13701  00231A  5830               	subwfb	i2___fladd@a+3,w,c
 13702  00231C  6E34               	movwf	(??i2___fladd+3)& (0+255),c
 13703  00231E  0EFF               	movlw	255
 13704  002320  2431               	addwf	??i2___fladd,w,c
 13705  002322  6E29               	movwf	i2___fladd@b,c
 13706  002324  0EFF               	movlw	255
 13707  002326  2032               	addwfc	??i2___fladd+1,w,c
 13708  002328  6E2A               	movwf	i2___fladd@b+1,c
 13709  00232A  0EFF               	movlw	255
 13710  00232C  2033               	addwfc	??i2___fladd+2,w,c
 13711  00232E  6E2B               	movwf	i2___fladd@b+2,c
 13712  002330  0EFF               	movlw	255
 13713  002332  2034               	addwfc	??i2___fladd+3,w,c
 13714  002334  6E2C               	movwf	i2___fladd@b+3,c
 13715  002336  0E80               	movlw	128
 13716  002338  1A35               	xorwf	i2___fladd@signs,f,c
 13717  00233A  6C38               	negf	i2___fladd@grs,c
 13718  00233C  5038               	movf	i2___fladd@grs,w,c
 13719  00233E  A4D8               	btfss	status,2,c
 13720  002340  D00F               	goto	i2l1137
 13721  002342  0E01               	movlw	1
 13722  002344  2629               	addwf	i2___fladd@b,f,c
 13723  002346  0E00               	movlw	0
 13724  002348  222A               	addwfc	i2___fladd@b+1,f,c
 13725  00234A  222B               	addwfc	i2___fladd@b+2,f,c
 13726  00234C  222C               	addwfc	i2___fladd@b+3,f,c
 13727  00234E  D008               	goto	i2l1137
 13728  002350                     i2l5801:
 13729  002350  502D               	movf	i2___fladd@a,w,c
 13730  002352  5E29               	subwf	i2___fladd@b,f,c
 13731  002354  502E               	movf	i2___fladd@a+1,w,c
 13732  002356  5A2A               	subwfb	i2___fladd@b+1,f,c
 13733  002358  502F               	movf	i2___fladd@a+2,w,c
 13734  00235A  5A2B               	subwfb	i2___fladd@b+2,f,c
 13735  00235C  5030               	movf	i2___fladd@a+3,w,c
 13736  00235E  5A2C               	subwfb	i2___fladd@b+3,f,c
 13737  002360                     i2l1137:
 13738  002360  5029               	movf	i2___fladd@b,w,c
 13739  002362  102A               	iorwf	i2___fladd@b+1,w,c
 13740  002364  102B               	iorwf	i2___fladd@b+2,w,c
 13741  002366  102C               	iorwf	i2___fladd@b+3,w,c
 13742  002368  A4D8               	btfss	status,2,c
 13743  00236A  D01C               	goto	i2l5825
 13744  00236C  5038               	movf	i2___fladd@grs,w,c
 13745  00236E  A4D8               	btfss	status,2,c
 13746  002370  D019               	goto	i2l5825
 13747  002372  0E00               	movlw	0
 13748  002374  6E29               	movwf	?i2___fladd,c
 13749  002376  0E00               	movlw	0
 13750  002378  6E2A               	movwf	?i2___fladd+1,c
 13751  00237A  0E00               	movlw	0
 13752  00237C  6E2B               	movwf	?i2___fladd+2,c
 13753  00237E  0E00               	movlw	0
 13754  002380  6E2C               	movwf	?i2___fladd+3,c
 13755  002382  0012               	return	
 13756  002384                     i2l5809:
 13757  002384  90D8               	bcf	status,0,c
 13758  002386  3629               	rlcf	i2___fladd@b,f,c
 13759  002388  362A               	rlcf	i2___fladd@b+1,f,c
 13760  00238A  362B               	rlcf	i2___fladd@b+2,f,c
 13761  00238C  362C               	rlcf	i2___fladd@b+3,f,c
 13762  00238E  BE38               	btfsc	i2___fladd@grs,7,c
 13763  002390  8029               	bsf	i2___fladd@b,0,c
 13764  002392  A038               	btfss	i2___fladd@grs,0,c
 13765  002394  D002               	goto	i2l5819
 13766  002396  80D8               	bsf	status,0,c
 13767  002398  D001               	goto	L22
 13768  00239A                     i2l5819:
 13769  00239A  90D8               	bcf	status,0,c
 13770  00239C                     L22:
 13771  00239C  3638               	rlcf	i2___fladd@grs,f,c
 13772  00239E  5037               	movf	i2___fladd@bexp,w,c
 13773  0023A0  A4D8               	btfss	status,2,c
 13774  0023A2  0637               	decf	i2___fladd@bexp,f,c
 13775  0023A4                     i2l5825:
 13776  0023A4  AE2B               	btfss	i2___fladd@b+2,7,c
 13777  0023A6  D7EE               	goto	i2l5809
 13778  0023A8                     i2u703_40:
 13779  0023A8  0E00               	movlw	0
 13780  0023AA  6E36               	movwf	i2___fladd@aexp,c
 13781  0023AC  AE38               	btfss	i2___fladd@grs,7,c
 13782  0023AE  D00C               	goto	i2l1146
 13783  0023B0  0060  F0E0  F031   	movff	i2___fladd@grs,??i2___fladd
 13784  0023B6  0E7F               	movlw	127
 13785  0023B8  1631               	andwf	??i2___fladd,f,c
 13786  0023BA  B4D8               	btfsc	status,2,c
 13787  0023BC  D003               	goto	i2l1147
 13788  0023BE                     i2u705_40:
 13789  0023BE  0E01               	movlw	1
 13790  0023C0  6E36               	movwf	i2___fladd@aexp,c
 13791  0023C2  D002               	goto	i2l1146
 13792  0023C4                     i2l1147:
 13793  0023C4  B029               	btfsc	i2___fladd@b,0,c
 13794  0023C6  D7FB               	goto	i2u705_40
 13795  0023C8                     i2l1146:
 13796  0023C8  5036               	movf	i2___fladd@aexp,w,c
 13797  0023CA  B4D8               	btfsc	status,2,c
 13798  0023CC  D028               	goto	i2l5845
 13799  0023CE  0E01               	movlw	1
 13800  0023D0  2629               	addwf	i2___fladd@b,f,c
 13801  0023D2  0E00               	movlw	0
 13802  0023D4  222A               	addwfc	i2___fladd@b+1,f,c
 13803  0023D6  222B               	addwfc	i2___fladd@b+2,f,c
 13804  0023D8  222C               	addwfc	i2___fladd@b+3,f,c
 13805  0023DA  A02C               	btfss	i2___fladd@b+3,0,c
 13806  0023DC  D020               	goto	i2l5845
 13807  0023DE  0060  F0A4  F031   	movff	i2___fladd@b,??i2___fladd
 13808  0023E4  0060  F0A8  F032   	movff	i2___fladd@b+1,??i2___fladd+1
 13809  0023EA  0060  F0AC  F033   	movff	i2___fladd@b+2,??i2___fladd+2
 13810  0023F0  0060  F0B0  F034   	movff	i2___fladd@b+3,??i2___fladd+3
 13811  0023F6  3434               	rlcf	??i2___fladd+3,w,c
 13812  0023F8  3234               	rrcf	??i2___fladd+3,f,c
 13813  0023FA  3233               	rrcf	??i2___fladd+2,f,c
 13814  0023FC  3232               	rrcf	??i2___fladd+1,f,c
 13815  0023FE  3231               	rrcf	??i2___fladd,f,c
 13816  002400  0060  F0C4  F029   	movff	??i2___fladd,i2___fladd@b
 13817  002406  0060  F0C8  F02A   	movff	??i2___fladd+1,i2___fladd@b+1
 13818  00240C  0060  F0CC  F02B   	movff	??i2___fladd+2,i2___fladd@b+2
 13819  002412  0060  F0D0  F02C   	movff	??i2___fladd+3,i2___fladd@b+3
 13820  002418  2837               	incf	i2___fladd@bexp,w,c
 13821  00241A  A4D8               	btfss	status,2,c
 13822  00241C  2A37               	incf	i2___fladd@bexp,f,c
 13823  00241E                     i2l5845:
 13824  00241E  2837               	incf	i2___fladd@bexp,w,c
 13825  002420  B4D8               	btfsc	status,2,c
 13826  002422  D003               	goto	i2u711_40
 13827  002424  5037               	movf	i2___fladd@bexp,w,c
 13828  002426  A4D8               	btfss	status,2,c
 13829  002428  D00D               	goto	i2l5853
 13830  00242A                     i2u711_40:
 13831  00242A  0E00               	movlw	0
 13832  00242C  6E29               	movwf	i2___fladd@b,c
 13833  00242E  0E00               	movlw	0
 13834  002430  6E2A               	movwf	i2___fladd@b+1,c
 13835  002432  0E00               	movlw	0
 13836  002434  6E2B               	movwf	i2___fladd@b+2,c
 13837  002436  0E00               	movlw	0
 13838  002438  6E2C               	movwf	i2___fladd@b+3,c
 13839  00243A  5037               	movf	i2___fladd@bexp,w,c
 13840  00243C  A4D8               	btfss	status,2,c
 13841  00243E  D002               	goto	i2l5853
 13842  002440  0E00               	movlw	0
 13843  002442  6E35               	movwf	i2___fladd@signs,c
 13844  002444                     i2l5853:
 13845  002444  A037               	btfss	i2___fladd@bexp,0,c
 13846  002446  D002               	goto	i2l5857
 13847  002448  8E2B               	bsf	i2___fladd@b+2,7,c
 13848  00244A  D001               	goto	i2l5859
 13849  00244C                     i2l5857:
 13850  00244C  9E2B               	bcf	i2___fladd@b+2,7,c
 13851  00244E                     i2l5859:
 13852  00244E  90D8               	bcf	status,0,c
 13853  002450  3037               	rrcf	i2___fladd@bexp,w,c
 13854  002452  6E2C               	movwf	i2___fladd@b+3,c
 13855  002454  BE35               	btfsc	i2___fladd@signs,7,c
 13856  002456  8E2C               	bsf	i2___fladd@b+3,7,c
 13857  002458  0060  F0A4  F029   	movff	i2___fladd@b,?i2___fladd
 13858  00245E  0060  F0A8  F02A   	movff	i2___fladd@b+1,?i2___fladd+1
 13859  002464  0060  F0AC  F02B   	movff	i2___fladd@b+2,?i2___fladd+2
 13860  00246A  0060  F0B0  F02C   	movff	i2___fladd@b+3,?i2___fladd+3
 13861  002470  0012               	return		;funcret
 13862  002472                     __end_ofi2___fladd:
 13863                           	opt callstack 0
 13864                           
 13865 ;; *************** function _sendCANmessage *****************
 13866 ;; Defined at:
 13867 ;;		line 752 in file "MainCode.c"
 13868 ;; Parameters:    Size  Location     Type
 13869 ;;  id              2    1[COMRAM] int 
 13870 ;;  message         2    3[COMRAM] PTR int 
 13871 ;;		 -> canRecInt2@message(16), 
 13872 ;;  length          2    5[COMRAM] int 
 13873 ;; Auto vars:     Size  Location     Type
 13874 ;;		None
 13875 ;; Return value:  Size  Location     Type
 13876 ;;                  1    wreg      void 
 13877 ;; Registers used:
 13878 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13879 ;; Tracked objects:
 13880 ;;		On entry : 0/0
 13881 ;;		On exit  : 0/0
 13882 ;;		Unchanged: 0/0
 13883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13884 ;;      Params:         6       0       0       0       0       0       0       0       0
 13885 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13886 ;;      Temps:          2       0       0       0       0       0       0       0       0
 13887 ;;      Totals:         8       0       0       0       0       0       0       0       0
 13888 ;;Total ram usage:        8 bytes
 13889 ;; Hardware stack levels used:    1
 13890 ;; This function calls:
 13891 ;;		Nothing
 13892 ;; This function is called by:
 13893 ;;		_canRecInt2
 13894 ;; This function uses a non-reentrant model
 13895 ;;
 13896                           
 13897                           	psect	text51
 13898  003774                     __ptext51:
 13899                           	opt callstack 0
 13900  003774                     _sendCANmessage:
 13901                           	opt callstack 20
 13902                           
 13903                           ;MainCode.c: 753:     TXB0CONbits.TXREQ = 0;
 13904                           
 13905                           ;incstack = 0
 13906  003774  0137               	movlb	55	; () banked
 13907  003776  97E0               	bcf	224,3,b	;volatile
 13908                           
 13909                           ; BSR set to: 55
 13910                           ;MainCode.c: 755:     CANCONbits.WIN = 0b000;
 13911  003778  0EF1               	movlw	-15
 13912  00377A  168F               	andwf	16271,f,c	;volatile
 13913                           
 13914                           ;MainCode.c: 757:     TXB0CONbits.TXPRI = 0b11;
 13915  00377C  0E03               	movlw	3
 13916  00377E  13E0               	iorwf	224,f,b	;volatile
 13917                           
 13918                           ; BSR set to: 55
 13919                           ;MainCode.c: 759:     TXB0D0 = message[0];
 13920  003780  0060  F013  FFD9   	movff	sendCANmessage@message,fsr2l
 13921  003786  0060  F017  FFDA   	movff	sendCANmessage@message+1,fsr2h
 13922  00378C  50DF               	movf	indf2,w,c
 13923  00378E  6FE6               	movwf	230,b	;volatile
 13924                           
 13925                           ; BSR set to: 55
 13926                           ;MainCode.c: 760:     TXB0D1 = message[1];
 13927  003790  EE20 F002          	lfsr	2,2
 13928  003794  5004               	movf	sendCANmessage@message,w,c
 13929  003796  26D9               	addwf	fsr2l,f,c
 13930  003798  5005               	movf	sendCANmessage@message+1,w,c
 13931  00379A  22DA               	addwfc	fsr2h,f,c
 13932  00379C  50DF               	movf	indf2,w,c
 13933  00379E  6FE7               	movwf	231,b	;volatile
 13934                           
 13935                           ; BSR set to: 55
 13936                           ;MainCode.c: 761:     TXB0D2 = message[2];
 13937  0037A0  EE20 F004          	lfsr	2,4
 13938  0037A4  5004               	movf	sendCANmessage@message,w,c
 13939  0037A6  26D9               	addwf	fsr2l,f,c
 13940  0037A8  5005               	movf	sendCANmessage@message+1,w,c
 13941  0037AA  22DA               	addwfc	fsr2h,f,c
 13942  0037AC  50DF               	movf	indf2,w,c
 13943  0037AE  6FE8               	movwf	232,b	;volatile
 13944                           
 13945                           ; BSR set to: 55
 13946                           ;MainCode.c: 762:     TXB0D3 = message[3];
 13947  0037B0  EE20 F006          	lfsr	2,6
 13948  0037B4  5004               	movf	sendCANmessage@message,w,c
 13949  0037B6  26D9               	addwf	fsr2l,f,c
 13950  0037B8  5005               	movf	sendCANmessage@message+1,w,c
 13951  0037BA  22DA               	addwfc	fsr2h,f,c
 13952  0037BC  50DF               	movf	indf2,w,c
 13953  0037BE  6FE9               	movwf	233,b	;volatile
 13954                           
 13955                           ; BSR set to: 55
 13956                           ;MainCode.c: 763:     TXB0D4 = message[4];
 13957  0037C0  EE20 F008          	lfsr	2,8
 13958  0037C4  5004               	movf	sendCANmessage@message,w,c
 13959  0037C6  26D9               	addwf	fsr2l,f,c
 13960  0037C8  5005               	movf	sendCANmessage@message+1,w,c
 13961  0037CA  22DA               	addwfc	fsr2h,f,c
 13962  0037CC  50DF               	movf	indf2,w,c
 13963  0037CE  6FEA               	movwf	234,b	;volatile
 13964                           
 13965                           ; BSR set to: 55
 13966                           ;MainCode.c: 764:     TXB0D5 = message[5];
 13967  0037D0  EE20 F00A          	lfsr	2,10
 13968  0037D4  5004               	movf	sendCANmessage@message,w,c
 13969  0037D6  26D9               	addwf	fsr2l,f,c
 13970  0037D8  5005               	movf	sendCANmessage@message+1,w,c
 13971  0037DA  22DA               	addwfc	fsr2h,f,c
 13972  0037DC  50DF               	movf	indf2,w,c
 13973  0037DE  6FEB               	movwf	235,b	;volatile
 13974                           
 13975                           ; BSR set to: 55
 13976                           ;MainCode.c: 765:     TXB0D6 = message[6];
 13977  0037E0  EE20 F00C          	lfsr	2,12
 13978  0037E4  5004               	movf	sendCANmessage@message,w,c
 13979  0037E6  26D9               	addwf	fsr2l,f,c
 13980  0037E8  5005               	movf	sendCANmessage@message+1,w,c
 13981  0037EA  22DA               	addwfc	fsr2h,f,c
 13982  0037EC  50DF               	movf	indf2,w,c
 13983  0037EE  6FEC               	movwf	236,b	;volatile
 13984                           
 13985                           ; BSR set to: 55
 13986                           ;MainCode.c: 766:     TXB0D7 = message[7];
 13987  0037F0  EE20 F00E          	lfsr	2,14
 13988  0037F4  5004               	movf	sendCANmessage@message,w,c
 13989  0037F6  26D9               	addwf	fsr2l,f,c
 13990  0037F8  5005               	movf	sendCANmessage@message+1,w,c
 13991  0037FA  22DA               	addwfc	fsr2h,f,c
 13992  0037FC  50DF               	movf	indf2,w,c
 13993  0037FE  6FED               	movwf	237,b	;volatile
 13994                           
 13995                           ;MainCode.c: 768:     TXB0SIDLbits.SID = id;
 13996  003800  0060  F008  F008   	movff	sendCANmessage@id,??_sendCANmessage
 13997  003806  3A08               	swapf	??_sendCANmessage,f,c
 13998  003808  4608               	rlncf	??_sendCANmessage,f,c
 13999  00380A  51E2               	movf	226,w,b	;volatile
 14000  00380C  1808               	xorwf	??_sendCANmessage,w,c
 14001  00380E  0B1F               	andlw	-225
 14002  003810  1808               	xorwf	??_sendCANmessage,w,c
 14003  003812  6FE2               	movwf	226,b	;volatile
 14004                           
 14005                           ;MainCode.c: 769:     TXB0SIDH = id >> 3;
 14006  003814  0060  F008  F008   	movff	sendCANmessage@id,??_sendCANmessage
 14007  00381A  0060  F00C  F009   	movff	sendCANmessage@id+1,??_sendCANmessage+1
 14008  003820  3409               	rlcf	??_sendCANmessage+1,w,c
 14009  003822  3209               	rrcf	??_sendCANmessage+1,f,c
 14010  003824  3208               	rrcf	??_sendCANmessage,f,c
 14011  003826  3409               	rlcf	??_sendCANmessage+1,w,c
 14012  003828  3209               	rrcf	??_sendCANmessage+1,f,c
 14013  00382A  3208               	rrcf	??_sendCANmessage,f,c
 14014  00382C  3409               	rlcf	??_sendCANmessage+1,w,c
 14015  00382E  3209               	rrcf	??_sendCANmessage+1,f,c
 14016  003830  3208               	rrcf	??_sendCANmessage,f,c
 14017  003832  5008               	movf	??_sendCANmessage,w,c
 14018  003834  6FE1               	movwf	225,b	;volatile
 14019                           
 14020                           ;MainCode.c: 771:     TXB0DLCbits.DLC = length;
 14021  003836  51E5               	movf	229,w,b	;volatile
 14022  003838  1806               	xorwf	sendCANmessage@length,w,c
 14023  00383A  0BF0               	andlw	-16
 14024  00383C  1806               	xorwf	sendCANmessage@length,w,c
 14025  00383E  6FE5               	movwf	229,b	;volatile
 14026                           
 14027                           ; BSR set to: 55
 14028                           ;MainCode.c: 772:     TXB0DLCbits.TXRTR = 0;
 14029  003840  9DE5               	bcf	229,6,b	;volatile
 14030                           
 14031                           ; BSR set to: 55
 14032                           ;MainCode.c: 774:     TXB0CONbits.TXREQ = 1;
 14033  003842  87E0               	bsf	224,3,b	;volatile
 14034  003844                     i2l362:
 14035                           
 14036                           ; BSR set to: 55
 14037  003844  B7E0               	btfsc	224,3,b	;volatile
 14038  003846  0012               	return	
 14039  003848  D7FD               	goto	i2l362
 14040  00384A                     __end_of_sendCANmessage:
 14041                           	opt callstack 0
 14042                           
 14043 ;; *************** function ___xxtofl *****************
 14044 ;; Defined at:
 14045 ;;		line 10 in file "D:\MPLAB\pic\sources\c99\common\xxtofl.c"
 14046 ;; Parameters:    Size  Location     Type
 14047 ;;  sign            1    wreg     unsigned char 
 14048 ;;  val             4    1[COMRAM] long 
 14049 ;; Auto vars:     Size  Location     Type
 14050 ;;  sign            1    9[COMRAM] unsigned char 
 14051 ;;  arg             4   11[COMRAM] unsigned long 
 14052 ;;  exp             1   10[COMRAM] unsigned char 
 14053 ;; Return value:  Size  Location     Type
 14054 ;;                  4    1[COMRAM] unsigned char 
 14055 ;; Registers used:
 14056 ;;		wreg, status,2, status,0
 14057 ;; Tracked objects:
 14058 ;;		On entry : 0/0
 14059 ;;		On exit  : 0/0
 14060 ;;		Unchanged: 0/0
 14061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14062 ;;      Params:         4       0       0       0       0       0       0       0       0
 14063 ;;      Locals:         6       0       0       0       0       0       0       0       0
 14064 ;;      Temps:          4       0       0       0       0       0       0       0       0
 14065 ;;      Totals:        14       0       0       0       0       0       0       0       0
 14066 ;;Total ram usage:       14 bytes
 14067 ;; Hardware stack levels used:    1
 14068 ;; This function calls:
 14069 ;;		Nothing
 14070 ;; This function is called by:
 14071 ;;		_canRecInt2
 14072 ;; This function uses a non-reentrant model
 14073 ;;
 14074                           
 14075                           	psect	text52
 14076  00314C                     __ptext52:
 14077                           	opt callstack 0
 14078  00314C                     ___xxtofl:
 14079                           	opt callstack 20
 14080                           
 14081                           ; BSR set to: 55
 14082                           ;incstack = 0
 14083                           ;___xxtofl@sign stored from wreg
 14084  00314C  6E0A               	movwf	___xxtofl@sign,c
 14085  00314E  500A               	movf	___xxtofl@sign,w,c
 14086  003150  A4D8               	btfss	status,2,c
 14087  003152  AE05               	btfss	___xxtofl@val+3,7,c
 14088  003154  D022               	goto	i2l1247
 14089  003156  0060  F008  F006   	movff	___xxtofl@val,??___xxtofl
 14090  00315C  0060  F00C  F007   	movff	___xxtofl@val+1,??___xxtofl+1
 14091  003162  0060  F010  F008   	movff	___xxtofl@val+2,??___xxtofl+2
 14092  003168  0060  F014  F009   	movff	___xxtofl@val+3,??___xxtofl+3
 14093  00316E  1E06               	comf	??___xxtofl,f,c
 14094  003170  1E07               	comf	??___xxtofl+1,f,c
 14095  003172  1E08               	comf	??___xxtofl+2,f,c
 14096  003174  1E09               	comf	??___xxtofl+3,f,c
 14097  003176  2A06               	incf	??___xxtofl,f,c
 14098  003178  0E00               	movlw	0
 14099  00317A  2207               	addwfc	??___xxtofl+1,f,c
 14100  00317C  2208               	addwfc	??___xxtofl+2,f,c
 14101  00317E  2209               	addwfc	??___xxtofl+3,f,c
 14102  003180  0060  F018  F00C   	movff	??___xxtofl,___xxtofl@arg
 14103  003186  0060  F01C  F00D   	movff	??___xxtofl+1,___xxtofl@arg+1
 14104  00318C  0060  F020  F00E   	movff	??___xxtofl+2,___xxtofl@arg+2
 14105  003192  0060  F024  F00F   	movff	??___xxtofl+3,___xxtofl@arg+3
 14106  003198  D00C               	goto	i2l5627
 14107  00319A                     i2l1247:
 14108  00319A  0060  F008  F00C   	movff	___xxtofl@val,___xxtofl@arg
 14109  0031A0  0060  F00C  F00D   	movff	___xxtofl@val+1,___xxtofl@arg+1
 14110  0031A6  0060  F010  F00E   	movff	___xxtofl@val+2,___xxtofl@arg+2
 14111  0031AC  0060  F014  F00F   	movff	___xxtofl@val+3,___xxtofl@arg+3
 14112  0031B2                     i2l5627:
 14113  0031B2  5002               	movf	___xxtofl@val,w,c
 14114  0031B4  1003               	iorwf	___xxtofl@val+1,w,c
 14115  0031B6  1004               	iorwf	___xxtofl@val+2,w,c
 14116  0031B8  1005               	iorwf	___xxtofl@val+3,w,c
 14117  0031BA  A4D8               	btfss	status,2,c
 14118  0031BC  D009               	goto	i2l5633
 14119  0031BE  0E00               	movlw	0
 14120  0031C0  6E02               	movwf	?___xxtofl,c
 14121  0031C2  0E00               	movlw	0
 14122  0031C4  6E03               	movwf	?___xxtofl+1,c
 14123  0031C6  0E00               	movlw	0
 14124  0031C8  6E04               	movwf	?___xxtofl+2,c
 14125  0031CA  0E00               	movlw	0
 14126  0031CC  6E05               	movwf	?___xxtofl+3,c
 14127  0031CE  0012               	return	
 14128  0031D0                     i2l5633:
 14129  0031D0  0E96               	movlw	150
 14130  0031D2  6E0B               	movwf	___xxtofl@exp,c
 14131  0031D4  D006               	goto	i2l5637
 14132  0031D6                     i2l5635:
 14133  0031D6  2A0B               	incf	___xxtofl@exp,f,c
 14134  0031D8  90D8               	bcf	status,0,c
 14135  0031DA  320F               	rrcf	___xxtofl@arg+3,f,c
 14136  0031DC  320E               	rrcf	___xxtofl@arg+2,f,c
 14137  0031DE  320D               	rrcf	___xxtofl@arg+1,f,c
 14138  0031E0  320C               	rrcf	___xxtofl@arg,f,c
 14139  0031E2                     i2l5637:
 14140  0031E2  0E00               	movlw	0
 14141  0031E4  140C               	andwf	___xxtofl@arg,w,c
 14142  0031E6  6E06               	movwf	??___xxtofl& (0+255),c
 14143  0031E8  0E00               	movlw	0
 14144  0031EA  140D               	andwf	___xxtofl@arg+1,w,c
 14145  0031EC  6E07               	movwf	(??___xxtofl+1)& (0+255),c
 14146  0031EE  0E00               	movlw	0
 14147  0031F0  140E               	andwf	___xxtofl@arg+2,w,c
 14148  0031F2  6E08               	movwf	(??___xxtofl+2)& (0+255),c
 14149  0031F4  0EFE               	movlw	254
 14150  0031F6  140F               	andwf	___xxtofl@arg+3,w,c
 14151  0031F8  6E09               	movwf	(??___xxtofl+3)& (0+255),c
 14152  0031FA  5006               	movf	??___xxtofl,w,c
 14153  0031FC  1007               	iorwf	??___xxtofl+1,w,c
 14154  0031FE  1008               	iorwf	??___xxtofl+2,w,c
 14155  003200  1009               	iorwf	??___xxtofl+3,w,c
 14156  003202  B4D8               	btfsc	status,2,c
 14157  003204  D00D               	goto	i2l1254
 14158  003206  D7E7               	goto	i2l5635
 14159  003208                     i2l5639:
 14160  003208  2A0B               	incf	___xxtofl@exp,f,c
 14161  00320A  0E01               	movlw	1
 14162  00320C  260C               	addwf	___xxtofl@arg,f,c
 14163  00320E  0E00               	movlw	0
 14164  003210  220D               	addwfc	___xxtofl@arg+1,f,c
 14165  003212  220E               	addwfc	___xxtofl@arg+2,f,c
 14166  003214  220F               	addwfc	___xxtofl@arg+3,f,c
 14167  003216  90D8               	bcf	status,0,c
 14168  003218  320F               	rrcf	___xxtofl@arg+3,f,c
 14169  00321A  320E               	rrcf	___xxtofl@arg+2,f,c
 14170  00321C  320D               	rrcf	___xxtofl@arg+1,f,c
 14171  00321E  320C               	rrcf	___xxtofl@arg,f,c
 14172  003220                     i2l1254:
 14173  003220  0E00               	movlw	0
 14174  003222  140C               	andwf	___xxtofl@arg,w,c
 14175  003224  6E06               	movwf	??___xxtofl& (0+255),c
 14176  003226  0E00               	movlw	0
 14177  003228  140D               	andwf	___xxtofl@arg+1,w,c
 14178  00322A  6E07               	movwf	(??___xxtofl+1)& (0+255),c
 14179  00322C  0E00               	movlw	0
 14180  00322E  140E               	andwf	___xxtofl@arg+2,w,c
 14181  003230  6E08               	movwf	(??___xxtofl+2)& (0+255),c
 14182  003232  0EFF               	movlw	255
 14183  003234  140F               	andwf	___xxtofl@arg+3,w,c
 14184  003236  6E09               	movwf	(??___xxtofl+3)& (0+255),c
 14185  003238  5006               	movf	??___xxtofl,w,c
 14186  00323A  1007               	iorwf	??___xxtofl+1,w,c
 14187  00323C  1008               	iorwf	??___xxtofl+2,w,c
 14188  00323E  1009               	iorwf	??___xxtofl+3,w,c
 14189  003240  B4D8               	btfsc	status,2,c
 14190  003242  D007               	goto	i2l5647
 14191  003244  D7E1               	goto	i2l5639
 14192  003246                     i2l5645:
 14193  003246  060B               	decf	___xxtofl@exp,f,c
 14194  003248  90D8               	bcf	status,0,c
 14195  00324A  360C               	rlcf	___xxtofl@arg,f,c
 14196  00324C  360D               	rlcf	___xxtofl@arg+1,f,c
 14197  00324E  360E               	rlcf	___xxtofl@arg+2,f,c
 14198  003250  360F               	rlcf	___xxtofl@arg+3,f,c
 14199  003252                     i2l5647:
 14200  003252  BE0E               	btfsc	___xxtofl@arg+2,7,c
 14201  003254  D003               	goto	i2u672_40
 14202  003256  0E02               	movlw	2
 14203  003258  600B               	cpfslt	___xxtofl@exp,c
 14204  00325A  D7F5               	goto	i2l5645
 14205  00325C                     i2u672_40:
 14206  00325C  A00B               	btfss	___xxtofl@exp,0,c
 14207  00325E  9E0E               	bcf	___xxtofl@arg+2,7,c
 14208  003260  90D8               	bcf	status,0,c
 14209  003262  320B               	rrcf	___xxtofl@exp,f,c
 14210  003264  0060  F02C  F006   	movff	___xxtofl@exp,??___xxtofl
 14211  00326A  6A07               	clrf	(??___xxtofl+1)& (0+255),c
 14212  00326C  6A08               	clrf	(??___xxtofl+2)& (0+255),c
 14213  00326E  6A09               	clrf	(??___xxtofl+3)& (0+255),c
 14214  003270  0060  F018  F009   	movff	??___xxtofl,??___xxtofl+3
 14215  003276  6A08               	clrf	??___xxtofl+2,c
 14216  003278  6A07               	clrf	??___xxtofl+1,c
 14217  00327A  6A06               	clrf	??___xxtofl,c
 14218  00327C  5006               	movf	??___xxtofl,w,c
 14219  00327E  120C               	iorwf	___xxtofl@arg,f,c
 14220  003280  5007               	movf	??___xxtofl+1,w,c
 14221  003282  120D               	iorwf	___xxtofl@arg+1,f,c
 14222  003284  5008               	movf	??___xxtofl+2,w,c
 14223  003286  120E               	iorwf	___xxtofl@arg+2,f,c
 14224  003288  5009               	movf	??___xxtofl+3,w,c
 14225  00328A  120F               	iorwf	___xxtofl@arg+3,f,c
 14226  00328C  500A               	movf	___xxtofl@sign,w,c
 14227  00328E  A4D8               	btfss	status,2,c
 14228  003290  AE05               	btfss	___xxtofl@val+3,7,c
 14229  003292  D001               	goto	i2l5663
 14230  003294  8E0F               	bsf	___xxtofl@arg+3,7,c
 14231  003296                     i2l5663:
 14232  003296  0060  F030  F002   	movff	___xxtofl@arg,?___xxtofl
 14233  00329C  0060  F034  F003   	movff	___xxtofl@arg+1,?___xxtofl+1
 14234  0032A2  0060  F038  F004   	movff	___xxtofl@arg+2,?___xxtofl+2
 14235  0032A8  0060  F03C  F005   	movff	___xxtofl@arg+3,?___xxtofl+3
 14236  0032AE  0012               	return		;funcret
 14237  0032B0                     __end_of___xxtofl:
 14238                           	opt callstack 0
 14239                           
 14240 ;; *************** function _canRecInt *****************
 14241 ;; Defined at:
 14242 ;;		line 513 in file "MainCode.c"
 14243 ;; Parameters:    Size  Location     Type
 14244 ;;		None
 14245 ;; Auto vars:     Size  Location     Type
 14246 ;;		None
 14247 ;; Return value:  Size  Location     Type
 14248 ;;                  1    wreg      void 
 14249 ;; Registers used:
 14250 ;;		wreg, status,2
 14251 ;; Tracked objects:
 14252 ;;		On entry : 0/0
 14253 ;;		On exit  : 0/0
 14254 ;;		Unchanged: 0/0
 14255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14256 ;;      Params:         0       0       0       0       0       0       0       0       0
 14257 ;;      Locals:         0       0       0       0       0       0       0       0       0
 14258 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14259 ;;      Totals:         0       0       0       0       0       0       0       0       0
 14260 ;;Total ram usage:        0 bytes
 14261 ;; Hardware stack levels used:    1
 14262 ;; This function calls:
 14263 ;;		Nothing
 14264 ;; This function is called by:
 14265 ;;		Interrupt level 2
 14266 ;; This function uses a non-reentrant model
 14267 ;;
 14268                           
 14269                           	psect	text53
 14270  0046A0                     __ptext53:
 14271                           	opt callstack 0
 14272  0046A0                     _canRecInt:
 14273                           	opt callstack 21
 14274                           
 14275                           ;MainCode.c: 514:         Lcd_Cmd(y);
 14276                           
 14277                           ;incstack = 0
 14278  0046A0  0E00               	movlw	0
 14279  0046A2  0101               	movlb	1	; () banked
 14280  0046A4  6F11               	movwf	(_tick_count+1)& (0+255),b
 14281  0046A6  6910               	setf	_tick_count& (0+255),b
 14282                           
 14283                           ; BSR set to: 1
 14284                           ;MainCode.c: 515:     } else if (a == 4) {
 14285  0046A8  0139               	movlb	57	; () banked
 14286  0046AA  93A5               	bcf	165,1,b	;volatile
 14287                           
 14288                           ; BSR set to: 57
 14289  0046AC  0011               	retfie		f
 14290  0046AE                     __end_of_canRecInt:
 14291                           	opt callstack 0
 14292                           
 14293                           ;
 14294                           ; Interrupt Vector Table @ 0x8
 14295                           ;
 14296                           
 14297                           	psect	ivt0x8
 14298  000008                     __pivt0x8:
 14299                           	opt callstack 0
 14300  000008                     ivt0x8_base:
 14301                           	opt callstack 0
 14302                           
 14303                           ; Vector 0 : SWINT
 14304  000008  0029               	dw	ivt0x8_undefint shr (0+2)
 14305                           
 14306                           ; Vector 1 : HLVD
 14307  00000A  0029               	dw	ivt0x8_undefint shr (0+2)
 14308                           
 14309                           ; Vector 2 : OSF
 14310  00000C  0029               	dw	ivt0x8_undefint shr (0+2)
 14311                           
 14312                           ; Vector 3 : CSW
 14313  00000E  0029               	dw	ivt0x8_undefint shr (0+2)
 14314                           
 14315                           ; Vector 4 : NVM
 14316  000010  0029               	dw	ivt0x8_undefint shr (0+2)
 14317                           
 14318                           ; Vector 5 : SCAN
 14319  000012  0029               	dw	ivt0x8_undefint shr (0+2)
 14320                           
 14321                           ; Vector 6 : CRC
 14322  000014  0029               	dw	ivt0x8_undefint shr (0+2)
 14323                           
 14324                           ; Vector 7 : IOC
 14325  000016  0029               	dw	ivt0x8_undefint shr (0+2)
 14326                           
 14327                           ; Vector 8 : INT0
 14328  000018  10EC               	dw	_encInt shr (0+2)
 14329                           
 14330                           ; Vector 9 : ZCD
 14331  00001A  0029               	dw	ivt0x8_undefint shr (0+2)
 14332                           
 14333                           ; Vector 10 : AD
 14334  00001C  11B4               	dw	_adcInt shr (0+2)
 14335                           
 14336                           ; Vector 11 : ADT
 14337  00001E  0029               	dw	ivt0x8_undefint shr (0+2)
 14338                           
 14339                           ; Vector 12 : CMP1
 14340  000020  0029               	dw	ivt0x8_undefint shr (0+2)
 14341                           
 14342                           ; Vector 13 : SMT1
 14343  000022  0029               	dw	ivt0x8_undefint shr (0+2)
 14344                           
 14345                           ; Vector 14 : SMT1PRA
 14346  000024  0029               	dw	ivt0x8_undefint shr (0+2)
 14347                           
 14348                           ; Vector 15 : SMT1PWA
 14349  000026  0029               	dw	ivt0x8_undefint shr (0+2)
 14350                           
 14351                           ; Vector 16 : DMA1SCNT
 14352  000028  0029               	dw	ivt0x8_undefint shr (0+2)
 14353                           
 14354                           ; Vector 17 : DMA1DCNT
 14355  00002A  0029               	dw	ivt0x8_undefint shr (0+2)
 14356                           
 14357                           ; Vector 18 : DMA1OR
 14358  00002C  0029               	dw	ivt0x8_undefint shr (0+2)
 14359                           
 14360                           ; Vector 19 : DMA1A
 14361  00002E  0029               	dw	ivt0x8_undefint shr (0+2)
 14362                           
 14363                           ; Vector 20 : SPI1RX
 14364  000030  0029               	dw	ivt0x8_undefint shr (0+2)
 14365                           
 14366                           ; Vector 21 : SPI1TX
 14367  000032  0029               	dw	ivt0x8_undefint shr (0+2)
 14368                           
 14369                           ; Vector 22 : SPI1
 14370  000034  0029               	dw	ivt0x8_undefint shr (0+2)
 14371                           
 14372                           ; Vector 23 : I2C1RX
 14373  000036  0029               	dw	ivt0x8_undefint shr (0+2)
 14374                           
 14375                           ; Vector 24 : I2C1TX
 14376  000038  0029               	dw	ivt0x8_undefint shr (0+2)
 14377                           
 14378                           ; Vector 25 : I2C1
 14379  00003A  0029               	dw	ivt0x8_undefint shr (0+2)
 14380                           
 14381                           ; Vector 26 : I2C1E
 14382  00003C  0029               	dw	ivt0x8_undefint shr (0+2)
 14383                           
 14384                           ; Vector 27 : U1RX
 14385  00003E  0029               	dw	ivt0x8_undefint shr (0+2)
 14386                           
 14387                           ; Vector 28 : U1TX
 14388  000040  0029               	dw	ivt0x8_undefint shr (0+2)
 14389                           
 14390                           ; Vector 29 : U1E
 14391  000042  0029               	dw	ivt0x8_undefint shr (0+2)
 14392                           
 14393                           ; Vector 30 : U1
 14394  000044  0029               	dw	ivt0x8_undefint shr (0+2)
 14395                           
 14396                           ; Vector 31 : TMR0
 14397  000046  11AC               	dw	_buzzerInt shr (0+2)
 14398                           
 14399                           ; Vector 32 : TMR1
 14400  000048  0029               	dw	ivt0x8_undefint shr (0+2)
 14401                           
 14402                           ; Vector 33 : TMR1G
 14403  00004A  0029               	dw	ivt0x8_undefint shr (0+2)
 14404                           
 14405                           ; Vector 34 : TMR2
 14406  00004C  0029               	dw	ivt0x8_undefint shr (0+2)
 14407                           
 14408                           ; Vector 35 : CCP1
 14409  00004E  0029               	dw	ivt0x8_undefint shr (0+2)
 14410                           
 14411                           ; Vector 36 : NCO1
 14412  000050  0029               	dw	ivt0x8_undefint shr (0+2)
 14413                           
 14414                           ; Vector 37 : CWG1
 14415  000052  0029               	dw	ivt0x8_undefint shr (0+2)
 14416                           
 14417                           ; Vector 38 : CLC1
 14418  000054  0029               	dw	ivt0x8_undefint shr (0+2)
 14419                           
 14420                           ; Vector 39 : INT1
 14421  000056  0029               	dw	ivt0x8_undefint shr (0+2)
 14422                           
 14423                           ; Vector 40 : RXB0IF
 14424  000058  0D03               	dw	_canRecInt2 shr (0+2)
 14425                           
 14426                           ; Vector 41 : RXB1IF
 14427  00005A  11A8               	dw	_canRecInt shr (0+2)
 14428                           
 14429                           ; Vector 42 : TXB0IF
 14430  00005C  0029               	dw	ivt0x8_undefint shr (0+2)
 14431                           
 14432                           ; Vector 43 : TXB1IF
 14433  00005E  0029               	dw	ivt0x8_undefint shr (0+2)
 14434                           
 14435                           ; Vector 44 : TXB2IF
 14436  000060  0029               	dw	ivt0x8_undefint shr (0+2)
 14437                           
 14438                           ; Vector 45 : ERRIF
 14439  000062  0029               	dw	ivt0x8_undefint shr (0+2)
 14440                           
 14441                           ; Vector 46 : WAKIF
 14442  000064  0029               	dw	ivt0x8_undefint shr (0+2)
 14443                           
 14444                           ; Vector 47 : IRXIF
 14445  000066  0029               	dw	ivt0x8_undefint shr (0+2)
 14446                           
 14447                           ; Vector 48 : CMP2
 14448  000068  0029               	dw	ivt0x8_undefint shr (0+2)
 14449                           
 14450                           ; Vector 49 : SMT2
 14451  00006A  0029               	dw	ivt0x8_undefint shr (0+2)
 14452                           
 14453                           ; Vector 50 : SMT2PRA
 14454  00006C  0029               	dw	ivt0x8_undefint shr (0+2)
 14455                           
 14456                           ; Vector 51 : SMT2PWA
 14457  00006E  0029               	dw	ivt0x8_undefint shr (0+2)
 14458                           
 14459                           ; Vector 52 : DMA2SCNT
 14460  000070  0029               	dw	ivt0x8_undefint shr (0+2)
 14461                           
 14462                           ; Vector 53 : DMA2DCNT
 14463  000072  0029               	dw	ivt0x8_undefint shr (0+2)
 14464                           
 14465                           ; Vector 54 : DMA2OR
 14466  000074  0029               	dw	ivt0x8_undefint shr (0+2)
 14467                           
 14468                           ; Vector 55 : DMA2A
 14469  000076  0029               	dw	ivt0x8_undefint shr (0+2)
 14470                           
 14471                           ; Vector 56 : I2C2RX
 14472  000078  0029               	dw	ivt0x8_undefint shr (0+2)
 14473                           
 14474                           ; Vector 57 : I2C2TX
 14475  00007A  0029               	dw	ivt0x8_undefint shr (0+2)
 14476                           
 14477                           ; Vector 58 : I2C2
 14478  00007C  0029               	dw	ivt0x8_undefint shr (0+2)
 14479                           
 14480                           ; Vector 59 : I2C2E
 14481  00007E  0029               	dw	ivt0x8_undefint shr (0+2)
 14482                           
 14483                           ; Vector 60 : U2RX
 14484  000080  0029               	dw	ivt0x8_undefint shr (0+2)
 14485                           
 14486                           ; Vector 61 : U2TX
 14487  000082  0029               	dw	ivt0x8_undefint shr (0+2)
 14488                           
 14489                           ; Vector 62 : U2E
 14490  000084  0029               	dw	ivt0x8_undefint shr (0+2)
 14491                           
 14492                           ; Vector 63 : U2
 14493  000086  0029               	dw	ivt0x8_undefint shr (0+2)
 14494                           
 14495                           ; Vector 64 : TMR3
 14496  000088  0029               	dw	ivt0x8_undefint shr (0+2)
 14497                           
 14498                           ; Vector 65 : TMR3G
 14499  00008A  0029               	dw	ivt0x8_undefint shr (0+2)
 14500                           
 14501                           ; Vector 66 : TMR4
 14502  00008C  0029               	dw	ivt0x8_undefint shr (0+2)
 14503                           
 14504                           ; Vector 67 : CCP2
 14505  00008E  0029               	dw	ivt0x8_undefint shr (0+2)
 14506                           
 14507                           ; Vector 68 : CWG2
 14508  000090  0029               	dw	ivt0x8_undefint shr (0+2)
 14509                           
 14510                           ; Vector 69 : CLC2
 14511  000092  0029               	dw	ivt0x8_undefint shr (0+2)
 14512                           
 14513                           ; Vector 70 : INT2
 14514  000094  0029               	dw	ivt0x8_undefint shr (0+2)
 14515                           
 14516                           ; Vector 71 : TMR5
 14517  000096  0029               	dw	ivt0x8_undefint shr (0+2)
 14518                           
 14519                           ; Vector 72 : TMR5G
 14520  000098  0029               	dw	ivt0x8_undefint shr (0+2)
 14521                           
 14522                           ; Vector 73 : TMR6
 14523  00009A  0029               	dw	ivt0x8_undefint shr (0+2)
 14524                           
 14525                           ; Vector 74 : CCP3
 14526  00009C  0029               	dw	ivt0x8_undefint shr (0+2)
 14527                           
 14528                           ; Vector 75 : CWG3
 14529  00009E  0029               	dw	ivt0x8_undefint shr (0+2)
 14530                           
 14531                           ; Vector 76 : CLC3
 14532  0000A0  0029               	dw	ivt0x8_undefint shr (0+2)
 14533                           
 14534                           ; Vector 77 : CCP4
 14535  0000A2  0029               	dw	ivt0x8_undefint shr (0+2)
 14536                           
 14537                           ; Vector 78 : CLC4
 14538  0000A4  0029               	dw	ivt0x8_undefint shr (0+2)
 14539  0000A6                     ivt0x8_undefint:
 14540                           	opt callstack 0
 14541  0000A6  00FF               	reset	
 14542                           
 14543                           	psect	param0
 14544  0000                     tosu	equ	0x3FFF
 14545                           tosh	equ	0x3FFE
 14546                           tosl	equ	0x3FFD
 14547                           stkptr	equ	0x3FFC
 14548                           pclatu	equ	0x3FFB
 14549                           pclath	equ	0x3FFA
 14550                           pcl	equ	0x3FF9
 14551                           tblptru	equ	0x3FF8
 14552                           tblptrh	equ	0x3FF7
 14553                           tblptrl	equ	0x3FF6
 14554                           tablat	equ	0x3FF5
 14555                           prodh	equ	0x3FF4
 14556                           prodl	equ	0x3FF3
 14557                           indf0	equ	0x3FEF
 14558                           postinc0	equ	0x3FEE
 14559                           postdec0	equ	0x3FED
 14560                           preinc0	equ	0x3FEC
 14561                           plusw0	equ	0x3FEB
 14562                           fsr0h	equ	0x3FEA
 14563                           fsr0l	equ	0x3FE9
 14564                           wreg	equ	0x3FE8
 14565                           indf1	equ	0x3FE7
 14566                           postinc1	equ	0x3FE6
 14567                           postdec1	equ	0x3FE5
 14568                           preinc1	equ	0x3FE4
 14569                           plusw1	equ	0x3FE3
 14570                           fsr1h	equ	0x3FE2
 14571                           fsr1l	equ	0x3FE1
 14572                           bsr	equ	0x3FE0
 14573                           indf2	equ	0x3FDF
 14574                           postinc2	equ	0x3FDE
 14575                           postdec2	equ	0x3FDD
 14576                           preinc2	equ	0x3FDC
 14577                           plusw2	equ	0x3FDB
 14578                           fsr2h	equ	0x3FDA
 14579                           fsr2l	equ	0x3FD9
 14580                           status	equ	0x3FD8


Data Sizes:
    Strings     388
    Constant    0
    Data        508
    BSS         117
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     74      92
    BANK0           160    155     159
    BANK1           256     86     189
    BANK2           256      0     140
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_46(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_46(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_41(CODE[4]), STR_40(CODE[4]), STR_37(CODE[4]), STR_36(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_41(CODE[4]), STR_40(CODE[4]), STR_37(CODE[4]), STR_36(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_26(CODE[4]), STR_22(CODE[6]), STR_17(CODE[4]), STR_15(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@str_1459(BANK1[20]), main@str_1454(BANK1[8]), main@str_1448(BANK1[20]), main@str(BANK1[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@str_1459(BANK1[20]), main@str_1454(BANK1[8]), main@str_1448(BANK1[20]), main@str(BANK1[20]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    S2333_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@str_1459(BANK1[20]), main@str_1454(BANK1[8]), main@str_1448(BANK1[20]), main@str(BANK1[20]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@str_1459(BANK1[20]), main@str_1454(BANK1[8]), main@str_1448(BANK1[20]), main@str(BANK1[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_26(CODE[4]), STR_22(CODE[6]), STR_17(CODE[4]), STR_15(CODE[4]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_26(CODE[4]), STR_22(CODE[6]), STR_17(CODE[4]), STR_15(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_26(CODE[4]), STR_22(CODE[6]), STR_17(CODE[4]), STR_15(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sendCANmessage@message	PTR int  size(2) Largest target is 16
		 -> canRecInt2@message(COMRAM[16]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 360
		 -> STR_35(CODE[6]), STR_34(CODE[5]), STR_33(CODE[6]), STR_32(CODE[5]), 
		 -> STR_31(CODE[6]), STR_30(CODE[19]), STR_29(CODE[16]), STR_28(CODE[15]), 
		 -> STR_27(CODE[20]), STR_25(CODE[14]), STR_24(CODE[6]), STR_23(CODE[15]), 
		 -> charging_state_lut(BANK2[140]), main@str_1454(BANK1[8]), STR_21(CODE[10]), STR_20(CODE[15]), 
		 -> STR_19(CODE[17]), STR_18(CODE[19]), STR_16(CODE[20]), master_state_lut(BIGRAM[360]), 
		 -> STR_14(CODE[14]), STR_13(CODE[6]), STR_12(CODE[12]), STR_11(CODE[15]), 
		 -> STR_10(CODE[20]), STR_9(CODE[11]), STR_8(CODE[16]), STR_7(CODE[17]), 
		 -> STR_6(CODE[6]), STR_5(CODE[19]), STR_4(CODE[15]), STR_3(CODE[16]), 
		 -> STR_2(CODE[18]), STR_1(CODE[21]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _buzzerInt in COMRAM

    None.

Critical Paths under _encInt in COMRAM

    None.

Critical Paths under _adcInt in COMRAM

    None.

Critical Paths under _canRecInt2 in COMRAM

    _canRecInt2->i2___fladd
    i2___fldiv->___xxtofl
    i2___fladd->i2___fldiv

Critical Paths under _canRecInt in COMRAM

    None.

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _MenuYesNo->_Lcd_Write_String
    _Lcd_Write_String->___wmul
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _buzzerInt in BANK0

    None.

Critical Paths under _encInt in BANK0

    None.

Critical Paths under _adcInt in BANK0

    None.

Critical Paths under _canRecInt2 in BANK0

    None.

Critical Paths under _canRecInt in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _buzzerInt in BANK1

    None.

Critical Paths under _encInt in BANK1

    None.

Critical Paths under _adcInt in BANK1

    None.

Critical Paths under _canRecInt2 in BANK1

    None.

Critical Paths under _canRecInt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _buzzerInt in BANK2

    None.

Critical Paths under _encInt in BANK2

    None.

Critical Paths under _adcInt in BANK2

    None.

Critical Paths under _canRecInt2 in BANK2

    None.

Critical Paths under _canRecInt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _buzzerInt in BANK3

    None.

Critical Paths under _encInt in BANK3

    None.

Critical Paths under _adcInt in BANK3

    None.

Critical Paths under _canRecInt2 in BANK3

    None.

Critical Paths under _canRecInt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _buzzerInt in BANK4

    None.

Critical Paths under _encInt in BANK4

    None.

Critical Paths under _adcInt in BANK4

    None.

Critical Paths under _canRecInt2 in BANK4

    None.

Critical Paths under _canRecInt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _buzzerInt in BANK5

    None.

Critical Paths under _encInt in BANK5

    None.

Critical Paths under _adcInt in BANK5

    None.

Critical Paths under _canRecInt2 in BANK5

    None.

Critical Paths under _canRecInt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _buzzerInt in BANK6

    None.

Critical Paths under _encInt in BANK6

    None.

Critical Paths under _adcInt in BANK6

    None.

Critical Paths under _canRecInt2 in BANK6

    None.

Critical Paths under _canRecInt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _buzzerInt in BANK7

    None.

Critical Paths under _encInt in BANK7

    None.

Critical Paths under _adcInt in BANK7

    None.

Critical Paths under _canRecInt2 in BANK7

    None.

Critical Paths under _canRecInt in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                70    70      0   48470
                                            153 BANK0      2     2      0
                                             18 BANK1     68    68      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                          _MenuYesNo
                             ___wmul
                         _initBuzzer
                            _initCAN
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   34698
                                              0 BANK1     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   33881
                                            145 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           50    44      6   33497
                                            113 BANK0     32    26      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   22069
                                             45 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 BANK0      8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2989
                                             25 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2514
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2352
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     638
                                             25 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2107
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5042
                                             27 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3393
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 BANK0     18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1852
                                              7 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     313
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     859
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _initCAN                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initBuzzer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MenuYesNo                                           24    24      0    6239
                                             12 BANK0      4     4      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     6     4      2    2928
                                              6 BANK0      6     4      2
                     _Lcd_Write_Char
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       3     3      0     178
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1    3310
                                              3 BANK0      5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              3 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     2      0     110
                                              1 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _buzzerInt                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _encInt                                              1     1      0       0
                                              0 COMRAM     1     1      0
                         _playBuzzer
 ---------------------------------------------------------------------------------
 (11) _playBuzzer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _adcInt                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _canRecInt2                                         18    18      0    4184
                                             56 COMRAM    18    18      0
                           ___xxtofl
                     _sendCANmessage
                          i2___fladd
                          i2___fldiv
 ---------------------------------------------------------------------------------
 (11) i2___fldiv                                          25    17      8    1173
                                             15 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___fladd                                          16     8      8    2036
                                             40 COMRAM    16     8      8
                           ___xxtofl (ARG)
                          i2___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (11) _sendCANmessage                                      8     2      6     470
                                              1 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (11) ___xxtofl                                           14    10      4     474
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _canRecInt                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
     ___wmul (ARG)
   _MenuYesNo
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
       ___wmul (ARG)
   ___wmul
   _initBuzzer
   _initCAN
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 _buzzerInt (ROOT)

 _encInt (ROOT)
   _playBuzzer

 _adcInt (ROOT)

 _canRecInt2 (ROOT)
   ___xxtofl
   _sendCANmessage
   i2___fladd
     ___xxtofl (ARG)
     i2___fldiv (ARG)
       ___xxtofl (ARG)
   i2___fldiv
     ___xxtofl (ARG)

 _canRecInt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     168      20       17.6%
EEDATA             400      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      8C       9       54.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     56      BD       7       73.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9B      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     4A      5C       1       96.8%
BITSFR_9             0      0       0     200        0.0%
SFR_9                0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     244       3        0.0%
DATA                 0      0     3AC      21        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Aug 27 20:26:59 2020

              ___fldiv@aexp 0078                ___fldiv@bexp 0077                ___fldiv@sign 0070  
               __CFG_CP$OFF 000000                ___awdiv@sign 0065         ___wmul@multiplicand 0062  
               __CFG_LVP$ON 000000                         l210 0EB4                         l300 4648  
                       l204 0E36                         l213 0EBA                         l302 4652  
                       l230 109C                         l304 465C                         l225 10B0  
                       l306 4666                         l251 1304                         l243 1292  
                       l235 10C4                         l219 0F38                         l254 130A  
                       l238 1198                         l423 3BAE                         l247 1298  
                       l248 12F4                         l185 0CDA                         l434 24F6  
                       l178 1342                         l195 0D5E                         l179 0C5C  
                       l436 2502                         l516 082E                         l189 0CE0  
                       l198 0D64                         l490 047C                         l857 38E0  
               i2___fladd@a 002D                 i2___fladd@b 0029                         _abs 4480  
                       _pad 3B70                 i2___fldiv@a 0014                 i2___fldiv@b 0010  
              ___awmod@sign 0065                         wreg 003FE8                ___flmul@aexp 0071  
              ___flmul@bexp 0072                ___flmul@sign 006C                ___flmul@temp 0077  
              ___flmul@prod 0073               __CFG_BBEN$OFF 000000                __CFG_ZCD$OFF 000000  
              ___fltol@exp1 0069                        l1121 1F46                        l1122 1F24  
                      ?_abs 0072                        l1206 1AAE                        l1223 1DA2  
                      l1215 1D0C                        l1216 1D08                        l1137 2018  
                      l1321 2DCA                        l1401 43A0                        l1146 2080  
                      l1147 207C                        l1309 2FD6                        l1176 28AA  
                      l1187 2918                        l4011 1E12                        l1188 2914  
                      l4101 1F6A                        l1278 44B2                        l4111 1F90  
                      l4031 1E56                        l4007 1E0E                        l4201 3B92  
                      l4211 3BD6                        l4043 1E7A                        l4035 1E5A  
                      l4205 3BA6                        l4109 1F8C                        l5005 0464  
                      l4311 3306                        l4215 3C0A                        l4207 3BB8  
                      l4119 1FA2                        l4231 3718                        l5023 04DC  
                      l5015 0490                        l4305 32DE                        l4137 203C  
                      l4153 205C                        l4129 2008                        l4073 1ED4  
                      l4241 376A                        l5041 0526                        l5025 04E0  
                      l5009 048A                        l5211 2E8E                        l4147 2052  
                      l4235 3722                        l5107 0924                        l5115 0944  
                      l5123 0968                        l5131 0A3A                        l5051 0570  
                      l5035 0502                        l5221 2EE0                        l5213 2E92  
                      l4317 332C                        l4333 33B2                        l4421 27CA  
                      l4413 2796                        l4181 20FC                        l4173 20D6  
                      l4085 1F32                        l5045 0536                        l5231 2F00  
                      l4319 3340                        l4087 1F36                        l4247 424C  
                      l5143 0A7C                        l6111 0D52                        l6103 0D3C  
                      l5233 2F2C                        l4337 33D8                        l4329 339C  
                      l4353 35A2                        l4505 29C8                        l4409 2792  
                      l4185 2104                        l4265 2D18                        l5161 0AD4  
                      l5081 0826                        l5073 07AA                        l5401 19BE  
                      l5321 1494                        l5227 2EF2                        l4507 29CA  
                      l4435 2800                        l4427 27E8                        l4603 1CD2  
                      l4531 1A6E                        l4187 2106                        l4283 2E60  
                      l4275 2DEC                        l5171 0B38                        l5083 0848  
                      l5059 06CC                        l5411 19E6                        l6211 0FA4  
                      l6131 0DD6                        l5237 2F6A                        l5229 2EFA  
                      l4373 3654                        l4365 3618                        l4357 35BC  
                      l4349 357E                        l4453 2882                        l4445 285A  
                      l5181 0B64                        l5405 19CA                        l5341 15CA  
                      l5317 1458                        ?_pad 0070                        l4359 35D0  
                      l4711 411A                        l4703 4100                        l4471 28DE  
                      l4623 1D60                        l4527 1A5A                        l4279 2E32  
                      l5159 0ACA                        l5095 08F6                        l5319 1482  
                      l6127 0DB8                        l4369 362E                        l4713 4122  
                      l4465 28C0                        l4393 2756                        l4545 1A9A  
                      l4529 1A5E                        l5257 3AE0                        l5337 158E  
                      l6233 103A                        l5443 3D5C                        l5435 3D32  
                      l5427 3D08                        l4723 4144                        l4707 410C  
                      l4491 296C                        l4459 28A8                        l4627 1D7E  
                      l4555 1ACC                        l4547 1A9E                        l4811 39B2  
                      l4803 399E                        l5259 3AEE                        l5339 15B8  
                      l5453 406E                        l5509 4226                        l4389 2752  
                      l5197 0BC6                        l5357 16CC                        l4903 26D4  
                      l4671 4014                        l4727 4152                        l4719 413A  
                      l4495 2990                        l4743 3FD4                        l4735 3F82  
                      l4751 3880                        l4639 1DC2                        l5375 1838  
                      l5367 17BA                        l5463 4176                        l6191 0F2C  
                      l6183 0F16                        l6167 0EA8                        l6159 0E92  
                      l6087 0CCE                        l6079 0CB8                        l4841 4654  
                      l5457 40AE                        l4673 401C                        l4665 3FFE  
                      l4817 39CE                        l4809 39A6                        l4921 010E  
                      l5465 41A6                        l6193 0F3E                        l5563 3DBC  
                      l5483 41DE                        l4907 26EE                        l4691 4054  
                      l4683 403C                        l4659 3FEE                        l4499 29BA  
                      l4739 3FB6                        l4755 38B4                        l5395 1972  
                      l5379 1874                        l6267 1118                        l4845 465E  
                      l4837 464A                        l5557 3D88                        l4829 4434  
                      l3965 3C44                        l4765 3918                        l4597 1CB4  
                      l4773 451C                        l4933 0140                        l4941 0158  
                      l5575 3E0A                        l3975 444A                        l3983 457A  
                      l4855 24DA                        l4687 4046                        l4759 38CA  
                      l4783 393C                        l4951 01CC                        l6295 1206  
                      l5569 3DF0                        l3985 4580                        l4873 2530  
                      l4953 01E4                        l3979 4468                        l4883 266E  
                      l4955 01EE                        l4869 2520                        l4799 398E  
                      l4983 02FC                        l4959 0222                        l4993 03FA  
                      l4969 0296                        l4977 02B0                        l4987 0346  
                      l4989 03AE                        STR_1 7E7B                        STR_2 7EF1  
                      STR_3 7F35                        STR_4 7F55                        STR_5 7EDE  
                      STR_6 7FC6                        STR_7 7F03                        STR_8 7F25  
                      STR_9 7FAB                        u5000 299E                        u4120 1F4E  
                      u5100 1C6E                        u4070 1EF8                        u4080 1F08  
                      u5105 1C64                        u4410 4490                        u4330 20E2  
                      u4250 2060                        u4090 1F0A                        u6010 079A  
                      u5300 4126                        u5140 1D02                        u4420 36DE  
                      u4270 2076                        u4510 4386                        u6110 0A5E  
                      u5240 4020                        u4520 4388                        u6200 0BB2  
                      u4425 36D2                        u5090 1ABA                        u4610 2E12  
                      u5500 4430                        u4700 3344                        u5180 1D6E  
                      u5420 392A                        u4540 2CDE                        u6230 2EDC  
                      u3910 3C3C                        u5350 3FD0                        u5190 1D8C  
                      u5430 3962                        u4470 3762                        u4550 2CFE  
                      u4615 2E08                        u4640 45D0                        u4480 3764  
                      u4465 3744                        u4545 2CD4                        u4650 45D2  
                      u6250 2F9E                        u3930 3C84                        u5610 251A  
                      u4490 4292                        u6170 0B4E                        u6330 3B44  
                      u5435 3958                        u6260 2FA0                        u5620 267E  
                      u6420 160C                        u5550 24AC                        u5470 39B8  
                      u4590 2DAA                        u6190 0BB0                        u6510 190E  
                      u6430 160E                        u4575 2D32                        u6600 40E2  
                      u4760 35D4                        u5640 26A0                        u5560 24AE  
                      u4576 2D38                        u3960 4564                        u5800 0270  
                      u5720 0130                        u6520 1910                        u6440 161A  
                      u4681 330C                        u5641 269E                        u4577 2D46  
                      u4497 4284                        u5650 26AE                        u3970 4566  
                      u6370 14D6                        u4595 2DA0                        u5660 26B2  
                      u5900 04A8                        u6380 14D8                        u5590 24EC  
                      u4950 290E                        u5750 01A4                        u6390 14E4  
                      u6607 40D4                        u5680 26BE                        u5840 0434  
                      u5760 01A6                        u6480 1710                        u7610 10A0  
                      u5940 04FE                        u7620 10A4                        u6590 40A4  
                      u4990 297A                        u5870 0472                        u5790 026E  
                      u6597 4096                        u7807 3E6E                        u7817 3E86  
                      u7827 4682                        u7767 0E26                        u7777 44E0  
                      u7787 44F4                        u7797 3E52               __CFG_FCMEN$ON 000000  
                      abs@a 0072           ?_Lcd_Write_String 0066                        _dbuf 0113  
                      _atoi 2E7A                        _main 0C06                        _dtoa 2472  
                      _prec 00FB                        _nout 004B                        pad@i 0077  
                      pad@p 0074                        fsr1h 003FE2                        fsr2h 003FDA  
                      indf1 003FE7                        indf2 003FDF                        fsr1l 003FE1  
                      pad@w 0079                        fsr2l 003FD9               ___fpclassifyf 3686  
                      prodh 003FF4                        prodl 003FF3                        start 00A8  
        ??_Lcd_Write_String 0068             ___fldiv@new_exp 0071             __end_of_Lcd_Cmd 4690  
              _tolower$2405 006C               __CFG_CSWEN$ON 000000                ___param_bank 000000  
                     ??_abs 0074                       ??_pad 0076               ___fltol@sign1 0068  
           __end_of___aodiv 340A                       ?_atoi 0067             __end_of___fladd 212A  
                     ?_main 0001                       ?_dtoa 007B             __end_of___aomod 3686  
           __end_of___fldiv 29D2             __end_of___awdiv 4062             __end_of___flneg 4536  
                     STR_10 7E90                       STR_11 7F55                       STR_12 7F9F  
                     STR_20 7F82                       STR_13 7FC6                       STR_21 7FB6  
                     STR_22 7FCC                       STR_14 7F91                       STR_30 7EB8  
                     STR_15 7FF8                       STR_31 7FD8                       STR_23 7F64  
                     STR_24 7FC6                       STR_40 7FEC                       STR_32 7FDE  
                     STR_16 7EA4                       STR_25 7F91                       STR_17 7FF8  
                     STR_41 7FF4                       STR_33 7FC0               __CFG_WDTE$OFF 000000  
                     STR_26 7FF8                       STR_34 7FE3                       STR_18 7ECB  
                     STR_27 7EA4                       STR_35 7FD2                       STR_19 7F14  
                     STR_44 7FFC                       STR_36 7FE8                       STR_28 7F73  
           __end_of___awmod 4160                       STR_37 7FF0                       STR_29 7F45  
                     STR_46 7FFC             __end_of___flmul 1DE0             __end_of___flsub 42FC  
           __end_of___fltol 39E8             ___awdiv@divisor 0062              __CFG_DEBUG$OFF 000000  
                     i2l362 3844                       i2l290 346E                       i2l283 354A  
                     i2l285 3412                       i2l286 3548                       i2l287 343C  
                     i2l289 3462             ___awdiv@counter 0064                vfpfcnvrt@fmt 00D3  
                     _TMR0H 003FB7                       _TMR1H 003FB1                       _TMR0L 003FB6  
                     _TMR1L 003FB0     __size_of_Lcd_Set_Cursor 00AC                       _TRISC 003FC4  
             i2___fladd@grs 0038               __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000  
             __CFG_WRTD$OFF 000000             __end_of_initCAN 4234                       _flags 00FD  
                     _fputc 3C2A                       _fputs 443E             __end_of_isdigit 45D8  
             i2___fldiv@grs 0023          __CFG_MCLRE$EXTMCLR 000000               i2___fldiv@rem 001C  
                     atoi@n 0074                       pad@fp 0070                       atoi@s 0067  
              main@str_1454 01B1                main@str_1448 0189                main@str_1459 019D  
                     _width 004D                       _state 0112                       _putch 46CC  
                     dtoa@d 007D                       dtoa@i 009D                       dtoa@n 0095  
                     dtoa@p 008F                       dtoa@s 0093                       dtoa@w 0091  
           __end_of_isspace 443E             __end_of_isupper 456C                       tablat 003FF5  
      sendCANmessage@length 0006                       status 003FD8             __end_of_sprintf 4358  
            ?___fpclassifyf 0060             __end_of_tolower 43AE             __end_of_strncmp 3B70  
        __size_ofi2___fladd 0348          __size_ofi2___fldiv 02AC            __end_of_Lcd_Init 3EC0  
          __end_of_Lcd_Port 466A             __initialization 39E8                __end_of_atoi 2FE4  
              __end_of_main 138E                __end_of_dtoa 2724              __CFG_SAFEN$OFF 000000  
                    ??_atoi 0069                      ??_main 00F9                      ??_dtoa 0085  
            __CFG_PR1WAY$ON 000000          __size_of_Lcd_Clear 000E               __activetblptr 000002  
            _charging_state 01B9              __CFG_MVECEN$ON 000000            ??_sendCANmessage 0008  
                    ?_fputc 0060                      ?_fputs 0069                      _ADRESH 003EF0  
                    _ADRESL 003EEF            ___awdiv@dividend 0060                      ?_putch 0001  
                    _ANSELC 003A60                      _RB2PPS 003A0A                      i2l1121 228E  
                    i2l1122 226C                      i2l1137 2360                      i2l1146 23C8  
                    i2l1147 23C4                      i2l1254 3220                      i2l1247 319A  
                    i2l1176 2B56              __CFG_WDTCCS$SC 000000                      i2l1187 2BC4  
                    i2l1188 2BC0                      i2l5703 219E                      i2l5633 31D0  
                    i2l5801 2350                      i2l5635 31D6                      i2l5627 31B2  
                    i2l5715 21C2                      i2l5707 21A2                      i2l6363 43D0  
                    i2l6371 43F2                      i2l5645 3246                      i2l5637 31E2  
                    i2l5901 2A3E                      i2l6365 43D6                      i2l5663 3296  
                    i2l5647 3252                      i2l5639 3208                      i2l5809 2384  
                    i2l5825 23A4                      i2l5745 221C                      i2l5913 2A76  
                    i2l5905 2A42                      i2l6385 347A                      i2l5819 239A  
                    i2l5683 215A                      i2l6379 3448                      i2l5853 2444  
                    i2l5845 241E                      i2l5781 22D4                      i2l5773 22B2  
                    i2l5757 227A                      i2l6389 3514                      i2l5783 22D8  
                    i2l5791 22EA                      i2l5759 227E                      i2l5679 2156  
                    i2l5951 2B54                      i2l5927 2AAC                      i2l5919 2A94  
                    i2l5857 244C                      i2l5945 2B2E                      i2l5937 2B06  
                    i2l5881 29FE                      i2l5859 244E                      i2l5963 2B8A  
                    i2l5957 2B6C                      i2l5885 2A02                      i2l5991 2C66  
                    i2l5983 2C18                      i2l5987 2C3C                      i2l5997 2C74  
                    i2l5999 2C76                      _RXB0D0 003F86                      _RXB0D1 003F87  
                    _RXB0D2 003F88                   ??_Lcd_Cmd 0061                      _TXB0D0 0037E6  
                    _TXB0D1 0037E7                      _TXB0D2 0037E8                      _TXB0D3 0037E9  
                    _TXB0D4 0037EA                      _TXB0D5 0037EB                      _TXB0D6 0037EC  
                    _TXB0D7 0037ED     __size_of_Lcd_Write_Char 003E            __end_of___xxtofl 32B0  
        __size_of_MenuYesNo 00AA              i2___fladd@aexp 0036              i2___fladd@bexp 0037  
            __CFG_XINST$OFF 000000                vfprintf@cfmt 00F7                      ___flge 384A  
                    ___fleq 3F4C                      _adcInt 46D0                   ??___aodiv 0070  
                 ??___fladd 0068                   ??___aomod 0070                      ___wmul 460A  
                 ??___fldiv 0068                   ??___awdiv 0064                   ??___flneg 0064  
            __CFG_STVREN$ON 000000                   ??___awmod 0064                   ??___flmul 0068  
                 ??___flsub 0081                   ??___fltol 0064                      _encInt 43B0  
                    _efgtoa 00AC                      _floorf 2C7E                      clear_0 3A7A  
                    clear_1 3A90            ___awdiv@quotient 0066              i2___fldiv@aexp 0028  
            i2___fldiv@bexp 0027             ___awmod@divisor 0062              i2___fldiv@sign 0020  
           ___awmod@counter 0064                      pad@buf 0072                      _status 0059  
                    dtoa@fp 007B                      _strcpy 4234                      _strlen 456C  
                 ??_initCAN 0060                __pdataBIGRAM 028C                      fputc@c 0060  
                    fputs@c 006D                      fputs@i 006E                __pdataCOMRAM 0059  
                    fputs@s 0069           __end_ofi2___fladd 2472                   ??_isdigit 0062  
         __end_ofi2___fldiv 2C7E             ___fpclassifyf@e 0068             ___fpclassifyf@u 006A  
           ___fpclassifyf@x 0060                __mediumconst 7E7A                   ??_isspace 0062  
     sendCANmessage@message 0004                      tblptrh 003FF7                   ??_isupper 0062  
                    tblptrl 003FF6                      tblptru 003FF8                      putch@c 0001  
          __end_of_vfprintf 41CA                   ??_sprintf 00F9                   ??_tolower 0068  
                 ??_strncmp 0066             Lcd_Set_Cursor@a 0064             Lcd_Set_Cursor@b 0063  
           Lcd_Set_Cursor@y 0066             Lcd_Set_Cursor@z 0065                  ___flge@ff1 0079  
                ___flge@ff2 007D             ??___fpclassifyf 0064                ___xxtofl@arg 000C  
              ___xxtofl@exp 000B                ___xxtofl@val 0002                  ___fleq@ff1 0060  
                ___fleq@ff2 0064                  __accesstop 0060     __end_of__initialization 3AA2  
                ___flneg@f1 0060           __end_of_Lcd_Clear 469E               ___rparam_used 000000  
        __size_of_canRecInt 000E                  ___fltol@f1 0060              __pcstackCOMRAM 0001  
              __pidataBANK1 46C8                __pidataBANK2 3EC0              ivt0x8_undefint 00A6  
             __end_of_fputc 3CDA               __end_of_fputs 4480                  _canRecInt2 340C  
             __end_of_putch 46CE                _ADCvalueLow0 0055                _ADCvalueLow1 0051  
            _Lcd_Set_Cursor 3CDA           __end_of_MenuYesNo 3E30                   ?_Lcd_Init 0001  
                 ?_Lcd_Port 0001                     ??_fputc 0064                     ??_fputs 006D  
           __CFG_IVT1WAY$ON 000000                     ??_putch 0060                  __pbssBANK0 00FB  
                __pbssBANK1 0100                     IVTBASEH 003FD6                     IVTBASEL 003FD5  
                   IVTBASEU 003FD7          __size_of_buzzerInt 000A                     ?___flge 0079  
                   ?___fleq 0060                     ?_adcInt 0001                     ?___wmul 0060  
           __CFG_PPS1WAY$ON 000000                     ?_encInt 0001                     ?_efgtoa 008D  
                   ?_floorf 0079   __size_of_Lcd_Write_String 0088      __end_of_Lcd_Set_Cursor 3D86  
                   ?_strcpy 0060                     ?_strlen 0060                     _INT0PPS 003AC0  
       __CFG_PWRTS$PWRT_OFF 000000           __end_of_canRecInt 46AE                   ?___xxtofl 0002  
                   _OSCCON1 0039D9          __size_of_vfpfcnvrt 069E                  ??_Lcd_Init 0063  
                ??_Lcd_Port 0060              _Lcd_Write_Char 44C0                     _Lcd_Cmd 466A  
                 _ADPCHbits 003EF1             i2___fladd@signs 0035                     __Hparam 0000  
                   __Lparam 0000  __CFG_RSTOSC$HFINTOSC_64MHZ 000000                  _initBuzzer 45D8  
           __size_of___flge 00D2             __size_of___fleq 008C             __size_of_adcInt 0002  
                   ___aodiv 32B0                     ___fladd 1DE0                     ___aomod 3550  
                   ___fldiv 2724                     ___awdiv 3FD8                     ___flneg 44FE  
                   ___awmod 40EA                     ___flmul 1A2C                     ___flsub 429C  
                   ___fltol 391C             __size_of___wmul 0030             __size_of_encInt 0048  
                 ?_vfprintf 00F1             __size_of_efgtoa 0B5A                 ?_canRecInt2 0001  
           __size_of_floorf 01FC                     __pcinit 39E8                     __ramtop 0800  
           ?_Lcd_Set_Cursor 0063                     __ptext0 0C06                     __ptext1 42FC  
                   __ptext2 4160                     __ptext3 138E                     __ptext4 3AAC  
                   __ptext5 00AC                     __ptext6 4358                     __ptext7 4536  
                   __ptext8 4234                     __ptext9 2C7E                   _T1CLKbits 003FB5  
                   _initCAN 41CA             __CFG_WRTAPP$OFF 000000             __size_of_strcpy 0068  
           __size_of_strlen 0036                   _T1CONbits 003FB2                __size_of_abs 0040  
              __size_of_pad 00BA                     _isdigit 45A2                  ??___xxtofl 0006  
          ___awmod@dividend 0060                     _isspace 43F8             __CFG_WRTSAF$OFF 000000  
                   _isupper 4536                     efgtoa@c 0093                     efgtoa@d 00B1  
                   efgtoa@e 00C9                     efgtoa@f 008F                     efgtoa@g 00C5  
                   efgtoa@h 00BB                     efgtoa@i 00C3                     efgtoa@l 00BF  
                   efgtoa@m 00AD                     efgtoa@n 00CB                     efgtoa@p 00B5  
                   efgtoa@t 00A9                     efgtoa@u 00CD                     efgtoa@w 00B8  
         __end_of_buzzerInt 46BA                     atoi@neg 006D                     _sprintf 42FC  
                   _tolower 4358                     main@str 0175      __end_of_Lcd_Write_Char 44FE  
                   _strncmp 3AAC                  _playBuzzer 46BA        end_of_initialization 3AA2  
                   floorf@e 0087                     floorf@m 0083                     floorf@u 0089  
                   floorf@x 0079                     fputc@fp 0062               __Lmediumconst 7E7A  
                   fputs@fp 006B                  _tick_count 0110           __end_of_vfpfcnvrt 1A2C  
                efgtoa@mode 00BA                  efgtoa@sign 00B3                     postdec1 003FE5  
                   postdec2 003FDD                     postinc0 003FEE                     postinc1 003FE6  
                   postinc2 003FDE                   Lcd_Port@a 0060                  ??_vfprintf 00F7  
     __CFG_WDTCPS$WDTCPS_31 000000                     strcpy@d 0068                     strlen@a 0062  
                   strcpy@s 0066                     strlen@s 0060                   _PORTAbits 003FCA  
                 _PORTBbits 003FCB                   _PORTCbits 003FCC                 ___fladd@grs 006F  
             ___xxtofl@sign 000A                   _TRISAbits 003FC2                   _TRISBbits 003FC3  
               ___fldiv@grs 0073                 ___fldiv@rem 006C                   i2___fladd 212A  
          sendCANmessage@id 0002                   i2___fldiv 29D2             ?_Lcd_Write_Char 0001  
         Lcd_Write_String@a 0066           Lcd_Write_String@i 006A         __size_of_canRecInt2 0144  
               ___flmul@grs 006D                   _Lcd_Clear 4690                 ?_initBuzzer 0001  
            __end_of___flge 391C              __end_of___fleq 3FD8              __end_of_adcInt 46D2  
             __pidataBIGRAM 2FE4                 vfpfcnvrt@ap 00D5                 vfpfcnvrt@ct 00ED  
               vfpfcnvrt@fp 00D1                 vfpfcnvrt@ll 00DB              __end_of___wmul 463A  
          _Lcd_Write_String 4062              __end_of_encInt 43F8               __pidataCOMRAM 46C4  
            __end_of_efgtoa 0C06              __end_of_floorf 2E7A          _charging_state_lut 0200  
                floorf@F524 0100              __end_of_strcpy 429C              __end_of_strlen 45A2  
       start_initialization 39E8               _ADCvalueHigh0 0057               _ADCvalueHigh1 0053  
               __end_of_abs 44C0                 __end_of_pad 3C2A                   _MenuYesNo 3D86  
                ?i2___fladd 0029                  ?i2___fldiv 0010                 ?_playBuzzer 0001  
                ivt0x8_base 0008           __size_of_Lcd_Init 0090                 _CANSTATbits 003F8E  
         __size_of_Lcd_Port 0030              _max_tick_count 005B       __end_of___fpclassifyf 3774  
   __size_of_sendCANmessage 00D6            __CFG_LPBOREN$OFF 000000                 vfprintf@fmt 00F3  
                ?_Lcd_Clear 0001                    ??___flge 0081                    ??___fleq 0068  
                  ??_adcInt 0002                    ??___wmul 0064                    ??_encInt 0001  
                  ??_efgtoa 0094                 __pdataBANK1 01B9                 __pdataBANK2 0200  
                  ??_floorf 007D             Lcd_Write_Char@a 0063             Lcd_Write_Char@y 0062  
                  ??_strcpy 0064                    ??_strlen 0062                   ___fladd@a 0064  
                 ___fladd@b 0060                   ___fldiv@a 0064                   ___fldiv@b 0060  
                 ___flmul@a 0064                   ___flmul@b 0060                 __pbssCOMRAM 004B  
                 ___flsub@a 007D                   ___flsub@b 0079               __pcstackBANK0 0060  
             __pcstackBANK1 0163            ___aodiv@dividend 0060                 _BRGCON1bits 003703  
         __size_of___xxtofl 0164                  ?_MenuYesNo 0001                   _canRecInt 46A0  
          _charging_voltage 0108         __size_of_initBuzzer 0032                    ?_Lcd_Cmd 0001  
                 _atoi$2290 0073                   _atoi$2291 0071                   _atoi$2289 006F  
         canRecInt2@message 003B                 _efgtoa$1790 00A1                 _efgtoa$1785 009D  
               _efgtoa$1794 00A3                 _efgtoa$1786 009F                 _efgtoa$1795 00A5  
               _efgtoa$1796 00A7                   _dtoa$1761 008D            ??_Lcd_Set_Cursor 0064  
             __pmediumconst 7E7A                    ?___aodiv 0060                    ?___fladd 0060  
              _master_state 010C                    ?___aomod 0060                    ?___fldiv 0060  
                  ?___awdiv 0060            ___aodiv@quotient 0072                    ?___flneg 0060  
                  ?___awmod 0060                    ?___flmul 0060                    ?___flsub 0079  
                  ?___fltol 0060                ??_canRecInt2 0039         __size_of_playBuzzer 000A  
         __size_of_vfprintf 006A                    ?_initCAN 0001      __CFG_BBSIZE$BBSIZE_512 000000  
                  ?_isdigit 0060                    ?_isspace 0060                    ?_isupper 0060  
               ??i2___fladd 0031                  ?_canRecInt 0001                 ??i2___fldiv 0018  
                  ?_sprintf 0163                    ?_tolower 0066              __size_of_fputc 00B0  
            __size_of_fputs 0042                    ?_strncmp 0060              __size_of_putch 0002  
                 _buzzerInt 46B0              ___wmul@product 0064          __end_of_canRecInt2 3550  
                  _PIE1bits 003991                    _PIE3bits 003993                    _PIE5bits 003995  
       __CFG_BORV$VBOR_2P45 000000                    Lcd_Cmd@a 0062                    _PIR1bits 0039A1  
                  _PIR3bits 0039A3                    i2u711_40 242A                    i2u703_40 23A8  
                  i2u705_40 23BE                    _PIR5bits 0039A5                    i2u731_40 2BBA  
                  i2u735_40 2C26                    i2u672_40 325C                    i2u736_40 2C4A  
                  i2u690_40 2296                    i2u685_40 2240                    i2u686_40 2250  
                  i2u687_40 2252                 ??_Lcd_Clear 0063           i2___fldiv@new_exp 0021  
                  _RXF0SIDH 0037A0                    _RXF1SIDH 0037A4                    _TXB0SIDH 0037E1  
                  _RXM0SIDH 0037B8                    _RXM1SIDH 0037BC                   _vfpfcnvrt 138E  
                _ADCON0bits 003EF8           ___wmul@multiplier 0060            ??_Lcd_Write_Char 0061  
          _master_state_lut 028C                _isspace$2320 0066                    _Lcd_Init 3E30  
                  _Lcd_Port 463A                 ??_MenuYesNo 006C                  vfpfcnvrt@c 00F0  
                vfpfcnvrt@f 00E9                 _INTCON0bits 003FD2                   copy_data0 39FC  
                 copy_data1 3A22                   copy_data2 3A44                   copy_data3 3A66  
                _CANCONbits 003F8F                  ?_buzzerInt 0001    __end_of_Lcd_Write_String 40EA  
            _min_tick_count 004F            __size_of_Lcd_Cmd 0026                    __Hparam0 0000  
               _enter_state 01BB              _sendCANmessage 3774                    __Lparam0 0000  
                vfprintf@ap 00F5                  vfprintf@fp 00F1          __CFG_BOREN$SBORDIS 000000  
              ??_initBuzzer 0060            __size_of___aodiv 015A            __size_of___fladd 034A  
          __size_of___aomod 0136            __size_of___fldiv 02AE            __size_of___awdiv 008A  
          __size_of___flneg 0038            __size_of___awmod 0076            __size_of___flmul 03B4  
          __size_of___flsub 0060            __size_of___fltol 00CC                  ?_vfpfcnvrt 00D1  
           ___aodiv@divisor 0068             ___aodiv@counter 0070                  _ANSELAbits 003A40  
                _ANSELBbits 003A50          ___fpclassifyf@F463 0104                  sprintf@fmt 0165  
          __size_of_initCAN 006A                    ___xxtofl 314C                  _T0CON0bits 003FB8  
                _T0CON1bits 003FB9                _RXF0SIDLbits 0037A1                    _feedback 010E  
          __size_of_isdigit 0036                    __pivt0x8 0008                _RXF1SIDLbits 0037A5  
          __size_of_isspace 0046                    __ptext10 3686                    __ptext11 391C  
                  __ptext20 3FD8                    __ptext12 429C                    __ptext21 2472  
                  __ptext13 1DE0                    __ptext30 2E7A                    __ptext22 3B70  
                  __ptext14 44FE                    __ptext31 43F8                    __ptext23 456C  
                  __ptext15 1A2C                    __ptext40 3E30                    __ptext32 45A2  
                  __ptext24 443E                    __ptext16 384A                    __ptext41 4690  
                  __ptext33 460A                    __ptext25 3C2A                    __ptext17 3F4C  
                  __ptext50 212A                    __ptext42 466A                    __ptext34 41CA  
                  __ptext26 46CC                    __ptext18 2724                    __ptext51 3774  
                  __ptext43 463A                    __ptext35 45D8                    __ptext27 4480  
                  __ptext19 40EA                    __ptext52 314C                    __ptext44 46B0  
                  __ptext36 3D86                    __ptext28 3550                    __ptext53 46A0  
                  __ptext45 43B0                    __ptext37 4062                    __ptext29 32B0  
                  __ptext46 46BA                    __ptext38 44C0                    __ptext47 46D0  
                  __ptext39 3CDA                    __ptext48 340C                    __ptext49 29D2  
          __size_of_isupper 0036                 ??_canRecInt 0060                ??_playBuzzer 0001  
          __size_of_sprintf 005C            __size_of_tolower 0056          __end_of_initBuzzer 460A  
                strcpy@dest 0060            __size_of_strncmp 00C4      __end_of_sendCANmessage 384A  
             __size_of_atoi 016A               __size_of_main 0788               __size_of_dtoa 02B2  
      __CFG_WDTCWS$WDTCWS_7 000000                _TXB0SIDLbits 0037E2                    efgtoa@fp 008D  
                  efgtoa@ne 00AF                    efgtoa@pp 00AB                    efgtoa@ou 0099  
                  _vfprintf 4160          __end_of_playBuzzer 46C4            ___aomod@dividend 0060  
              _RXM0SIDLbits 0037B9                 _RXB0CONbits 003F80                 _RXB1CONbits 0037F0  
            _vfpfcnvrt$1810 00E3              _vfpfcnvrt$1811 00E5              _vfpfcnvrt$1816 00E7  
              _RXM1SIDLbits 0037BD                    isdigit@c 0060          Lcd_Write_Char@temp 0061  
                  intlevel1 0000                    intlevel2 0000                   sprintf@ap 016D  
               ??_buzzerInt 0060                    isspace@c 0060             ?_sendCANmessage 0002  
               _TXB0DLCbits 0037E5           __CFG_CLKOUTEN$OFF 000000                 _TXB0CONbits 0037E0  
                 strcpy@src 0062                    isupper@c 0060                   strncmp@_l 0060  
                 strncmp@_r 0062                 efgtoa@nmode 00B7             ___aomod@divisor 0068  
               ??_vfpfcnvrt 00D7             ___aomod@counter 0070          Lcd_Set_Cursor@temp 0067  
                  sprintf@f 016F                    tolower@c 0066                    sprintf@s 0163  
    __size_of___fpclassifyf 00EE                    strncmp@l 0067                    strncmp@n 0064  
                  strncmp@r 0069               ___fladd@signs 006C                ___aodiv@sign 0071  
              ___fladd@aexp 006D                ___fladd@bexp 006E                ___aomod@sign 0071  
