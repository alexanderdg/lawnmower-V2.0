

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Jun 29 20:59:46 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F25K83
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=4,class=CODE,delta=1
    13                           	psect	text5,global,reloc=4,class=CODE,delta=1
    14                           	psect	text6,global,reloc=4,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19  0000                     
    20                           ; Version 2.05
    21                           ; Generated 20/12/2018 GMT
    22                           ; 
    23                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F25K83 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     _TXB0DLCbits	set	14309
    55  0000                     _TXB0SIDH	set	14305
    56  0000                     _TXB0SIDLbits	set	14306
    57  0000                     _TXB0D7	set	14317
    58  0000                     _TXB0D6	set	14316
    59  0000                     _TXB0D5	set	14315
    60  0000                     _TXB0D4	set	14314
    61  0000                     _TXB0D3	set	14313
    62  0000                     _TXB0D2	set	14312
    63  0000                     _TXB0D1	set	14311
    64  0000                     _TXB0D0	set	14310
    65  0000                     _TXB0CONbits	set	14304
    66  0000                     _RXB1CONbits	set	14320
    67  0000                     _RXM1SIDLbits	set	14269
    68  0000                     _RXM1SIDH	set	14268
    69  0000                     _RXF1SIDLbits	set	14245
    70  0000                     _RXF1SIDH	set	14244
    71  0000                     _RXM0SIDLbits	set	14265
    72  0000                     _RXM0SIDH	set	14264
    73  0000                     _RXF0SIDLbits	set	14241
    74  0000                     _RXF0SIDH	set	14240
    75  0000                     _BRGCON1bits	set	14083
    76  0000                     _PIR5bits	set	14757
    77  0000                     _PIE5bits	set	14741
    78  0000                     _PIR1bits	set	14753
    79  0000                     _PIE1bits	set	14737
    80  0000                     _OSCCON1	set	14809
    81  0000                     _RB2PPS	set	14858
    82  0000                     _ANSELC	set	14944
    83  0000                     _ANSELBbits	set	14928
    84  0000                     _INT0PPS	set	15040
    85  0000                     _ANSELAbits	set	14912
    86  0000                     _ADRESL	set	16111
    87  0000                     _ADRESH	set	16112
    88  0000                     _ADCON0bits	set	16120
    89  0000                     _ADPCHbits	set	16113
    90  0000                     _CANSTATbits	set	16270
    91  0000                     _CANCONbits	set	16271
    92  0000                     _TRISBbits	set	16323
    93  0000                     _TRISC	set	16324
    94  0000                     _PORTCbits	set	16332
    95  0000                     _RXB0D0	set	16262
    96  0000                     _RXB0CONbits	set	16256
    97  0000                     _PORTBbits	set	16331
    98  0000                     _INTCON0bits	set	16338
    99  0000                     _TRISAbits	set	16322
   100                           
   101                           ; #config settings
   102  0000                     
   103                           	psect	cinit
   104  0002E4                     __pcinit:
   105                           	opt callstack 0
   106  0002E4                     start_initialization:
   107                           	opt callstack 0
   108  0002E4                     __initialization:
   109                           	opt callstack 0
   110                           
   111                           ; Clear objects allocated to COMRAM (11 bytes)
   112  0002E4  EE00  F01E         	lfsr	0,__pbssCOMRAM
   113  0002E8  0E0B               	movlw	11
   114  0002EA                     clear_0:
   115  0002EA  6AEE               	clrf	postinc0,c
   116  0002EC  06E8               	decf	wreg,f,c
   117  0002EE  E1FD               	bnz	clear_0
   118                           
   119                           ;
   120                           ; Setup IVTBASE
   121                           ;
   122  0002F0  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   123  0002F2  6ED5               	movwf	213,c
   124  0002F4  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   125  0002F6  6ED6               	movwf	214,c
   126  0002F8  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   127  0002FA  6ED7               	movwf	215,c
   128  0002FC                     end_of_initialization:
   129                           	opt callstack 0
   130  0002FC                     __end_of__initialization:
   131                           	opt callstack 0
   132  0002FC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   133  0002FE  6EF8               	movwf	tblptru,c
   134  000300  0100               	movlb	0
   135  000302  EFC1  F000         	goto	_main	;jump to C main() function
   136                           
   137                           	psect	bssCOMRAM
   138  00001E                     __pbssCOMRAM:
   139                           	opt callstack 0
   140  00001E                     _tick_count:
   141                           	opt callstack 0
   142  00001E                     	ds	2
   143  000020                     _ADCvalueLow1:
   144                           	opt callstack 0
   145  000020                     	ds	2
   146  000022                     _ADCvalueHigh1:
   147                           	opt callstack 0
   148  000022                     	ds	2
   149  000024                     _ADCvalueLow0:
   150                           	opt callstack 0
   151  000024                     	ds	2
   152  000026                     _ADCvalueHigh0:
   153                           	opt callstack 0
   154  000026                     	ds	2
   155  000028                     _status:
   156                           	opt callstack 0
   157  000028                     	ds	1
   158                           
   159                           	psect	cstackCOMRAM
   160  000001                     __pcstackCOMRAM:
   161                           	opt callstack 0
   162  000001                     sendCANmessage@id:
   163                           	opt callstack 0
   164                           
   165                           ; 2 bytes @ 0x0
   166  000001                     	ds	2
   167  000003                     sendCANmessage@message:
   168                           	opt callstack 0
   169                           
   170                           ; 2 bytes @ 0x2
   171  000003                     	ds	2
   172  000005                     sendCANmessage@length:
   173                           	opt callstack 0
   174                           
   175                           ; 2 bytes @ 0x4
   176  000005                     	ds	2
   177  000007                     ??_sendCANmessage:
   178                           
   179                           ; 1 bytes @ 0x6
   180  000007                     	ds	2
   181  000009                     ??_canRecInt:
   182                           
   183                           ; 1 bytes @ 0x8
   184  000009                     	ds	2
   185  00000B                     canRecInt@message:
   186                           	opt callstack 0
   187                           
   188                           ; 16 bytes @ 0xA
   189  00000B                     	ds	16
   190  00001B                     Lcd_Port@a:
   191                           	opt callstack 0
   192                           
   193                           ; 1 bytes @ 0x1A
   194  00001B                     	ds	1
   195  00001C                     ??_main:
   196                           
   197                           ; 1 bytes @ 0x1B
   198  00001C                     	ds	2
   199                           
   200 ;;
   201 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   202 ;;
   203 ;; *************** function _main *****************
   204 ;; Defined at:
   205 ;;		line 84 in file "MainCode.c"
   206 ;; Parameters:    Size  Location     Type
   207 ;;		None
   208 ;; Auto vars:     Size  Location     Type
   209 ;;		None
   210 ;; Return value:  Size  Location     Type
   211 ;;                  1    wreg      void 
   212 ;; Registers used:
   213 ;;		wreg, status,2, status,0, cstack
   214 ;; Tracked objects:
   215 ;;		On entry : 0/0
   216 ;;		On exit  : 0/0
   217 ;;		Unchanged: 0/0
   218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   219 ;;      Params:         0       0       0       0       0       0       0       0       0
   220 ;;      Locals:         0       0       0       0       0       0       0       0       0
   221 ;;      Temps:          2       0       0       0       0       0       0       0       0
   222 ;;      Totals:         2       0       0       0       0       0       0       0       0
   223 ;;Total ram usage:        2 bytes
   224 ;; Hardware stack levels required when called:    4
   225 ;; This function calls:
   226 ;;		_Lcd_Init
   227 ;;		_initCAN
   228 ;; This function is called by:
   229 ;;		Startup code after reset
   230 ;; This function uses a non-reentrant model
   231 ;;
   232                           
   233                           	psect	text0
   234  000182                     __ptext0:
   235                           	opt callstack 0
   236  000182                     _main:
   237                           	opt callstack 27
   238                           
   239                           ;incstack = 0
   240  000182  0E60               	movlw	96
   241  000184  0139               	movlb	57	; () banked
   242  000186  6FD9               	movwf	217,b	;volatile
   243                           
   244                           ; BSR set to: 57
   245  000188  ECFE  F000         	call	_initCAN	;wreg free
   246  00018C  013A               	movlb	58	; () banked
   247  00018E  9140               	bcf	64,0,b	;volatile
   248                           
   249                           ; BSR set to: 58
   250  000190  0E00               	movlw	0
   251  000192  6FC0               	movwf	192,b	;volatile
   252                           
   253                           ; BSR set to: 58
   254  000194  80C2               	bsf	16322,0,c	;volatile
   255                           
   256                           ; BSR set to: 58
   257  000196  0139               	movlb	57	; () banked
   258  000198  8191               	bsf	145,0,b	;volatile
   259                           
   260                           ; BSR set to: 57
   261  00019A  91A1               	bcf	161,0,b	;volatile
   262                           
   263                           ; BSR set to: 57
   264  00019C  90D2               	bcf	16338,0,c	;volatile
   265                           
   266                           ; BSR set to: 57
   267  00019E  8CD2               	bsf	16338,6,c	;volatile
   268                           
   269                           ; BSR set to: 57
   270  0001A0  8ED2               	bsf	16338,7,c	;volatile
   271                           
   272                           ; BSR set to: 57
   273  0001A2  9AD2               	bcf	16338,5,c	;volatile
   274                           
   275                           ; BSR set to: 57
   276  0001A4  8195               	bsf	149,0,b	;volatile
   277                           
   278                           ; BSR set to: 57
   279  0001A6  8395               	bsf	149,1,b	;volatile
   280                           
   281                           ; BSR set to: 57
   282  0001A8  0E00               	movlw	0
   283  0001AA  6E1F               	movwf	_tick_count+1,c
   284  0001AC  0E04               	movlw	4
   285  0001AE  6E1E               	movwf	_tick_count,c
   286                           
   287                           ; BSR set to: 57
   288  0001B0  8ED2               	bsf	16338,7,c	;volatile
   289                           
   290                           ; BSR set to: 57
   291  0001B2  0E00               	movlw	0
   292  0001B4  6E1F               	movwf	_tick_count+1,c
   293  0001B6  0E05               	movlw	5
   294  0001B8  6E1E               	movwf	_tick_count,c
   295                           
   296                           ; BSR set to: 57
   297  0001BA  EC83  F001         	call	_Lcd_Init	;wreg free
   298  0001BE  0E00               	movlw	0
   299  0001C0  6E1F               	movwf	_tick_count+1,c
   300  0001C2  0E06               	movlw	6
   301  0001C4  6E1E               	movwf	_tick_count,c
   302  0001C6  0E00               	movlw	0
   303  0001C8  6E1F               	movwf	_tick_count+1,c
   304  0001CA  0E07               	movlw	7
   305  0001CC  6E1E               	movwf	_tick_count,c
   306  0001CE  0E00               	movlw	0
   307  0001D0  6E1F               	movwf	_tick_count+1,c
   308  0001D2  0E08               	movlw	8
   309  0001D4  6E1E               	movwf	_tick_count,c
   310  0001D6  0E00               	movlw	0
   311  0001D8  6E1F               	movwf	_tick_count+1,c
   312  0001DA  0E0A               	movlw	10
   313  0001DC  6E1E               	movwf	_tick_count,c
   314  0001DE                     l1050:
   315                           
   316                           ;MainCode.c: 141:         tick_count ++;
   317  0001DE  4A1E               	infsnz	_tick_count,f,c
   318  0001E0  2A1F               	incf	_tick_count+1,f,c
   319                           
   320                           ;MainCode.c: 142:         _delay((unsigned long)((1000)*(64000000/4000.0)));
   321  0001E2  0E52               	movlw	82
   322  0001E4  6E1D               	movwf	(??_main+1)& (0+255),c
   323  0001E6  0E2B               	movlw	43
   324  0001E8  6E1C               	movwf	??_main& (0+255),c
   325  0001EA  0E00               	movlw	0
   326  0001EC                     u197:
   327  0001EC  2EE8               	decfsz	wreg,f,c
   328  0001EE  D7FE               	bra	u197
   329  0001F0  2E1C               	decfsz	??_main& (0+255),f,c
   330  0001F2  D7FC               	bra	u197
   331  0001F4  2E1D               	decfsz	(??_main+1)& (0+255),f,c
   332  0001F6  D7FA               	bra	u197
   333  0001F8  D000               	nop2	
   334  0001FA  D7F1               	goto	l1050
   335  0001FC                     __end_of_main:
   336                           	opt callstack 0
   337                           
   338 ;; *************** function _initCAN *****************
   339 ;; Defined at:
   340 ;;		line 403 in file "MainCode.c"
   341 ;; Parameters:    Size  Location     Type
   342 ;;		None
   343 ;; Auto vars:     Size  Location     Type
   344 ;;		None
   345 ;; Return value:  Size  Location     Type
   346 ;;                  1    wreg      void 
   347 ;; Registers used:
   348 ;;		wreg, status,2, status,0
   349 ;; Tracked objects:
   350 ;;		On entry : 0/0
   351 ;;		On exit  : 0/0
   352 ;;		Unchanged: 0/0
   353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   354 ;;      Params:         0       0       0       0       0       0       0       0       0
   355 ;;      Locals:         0       0       0       0       0       0       0       0       0
   356 ;;      Temps:          0       0       0       0       0       0       0       0       0
   357 ;;      Totals:         0       0       0       0       0       0       0       0       0
   358 ;;Total ram usage:        0 bytes
   359 ;; Hardware stack levels used:    1
   360 ;; Hardware stack levels required when called:    2
   361 ;; This function calls:
   362 ;;		Nothing
   363 ;; This function is called by:
   364 ;;		_main
   365 ;; This function uses a non-reentrant model
   366 ;;
   367                           
   368                           	psect	text1
   369  0001FC                     __ptext1:
   370                           	opt callstack 0
   371  0001FC                     _initCAN:
   372                           	opt callstack 28
   373                           
   374                           ;MainCode.c: 408:     RB2PPS = 0b110011;
   375                           
   376                           ;incstack = 0
   377  0001FC  0E33               	movlw	51
   378  0001FE  013A               	movlb	58	; () banked
   379  000200  6F0A               	movwf	10,b	;volatile
   380                           
   381                           ; BSR set to: 58
   382                           ;MainCode.c: 410:     TRISBbits.TRISB2 = 0;
   383  000202  94C3               	bcf	16323,2,c	;volatile
   384                           
   385                           ; BSR set to: 58
   386                           ;MainCode.c: 411:     TRISBbits.TRISB3 = 1;
   387  000204  86C3               	bsf	16323,3,c	;volatile
   388                           
   389                           ; BSR set to: 58
   390                           ;MainCode.c: 413:     ANSELBbits.ANSELB2 = 0;
   391  000206  9550               	bcf	80,2,b	;volatile
   392                           
   393                           ; BSR set to: 58
   394                           ;MainCode.c: 414:     ANSELBbits.ANSELB3 = 0;
   395  000208  9750               	bcf	80,3,b	;volatile
   396                           
   397                           ; BSR set to: 58
   398                           ;MainCode.c: 416:     CANCONbits.REQOP2 = 1;
   399  00020A  8E8F               	bsf	16271,7,c	;volatile
   400                           
   401                           ; BSR set to: 58
   402                           ;MainCode.c: 417:     CANCONbits.REQOP1 = 0;
   403  00020C  9C8F               	bcf	16271,6,c	;volatile
   404                           
   405                           ; BSR set to: 58
   406                           ;MainCode.c: 418:     CANCONbits.REQOP0 = 0;
   407  00020E  9A8F               	bcf	16271,5,c	;volatile
   408  000210                     l916:
   409  000210  388E               	swapf	16270,w,c	;volatile
   410  000212  32E8               	rrcf	wreg,f,c
   411  000214  0B07               	andlw	7
   412  000216  0A04               	xorlw	4
   413  000218  A4D8               	btfss	status,2,c
   414  00021A  D7FA               	goto	l916
   415                           
   416                           ;MainCode.c: 422:     BRGCON1bits.BRP = 0b011111;
   417  00021C  0137               	movlb	55	; () banked
   418  00021E  5103               	movf	3,w,b	;volatile
   419  000220  0BC0               	andlw	-64
   420  000222  091F               	iorlw	31
   421  000224  6F03               	movwf	3,b	;volatile
   422                           
   423                           ;MainCode.c: 424:     RXF0SIDH = 0;
   424  000226  0E00               	movlw	0
   425  000228  6FA0               	movwf	160,b	;volatile
   426                           
   427                           ;MainCode.c: 425:     RXF0SIDLbits.SID = 2;
   428  00022A  51A1               	movf	161,w,b	;volatile
   429  00022C  0B1F               	andlw	-225
   430  00022E  0940               	iorlw	64
   431  000230  6FA1               	movwf	161,b	;volatile
   432                           
   433                           ; BSR set to: 55
   434                           ;MainCode.c: 426:     RXF0SIDLbits.EXIDEN = 0;
   435  000232  97A1               	bcf	161,3,b	;volatile
   436                           
   437                           ; BSR set to: 55
   438                           ;MainCode.c: 427:     RXM0SIDH = 255;
   439  000234  69B8               	setf	184,b	;volatile
   440                           
   441                           ;MainCode.c: 428:     RXM0SIDLbits.SID = 0b111;
   442  000236  0EE0               	movlw	224
   443  000238  13B9               	iorwf	185,f,b	;volatile
   444                           
   445                           ; BSR set to: 55
   446                           ;MainCode.c: 429:     RXB0CONbits.RXM1 = 0;
   447  00023A  9C80               	bcf	16256,6,c	;volatile
   448                           
   449                           ; BSR set to: 55
   450                           ;MainCode.c: 430:     RXB0CONbits.RXM0 = 1;
   451  00023C  8A80               	bsf	16256,5,c	;volatile
   452                           
   453                           ; BSR set to: 55
   454                           ;MainCode.c: 431:     RXB0CONbits.FILHIT0 = 0;
   455  00023E  9080               	bcf	16256,0,c	;volatile
   456                           
   457                           ; BSR set to: 55
   458                           ;MainCode.c: 433:     RXF1SIDH = 255;
   459  000240  69A4               	setf	164,b	;volatile
   460                           
   461                           ;MainCode.c: 434:     RXF1SIDLbits.SID = 0b111;
   462  000242  0EE0               	movlw	224
   463  000244  13A5               	iorwf	165,f,b	;volatile
   464                           
   465                           ; BSR set to: 55
   466                           ;MainCode.c: 435:     RXF1SIDLbits.EXIDEN = 0;
   467  000246  97A5               	bcf	165,3,b	;volatile
   468                           
   469                           ; BSR set to: 55
   470                           ;MainCode.c: 436:     RXM1SIDH = 255;
   471  000248  69BC               	setf	188,b	;volatile
   472                           
   473                           ;MainCode.c: 437:     RXM1SIDLbits.SID = 0b111;
   474  00024A  0EE0               	movlw	224
   475  00024C  13BD               	iorwf	189,f,b	;volatile
   476                           
   477                           ; BSR set to: 55
   478                           ;MainCode.c: 438:     RXB1CONbits.RXM1 = 0;
   479  00024E  9DF0               	bcf	240,6,b	;volatile
   480                           
   481                           ; BSR set to: 55
   482                           ;MainCode.c: 439:     RXB1CONbits.RXM0 = 1;
   483  000250  8BF0               	bsf	240,5,b	;volatile
   484                           
   485                           ; BSR set to: 55
   486                           ;MainCode.c: 440:     RXB1CONbits.FILHIT0 = 0;
   487  000252  91F0               	bcf	240,0,b	;volatile
   488                           
   489                           ;MainCode.c: 442:     CANCONbits.REQOP = 0b000;
   490  000254  0E1F               	movlw	-225
   491  000256  168F               	andwf	16271,f,c	;volatile
   492  000258                     l942:
   493  000258  388E               	swapf	16270,w,c	;volatile
   494  00025A  32E8               	rrcf	wreg,f,c
   495  00025C  0B07               	andlw	7
   496  00025E  0900               	iorlw	0
   497  000260  B4D8               	btfsc	status,2,c
   498  000262  0012               	return	
   499  000264  D7F9               	goto	l942
   500  000266                     __end_of_initCAN:
   501                           	opt callstack 0
   502                           
   503 ;; *************** function _Lcd_Init *****************
   504 ;; Defined at:
   505 ;;		line 297 in file "MainCode.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;		None
   508 ;; Auto vars:     Size  Location     Type
   509 ;;		None
   510 ;; Return value:  Size  Location     Type
   511 ;;                  1    wreg      void 
   512 ;; Registers used:
   513 ;;		wreg, status,2, cstack
   514 ;; Tracked objects:
   515 ;;		On entry : 0/0
   516 ;;		On exit  : 0/0
   517 ;;		Unchanged: 0/0
   518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   519 ;;      Params:         0       0       0       0       0       0       0       0       0
   520 ;;      Locals:         0       0       0       0       0       0       0       0       0
   521 ;;      Temps:          0       0       0       0       0       0       0       0       0
   522 ;;      Totals:         0       0       0       0       0       0       0       0       0
   523 ;;Total ram usage:        0 bytes
   524 ;; Hardware stack levels used:    1
   525 ;; Hardware stack levels required when called:    3
   526 ;; This function calls:
   527 ;;		_Lcd_Port
   528 ;; This function is called by:
   529 ;;		_main
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533                           	psect	text2
   534  000306                     __ptext2:
   535                           	opt callstack 0
   536  000306                     _Lcd_Init:
   537                           	opt callstack 27
   538                           
   539                           ;MainCode.c: 299:     TRISC = 0x00;
   540                           
   541                           ;incstack = 0
   542  000306  0E00               	movlw	0
   543  000308  6EC4               	movwf	16324,c	;volatile
   544                           
   545                           ;MainCode.c: 300:     TRISBbits.TRISB0 = 0;
   546  00030A  90C3               	bcf	16323,0,c	;volatile
   547                           
   548                           ;MainCode.c: 301:     ANSELBbits.ANSELB0 = 0;
   549  00030C  013A               	movlb	58	; () banked
   550  00030E  9150               	bcf	80,0,b	;volatile
   551                           
   552                           ; BSR set to: 58
   553                           ;MainCode.c: 302:     PORTBbits.RB0 = 1;
   554  000310  80CB               	bsf	16331,0,c	;volatile
   555                           
   556                           ;MainCode.c: 303:     ANSELC = 0x00;
   557  000312  0E00               	movlw	0
   558  000314  6F60               	movwf	96,b	;volatile
   559                           
   560                           ; BSR set to: 58
   561                           ;MainCode.c: 304:     Lcd_Port(0x00);
   562  000316  0E00               	movlw	0
   563  000318  EC5C  F001         	call	_Lcd_Port
   564  00031C  0012               	return		;funcret
   565  00031E                     __end_of_Lcd_Init:
   566                           	opt callstack 0
   567                           
   568 ;; *************** function _Lcd_Port *****************
   569 ;; Defined at:
   570 ;;		line 223 in file "MainCode.c"
   571 ;; Parameters:    Size  Location     Type
   572 ;;  a               1    wreg     unsigned char 
   573 ;; Auto vars:     Size  Location     Type
   574 ;;  a               1   26[COMRAM] unsigned char 
   575 ;; Return value:  Size  Location     Type
   576 ;;                  1    wreg      void 
   577 ;; Registers used:
   578 ;;		wreg
   579 ;; Tracked objects:
   580 ;;		On entry : 0/0
   581 ;;		On exit  : 0/0
   582 ;;		Unchanged: 0/0
   583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   584 ;;      Params:         0       0       0       0       0       0       0       0       0
   585 ;;      Locals:         1       0       0       0       0       0       0       0       0
   586 ;;      Temps:          0       0       0       0       0       0       0       0       0
   587 ;;      Totals:         1       0       0       0       0       0       0       0       0
   588 ;;Total ram usage:        1 bytes
   589 ;; Hardware stack levels used:    1
   590 ;; Hardware stack levels required when called:    2
   591 ;; This function calls:
   592 ;;		Nothing
   593 ;; This function is called by:
   594 ;;		_Lcd_Init
   595 ;;		_Lcd_Cmd
   596 ;;		_Lcd_Write_Char
   597 ;; This function uses a non-reentrant model
   598 ;;
   599                           
   600                           	psect	text3
   601  0002B8                     __ptext3:
   602                           	opt callstack 0
   603  0002B8                     _Lcd_Port:
   604                           	opt callstack 27
   605                           
   606                           ;incstack = 0
   607                           ;Lcd_Port@a stored from wreg
   608  0002B8  6E1B               	movwf	Lcd_Port@a,c
   609                           
   610                           ;MainCode.c: 223: void Lcd_Port(char a);MainCode.c: 224: {;MainCode.c: 225:  if(a & 1)
   611  0002BA  A01B               	btfss	Lcd_Port@a,0,c
   612  0002BC  D002               	goto	l142
   613                           
   614                           ;MainCode.c: 226:   PORTCbits.RC2 = 1;
   615  0002BE  84CC               	bsf	16332,2,c	;volatile
   616  0002C0  D001               	goto	l888
   617  0002C2                     l142:
   618                           
   619                           ;MainCode.c: 228:   PORTCbits.RC2 = 0;
   620  0002C2  94CC               	bcf	16332,2,c	;volatile
   621  0002C4                     l888:
   622                           
   623                           ;MainCode.c: 230:  if(a & 2)
   624  0002C4  A21B               	btfss	Lcd_Port@a,1,c
   625  0002C6  D002               	goto	l144
   626                           
   627                           ;MainCode.c: 231:   PORTCbits.RC5 = 1;
   628  0002C8  8ACC               	bsf	16332,5,c	;volatile
   629  0002CA  D001               	goto	l892
   630  0002CC                     l144:
   631                           
   632                           ;MainCode.c: 233:   PORTCbits.RC5 = 0;
   633  0002CC  9ACC               	bcf	16332,5,c	;volatile
   634  0002CE                     l892:
   635                           
   636                           ;MainCode.c: 235:  if(a & 4)
   637  0002CE  A41B               	btfss	Lcd_Port@a,2,c
   638  0002D0  D002               	goto	l146
   639                           
   640                           ;MainCode.c: 236:   PORTCbits.RC6 = 1;
   641  0002D2  8CCC               	bsf	16332,6,c	;volatile
   642  0002D4  D001               	goto	l896
   643  0002D6                     l146:
   644                           
   645                           ;MainCode.c: 238:   PORTCbits.RC6 = 0;
   646  0002D6  9CCC               	bcf	16332,6,c	;volatile
   647  0002D8                     l896:
   648                           
   649                           ;MainCode.c: 240:  if(a & 8)
   650  0002D8  A61B               	btfss	Lcd_Port@a,3,c
   651  0002DA  D002               	goto	l148
   652                           
   653                           ;MainCode.c: 241:   PORTCbits.RC7 = 1;
   654  0002DC  8ECC               	bsf	16332,7,c	;volatile
   655  0002DE  0012               	return	
   656  0002E0                     l148:
   657                           
   658                           ;MainCode.c: 243:   PORTCbits.RC7 = 0;
   659  0002E0  9ECC               	bcf	16332,7,c	;volatile
   660  0002E2  0012               	return		;funcret
   661  0002E4                     __end_of_Lcd_Port:
   662                           	opt callstack 0
   663                           
   664 ;; *************** function _encInt *****************
   665 ;; Defined at:
   666 ;;		line 162 in file "MainCode.c"
   667 ;; Parameters:    Size  Location     Type
   668 ;;		None
   669 ;; Auto vars:     Size  Location     Type
   670 ;;		None
   671 ;; Return value:  Size  Location     Type
   672 ;;                  1    wreg      void 
   673 ;; Registers used:
   674 ;;		status,2, status,0
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   680 ;;      Params:         0       0       0       0       0       0       0       0       0
   681 ;;      Locals:         0       0       0       0       0       0       0       0       0
   682 ;;      Temps:          0       0       0       0       0       0       0       0       0
   683 ;;      Totals:         0       0       0       0       0       0       0       0       0
   684 ;;Total ram usage:        0 bytes
   685 ;; Hardware stack levels used:    1
   686 ;; This function calls:
   687 ;;		Nothing
   688 ;; This function is called by:
   689 ;;		Interrupt level 2
   690 ;; This function uses a non-reentrant model
   691 ;;
   692                           
   693                           	psect	text4
   694  000320                     __ptext4:
   695                           	opt callstack 0
   696  000320                     _encInt:
   697                           	opt callstack 28
   698                           
   699                           ;MainCode.c: 163:     PORTBbits.RB0 = 0;
   700                           
   701                           ;incstack = 0
   702  000320  90CB               	bcf	16331,0,c	;volatile
   703                           
   704                           ;MainCode.c: 164:     tick_count ++;
   705  000322  4A1E               	infsnz	_tick_count,f,c
   706  000324  2A1F               	incf	_tick_count+1,f,c
   707                           
   708                           ;MainCode.c: 165:     PIR1bits.INT0IF = 0;
   709  000326  0139               	movlb	57	; () banked
   710  000328  91A1               	bcf	161,0,b	;volatile
   711                           
   712                           ; BSR set to: 57
   713  00032A  0011               	retfie		f
   714  00032C                     __end_of_encInt:
   715                           	opt callstack 0
   716                           
   717 ;; *************** function _adcInt *****************
   718 ;; Defined at:
   719 ;;		line 168 in file "MainCode.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;		None
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      void 
   726 ;; Registers used:
   727 ;;		None
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   733 ;;      Params:         0       0       0       0       0       0       0       0       0
   734 ;;      Locals:         0       0       0       0       0       0       0       0       0
   735 ;;      Temps:          0       0       0       0       0       0       0       0       0
   736 ;;      Totals:         0       0       0       0       0       0       0       0       0
   737 ;;Total ram usage:        0 bytes
   738 ;; Hardware stack levels used:    1
   739 ;; This function calls:
   740 ;;		Nothing
   741 ;; This function is called by:
   742 ;;		Interrupt level 2
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746                           	psect	text5
   747  00032C                     __ptext5:
   748                           	opt callstack 0
   749  00032C                     _adcInt:
   750                           	opt callstack 28
   751                           
   752                           ; BSR set to: 57
   753                           ;incstack = 0
   754  00032C  0011               	retfie		f
   755  00032E                     __end_of_adcInt:
   756                           	opt callstack 0
   757                           
   758 ;; *************** function _canRecInt *****************
   759 ;; Defined at:
   760 ;;		line 174 in file "MainCode.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;		None
   763 ;; Auto vars:     Size  Location     Type
   764 ;;  message        16   10[COMRAM] int [8]
   765 ;; Return value:  Size  Location     Type
   766 ;;                  1    wreg      void 
   767 ;; Registers used:
   768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   769 ;; Tracked objects:
   770 ;;		On entry : 0/0
   771 ;;		On exit  : 0/0
   772 ;;		Unchanged: 0/0
   773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   774 ;;      Params:         0       0       0       0       0       0       0       0       0
   775 ;;      Locals:        16       0       0       0       0       0       0       0       0
   776 ;;      Temps:          2       0       0       0       0       0       0       0       0
   777 ;;      Totals:        18       0       0       0       0       0       0       0       0
   778 ;;Total ram usage:       18 bytes
   779 ;; Hardware stack levels used:    1
   780 ;; Hardware stack levels required when called:    1
   781 ;; This function calls:
   782 ;;		_sendCANmessage
   783 ;; This function is called by:
   784 ;;		Interrupt level 2
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           
   788                           	psect	text6
   789  000268                     __ptext6:
   790                           	opt callstack 0
   791  000268                     _canRecInt:
   792                           	opt callstack 27
   793                           
   794                           ;MainCode.c: 178:     PORTBbits.RB0 = 1;
   795                           
   796                           ;incstack = 0
   797  000268  80CB               	bsf	16331,0,c	;volatile
   798                           
   799                           ;MainCode.c: 179:     if (RXB0CONbits.RXFUL == 1) {
   800  00026A  BE80               	btfsc	16256,7,c	;volatile
   801  00026C  D016               	goto	i2l1186
   802  00026E  D021               	goto	i2l135
   803  000270                     i2l137:
   804                           
   805                           ;MainCode.c: 187:                 message[0] = tick_count;
   806  000270  0060  F078  F00B   	movff	_tick_count,canRecInt@message
   807  000276  0060  F07C  F00C   	movff	_tick_count+1,canRecInt@message+1
   808                           
   809                           ;MainCode.c: 188:                 sendCANmessage(0, message, 1);
   810  00027C  0E00               	movlw	0
   811  00027E  6E02               	movwf	sendCANmessage@id+1,c
   812  000280  0E00               	movlw	0
   813  000282  6E01               	movwf	sendCANmessage@id,c
   814  000284  0E0B               	movlw	low canRecInt@message
   815  000286  6E03               	movwf	sendCANmessage@message,c
   816  000288  0E00               	movlw	high canRecInt@message
   817  00028A  6E04               	movwf	sendCANmessage@message+1,c
   818  00028C  0E00               	movlw	0
   819  00028E  6E06               	movwf	sendCANmessage@length+1,c
   820  000290  0E01               	movlw	1
   821  000292  6E05               	movwf	sendCANmessage@length,c
   822  000294  EC56  F000         	call	_sendCANmessage	;wreg free
   823                           
   824                           ;MainCode.c: 189:                 break;
   825  000298  D00B               	goto	i2l138
   826  00029A                     i2l1186:
   827  00029A  5086               	movf	16262,w,c	;volatile
   828  00029C  6E09               	movwf	??_canRecInt& (0+255),c
   829  00029E  6A0A               	clrf	(??_canRecInt+1)& (0+255),c
   830                           
   831                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   832                           ; Switch size 1, requested type "simple"
   833                           ; Number of cases is 1, Range of values is 0 to 0
   834                           ; switch strategies available:
   835                           ; Name         Instructions Cycles
   836                           ; simple_byte            4     3 (average)
   837                           ;	Chosen strategy is simple_byte
   838  0002A0  500A               	movf	??_canRecInt+1,w,c
   839  0002A2  0A00               	xorlw	0	; case 0
   840  0002A4  A4D8               	btfss	status,2,c
   841  0002A6  D004               	goto	i2l138
   842                           
   843                           ; Switch size 1, requested type "simple"
   844                           ; Number of cases is 1, Range of values is 0 to 0
   845                           ; switch strategies available:
   846                           ; Name         Instructions Cycles
   847                           ; simple_byte            4     3 (average)
   848                           ;	Chosen strategy is simple_byte
   849  0002A8  5009               	movf	??_canRecInt,w,c
   850  0002AA  0A00               	xorlw	0	; case 0
   851  0002AC  B4D8               	btfsc	status,2,c
   852  0002AE  D7E0               	goto	i2l137
   853  0002B0                     i2l138:
   854                           
   855                           ;MainCode.c: 216:         RXB0CONbits.RXFUL = 0;
   856  0002B0  9E80               	bcf	16256,7,c	;volatile
   857  0002B2                     i2l135:
   858                           
   859                           ;MainCode.c: 218:     PIR5bits.RXB0IF = 0;
   860  0002B2  0139               	movlb	57	; () banked
   861  0002B4  91A5               	bcf	165,0,b	;volatile
   862                           
   863                           ; BSR set to: 57
   864                           
   865                           ;MainCode.c: 219:     return;
   866  0002B6  0011               	retfie		f
   867  0002B8                     __end_of_canRecInt:
   868                           	opt callstack 0
   869                           
   870 ;; *************** function _sendCANmessage *****************
   871 ;; Defined at:
   872 ;;		line 448 in file "MainCode.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;  id              2    0[COMRAM] int 
   875 ;;  message         2    2[COMRAM] PTR int 
   876 ;;		 -> canRecInt@message(16), 
   877 ;;  length          2    4[COMRAM] int 
   878 ;; Auto vars:     Size  Location     Type
   879 ;;		None
   880 ;; Return value:  Size  Location     Type
   881 ;;                  1    wreg      void 
   882 ;; Registers used:
   883 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   889 ;;      Params:         6       0       0       0       0       0       0       0       0
   890 ;;      Locals:         0       0       0       0       0       0       0       0       0
   891 ;;      Temps:          2       0       0       0       0       0       0       0       0
   892 ;;      Totals:         8       0       0       0       0       0       0       0       0
   893 ;;Total ram usage:        8 bytes
   894 ;; Hardware stack levels used:    1
   895 ;; This function calls:
   896 ;;		Nothing
   897 ;; This function is called by:
   898 ;;		_canRecInt
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           	psect	text7
   903  0000AC                     __ptext7:
   904                           	opt callstack 0
   905  0000AC                     _sendCANmessage:
   906                           	opt callstack 27
   907                           
   908                           ;MainCode.c: 449:     TXB0CONbits.TXREQ = 0;
   909                           
   910                           ; BSR set to: 57
   911                           ;incstack = 0
   912  0000AC  0137               	movlb	55	; () banked
   913  0000AE  97E0               	bcf	224,3,b	;volatile
   914                           
   915                           ; BSR set to: 55
   916                           ;MainCode.c: 451:     CANCONbits.WIN = 0b000;
   917  0000B0  0EF1               	movlw	-15
   918  0000B2  168F               	andwf	16271,f,c	;volatile
   919                           
   920                           ;MainCode.c: 453:     TXB0CONbits.TXPRI = 0b11;
   921  0000B4  0E03               	movlw	3
   922  0000B6  13E0               	iorwf	224,f,b	;volatile
   923                           
   924                           ; BSR set to: 55
   925                           ;MainCode.c: 455:     TXB0D0 = message[0];
   926  0000B8  0060  F00F  FFD9   	movff	sendCANmessage@message,fsr2l
   927  0000BE  0060  F013  FFDA   	movff	sendCANmessage@message+1,fsr2h
   928  0000C4  50DF               	movf	indf2,w,c
   929  0000C6  6FE6               	movwf	230,b	;volatile
   930                           
   931                           ; BSR set to: 55
   932                           ;MainCode.c: 456:     TXB0D1 = message[1];
   933  0000C8  EE20 F002          	lfsr	2,2
   934  0000CC  5003               	movf	sendCANmessage@message,w,c
   935  0000CE  26D9               	addwf	fsr2l,f,c
   936  0000D0  5004               	movf	sendCANmessage@message+1,w,c
   937  0000D2  22DA               	addwfc	fsr2h,f,c
   938  0000D4  50DF               	movf	indf2,w,c
   939  0000D6  6FE7               	movwf	231,b	;volatile
   940                           
   941                           ; BSR set to: 55
   942                           ;MainCode.c: 457:     TXB0D2 = message[2];
   943  0000D8  EE20 F004          	lfsr	2,4
   944  0000DC  5003               	movf	sendCANmessage@message,w,c
   945  0000DE  26D9               	addwf	fsr2l,f,c
   946  0000E0  5004               	movf	sendCANmessage@message+1,w,c
   947  0000E2  22DA               	addwfc	fsr2h,f,c
   948  0000E4  50DF               	movf	indf2,w,c
   949  0000E6  6FE8               	movwf	232,b	;volatile
   950                           
   951                           ; BSR set to: 55
   952                           ;MainCode.c: 458:     TXB0D3 = message[3];
   953  0000E8  EE20 F006          	lfsr	2,6
   954  0000EC  5003               	movf	sendCANmessage@message,w,c
   955  0000EE  26D9               	addwf	fsr2l,f,c
   956  0000F0  5004               	movf	sendCANmessage@message+1,w,c
   957  0000F2  22DA               	addwfc	fsr2h,f,c
   958  0000F4  50DF               	movf	indf2,w,c
   959  0000F6  6FE9               	movwf	233,b	;volatile
   960                           
   961                           ; BSR set to: 55
   962                           ;MainCode.c: 459:     TXB0D4 = message[4];
   963  0000F8  EE20 F008          	lfsr	2,8
   964  0000FC  5003               	movf	sendCANmessage@message,w,c
   965  0000FE  26D9               	addwf	fsr2l,f,c
   966  000100  5004               	movf	sendCANmessage@message+1,w,c
   967  000102  22DA               	addwfc	fsr2h,f,c
   968  000104  50DF               	movf	indf2,w,c
   969  000106  6FEA               	movwf	234,b	;volatile
   970                           
   971                           ; BSR set to: 55
   972                           ;MainCode.c: 460:     TXB0D5 = message[5];
   973  000108  EE20 F00A          	lfsr	2,10
   974  00010C  5003               	movf	sendCANmessage@message,w,c
   975  00010E  26D9               	addwf	fsr2l,f,c
   976  000110  5004               	movf	sendCANmessage@message+1,w,c
   977  000112  22DA               	addwfc	fsr2h,f,c
   978  000114  50DF               	movf	indf2,w,c
   979  000116  6FEB               	movwf	235,b	;volatile
   980                           
   981                           ; BSR set to: 55
   982                           ;MainCode.c: 461:     TXB0D6 = message[6];
   983  000118  EE20 F00C          	lfsr	2,12
   984  00011C  5003               	movf	sendCANmessage@message,w,c
   985  00011E  26D9               	addwf	fsr2l,f,c
   986  000120  5004               	movf	sendCANmessage@message+1,w,c
   987  000122  22DA               	addwfc	fsr2h,f,c
   988  000124  50DF               	movf	indf2,w,c
   989  000126  6FEC               	movwf	236,b	;volatile
   990                           
   991                           ; BSR set to: 55
   992                           ;MainCode.c: 462:     TXB0D7 = message[7];
   993  000128  EE20 F00E          	lfsr	2,14
   994  00012C  5003               	movf	sendCANmessage@message,w,c
   995  00012E  26D9               	addwf	fsr2l,f,c
   996  000130  5004               	movf	sendCANmessage@message+1,w,c
   997  000132  22DA               	addwfc	fsr2h,f,c
   998  000134  50DF               	movf	indf2,w,c
   999  000136  6FED               	movwf	237,b	;volatile
  1000                           
  1001                           ;MainCode.c: 464:     TXB0SIDLbits.SID = id;
  1002  000138  0060  F004  F007   	movff	sendCANmessage@id,??_sendCANmessage
  1003  00013E  3A07               	swapf	??_sendCANmessage,f,c
  1004  000140  4607               	rlncf	??_sendCANmessage,f,c
  1005  000142  51E2               	movf	226,w,b	;volatile
  1006  000144  1807               	xorwf	??_sendCANmessage,w,c
  1007  000146  0B1F               	andlw	-225
  1008  000148  1807               	xorwf	??_sendCANmessage,w,c
  1009  00014A  6FE2               	movwf	226,b	;volatile
  1010                           
  1011                           ;MainCode.c: 465:     TXB0SIDH = id >> 3;
  1012  00014C  0060  F004  F007   	movff	sendCANmessage@id,??_sendCANmessage
  1013  000152  0060  F008  F008   	movff	sendCANmessage@id+1,??_sendCANmessage+1
  1014  000158  3408               	rlcf	??_sendCANmessage+1,w,c
  1015  00015A  3208               	rrcf	??_sendCANmessage+1,f,c
  1016  00015C  3207               	rrcf	??_sendCANmessage,f,c
  1017  00015E  3408               	rlcf	??_sendCANmessage+1,w,c
  1018  000160  3208               	rrcf	??_sendCANmessage+1,f,c
  1019  000162  3207               	rrcf	??_sendCANmessage,f,c
  1020  000164  3408               	rlcf	??_sendCANmessage+1,w,c
  1021  000166  3208               	rrcf	??_sendCANmessage+1,f,c
  1022  000168  3207               	rrcf	??_sendCANmessage,f,c
  1023  00016A  5007               	movf	??_sendCANmessage,w,c
  1024  00016C  6FE1               	movwf	225,b	;volatile
  1025                           
  1026                           ;MainCode.c: 467:     TXB0DLCbits.DLC = length;
  1027  00016E  51E5               	movf	229,w,b	;volatile
  1028  000170  1805               	xorwf	sendCANmessage@length,w,c
  1029  000172  0BF0               	andlw	-16
  1030  000174  1805               	xorwf	sendCANmessage@length,w,c
  1031  000176  6FE5               	movwf	229,b	;volatile
  1032                           
  1033                           ; BSR set to: 55
  1034                           ;MainCode.c: 468:     TXB0DLCbits.TXRTR = 0;
  1035  000178  9DE5               	bcf	229,6,b	;volatile
  1036                           
  1037                           ; BSR set to: 55
  1038                           ;MainCode.c: 470:     TXB0CONbits.TXREQ = 1;
  1039  00017A  87E0               	bsf	224,3,b	;volatile
  1040  00017C                     i2l196:
  1041                           
  1042                           ; BSR set to: 55
  1043  00017C  B7E0               	btfsc	224,3,b	;volatile
  1044  00017E  0012               	return	
  1045  000180  D7FD               	goto	i2l196
  1046  000182                     __end_of_sendCANmessage:
  1047                           	opt callstack 0
  1048                           
  1049                           ;
  1050                           ; Interrupt Vector Table @ 0x8
  1051                           ;
  1052                           
  1053                           	psect	ivt0x8
  1054  000008                     __pivt0x8:
  1055                           	opt callstack 0
  1056  000008                     ivt0x8_base:
  1057                           	opt callstack 0
  1058                           
  1059                           ; Vector 0 : SWINT
  1060  000008  0029               	dw	ivt0x8_undefint shr (0+2)
  1061                           
  1062                           ; Vector 1 : HLVD
  1063  00000A  0029               	dw	ivt0x8_undefint shr (0+2)
  1064                           
  1065                           ; Vector 2 : OSF
  1066  00000C  0029               	dw	ivt0x8_undefint shr (0+2)
  1067                           
  1068                           ; Vector 3 : CSW
  1069  00000E  0029               	dw	ivt0x8_undefint shr (0+2)
  1070                           
  1071                           ; Vector 4 : NVM
  1072  000010  0029               	dw	ivt0x8_undefint shr (0+2)
  1073                           
  1074                           ; Vector 5 : SCAN
  1075  000012  0029               	dw	ivt0x8_undefint shr (0+2)
  1076                           
  1077                           ; Vector 6 : CRC
  1078  000014  0029               	dw	ivt0x8_undefint shr (0+2)
  1079                           
  1080                           ; Vector 7 : IOC
  1081  000016  0029               	dw	ivt0x8_undefint shr (0+2)
  1082                           
  1083                           ; Vector 8 : INT0
  1084  000018  00C8               	dw	_encInt shr (0+2)
  1085                           
  1086                           ; Vector 9 : ZCD
  1087  00001A  0029               	dw	ivt0x8_undefint shr (0+2)
  1088                           
  1089                           ; Vector 10 : AD
  1090  00001C  00CB               	dw	_adcInt shr (0+2)
  1091                           
  1092                           ; Vector 11 : ADT
  1093  00001E  0029               	dw	ivt0x8_undefint shr (0+2)
  1094                           
  1095                           ; Vector 12 : CMP1
  1096  000020  0029               	dw	ivt0x8_undefint shr (0+2)
  1097                           
  1098                           ; Vector 13 : SMT1
  1099  000022  0029               	dw	ivt0x8_undefint shr (0+2)
  1100                           
  1101                           ; Vector 14 : SMT1PRA
  1102  000024  0029               	dw	ivt0x8_undefint shr (0+2)
  1103                           
  1104                           ; Vector 15 : SMT1PWA
  1105  000026  0029               	dw	ivt0x8_undefint shr (0+2)
  1106                           
  1107                           ; Vector 16 : DMA1SCNT
  1108  000028  0029               	dw	ivt0x8_undefint shr (0+2)
  1109                           
  1110                           ; Vector 17 : DMA1DCNT
  1111  00002A  0029               	dw	ivt0x8_undefint shr (0+2)
  1112                           
  1113                           ; Vector 18 : DMA1OR
  1114  00002C  0029               	dw	ivt0x8_undefint shr (0+2)
  1115                           
  1116                           ; Vector 19 : DMA1A
  1117  00002E  0029               	dw	ivt0x8_undefint shr (0+2)
  1118                           
  1119                           ; Vector 20 : SPI1RX
  1120  000030  0029               	dw	ivt0x8_undefint shr (0+2)
  1121                           
  1122                           ; Vector 21 : SPI1TX
  1123  000032  0029               	dw	ivt0x8_undefint shr (0+2)
  1124                           
  1125                           ; Vector 22 : SPI1
  1126  000034  0029               	dw	ivt0x8_undefint shr (0+2)
  1127                           
  1128                           ; Vector 23 : I2C1RX
  1129  000036  0029               	dw	ivt0x8_undefint shr (0+2)
  1130                           
  1131                           ; Vector 24 : I2C1TX
  1132  000038  0029               	dw	ivt0x8_undefint shr (0+2)
  1133                           
  1134                           ; Vector 25 : I2C1
  1135  00003A  0029               	dw	ivt0x8_undefint shr (0+2)
  1136                           
  1137                           ; Vector 26 : I2C1E
  1138  00003C  0029               	dw	ivt0x8_undefint shr (0+2)
  1139                           
  1140                           ; Vector 27 : U1RX
  1141  00003E  0029               	dw	ivt0x8_undefint shr (0+2)
  1142                           
  1143                           ; Vector 28 : U1TX
  1144  000040  0029               	dw	ivt0x8_undefint shr (0+2)
  1145                           
  1146                           ; Vector 29 : U1E
  1147  000042  0029               	dw	ivt0x8_undefint shr (0+2)
  1148                           
  1149                           ; Vector 30 : U1
  1150  000044  0029               	dw	ivt0x8_undefint shr (0+2)
  1151                           
  1152                           ; Vector 31 : TMR0
  1153  000046  0029               	dw	ivt0x8_undefint shr (0+2)
  1154                           
  1155                           ; Vector 32 : TMR1
  1156  000048  0029               	dw	ivt0x8_undefint shr (0+2)
  1157                           
  1158                           ; Vector 33 : TMR1G
  1159  00004A  0029               	dw	ivt0x8_undefint shr (0+2)
  1160                           
  1161                           ; Vector 34 : TMR2
  1162  00004C  0029               	dw	ivt0x8_undefint shr (0+2)
  1163                           
  1164                           ; Vector 35 : CCP1
  1165  00004E  0029               	dw	ivt0x8_undefint shr (0+2)
  1166                           
  1167                           ; Vector 36 : NCO1
  1168  000050  0029               	dw	ivt0x8_undefint shr (0+2)
  1169                           
  1170                           ; Vector 37 : CWG1
  1171  000052  0029               	dw	ivt0x8_undefint shr (0+2)
  1172                           
  1173                           ; Vector 38 : CLC1
  1174  000054  0029               	dw	ivt0x8_undefint shr (0+2)
  1175                           
  1176                           ; Vector 39 : INT1
  1177  000056  0029               	dw	ivt0x8_undefint shr (0+2)
  1178                           
  1179                           ; Vector 40 : RXB0IF
  1180  000058  009A               	dw	_canRecInt shr (0+2)
  1181                           
  1182                           ; Vector 41 : RXB1IF
  1183  00005A  0029               	dw	ivt0x8_undefint shr (0+2)
  1184                           
  1185                           ; Vector 42 : TXB0IF
  1186  00005C  0029               	dw	ivt0x8_undefint shr (0+2)
  1187                           
  1188                           ; Vector 43 : TXB1IF
  1189  00005E  0029               	dw	ivt0x8_undefint shr (0+2)
  1190                           
  1191                           ; Vector 44 : TXB2IF
  1192  000060  0029               	dw	ivt0x8_undefint shr (0+2)
  1193                           
  1194                           ; Vector 45 : ERRIF
  1195  000062  0029               	dw	ivt0x8_undefint shr (0+2)
  1196                           
  1197                           ; Vector 46 : WAKIF
  1198  000064  0029               	dw	ivt0x8_undefint shr (0+2)
  1199                           
  1200                           ; Vector 47 : IRXIF
  1201  000066  0029               	dw	ivt0x8_undefint shr (0+2)
  1202                           
  1203                           ; Vector 48 : CMP2
  1204  000068  0029               	dw	ivt0x8_undefint shr (0+2)
  1205                           
  1206                           ; Vector 49 : SMT2
  1207  00006A  0029               	dw	ivt0x8_undefint shr (0+2)
  1208                           
  1209                           ; Vector 50 : SMT2PRA
  1210  00006C  0029               	dw	ivt0x8_undefint shr (0+2)
  1211                           
  1212                           ; Vector 51 : SMT2PWA
  1213  00006E  0029               	dw	ivt0x8_undefint shr (0+2)
  1214                           
  1215                           ; Vector 52 : DMA2SCNT
  1216  000070  0029               	dw	ivt0x8_undefint shr (0+2)
  1217                           
  1218                           ; Vector 53 : DMA2DCNT
  1219  000072  0029               	dw	ivt0x8_undefint shr (0+2)
  1220                           
  1221                           ; Vector 54 : DMA2OR
  1222  000074  0029               	dw	ivt0x8_undefint shr (0+2)
  1223                           
  1224                           ; Vector 55 : DMA2A
  1225  000076  0029               	dw	ivt0x8_undefint shr (0+2)
  1226                           
  1227                           ; Vector 56 : I2C2RX
  1228  000078  0029               	dw	ivt0x8_undefint shr (0+2)
  1229                           
  1230                           ; Vector 57 : I2C2TX
  1231  00007A  0029               	dw	ivt0x8_undefint shr (0+2)
  1232                           
  1233                           ; Vector 58 : I2C2
  1234  00007C  0029               	dw	ivt0x8_undefint shr (0+2)
  1235                           
  1236                           ; Vector 59 : I2C2E
  1237  00007E  0029               	dw	ivt0x8_undefint shr (0+2)
  1238                           
  1239                           ; Vector 60 : U2RX
  1240  000080  0029               	dw	ivt0x8_undefint shr (0+2)
  1241                           
  1242                           ; Vector 61 : U2TX
  1243  000082  0029               	dw	ivt0x8_undefint shr (0+2)
  1244                           
  1245                           ; Vector 62 : U2E
  1246  000084  0029               	dw	ivt0x8_undefint shr (0+2)
  1247                           
  1248                           ; Vector 63 : U2
  1249  000086  0029               	dw	ivt0x8_undefint shr (0+2)
  1250                           
  1251                           ; Vector 64 : TMR3
  1252  000088  0029               	dw	ivt0x8_undefint shr (0+2)
  1253                           
  1254                           ; Vector 65 : TMR3G
  1255  00008A  0029               	dw	ivt0x8_undefint shr (0+2)
  1256                           
  1257                           ; Vector 66 : TMR4
  1258  00008C  0029               	dw	ivt0x8_undefint shr (0+2)
  1259                           
  1260                           ; Vector 67 : CCP2
  1261  00008E  0029               	dw	ivt0x8_undefint shr (0+2)
  1262                           
  1263                           ; Vector 68 : CWG2
  1264  000090  0029               	dw	ivt0x8_undefint shr (0+2)
  1265                           
  1266                           ; Vector 69 : CLC2
  1267  000092  0029               	dw	ivt0x8_undefint shr (0+2)
  1268                           
  1269                           ; Vector 70 : INT2
  1270  000094  0029               	dw	ivt0x8_undefint shr (0+2)
  1271                           
  1272                           ; Vector 71 : TMR5
  1273  000096  0029               	dw	ivt0x8_undefint shr (0+2)
  1274                           
  1275                           ; Vector 72 : TMR5G
  1276  000098  0029               	dw	ivt0x8_undefint shr (0+2)
  1277                           
  1278                           ; Vector 73 : TMR6
  1279  00009A  0029               	dw	ivt0x8_undefint shr (0+2)
  1280                           
  1281                           ; Vector 74 : CCP3
  1282  00009C  0029               	dw	ivt0x8_undefint shr (0+2)
  1283                           
  1284                           ; Vector 75 : CWG3
  1285  00009E  0029               	dw	ivt0x8_undefint shr (0+2)
  1286                           
  1287                           ; Vector 76 : CLC3
  1288  0000A0  0029               	dw	ivt0x8_undefint shr (0+2)
  1289                           
  1290                           ; Vector 77 : CCP4
  1291  0000A2  0029               	dw	ivt0x8_undefint shr (0+2)
  1292                           
  1293                           ; Vector 78 : CLC4
  1294  0000A4  0029               	dw	ivt0x8_undefint shr (0+2)
  1295  0000A6                     ivt0x8_undefint:
  1296                           	opt callstack 0
  1297  0000A6  00FF               	reset	
  1298  0000                     
  1299                           	psect	rparam
  1300  0000                     tosu	equ	0x3FFF
  1301                           tosh	equ	0x3FFE
  1302                           tosl	equ	0x3FFD
  1303                           stkptr	equ	0x3FFC
  1304                           pclatu	equ	0x3FFB
  1305                           pclath	equ	0x3FFA
  1306                           pcl	equ	0x3FF9
  1307                           tblptru	equ	0x3FF8
  1308                           tblptrh	equ	0x3FF7
  1309                           tblptrl	equ	0x3FF6
  1310                           tablat	equ	0x3FF5
  1311                           prodh	equ	0x3FF4
  1312                           prodl	equ	0x3FF3
  1313                           indf0	equ	0x3FEF
  1314                           postinc0	equ	0x3FEE
  1315                           postdec0	equ	0x3FED
  1316                           preinc0	equ	0x3FEC
  1317                           plusw0	equ	0x3FEB
  1318                           fsr0h	equ	0x3FEA
  1319                           fsr0l	equ	0x3FE9
  1320                           wreg	equ	0x3FE8
  1321                           indf1	equ	0x3FE7
  1322                           postinc1	equ	0x3FE6
  1323                           postdec1	equ	0x3FE5
  1324                           preinc1	equ	0x3FE4
  1325                           plusw1	equ	0x3FE3
  1326                           fsr1h	equ	0x3FE2
  1327                           fsr1l	equ	0x3FE1
  1328                           bsr	equ	0x3FE0
  1329                           indf2	equ	0x3FDF
  1330                           postinc2	equ	0x3FDE
  1331                           postdec2	equ	0x3FDD
  1332                           preinc2	equ	0x3FDC
  1333                           plusw2	equ	0x3FDB
  1334                           fsr2h	equ	0x3FDA
  1335                           fsr2l	equ	0x3FD9
  1336                           status	equ	0x3FD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     29      40
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sendCANmessage@message	PTR int  size(2) Largest target is 16
		 -> canRecInt@message(COMRAM[16]), 


Critical Paths under _main in COMRAM

    _Lcd_Init->_Lcd_Port

Critical Paths under _encInt in COMRAM

    None.

Critical Paths under _adcInt in COMRAM

    None.

Critical Paths under _canRecInt in COMRAM

    _canRecInt->_sendCANmessage

Critical Paths under _main in BANK0

    None.

Critical Paths under _encInt in BANK0

    None.

Critical Paths under _adcInt in BANK0

    None.

Critical Paths under _canRecInt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _encInt in BANK1

    None.

Critical Paths under _adcInt in BANK1

    None.

Critical Paths under _canRecInt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _encInt in BANK2

    None.

Critical Paths under _adcInt in BANK2

    None.

Critical Paths under _canRecInt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _encInt in BANK3

    None.

Critical Paths under _adcInt in BANK3

    None.

Critical Paths under _canRecInt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _encInt in BANK4

    None.

Critical Paths under _adcInt in BANK4

    None.

Critical Paths under _canRecInt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _encInt in BANK5

    None.

Critical Paths under _adcInt in BANK5

    None.

Critical Paths under _canRecInt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _encInt in BANK6

    None.

Critical Paths under _adcInt in BANK6

    None.

Critical Paths under _canRecInt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _encInt in BANK7

    None.

Critical Paths under _adcInt in BANK7

    None.

Critical Paths under _canRecInt in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      60
                                             27 COMRAM     2     2      0
                           _Lcd_Init
                            _initCAN
 ---------------------------------------------------------------------------------
 (1) _initCAN                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             0     0      0      60
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Port                                             1     1      0      60
                                             26 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _encInt                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _adcInt                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _canRecInt                                           18    18      0     501
                                              8 COMRAM    18    18      0
                     _sendCANmessage
 ---------------------------------------------------------------------------------
 (4) _sendCANmessage                                       8     2      6     470
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Port
   _initCAN

 _encInt (ROOT)

 _adcInt (ROOT)

 _canRecInt (ROOT)
   _sendCANmessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      20        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1D      28       1       42.1%
BITSFR_9             0      0       0     200        0.0%
SFR_9                0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      28       3        0.0%
DATA                 0      0      28      21        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Jun 29 20:59:46 2020

               __CFG_CP$OFF 000000                 __CFG_LVP$ON 000000                         l142 02C2  
                       l144 02CC                         l146 02D6                         l148 02E0  
                       l916 0210                         l942 0258                         l892 02CE  
                       l896 02D8                         l888 02C4                         u197 01EC  
                       wreg 003FE8               __CFG_BBEN$OFF 000000                __CFG_ZCD$OFF 000000  
                      l1050 01DE               __CFG_FCMEN$ON 000000                        _main 0182  
                      fsr2h 003FDA                        indf2 003FDF                        fsr2l 003FD9  
                      start 00A8               __CFG_CSWEN$ON 000000                ___param_bank 000000  
                     ?_main 0001               __CFG_WDTE$OFF 000000              __CFG_DEBUG$OFF 000000  
                     i2l135 02B2                       i2l137 0270                       i2l138 02B0  
                     i2l196 017C                       _TRISC 003FC4               __CFG_WRTB$OFF 000000  
             __CFG_WRTC$OFF 000000               __CFG_WRTD$OFF 000000             __end_of_initCAN 0266  
        __CFG_MCLRE$EXTMCLR 000000        sendCANmessage@length 0005                       status 003FD8  
          __end_of_Lcd_Init 031E            __end_of_Lcd_Port 02E4             __initialization 02E4  
              __end_of_main 01FC              __CFG_SAFEN$OFF 000000                      ??_main 001C  
            __CFG_PR1WAY$ON 000000               __activetblptr 000002              __CFG_MVECEN$ON 000000  
          ??_sendCANmessage 0007                      _ADRESH 003EF0                      _ADRESL 003EEF  
                    _ANSELC 003A60                      _RB2PPS 003A0A              __CFG_WDTCCS$SC 000000  
                    i2l1186 029A                      _RXB0D0 003F86                      _TXB0D0 0037E6  
                    _TXB0D1 0037E7                      _TXB0D2 0037E8                      _TXB0D3 0037E9  
                    _TXB0D4 0037EA                      _TXB0D5 0037EB                      _TXB0D6 0037EC  
                    _TXB0D7 0037ED              __CFG_XINST$OFF 000000                      _adcInt 032C  
            __CFG_STVREN$ON 000000                      _encInt 0320                      clear_0 02EA  
                    _status 0028                   ??_initCAN 001B       sendCANmessage@message 0003  
                    tblptru 003FF8                  __accesstop 0060     __end_of__initialization 02FC  
             ___rparam_used 000001          __size_of_canRecInt 0050              __pcstackCOMRAM 0001  
            ivt0x8_undefint 00A6                _ADCvalueLow0 0024                _ADCvalueLow1 0020  
                 ?_Lcd_Init 0001                   ?_Lcd_Port 0001             __CFG_IVT1WAY$ON 000000  
                   IVTBASEH 003FD6                     IVTBASEL 003FD5                     IVTBASEU 003FD7  
                   ?_adcInt 0001             __CFG_PPS1WAY$ON 000000                     ?_encInt 0001  
                   _INT0PPS 003AC0         __CFG_PWRTS$PWRT_OFF 000000           __end_of_canRecInt 02B8  
                   _OSCCON1 0039D9                  ??_Lcd_Init 001C                  ??_Lcd_Port 001B  
                 _ADPCHbits 003EF1                     __Hparam 0000                     __Lparam 0000  
__CFG_RSTOSC$HFINTOSC_64MHZ 000000             __size_of_adcInt 0002             __size_of_encInt 000C  
                   __pcinit 02E4                     __ramtop 0800                     __ptext0 0182  
                   __ptext1 01FC                     __ptext2 0306                     __ptext3 02B8  
                   __ptext4 0320                     __ptext5 032C                     __ptext6 0268  
                   __ptext7 00AC                     _initCAN 01FC             __CFG_WRTAPP$OFF 000000  
           __CFG_WRTSAF$OFF 000000        end_of_initialization 02FC               __Lmediumconst 0000  
                _tick_count 001E                     postinc0 003FEE                   Lcd_Port@a 001B  
     __CFG_WDTCPS$WDTCPS_31 000000                   _PORTBbits 003FCB                   _PORTCbits 003FCC  
                 _TRISAbits 003FC2                   _TRISBbits 003FC3            sendCANmessage@id 0001  
            __end_of_adcInt 032E              __end_of_encInt 032C         start_initialization 02E4  
             _ADCvalueHigh0 0026               _ADCvalueHigh1 0022                  ivt0x8_base 0008  
         __size_of_Lcd_Init 0018                 _CANSTATbits 003F8E           __size_of_Lcd_Port 002C  
   __size_of_sendCANmessage 00D6            __CFG_LPBOREN$OFF 000000                    ??_adcInt 0001  
                  ??_encInt 0001                 __pbssCOMRAM 001E                 _BRGCON1bits 003703  
                 _canRecInt 0268                    ?_initCAN 0001      __CFG_BBSIZE$BBSIZE_512 000000  
                ?_canRecInt 0001                    _PIE1bits 003991                    _PIE5bits 003995  
       __CFG_BORV$VBOR_2P45 000000                    _PIR1bits 0039A1                    _PIR5bits 0039A5  
                  _RXF0SIDH 0037A0                    _RXF1SIDH 0037A4                    _TXB0SIDH 0037E1  
                  _RXM0SIDH 0037B8                    _RXM1SIDH 0037BC                  _ADCON0bits 003EF8  
                  _Lcd_Init 0306                    _Lcd_Port 02B8                 _INTCON0bits 003FD2  
                _CANCONbits 003F8F              _sendCANmessage 00AC                    __Hrparam 0000  
                  __Lrparam 0000          __CFG_BOREN$SBORDIS 000000                  _ANSELAbits 003A40  
                _ANSELBbits 003A50            __size_of_initCAN 006A                _RXF0SIDLbits 0037A1  
                  __pivt0x8 0008                _RXF1SIDLbits 0037A5                 ??_canRecInt 0009  
    __end_of_sendCANmessage 0182               __size_of_main 007A        __CFG_WDTCWS$WDTCWS_7 000000  
              _TXB0SIDLbits 0037E2                _RXM0SIDLbits 0037B9                 _RXB0CONbits 003F80  
               _RXB1CONbits 0037F0                _RXM1SIDLbits 0037BD            canRecInt@message 000B  
                  intlevel2 0000             ?_sendCANmessage 0001                 _TXB0DLCbits 0037E5  
         __CFG_CLKOUTEN$OFF 000000                 _TXB0CONbits 0037E0  
