

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Aug 16 12:56:17 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F25K83
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=4,class=CODE,delta=1
    66                           	psect	text45,global,reloc=4,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=4,class=CODE,delta=1
    69                           	psect	text48,global,reloc=4,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=4,class=CODE,delta=1
    72                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75  0000                     
    76                           ; Version 2.05
    77                           ; Generated 20/12/2018 GMT
    78                           ; 
    79                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC18F25K83 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110  0000                     
   111                           	psect	idataCOMRAM
   112  003D70                     __pidataCOMRAM:
   113                           	opt callstack 0
   114                           
   115                           ;initializer for _status
   116  003D70  0001               	dw	1
   117                           
   118                           ;initializer for _max_tick_count
   119  003D72  0001               	dw	1
   120                           
   121                           	psect	idataBIGRAM
   122  0028F2                     __pidataBIGRAM:
   123                           	opt callstack 0
   124                           
   125                           ;initializer for _master_state_lut
   126  0028F2  49                 	db	73
   127  0028F3  4E                 	db	78
   128  0028F4  49                 	db	73
   129  0028F5  54                 	db	84
   130  0028F6  20                 	db	32
   131  0028F7  20                 	db	32
   132  0028F8  20                 	db	32
   133  0028F9  20                 	db	32
   134  0028FA  20                 	db	32
   135  0028FB  20                 	db	32
   136  0028FC  20                 	db	32
   137  0028FD  20                 	db	32
   138  0028FE  20                 	db	32
   139  0028FF  20                 	db	32
   140  002900  20                 	db	32
   141  002901  20                 	db	32
   142  002902  20                 	db	32
   143  002903  20                 	db	32
   144  002904  20                 	db	32
   145  002905  00                 	db	0
   146  002906  53                 	db	83
   147  002907  45                 	db	69
   148  002908  4C                 	db	76
   149  002909  46                 	db	70
   150  00290A  5F                 	db	95
   151  00290B  54                 	db	84
   152  00290C  45                 	db	69
   153  00290D  53                 	db	83
   154  00290E  54                 	db	84
   155  00290F  20                 	db	32
   156  002910  20                 	db	32
   157  002911  20                 	db	32
   158  002912  20                 	db	32
   159  002913  20                 	db	32
   160  002914  20                 	db	32
   161  002915  20                 	db	32
   162  002916  20                 	db	32
   163  002917  20                 	db	32
   164  002918  20                 	db	32
   165  002919  00                 	db	0
   166  00291A  52                 	db	82
   167  00291B  55                 	db	85
   168  00291C  4E                 	db	78
   169  00291D  20                 	db	32
   170  00291E  20                 	db	32
   171  00291F  20                 	db	32
   172  002920  20                 	db	32
   173  002921  20                 	db	32
   174  002922  20                 	db	32
   175  002923  20                 	db	32
   176  002924  20                 	db	32
   177  002925  20                 	db	32
   178  002926  20                 	db	32
   179  002927  20                 	db	32
   180  002928  20                 	db	32
   181  002929  20                 	db	32
   182  00292A  20                 	db	32
   183  00292B  20                 	db	32
   184  00292C  20                 	db	32
   185  00292D  00                 	db	0
   186  00292E  52                 	db	82
   187  00292F  55                 	db	85
   188  002930  4E                 	db	78
   189  002931  5F                 	db	95
   190  002932  53                 	db	83
   191  002933  4C                 	db	76
   192  002934  4F                 	db	79
   193  002935  57                 	db	87
   194  002936  20                 	db	32
   195  002937  20                 	db	32
   196  002938  20                 	db	32
   197  002939  20                 	db	32
   198  00293A  20                 	db	32
   199  00293B  20                 	db	32
   200  00293C  20                 	db	32
   201  00293D  20                 	db	32
   202  00293E  20                 	db	32
   203  00293F  20                 	db	32
   204  002940  20                 	db	32
   205  002941  00                 	db	0
   206  002942  41                 	db	65
   207  002943  56                 	db	86
   208  002944  4F                 	db	79
   209  002945  49                 	db	73
   210  002946  44                 	db	68
   211  002947  5F                 	db	95
   212  002948  50                 	db	80
   213  002949  45                 	db	69
   214  00294A  52                 	db	82
   215  00294B  49                 	db	73
   216  00294C  20                 	db	32
   217  00294D  20                 	db	32
   218  00294E  20                 	db	32
   219  00294F  20                 	db	32
   220  002950  20                 	db	32
   221  002951  20                 	db	32
   222  002952  20                 	db	32
   223  002953  20                 	db	32
   224  002954  20                 	db	32
   225  002955  00                 	db	0
   226  002956  54                 	db	84
   227  002957  52                 	db	82
   228  002958  59                 	db	89
   229  002959  5F                 	db	95
   230  00295A  4C                 	db	76
   231  00295B  45                 	db	69
   232  00295C  46                 	db	70
   233  00295D  54                 	db	84
   234  00295E  20                 	db	32
   235  00295F  20                 	db	32
   236  002960  20                 	db	32
   237  002961  20                 	db	32
   238  002962  20                 	db	32
   239  002963  20                 	db	32
   240  002964  20                 	db	32
   241  002965  20                 	db	32
   242  002966  20                 	db	32
   243  002967  20                 	db	32
   244  002968  20                 	db	32
   245  002969  00                 	db	0
   246  00296A  54                 	db	84
   247  00296B  52                 	db	82
   248  00296C  59                 	db	89
   249  00296D  5F                 	db	95
   250  00296E  52                 	db	82
   251  00296F  49                 	db	73
   252  002970  47                 	db	71
   253  002971  48                 	db	72
   254  002972  54                 	db	84
   255  002973  20                 	db	32
   256  002974  20                 	db	32
   257  002975  20                 	db	32
   258  002976  20                 	db	32
   259  002977  20                 	db	32
   260  002978  20                 	db	32
   261  002979  20                 	db	32
   262  00297A  20                 	db	32
   263  00297B  20                 	db	32
   264  00297C  20                 	db	32
   265  00297D  00                 	db	0
   266  00297E  54                 	db	84
   267  00297F  52                 	db	82
   268  002980  59                 	db	89
   269  002981  5F                 	db	95
   270  002982  49                 	db	73
   271  002983  4E                 	db	78
   272  002984  53                 	db	83
   273  002985  54                 	db	84
   274  002986  45                 	db	69
   275  002987  41                 	db	65
   276  002988  44                 	db	68
   277  002989  5F                 	db	95
   278  00298A  4C                 	db	76
   279  00298B  45                 	db	69
   280  00298C  46                 	db	70
   281  00298D  54                 	db	84
   282  00298E  20                 	db	32
   283  00298F  20                 	db	32
   284  002990  20                 	db	32
   285  002991  00                 	db	0
   286  002992  54                 	db	84
   287  002993  52                 	db	82
   288  002994  59                 	db	89
   289  002995  5F                 	db	95
   290  002996  49                 	db	73
   291  002997  4E                 	db	78
   292  002998  53                 	db	83
   293  002999  54                 	db	84
   294  00299A  45                 	db	69
   295  00299B  41                 	db	65
   296  00299C  44                 	db	68
   297  00299D  5F                 	db	95
   298  00299E  52                 	db	82
   299  00299F  49                 	db	73
   300  0029A0  47                 	db	71
   301  0029A1  48                 	db	72
   302  0029A2  54                 	db	84
   303  0029A3  20                 	db	32
   304  0029A4  20                 	db	32
   305  0029A5  00                 	db	0
   306  0029A6  54                 	db	84
   307  0029A7  52                 	db	82
   308  0029A8  59                 	db	89
   309  0029A9  5F                 	db	95
   310  0029AA  4C                 	db	76
   311  0029AB  41                 	db	65
   312  0029AC  53                 	db	83
   313  0029AD  54                 	db	84
   314  0029AE  5F                 	db	95
   315  0029AF  54                 	db	84
   316  0029B0  49                 	db	73
   317  0029B1  4D                 	db	77
   318  0029B2  45                 	db	69
   319  0029B3  5F                 	db	95
   320  0029B4  4C                 	db	76
   321  0029B5  45                 	db	69
   322  0029B6  46                 	db	70
   323  0029B7  54                 	db	84
   324  0029B8  20                 	db	32
   325  0029B9  00                 	db	0
   326  0029BA  54                 	db	84
   327  0029BB  52                 	db	82
   328  0029BC  59                 	db	89
   329  0029BD  5F                 	db	95
   330  0029BE  4C                 	db	76
   331  0029BF  41                 	db	65
   332  0029C0  53                 	db	83
   333  0029C1  54                 	db	84
   334  0029C2  5F                 	db	95
   335  0029C3  54                 	db	84
   336  0029C4  49                 	db	73
   337  0029C5  4D                 	db	77
   338  0029C6  45                 	db	69
   339  0029C7  5F                 	db	95
   340  0029C8  52                 	db	82
   341  0029C9  49                 	db	73
   342  0029CA  47                 	db	71
   343  0029CB  48                 	db	72
   344  0029CC  54                 	db	84
   345  0029CD  00                 	db	0
   346  0029CE  54                 	db	84
   347  0029CF  52                 	db	82
   348  0029D0  59                 	db	89
   349  0029D1  5F                 	db	95
   350  0029D2  42                 	db	66
   351  0029D3  41                 	db	65
   352  0029D4  43                 	db	67
   353  0029D5  4B                 	db	75
   354  0029D6  57                 	db	87
   355  0029D7  41                 	db	65
   356  0029D8  52                 	db	82
   357  0029D9  44                 	db	68
   358  0029DA  20                 	db	32
   359  0029DB  20                 	db	32
   360  0029DC  20                 	db	32
   361  0029DD  20                 	db	32
   362  0029DE  20                 	db	32
   363  0029DF  20                 	db	32
   364  0029E0  20                 	db	32
   365  0029E1  00                 	db	0
   366  0029E2  53                 	db	83
   367  0029E3  54                 	db	84
   368  0029E4  55                 	db	85
   369  0029E5  43                 	db	67
   370  0029E6  4B                 	db	75
   371  0029E7  20                 	db	32
   372  0029E8  20                 	db	32
   373  0029E9  20                 	db	32
   374  0029EA  20                 	db	32
   375  0029EB  20                 	db	32
   376  0029EC  20                 	db	32
   377  0029ED  20                 	db	32
   378  0029EE  20                 	db	32
   379  0029EF  20                 	db	32
   380  0029F0  20                 	db	32
   381  0029F1  20                 	db	32
   382  0029F2  20                 	db	32
   383  0029F3  20                 	db	32
   384  0029F4  20                 	db	32
   385  0029F5  00                 	db	0
   386  0029F6  46                 	db	70
   387  0029F7  49                 	db	73
   388  0029F8  4E                 	db	78
   389  0029F9  44                 	db	68
   390  0029FA  5F                 	db	95
   391  0029FB  50                 	db	80
   392  0029FC  45                 	db	69
   393  0029FD  52                 	db	82
   394  0029FE  49                 	db	73
   395  0029FF  4D                 	db	77
   396  002A00  45                 	db	69
   397  002A01  54                 	db	84
   398  002A02  45                 	db	69
   399  002A03  52                 	db	82
   400  002A04  20                 	db	32
   401  002A05  20                 	db	32
   402  002A06  20                 	db	32
   403  002A07  20                 	db	32
   404  002A08  20                 	db	32
   405  002A09  00                 	db	0
   406  002A0A  52                 	db	82
   407  002A0B  41                 	db	65
   408  002A0C  4E                 	db	78
   409  002A0D  44                 	db	68
   410  002A0E  4F                 	db	79
   411  002A0F  4D                 	db	77
   412  002A10  5F                 	db	95
   413  002A11  54                 	db	84
   414  002A12  55                 	db	85
   415  002A13  52                 	db	82
   416  002A14  4E                 	db	78
   417  002A15  20                 	db	32
   418  002A16  20                 	db	32
   419  002A17  20                 	db	32
   420  002A18  20                 	db	32
   421  002A19  20                 	db	32
   422  002A1A  20                 	db	32
   423  002A1B  20                 	db	32
   424  002A1C  20                 	db	32
   425  002A1D  00                 	db	0
   426  002A1E  52                 	db	82
   427  002A1F  45                 	db	69
   428  002A20  54                 	db	84
   429  002A21  55                 	db	85
   430  002A22  52                 	db	82
   431  002A23  4E                 	db	78
   432  002A24  5F                 	db	95
   433  002A25  48                 	db	72
   434  002A26  4F                 	db	79
   435  002A27  4D                 	db	77
   436  002A28  45                 	db	69
   437  002A29  20                 	db	32
   438  002A2A  20                 	db	32
   439  002A2B  20                 	db	32
   440  002A2C  20                 	db	32
   441  002A2D  20                 	db	32
   442  002A2E  20                 	db	32
   443  002A2F  20                 	db	32
   444  002A30  20                 	db	32
   445  002A31  00                 	db	0
   446  002A32  43                 	db	67
   447  002A33  48                 	db	72
   448  002A34  41                 	db	65
   449  002A35  52                 	db	82
   450  002A36  47                 	db	71
   451  002A37  49                 	db	73
   452  002A38  4E                 	db	78
   453  002A39  47                 	db	71
   454  002A3A  20                 	db	32
   455  002A3B  20                 	db	32
   456  002A3C  20                 	db	32
   457  002A3D  20                 	db	32
   458  002A3E  20                 	db	32
   459  002A3F  20                 	db	32
   460  002A40  20                 	db	32
   461  002A41  20                 	db	32
   462  002A42  20                 	db	32
   463  002A43  20                 	db	32
   464  002A44  20                 	db	32
   465  002A45  00                 	db	0
   466  002A46  53                 	db	83
   467  002A47  45                 	db	69
   468  002A48  52                 	db	82
   469  002A49  52                 	db	82
   470  002A4A  4F                 	db	79
   471  002A4B  52                 	db	82
   472  002A4C  20                 	db	32
   473  002A4D  20                 	db	32
   474  002A4E  20                 	db	32
   475  002A4F  20                 	db	32
   476  002A50  20                 	db	32
   477  002A51  20                 	db	32
   478  002A52  20                 	db	32
   479  002A53  20                 	db	32
   480  002A54  20                 	db	32
   481  002A55  20                 	db	32
   482  002A56  20                 	db	32
   483  002A57  20                 	db	32
   484  002A58  20                 	db	32
   485  002A59  00                 	db	0
   486                           
   487                           	psect	idataBANK1
   488  003D74                     __pidataBANK1:
   489                           	opt callstack 0
   490                           
   491                           ;initializer for _charging_state
   492  003D74  0006               	dw	6
   493                           
   494                           ;initializer for _enter_state
   495  003D76  0001               	dw	1
   496                           
   497                           	psect	idataBANK2
   498  00350E                     __pidataBANK2:
   499                           	opt callstack 0
   500                           
   501                           ;initializer for _charging_state_lut
   502  00350E  4E                 	db	78
   503  00350F  4F                 	db	79
   504  003510  5F                 	db	95
   505  003511  43                 	db	67
   506  003512  48                 	db	72
   507  003513  41                 	db	65
   508  003514  52                 	db	82
   509  003515  47                 	db	71
   510  003516  45                 	db	69
   511  003517  52                 	db	82
   512  003518  5F                 	db	95
   513  003519  50                 	db	80
   514  00351A  52                 	db	82
   515  00351B  45                 	db	69
   516  00351C  53                 	db	83
   517  00351D  45                 	db	69
   518  00351E  4E                 	db	78
   519  00351F  54                 	db	84
   520  003520  20                 	db	32
   521  003521  00                 	db	0
   522  003522  46                 	db	70
   523  003523  41                 	db	65
   524  003524  53                 	db	83
   525  003525  54                 	db	84
   526  003526  5F                 	db	95
   527  003527  43                 	db	67
   528  003528  48                 	db	72
   529  003529  41                 	db	65
   530  00352A  52                 	db	82
   531  00352B  47                 	db	71
   532  00352C  45                 	db	69
   533  00352D  20                 	db	32
   534  00352E  20                 	db	32
   535  00352F  20                 	db	32
   536  003530  20                 	db	32
   537  003531  20                 	db	32
   538  003532  20                 	db	32
   539  003533  20                 	db	32
   540  003534  20                 	db	32
   541  003535  00                 	db	0
   542  003536  54                 	db	84
   543  003537  4F                 	db	79
   544  003538  50                 	db	80
   545  003539  5F                 	db	95
   546  00353A  4F                 	db	79
   547  00353B  46                 	db	70
   548  00353C  46                 	db	70
   549  00353D  5F                 	db	95
   550  00353E  43                 	db	67
   551  00353F  48                 	db	72
   552  003540  41                 	db	65
   553  003541  52                 	db	82
   554  003542  47                 	db	71
   555  003543  45                 	db	69
   556  003544  20                 	db	32
   557  003545  20                 	db	32
   558  003546  20                 	db	32
   559  003547  20                 	db	32
   560  003548  20                 	db	32
   561  003549  00                 	db	0
   562  00354A  43                 	db	67
   563  00354B  48                 	db	72
   564  00354C  41                 	db	65
   565  00354D  52                 	db	82
   566  00354E  47                 	db	71
   567  00354F  45                 	db	69
   568  003550  5F                 	db	95
   569  003551  43                 	db	67
   570  003552  4F                 	db	79
   571  003553  4D                 	db	77
   572  003554  50                 	db	80
   573  003555  4C                 	db	76
   574  003556  45                 	db	69
   575  003557  54                 	db	84
   576  003558  45                 	db	69
   577  003559  20                 	db	32
   578  00355A  20                 	db	32
   579  00355B  20                 	db	32
   580  00355C  20                 	db	32
   581  00355D  00                 	db	0
   582  00355E  43                 	db	67
   583  00355F  48                 	db	72
   584  003560  41                 	db	65
   585  003561  52                 	db	82
   586  003562  47                 	db	71
   587  003563  45                 	db	69
   588  003564  52                 	db	82
   589  003565  5F                 	db	95
   590  003566  44                 	db	68
   591  003567  49                 	db	73
   592  003568  53                 	db	83
   593  003569  41                 	db	65
   594  00356A  42                 	db	66
   595  00356B  4C                 	db	76
   596  00356C  45                 	db	69
   597  00356D  44                 	db	68
   598  00356E  20                 	db	32
   599  00356F  20                 	db	32
   600  003570  20                 	db	32
   601  003571  00                 	db	0
   602  003572  46                 	db	70
   603  003573  41                 	db	65
   604  003574  55                 	db	85
   605  003575  4C                 	db	76
   606  003576  54                 	db	84
   607  003577  20                 	db	32
   608  003578  20                 	db	32
   609  003579  20                 	db	32
   610  00357A  20                 	db	32
   611  00357B  20                 	db	32
   612  00357C  20                 	db	32
   613  00357D  20                 	db	32
   614  00357E  20                 	db	32
   615  00357F  20                 	db	32
   616  003580  20                 	db	32
   617  003581  20                 	db	32
   618  003582  20                 	db	32
   619  003583  20                 	db	32
   620  003584  20                 	db	32
   621  003585  00                 	db	0
   622  003586  55                 	db	85
   623  003587  4E                 	db	78
   624  003588  44                 	db	68
   625  003589  45                 	db	69
   626  00358A  46                 	db	70
   627  00358B  49                 	db	73
   628  00358C  4E                 	db	78
   629  00358D  45                 	db	69
   630  00358E  44                 	db	68
   631  00358F  20                 	db	32
   632  003590  20                 	db	32
   633  003591  20                 	db	32
   634  003592  20                 	db	32
   635  003593  20                 	db	32
   636  003594  20                 	db	32
   637  003595  20                 	db	32
   638  003596  20                 	db	32
   639  003597  20                 	db	32
   640  003598  20                 	db	32
   641  003599  00                 	db	0
   642  0000                     _TXB0DLCbits	set	14309
   643  0000                     _TXB0SIDH	set	14305
   644  0000                     _TXB0SIDLbits	set	14306
   645  0000                     _TXB0D7	set	14317
   646  0000                     _TXB0D6	set	14316
   647  0000                     _TXB0D5	set	14315
   648  0000                     _TXB0D4	set	14314
   649  0000                     _TXB0D3	set	14313
   650  0000                     _TXB0D2	set	14312
   651  0000                     _TXB0D1	set	14311
   652  0000                     _TXB0D0	set	14310
   653  0000                     _TXB0CONbits	set	14304
   654  0000                     _RXB1CONbits	set	14320
   655  0000                     _RXM1SIDLbits	set	14269
   656  0000                     _RXM1SIDH	set	14268
   657  0000                     _RXF1SIDLbits	set	14245
   658  0000                     _RXF1SIDH	set	14244
   659  0000                     _RXM0SIDLbits	set	14265
   660  0000                     _RXM0SIDH	set	14264
   661  0000                     _RXF0SIDLbits	set	14241
   662  0000                     _RXF0SIDH	set	14240
   663  0000                     _BRGCON1bits	set	14083
   664  0000                     _PIE3bits	set	14739
   665  0000                     _PIR5bits	set	14757
   666  0000                     _PIR3bits	set	14755
   667  0000                     _PIE5bits	set	14741
   668  0000                     _PIR1bits	set	14753
   669  0000                     _PIE1bits	set	14737
   670  0000                     _OSCCON1	set	14809
   671  0000                     _RB2PPS	set	14858
   672  0000                     _ANSELC	set	14944
   673  0000                     _ANSELBbits	set	14928
   674  0000                     _INT0PPS	set	15040
   675  0000                     _ANSELAbits	set	14912
   676  0000                     _ADRESL	set	16111
   677  0000                     _ADRESH	set	16112
   678  0000                     _ADCON0bits	set	16120
   679  0000                     _ADPCHbits	set	16113
   680  0000                     _TMR0H	set	16311
   681  0000                     _TMR0L	set	16310
   682  0000                     _T0CON1bits	set	16313
   683  0000                     _CANSTATbits	set	16270
   684  0000                     _CANCONbits	set	16271
   685  0000                     _TRISC	set	16324
   686  0000                     _PORTCbits	set	16332
   687  0000                     _RXB0D0	set	16262
   688  0000                     _RXB0D1	set	16263
   689  0000                     _RXB0CONbits	set	16256
   690  0000                     _T0CON0bits	set	16312
   691  0000                     _PORTAbits	set	16330
   692  0000                     _PORTBbits	set	16331
   693  0000                     _TRISBbits	set	16323
   694  0000                     _TMR1L	set	16304
   695  0000                     _TMR1H	set	16305
   696  0000                     _T1CLKbits	set	16309
   697  0000                     _T1CONbits	set	16306
   698  0000                     _INTCON0bits	set	16338
   699  0000                     _TRISAbits	set	16322
   700                           
   701                           	psect	mediumconst
   702  007E98                     __pmediumconst:
   703                           	opt callstack 0
   704  007E98  00                 	db	0
   705  007E99                     STR_1:
   706                           
   707                           ; BSR set to: 57
   708  007E99  57                 	db	87	;'W'
   709  007E9A  65                 	db	101	;'e'
   710  007E9B  6C                 	db	108	;'l'
   711  007E9C  63                 	db	99	;'c'
   712  007E9D  6F                 	db	111	;'o'
   713  007E9E  6D                 	db	109	;'m'
   714  007E9F  65                 	db	101	;'e'
   715  007EA0  20                 	db	32
   716  007EA1  74                 	db	116	;'t'
   717  007EA2  6F                 	db	111	;'o'
   718  007EA3  20                 	db	32
   719  007EA4  74                 	db	116	;'t'
   720  007EA5  68                 	db	104	;'h'
   721  007EA6  65                 	db	101	;'e'
   722  007EA7  20                 	db	32
   723  007EA8  72                 	db	114	;'r'
   724  007EA9  6F                 	db	111	;'o'
   725  007EAA  62                 	db	98	;'b'
   726  007EAB  6F                 	db	111	;'o'
   727  007EAC  74                 	db	116	;'t'
   728  007EAD  00                 	db	0
   729  007EAE                     STR_10:
   730                           
   731                           ; BSR set to: 57
   732  007EAE  52                 	db	82	;'R'
   733  007EAF  6F                 	db	111	;'o'
   734  007EB0  62                 	db	98	;'b'
   735  007EB1  6F                 	db	111	;'o'
   736  007EB2  74                 	db	116	;'t'
   737  007EB3  20                 	db	32
   738  007EB4  77                 	db	119	;'w'
   739  007EB5  69                 	db	105	;'i'
   740  007EB6  6C                 	db	108	;'l'
   741  007EB7  6C                 	db	108	;'l'
   742  007EB8  20                 	db	32
   743  007EB9  6D                 	db	109	;'m'
   744  007EBA  6F                 	db	111	;'o'
   745  007EBB  77                 	db	119	;'w'
   746  007EBC  69                 	db	105	;'i'
   747  007EBD  6E                 	db	110	;'n'
   748  007EBE  67                 	db	103	;'g'
   749  007EBF  21                 	db	33
   750  007EC0  21                 	db	33
   751  007EC1  00                 	db	0
   752  007EC2                     STR_16:
   753                           
   754                           ; BSR set to: 57
   755  007EC2  52                 	db	82	;'R'
   756  007EC3  65                 	db	101	;'e'
   757  007EC4  6C                 	db	108	;'l'
   758  007EC5  65                 	db	101	;'e'
   759  007EC6  61                 	db	97	;'a'
   760  007EC7  73                 	db	115	;'s'
   761  007EC8  65                 	db	101	;'e'
   762  007EC9  20                 	db	32
   763  007ECA  66                 	db	102	;'f'
   764  007ECB  6F                 	db	111	;'o'
   765  007ECC  72                 	db	114	;'r'
   766  007ECD  20                 	db	32
   767  007ECE  72                 	db	114	;'r'
   768  007ECF  65                 	db	101	;'e'
   769  007ED0  73                 	db	115	;'s'
   770  007ED1  74                 	db	116	;'t'
   771  007ED2  61                 	db	97	;'a'
   772  007ED3  72                 	db	114	;'r'
   773  007ED4  74                 	db	116	;'t'
   774  007ED5  00                 	db	0
   775  007ED6                     STR_28:
   776                           
   777                           ; BSR set to: 57
   778  007ED6  45                 	db	69	;'E'
   779  007ED7  72                 	db	114	;'r'
   780  007ED8  72                 	db	114	;'r'
   781  007ED9  6F                 	db	111	;'o'
   782  007EDA  72                 	db	114	;'r'
   783  007EDB  20                 	db	32
   784  007EDC  73                 	db	115	;'s'
   785  007EDD  74                 	db	116	;'t'
   786  007EDE  61                 	db	97	;'a'
   787  007EDF  74                 	db	116	;'t'
   788  007EE0  65                 	db	101	;'e'
   789  007EE1  6D                 	db	109	;'m'
   790  007EE2  61                 	db	97	;'a'
   791  007EE3  63                 	db	99	;'c'
   792  007EE4  68                 	db	104	;'h'
   793  007EE5  69                 	db	105	;'i'
   794  007EE6  6E                 	db	110	;'n'
   795  007EE7  65                 	db	101	;'e'
   796  007EE8  00                 	db	0
   797  007EE9                     STR_18:
   798                           
   799                           ; BSR set to: 57
   800  007EE9  52                 	db	82	;'R'
   801  007EEA  65                 	db	101	;'e'
   802  007EEB  6C                 	db	108	;'l'
   803  007EEC  65                 	db	101	;'e'
   804  007EED  61                 	db	97	;'a'
   805  007EEE  73                 	db	115	;'s'
   806  007EEF  65                 	db	101	;'e'
   807  007EF0  20                 	db	32
   808  007EF1  66                 	db	102	;'f'
   809  007EF2  6F                 	db	111	;'o'
   810  007EF3  72                 	db	114	;'r'
   811  007EF4  20                 	db	32
   812  007EF5  72                 	db	114	;'r'
   813  007EF6  65                 	db	101	;'e'
   814  007EF7  74                 	db	116	;'t'
   815  007EF8  75                 	db	117	;'u'
   816  007EF9  72                 	db	114	;'r'
   817  007EFA  6E                 	db	110	;'n'
   818  007EFB  00                 	db	0
   819  007EFC                     STR_5:
   820                           
   821                           ; BSR set to: 57
   822  007EFC  45                 	db	69	;'E'
   823  007EFD  78                 	db	120	;'x'
   824  007EFE  65                 	db	101	;'e'
   825  007EFF  63                 	db	99	;'c'
   826  007F00  75                 	db	117	;'u'
   827  007F01  74                 	db	116	;'t'
   828  007F02  69                 	db	105	;'i'
   829  007F03  6E                 	db	110	;'n'
   830  007F04  67                 	db	103	;'g'
   831  007F05  20                 	db	32
   832  007F06  73                 	db	115	;'s'
   833  007F07  65                 	db	101	;'e'
   834  007F08  6C                 	db	108	;'l'
   835  007F09  66                 	db	102	;'f'
   836  007F0A  74                 	db	116	;'t'
   837  007F0B  65                 	db	101	;'e'
   838  007F0C  73                 	db	115	;'s'
   839  007F0D  74                 	db	116	;'t'
   840  007F0E  00                 	db	0
   841  007F0F                     STR_2:
   842                           
   843                           ; BSR set to: 57
   844  007F0F  45                 	db	69	;'E'
   845  007F10  78                 	db	120	;'x'
   846  007F11  65                 	db	101	;'e'
   847  007F12  63                 	db	99	;'c'
   848  007F13  75                 	db	117	;'u'
   849  007F14  74                 	db	116	;'t'
   850  007F15  65                 	db	101	;'e'
   851  007F16  20                 	db	32
   852  007F17  73                 	db	115	;'s'
   853  007F18  65                 	db	101	;'e'
   854  007F19  6C                 	db	108	;'l'
   855  007F1A  66                 	db	102	;'f'
   856  007F1B  74                 	db	116	;'t'
   857  007F1C  65                 	db	101	;'e'
   858  007F1D  73                 	db	115	;'s'
   859  007F1E  74                 	db	116	;'t'
   860  007F1F  3F                 	db	63	;'?'
   861  007F20  00                 	db	0
   862  007F21                     STR_7:
   863                           
   864                           ; BSR set to: 57
   865  007F21  53                 	db	83	;'S'
   866  007F22  65                 	db	101	;'e'
   867  007F23  6C                 	db	108	;'l'
   868  007F24  66                 	db	102	;'f'
   869  007F25  74                 	db	116	;'t'
   870  007F26  65                 	db	101	;'e'
   871  007F27  73                 	db	115	;'s'
   872  007F28  74                 	db	116	;'t'
   873  007F29  20                 	db	32
   874  007F2A  77                 	db	119	;'w'
   875  007F2B  61                 	db	97	;'a'
   876  007F2C  73                 	db	115	;'s'
   877  007F2D  20                 	db	32
   878  007F2E  4F                 	db	79	;'O'
   879  007F2F  4B                 	db	75	;'K'
   880  007F30  21                 	db	33
   881  007F31  00                 	db	0
   882  007F32                     STR_19:
   883                           
   884                           ; BSR set to: 57
   885  007F32  74                 	db	116	;'t'
   886  007F33  6F                 	db	111	;'o'
   887  007F34  20                 	db	32
   888  007F35  63                 	db	99	;'c'
   889  007F36  68                 	db	104	;'h'
   890  007F37  61                 	db	97	;'a'
   891  007F38  72                 	db	114	;'r'
   892  007F39  67                 	db	103	;'g'
   893  007F3A  69                 	db	105	;'i'
   894  007F3B  6E                 	db	110	;'n'
   895  007F3C  67                 	db	103	;'g'
   896  007F3D  20                 	db	32
   897  007F3E  62                 	db	98	;'b'
   898  007F3F  61                 	db	97	;'a'
   899  007F40  73                 	db	115	;'s'
   900  007F41  65                 	db	101	;'e'
   901  007F42  00                 	db	0
   902  007F43                     STR_8:
   903                           
   904                           ; BSR set to: 57
   905  007F43  53                 	db	83	;'S'
   906  007F44  65                 	db	101	;'e'
   907  007F45  6C                 	db	108	;'l'
   908  007F46  66                 	db	102	;'f'
   909  007F47  74                 	db	116	;'t'
   910  007F48  65                 	db	101	;'e'
   911  007F49  73                 	db	115	;'s'
   912  007F4A  74                 	db	116	;'t'
   913  007F4B  20                 	db	32
   914  007F4C  66                 	db	102	;'f'
   915  007F4D  61                 	db	97	;'a'
   916  007F4E  69                 	db	105	;'i'
   917  007F4F  6C                 	db	108	;'l'
   918  007F50  65                 	db	101	;'e'
   919  007F51  64                 	db	100	;'d'
   920  007F52  00                 	db	0
   921  007F53                     STR_3:
   922                           
   923                           ; BSR set to: 57
   924  007F53  52                 	db	82	;'R'
   925  007F54  6F                 	db	111	;'o'
   926  007F55  62                 	db	98	;'b'
   927  007F56  6F                 	db	111	;'o'
   928  007F57  74                 	db	116	;'t'
   929  007F58  20                 	db	32
   930  007F59  77                 	db	119	;'w'
   931  007F5A  69                 	db	105	;'i'
   932  007F5B  6C                 	db	108	;'l'
   933  007F5C  6C                 	db	108	;'l'
   934  007F5D  20                 	db	32
   935  007F5E  6D                 	db	109	;'m'
   936  007F5F  6F                 	db	111	;'o'
   937  007F60  76                 	db	118	;'v'
   938  007F61  65                 	db	101	;'e'
   939  007F62  00                 	db	0
   940  007F63                     STR_4:
   941                           
   942                           ; BSR set to: 57
   943  007F63  41                 	db	65	;'A'
   944  007F64  72                 	db	114	;'r'
   945  007F65  65                 	db	101	;'e'
   946  007F66  20                 	db	32
   947  007F67  79                 	db	121	;'y'
   948  007F68  6F                 	db	111	;'o'
   949  007F69  75                 	db	117	;'u'
   950  007F6A  20                 	db	32
   951  007F6B  73                 	db	115	;'s'
   952  007F6C  75                 	db	117	;'u'
   953  007F6D  72                 	db	114	;'r'
   954  007F6E  65                 	db	101	;'e'
   955  007F6F  3F                 	db	63	;'?'
   956  007F70  3F                 	db	63	;'?'
   957  007F71  00                 	db	0
   958  007F72                     STR_23:
   959                           
   960                           ; BSR set to: 57
   961  007F72  52                 	db	82	;'R'
   962  007F73  65                 	db	101	;'e'
   963  007F74  74                 	db	116	;'t'
   964  007F75  75                 	db	117	;'u'
   965  007F76  72                 	db	114	;'r'
   966  007F77  6E                 	db	110	;'n'
   967  007F78  69                 	db	105	;'i'
   968  007F79  6E                 	db	110	;'n'
   969  007F7A  67                 	db	103	;'g'
   970  007F7B  20                 	db	32
   971  007F7C  68                 	db	104	;'h'
   972  007F7D  6F                 	db	111	;'o'
   973  007F7E  6D                 	db	109	;'m'
   974  007F7F  65                 	db	101	;'e'
   975  007F80  00                 	db	0
   976  007F81                     STR_20:
   977                           
   978                           ; BSR set to: 57
   979  007F81  43                 	db	67	;'C'
   980  007F82  68                 	db	104	;'h'
   981  007F83  61                 	db	97	;'a'
   982  007F84  72                 	db	114	;'r'
   983  007F85  67                 	db	103	;'g'
   984  007F86  69                 	db	105	;'i'
   985  007F87  6E                 	db	110	;'n'
   986  007F88  67                 	db	103	;'g'
   987  007F89  20                 	db	32
   988  007F8A  72                 	db	114	;'r'
   989  007F8B  6F                 	db	111	;'o'
   990  007F8C  62                 	db	98	;'b'
   991  007F8D  6F                 	db	111	;'o'
   992  007F8E  74                 	db	116	;'t'
   993  007F8F  00                 	db	0
   994  007F90                     STR_14:
   995                           
   996                           ; BSR set to: 57
   997  007F90  4D                 	db	77	;'M'
   998  007F91  61                 	db	97	;'a'
   999  007F92  73                 	db	115	;'s'
  1000  007F93  74                 	db	116	;'t'
  1001  007F94  65                 	db	101	;'e'
  1002  007F95  72                 	db	114	;'r'
  1003  007F96  20                 	db	32
  1004  007F97  53                 	db	83	;'S'
  1005  007F98  54                 	db	84	;'T'
  1006  007F99  41                 	db	65	;'A'
  1007  007F9A  54                 	db	84	;'T'
  1008  007F9B  45                 	db	69	;'E'
  1009  007F9C  3A                 	db	58	;':'
  1010  007F9D  00                 	db	0
  1011  007F9E                     STR_12:
  1012                           
  1013                           ; BSR set to: 57
  1014  007F9E  4D                 	db	77	;'M'
  1015  007F9F  6F                 	db	111	;'o'
  1016  007FA0  77                 	db	119	;'w'
  1017  007FA1  69                 	db	105	;'i'
  1018  007FA2  6E                 	db	110	;'n'
  1019  007FA3  67                 	db	103	;'g'
  1020  007FA4  20                 	db	32
  1021  007FA5  6C                 	db	108	;'l'
  1022  007FA6  61                 	db	97	;'a'
  1023  007FA7  77                 	db	119	;'w'
  1024  007FA8  6E                 	db	110	;'n'
  1025  007FA9  00                 	db	0
  1026  007FAA                     STR_9:
  1027                           
  1028                           ; BSR set to: 57
  1029  007FAA  54                 	db	84	;'T'
  1030  007FAB  72                 	db	114	;'r'
  1031  007FAC  79                 	db	121	;'y'
  1032  007FAD  20                 	db	32
  1033  007FAE  41                 	db	65	;'A'
  1034  007FAF  67                 	db	103	;'g'
  1035  007FB0  61                 	db	97	;'a'
  1036  007FB1  69                 	db	105	;'i'
  1037  007FB2  6E                 	db	110	;'n'
  1038  007FB3  3F                 	db	63	;'?'
  1039  007FB4  00                 	db	0
  1040  007FB5                     STR_21:
  1041                           
  1042                           ; BSR set to: 57
  1043  007FB5  56                 	db	86	;'V'
  1044  007FB6  6F                 	db	111	;'o'
  1045  007FB7  6C                 	db	108	;'l'
  1046  007FB8  74                 	db	116	;'t'
  1047  007FB9  61                 	db	97	;'a'
  1048  007FBA  67                 	db	103	;'g'
  1049  007FBB  65                 	db	101	;'e'
  1050  007FBC  3A                 	db	58	;':'
  1051  007FBD  20                 	db	32
  1052  007FBE  00                 	db	0
  1053  007FBF                     STR_31:
  1054                           
  1055                           ; BSR set to: 57
  1056  007FBF  20                 	db	32
  1057  007FC0  59                 	db	89	;'Y'
  1058  007FC1  65                 	db	101	;'e'
  1059  007FC2  73                 	db	115	;'s'
  1060  007FC3  20                 	db	32
  1061  007FC4  00                 	db	0
  1062  007FC5                     STR_6:
  1063                           
  1064                           ; BSR set to: 57
  1065  007FC5  2E                 	db	46
  1066  007FC6  2E                 	db	46
  1067  007FC7  2E                 	db	46
  1068  007FC8  2E                 	db	46
  1069  007FC9  2E                 	db	46
  1070  007FCA  00                 	db	0
  1071  007FCB                     STR_22:
  1072                           
  1073                           ; BSR set to: 57
  1074  007FCB  25                 	db	37
  1075  007FCC  33                 	db	51	;'3'
  1076  007FCD  2E                 	db	46
  1077  007FCE  32                 	db	50	;'2'
  1078  007FCF  66                 	db	102	;'f'
  1079  007FD0  00                 	db	0
  1080  007FD1                     STR_33:
  1081                           
  1082                           ; BSR set to: 57
  1083  007FD1  45                 	db	69	;'E'
  1084  007FD2  72                 	db	114	;'r'
  1085  007FD3  72                 	db	114	;'r'
  1086  007FD4  6F                 	db	111	;'o'
  1087  007FD5  72                 	db	114	;'r'
  1088  007FD6  00                 	db	0
  1089  007FD7                     STR_29:
  1090                           
  1091                           ; BSR set to: 57
  1092  007FD7  7C                 	db	124
  1093  007FD8  59                 	db	89	;'Y'
  1094  007FD9  65                 	db	101	;'e'
  1095  007FDA  73                 	db	115	;'s'
  1096  007FDB  7C                 	db	124
  1097  007FDC  00                 	db	0
  1098  007FDD                     STR_30:
  1099                           
  1100                           ; BSR set to: 57
  1101  007FDD  20                 	db	32
  1102  007FDE  4E                 	db	78	;'N'
  1103  007FDF  6F                 	db	111	;'o'
  1104  007FE0  20                 	db	32
  1105  007FE1  00                 	db	0
  1106  007FE2                     STR_32:
  1107                           
  1108                           ; BSR set to: 57
  1109  007FE2  7C                 	db	124
  1110  007FE3  4E                 	db	78	;'N'
  1111  007FE4  6F                 	db	111	;'o'
  1112  007FE5  7C                 	db	124
  1113  007FE6  00                 	db	0
  1114  007FE7                     STR_34:
  1115                           
  1116                           ; BSR set to: 57
  1117  007FE7  49                 	db	73	;'I'
  1118  007FE8  4E                 	db	78	;'N'
  1119  007FE9  46                 	db	70	;'F'
  1120  007FEA  00                 	db	0
  1121  007FEB                     STR_38:
  1122                           
  1123                           ; BSR set to: 57
  1124  007FEB  4E                 	db	78	;'N'
  1125  007FEC  41                 	db	65	;'A'
  1126  007FED  4E                 	db	78	;'N'
  1127  007FEE  00                 	db	0
  1128  007FEF                     STR_35:
  1129                           
  1130                           ; BSR set to: 57
  1131  007FEF  69                 	db	105	;'i'
  1132  007FF0  6E                 	db	110	;'n'
  1133  007FF1  66                 	db	102	;'f'
  1134  007FF2  00                 	db	0
  1135  007FF3                     STR_39:
  1136                           
  1137                           ; BSR set to: 57
  1138  007FF3  6E                 	db	110	;'n'
  1139  007FF4  61                 	db	97	;'a'
  1140  007FF5  6E                 	db	110	;'n'
  1141  007FF6  00                 	db	0
  1142  007FF7                     STR_15:
  1143                           
  1144                           ; BSR set to: 57
  1145  007FF7  25                 	db	37
  1146  007FF8  33                 	db	51	;'3'
  1147  007FF9  64                 	db	100	;'d'
  1148  007FFA  00                 	db	0
  1149  007FFB                     STR_42:
  1150                           
  1151                           ; BSR set to: 57
  1152  007FFB  6C                 	db	108	;'l'
  1153  007FFC  66                 	db	102	;'f'
  1154  007FFD  00                 	db	0
  1155  0000                     
  1156                           ; #config settings
  1157  007FFE  00                 	db	0	; dummy byte at the end
  1158  0000                     
  1159                           	psect	cinit
  1160  003048                     __pcinit:
  1161                           	opt callstack 0
  1162  003048                     start_initialization:
  1163                           	opt callstack 0
  1164  003048                     __initialization:
  1165                           	opt callstack 0
  1166                           
  1167                           ; Initialize objects allocated to BIGRAM (360 bytes)
  1168                           ; load TBLPTR registers with __pidataBIGRAM
  1169  003048  0EF2               	movlw	low __pidataBIGRAM
  1170  00304A  6EF6               	movwf	tblptrl,c
  1171  00304C  0E28               	movlw	high __pidataBIGRAM
  1172  00304E  6EF7               	movwf	tblptrh,c
  1173  003050  0E00               	movlw	low (__pidataBIGRAM shr (0+16))
  1174  003052  6EF8               	movwf	tblptru,c
  1175  003054  EE00  F28C         	lfsr	0,__pdataBIGRAM
  1176  003058  EE10 F168          	lfsr	1,360
  1177  00305C                     copy_data0:
  1178  00305C  0009               	tblrd		*+
  1179  00305E  006F FFD7 FFEE     	movff	tablat,postinc0
  1180  003064  50E5               	movf	postdec1,w,c
  1181  003066  50E1               	movf	fsr1l,w,c
  1182  003068  E1F9               	bnz	copy_data0
  1183  00306A  50E2               	movf	fsr1h,w,c
  1184  00306C  E1F7               	bnz	copy_data0
  1185                           
  1186                           ; Initialize objects allocated to BANK2 (140 bytes)
  1187                           ; load TBLPTR registers with __pidataBANK2
  1188  00306E  0E0E               	movlw	low __pidataBANK2
  1189  003070  6EF6               	movwf	tblptrl,c
  1190  003072  0E35               	movlw	high __pidataBANK2
  1191  003074  6EF7               	movwf	tblptrh,c
  1192  003076  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1193  003078  6EF8               	movwf	tblptru,c
  1194  00307A  EE00  F200         	lfsr	0,__pdataBANK2
  1195  00307E  EE10 F08C          	lfsr	1,140
  1196  003082                     copy_data1:
  1197  003082  0009               	tblrd		*+
  1198  003084  006F FFD7 FFEE     	movff	tablat,postinc0
  1199  00308A  50E5               	movf	postdec1,w,c
  1200  00308C  50E1               	movf	fsr1l,w,c
  1201  00308E  E1F9               	bnz	copy_data1
  1202                           
  1203                           ; Initialize objects allocated to BANK1 (4 bytes)
  1204                           ; load TBLPTR registers with __pidataBANK1
  1205  003090  0E74               	movlw	low __pidataBANK1
  1206  003092  6EF6               	movwf	tblptrl,c
  1207  003094  0E3D               	movlw	high __pidataBANK1
  1208  003096  6EF7               	movwf	tblptrh,c
  1209  003098  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1210  00309A  6EF8               	movwf	tblptru,c
  1211  00309C  EE00  F1A9         	lfsr	0,__pdataBANK1
  1212  0030A0  EE10 F004          	lfsr	1,4
  1213  0030A4                     copy_data2:
  1214  0030A4  0009               	tblrd		*+
  1215  0030A6  006F FFD7 FFEE     	movff	tablat,postinc0
  1216  0030AC  50E5               	movf	postdec1,w,c
  1217  0030AE  50E1               	movf	fsr1l,w,c
  1218  0030B0  E1F9               	bnz	copy_data2
  1219                           
  1220                           ; Initialize objects allocated to COMRAM (4 bytes)
  1221                           ; load TBLPTR registers with __pidataCOMRAM
  1222  0030B2  0E70               	movlw	low __pidataCOMRAM
  1223  0030B4  6EF6               	movwf	tblptrl,c
  1224  0030B6  0E3D               	movlw	high __pidataCOMRAM
  1225  0030B8  6EF7               	movwf	tblptrh,c
  1226  0030BA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1227  0030BC  6EF8               	movwf	tblptru,c
  1228  0030BE  EE00  F041         	lfsr	0,__pdataCOMRAM
  1229  0030C2  EE10 F004          	lfsr	1,4
  1230  0030C6                     copy_data3:
  1231  0030C6  0009               	tblrd		*+
  1232  0030C8  006F FFD7 FFEE     	movff	tablat,postinc0
  1233  0030CE  50E5               	movf	postdec1,w,c
  1234  0030D0  50E1               	movf	fsr1l,w,c
  1235  0030D2  E1F9               	bnz	copy_data3
  1236                           
  1237                           ; Clear objects allocated to BANK1 (91 bytes)
  1238  0030D4  EE00  F100         	lfsr	0,__pbssBANK1
  1239  0030D8  0E5B               	movlw	91
  1240  0030DA                     clear_0:
  1241  0030DA  6AEE               	clrf	postinc0,c
  1242  0030DC  06E8               	decf	wreg,f,c
  1243  0030DE  E1FD               	bnz	clear_0
  1244                           
  1245                           ; Clear objects allocated to BANK0 (6 bytes)
  1246  0030E0  0100               	movlb	0
  1247  0030E2  6BF8               	clrf	(__pbssBANK0+5)& (0+255),b
  1248  0030E4  6BF7               	clrf	(__pbssBANK0+4)& (0+255),b
  1249  0030E6  6BF6               	clrf	(__pbssBANK0+3)& (0+255),b
  1250  0030E8  6BF5               	clrf	(__pbssBANK0+2)& (0+255),b
  1251  0030EA  6BF4               	clrf	(__pbssBANK0+1)& (0+255),b
  1252  0030EC  6BF3               	clrf	__pbssBANK0& (0+255),b
  1253                           
  1254                           ; Clear objects allocated to COMRAM (20 bytes)
  1255  0030EE  EE00  F02D         	lfsr	0,__pbssCOMRAM
  1256  0030F2  0E14               	movlw	20
  1257  0030F4                     clear_1:
  1258  0030F4  6AEE               	clrf	postinc0,c
  1259  0030F6  06E8               	decf	wreg,f,c
  1260  0030F8  E1FD               	bnz	clear_1
  1261                           
  1262                           ;
  1263                           ; Setup IVTBASE
  1264                           ;
  1265  0030FA  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1266  0030FC  6ED5               	movwf	213,c
  1267  0030FE  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1268  003100  6ED6               	movwf	214,c
  1269  003102  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1270  003104  6ED7               	movwf	215,c
  1271  003106                     end_of_initialization:
  1272                           	opt callstack 0
  1273  003106                     __end_of__initialization:
  1274                           	opt callstack 0
  1275  003106  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1276  003108  6EF8               	movwf	tblptru,c
  1277  00310A  0100               	movlb	0
  1278  00310C  EF50  F009         	goto	_main	;jump to C main() function
  1279                           
  1280                           	psect	bssCOMRAM
  1281  00002D                     __pbssCOMRAM:
  1282                           	opt callstack 0
  1283  00002D                     ___fpclassifyf@F463:
  1284                           	opt callstack 0
  1285  00002D                     	ds	4
  1286  000031                     _width:
  1287                           	opt callstack 0
  1288  000031                     	ds	2
  1289  000033                     _prec:
  1290                           	opt callstack 0
  1291  000033                     	ds	2
  1292  000035                     _flags:
  1293                           	opt callstack 0
  1294  000035                     	ds	2
  1295  000037                     _min_tick_count:
  1296                           	opt callstack 0
  1297  000037                     	ds	2
  1298  000039                     _ADCvalueLow1:
  1299                           	opt callstack 0
  1300  000039                     	ds	2
  1301  00003B                     _ADCvalueHigh1:
  1302                           	opt callstack 0
  1303  00003B                     	ds	2
  1304  00003D                     _ADCvalueLow0:
  1305                           	opt callstack 0
  1306  00003D                     	ds	2
  1307  00003F                     _ADCvalueHigh0:
  1308                           	opt callstack 0
  1309  00003F                     	ds	2
  1310                           
  1311                           	psect	dataCOMRAM
  1312  000041                     __pdataCOMRAM:
  1313                           	opt callstack 0
  1314  000041                     _status:
  1315                           	opt callstack 0
  1316  000041                     	ds	2
  1317  000043                     _max_tick_count:
  1318                           	opt callstack 0
  1319  000043                     	ds	2
  1320                           
  1321                           	psect	bssBANK0
  1322  0000F3                     __pbssBANK0:
  1323                           	opt callstack 0
  1324  0000F3                     floorf@F524:
  1325                           	opt callstack 0
  1326  0000F3                     	ds	4
  1327  0000F7                     _nout:
  1328                           	opt callstack 0
  1329  0000F7                     	ds	2
  1330                           
  1331                           	psect	bssBANK1
  1332  000100                     __pbssBANK1:
  1333                           	opt callstack 0
  1334  000100                     _charging_voltage:
  1335                           	opt callstack 0
  1336  000100                     	ds	4
  1337  000104                     _master_state:
  1338                           	opt callstack 0
  1339  000104                     	ds	2
  1340  000106                     _feedback:
  1341                           	opt callstack 0
  1342  000106                     	ds	2
  1343  000108                     _tick_count:
  1344                           	opt callstack 0
  1345  000108                     	ds	2
  1346  00010A                     _state:
  1347                           	opt callstack 0
  1348  00010A                     	ds	1
  1349  00010B                     _dbuf:
  1350                           	opt callstack 0
  1351  00010B                     	ds	80
  1352                           
  1353                           	psect	dataBANK1
  1354  0001A9                     __pdataBANK1:
  1355                           	opt callstack 0
  1356  0001A9                     _charging_state:
  1357                           	opt callstack 0
  1358  0001A9                     	ds	2
  1359  0001AB                     _enter_state:
  1360                           	opt callstack 0
  1361  0001AB                     	ds	2
  1362                           
  1363                           	psect	dataBANK2
  1364  000200                     __pdataBANK2:
  1365                           	opt callstack 0
  1366  000200                     _charging_state_lut:
  1367                           	opt callstack 0
  1368  000200                     	ds	140
  1369                           
  1370                           	psect	dataBIGRAM
  1371  00028C                     __pdataBIGRAM:
  1372                           	opt callstack 0
  1373  00028C                     _master_state_lut:
  1374                           	opt callstack 0
  1375  00028C                     	ds	360
  1376                           
  1377                           	psect	cstackBANK1
  1378  00015B                     __pcstackBANK1:
  1379                           	opt callstack 0
  1380  00015B                     	ds	2
  1381  00015D                     sprintf@ap:
  1382                           	opt callstack 0
  1383                           
  1384                           ; 2 bytes @ 0x2
  1385  00015D                     	ds	2
  1386  00015F                     sprintf@f:
  1387                           	opt callstack 0
  1388                           
  1389                           ; 6 bytes @ 0x4
  1390  00015F                     	ds	6
  1391  000165                     main@str:
  1392                           	opt callstack 0
  1393                           
  1394                           ; 20 bytes @ 0xA
  1395  000165                     	ds	20
  1396  000179                     main@str_1446:
  1397                           	opt callstack 0
  1398                           
  1399                           ; 20 bytes @ 0x1E
  1400  000179                     	ds	20
  1401  00018D                     main@str_1457:
  1402                           	opt callstack 0
  1403                           
  1404                           ; 20 bytes @ 0x32
  1405  00018D                     	ds	20
  1406  0001A1                     main@str_1452:
  1407                           	opt callstack 0
  1408                           
  1409                           ; 8 bytes @ 0x46
  1410  0001A1                     	ds	8
  1411                           
  1412                           	psect	cstackBANK0
  1413  000060                     __pcstackBANK0:
  1414                           	opt callstack 0
  1415  000060                     ?_pad:
  1416                           	opt callstack 0
  1417  000060                     ___aodiv@counter:
  1418                           	opt callstack 0
  1419  000060                     ___aomod@counter:
  1420                           	opt callstack 0
  1421  000060                     ___flmul@sign:
  1422                           	opt callstack 0
  1423  000060                     pad@fp:
  1424                           	opt callstack 0
  1425  000060                     atoi@neg:
  1426                           	opt callstack 0
  1427  000060                     ___fldiv@rem:
  1428                           	opt callstack 0
  1429                           
  1430                           ; 4 bytes @ 0x0
  1431  000060                     	ds	1
  1432  000061                     ___aodiv@sign:
  1433                           	opt callstack 0
  1434  000061                     ___aomod@sign:
  1435                           	opt callstack 0
  1436  000061                     ___flmul@aexp:
  1437                           	opt callstack 0
  1438                           
  1439                           ; 1 bytes @ 0x1
  1440  000061                     	ds	1
  1441  000062                     ?_abs:
  1442                           	opt callstack 0
  1443  000062                     pad@buf:
  1444                           	opt callstack 0
  1445  000062                     abs@a:
  1446                           	opt callstack 0
  1447  000062                     _atoi$2285:
  1448                           	opt callstack 0
  1449  000062                     ___flmul@grs:
  1450                           	opt callstack 0
  1451  000062                     ___aodiv@quotient:
  1452                           	opt callstack 0
  1453                           
  1454                           ; 8 bytes @ 0x2
  1455  000062                     	ds	2
  1456  000064                     ??_abs:
  1457  000064                     ___fldiv@sign:
  1458                           	opt callstack 0
  1459  000064                     pad@p:
  1460                           	opt callstack 0
  1461  000064                     _atoi$2287:
  1462                           	opt callstack 0
  1463                           
  1464                           ; 2 bytes @ 0x4
  1465  000064                     	ds	1
  1466  000065                     ___fldiv@new_exp:
  1467                           	opt callstack 0
  1468                           
  1469                           ; 2 bytes @ 0x5
  1470  000065                     	ds	1
  1471  000066                     ___flmul@bexp:
  1472                           	opt callstack 0
  1473  000066                     _atoi$2286:
  1474                           	opt callstack 0
  1475  000066                     pad@i:
  1476                           	opt callstack 0
  1477                           
  1478                           ; 2 bytes @ 0x6
  1479  000066                     	ds	1
  1480  000067                     atoi@n:
  1481                           	opt callstack 0
  1482  000067                     ___fldiv@grs:
  1483                           	opt callstack 0
  1484  000067                     ___flmul@prod:
  1485                           	opt callstack 0
  1486                           
  1487                           ; 4 bytes @ 0x7
  1488  000067                     	ds	1
  1489  000068                     pad@w:
  1490                           	opt callstack 0
  1491                           
  1492                           ; 2 bytes @ 0x8
  1493  000068                     	ds	2
  1494  00006A                     ?_dtoa:
  1495                           	opt callstack 0
  1496  00006A                     dtoa@fp:
  1497                           	opt callstack 0
  1498                           
  1499                           ; 2 bytes @ 0xA
  1500  00006A                     	ds	1
  1501  00006B                     ___fldiv@bexp:
  1502                           	opt callstack 0
  1503  00006B                     ___flmul@temp:
  1504                           	opt callstack 0
  1505                           
  1506                           ; 2 bytes @ 0xB
  1507  00006B                     	ds	1
  1508  00006C                     ___fldiv@aexp:
  1509                           	opt callstack 0
  1510  00006C                     dtoa@d:
  1511                           	opt callstack 0
  1512                           
  1513                           ; 8 bytes @ 0xC
  1514  00006C                     	ds	1
  1515  00006D                     ??_floorf:
  1516  00006D                     ?___flsub:
  1517                           	opt callstack 0
  1518  00006D                     ___flge@ff1:
  1519                           	opt callstack 0
  1520  00006D                     ___flsub@b:
  1521                           	opt callstack 0
  1522                           
  1523                           ; 4 bytes @ 0xD
  1524  00006D                     	ds	4
  1525  000071                     ___flge@ff2:
  1526                           	opt callstack 0
  1527  000071                     ___flsub@a:
  1528                           	opt callstack 0
  1529                           
  1530                           ; 4 bytes @ 0x11
  1531  000071                     	ds	2
  1532  000073                     floorf@m:
  1533                           	opt callstack 0
  1534                           
  1535                           ; 4 bytes @ 0x13
  1536  000073                     	ds	1
  1537  000074                     ??_dtoa:
  1538                           
  1539                           ; 1 bytes @ 0x14
  1540  000074                     	ds	3
  1541  000077                     floorf@e:
  1542                           	opt callstack 0
  1543                           
  1544                           ; 2 bytes @ 0x17
  1545  000077                     	ds	2
  1546  000079                     floorf@u:
  1547                           	opt callstack 0
  1548                           
  1549                           ; 4 bytes @ 0x19
  1550  000079                     	ds	3
  1551  00007C                     _dtoa$1757:
  1552                           	opt callstack 0
  1553                           
  1554                           ; 2 bytes @ 0x1C
  1555  00007C                     	ds	1
  1556  00007D                     ?_efgtoa:
  1557                           	opt callstack 0
  1558  00007D                     efgtoa@fp:
  1559                           	opt callstack 0
  1560                           
  1561                           ; 2 bytes @ 0x1D
  1562  00007D                     	ds	1
  1563  00007E                     dtoa@p:
  1564                           	opt callstack 0
  1565                           
  1566                           ; 2 bytes @ 0x1E
  1567  00007E                     	ds	1
  1568  00007F                     efgtoa@f:
  1569                           	opt callstack 0
  1570                           
  1571                           ; 4 bytes @ 0x1F
  1572  00007F                     	ds	1
  1573  000080                     dtoa@w:
  1574                           	opt callstack 0
  1575                           
  1576                           ; 2 bytes @ 0x20
  1577  000080                     	ds	2
  1578  000082                     dtoa@s:
  1579                           	opt callstack 0
  1580                           
  1581                           ; 2 bytes @ 0x22
  1582  000082                     	ds	1
  1583  000083                     efgtoa@c:
  1584                           	opt callstack 0
  1585                           
  1586                           ; 1 bytes @ 0x23
  1587  000083                     	ds	1
  1588  000084                     ??_efgtoa:
  1589  000084                     dtoa@n:
  1590                           	opt callstack 0
  1591                           
  1592                           ; 8 bytes @ 0x24
  1593  000084                     	ds	5
  1594  000089                     efgtoa@ou:
  1595                           	opt callstack 0
  1596                           
  1597                           ; 4 bytes @ 0x29
  1598  000089                     	ds	3
  1599  00008C                     dtoa@i:
  1600                           	opt callstack 0
  1601                           
  1602                           ; 2 bytes @ 0x2C
  1603  00008C                     	ds	1
  1604  00008D                     _efgtoa$1781:
  1605                           	opt callstack 0
  1606                           
  1607                           ; 2 bytes @ 0x2D
  1608  00008D                     	ds	2
  1609  00008F                     _efgtoa$1782:
  1610                           	opt callstack 0
  1611                           
  1612                           ; 2 bytes @ 0x2F
  1613  00008F                     	ds	2
  1614  000091                     _efgtoa$1786:
  1615                           	opt callstack 0
  1616                           
  1617                           ; 2 bytes @ 0x31
  1618  000091                     	ds	2
  1619  000093                     _efgtoa$1790:
  1620                           	opt callstack 0
  1621                           
  1622                           ; 2 bytes @ 0x33
  1623  000093                     	ds	2
  1624  000095                     _efgtoa$1791:
  1625                           	opt callstack 0
  1626                           
  1627                           ; 2 bytes @ 0x35
  1628  000095                     	ds	2
  1629  000097                     _efgtoa$1792:
  1630                           	opt callstack 0
  1631                           
  1632                           ; 2 bytes @ 0x37
  1633  000097                     	ds	2
  1634  000099                     efgtoa@t:
  1635                           	opt callstack 0
  1636                           
  1637                           ; 2 bytes @ 0x39
  1638  000099                     	ds	2
  1639  00009B                     efgtoa@pp:
  1640                           	opt callstack 0
  1641                           
  1642                           ; 2 bytes @ 0x3B
  1643  00009B                     	ds	2
  1644  00009D                     efgtoa@m:
  1645                           	opt callstack 0
  1646                           
  1647                           ; 2 bytes @ 0x3D
  1648  00009D                     	ds	2
  1649  00009F                     efgtoa@ne:
  1650                           	opt callstack 0
  1651                           
  1652                           ; 2 bytes @ 0x3F
  1653  00009F                     	ds	2
  1654  0000A1                     efgtoa@d:
  1655                           	opt callstack 0
  1656                           
  1657                           ; 2 bytes @ 0x41
  1658  0000A1                     	ds	2
  1659  0000A3                     efgtoa@sign:
  1660                           	opt callstack 0
  1661                           
  1662                           ; 2 bytes @ 0x43
  1663  0000A3                     	ds	2
  1664  0000A5                     efgtoa@p:
  1665                           	opt callstack 0
  1666                           
  1667                           ; 2 bytes @ 0x45
  1668  0000A5                     	ds	2
  1669  0000A7                     efgtoa@nmode:
  1670                           	opt callstack 0
  1671                           
  1672                           ; 1 bytes @ 0x47
  1673  0000A7                     	ds	1
  1674  0000A8                     efgtoa@w:
  1675                           	opt callstack 0
  1676                           
  1677                           ; 2 bytes @ 0x48
  1678  0000A8                     	ds	2
  1679  0000AA                     efgtoa@mode:
  1680                           	opt callstack 0
  1681                           
  1682                           ; 1 bytes @ 0x4A
  1683  0000AA                     	ds	1
  1684  0000AB                     efgtoa@h:
  1685                           	opt callstack 0
  1686                           
  1687                           ; 4 bytes @ 0x4B
  1688  0000AB                     	ds	4
  1689  0000AF                     efgtoa@l:
  1690                           	opt callstack 0
  1691                           
  1692                           ; 4 bytes @ 0x4F
  1693  0000AF                     	ds	4
  1694  0000B3                     efgtoa@i:
  1695                           	opt callstack 0
  1696                           
  1697                           ; 2 bytes @ 0x53
  1698  0000B3                     	ds	2
  1699  0000B5                     efgtoa@g:
  1700                           	opt callstack 0
  1701                           
  1702                           ; 4 bytes @ 0x55
  1703  0000B5                     	ds	4
  1704  0000B9                     efgtoa@e:
  1705                           	opt callstack 0
  1706                           
  1707                           ; 2 bytes @ 0x59
  1708  0000B9                     	ds	2
  1709  0000BB                     efgtoa@n:
  1710                           	opt callstack 0
  1711                           
  1712                           ; 2 bytes @ 0x5B
  1713  0000BB                     	ds	2
  1714  0000BD                     efgtoa@u:
  1715                           	opt callstack 0
  1716                           
  1717                           ; 4 bytes @ 0x5D
  1718  0000BD                     	ds	4
  1719  0000C1                     ?_vfpfcnvrt:
  1720                           	opt callstack 0
  1721  0000C1                     vfpfcnvrt@fp:
  1722                           	opt callstack 0
  1723                           
  1724                           ; 2 bytes @ 0x61
  1725  0000C1                     	ds	2
  1726  0000C3                     vfpfcnvrt@fmt:
  1727                           	opt callstack 0
  1728                           
  1729                           ; 2 bytes @ 0x63
  1730  0000C3                     	ds	2
  1731  0000C5                     vfpfcnvrt@ap:
  1732                           	opt callstack 0
  1733                           
  1734                           ; 2 bytes @ 0x65
  1735  0000C5                     	ds	2
  1736  0000C7                     ??_vfpfcnvrt:
  1737                           
  1738                           ; 1 bytes @ 0x67
  1739  0000C7                     	ds	4
  1740  0000CB                     vfpfcnvrt@ll:
  1741                           	opt callstack 0
  1742                           
  1743                           ; 8 bytes @ 0x6B
  1744  0000CB                     	ds	8
  1745  0000D3                     _vfpfcnvrt$1806:
  1746                           	opt callstack 0
  1747                           
  1748                           ; 2 bytes @ 0x73
  1749  0000D3                     	ds	2
  1750  0000D5                     _vfpfcnvrt$1807:
  1751                           	opt callstack 0
  1752                           
  1753                           ; 2 bytes @ 0x75
  1754  0000D5                     	ds	2
  1755  0000D7                     _vfpfcnvrt$1812:
  1756                           	opt callstack 0
  1757                           
  1758                           ; 2 bytes @ 0x77
  1759  0000D7                     	ds	2
  1760  0000D9                     vfpfcnvrt@f:
  1761                           	opt callstack 0
  1762                           
  1763                           ; 4 bytes @ 0x79
  1764  0000D9                     	ds	4
  1765  0000DD                     vfpfcnvrt@ct:
  1766                           	opt callstack 0
  1767                           
  1768                           ; 3 bytes @ 0x7D
  1769  0000DD                     	ds	3
  1770  0000E0                     vfpfcnvrt@c:
  1771                           	opt callstack 0
  1772                           
  1773                           ; 1 bytes @ 0x80
  1774  0000E0                     	ds	1
  1775  0000E1                     ?_vfprintf:
  1776                           	opt callstack 0
  1777  0000E1                     vfprintf@fp:
  1778                           	opt callstack 0
  1779                           
  1780                           ; 2 bytes @ 0x81
  1781  0000E1                     	ds	2
  1782  0000E3                     vfprintf@fmt:
  1783                           	opt callstack 0
  1784                           
  1785                           ; 2 bytes @ 0x83
  1786  0000E3                     	ds	2
  1787  0000E5                     vfprintf@ap:
  1788                           	opt callstack 0
  1789                           
  1790                           ; 2 bytes @ 0x85
  1791  0000E5                     	ds	2
  1792  0000E7                     vfprintf@cfmt:
  1793                           	opt callstack 0
  1794                           
  1795                           ; 2 bytes @ 0x87
  1796  0000E7                     	ds	2
  1797  0000E9                     ?_sprintf:
  1798                           	opt callstack 0
  1799  0000E9                     sprintf@s:
  1800                           	opt callstack 0
  1801                           
  1802                           ; 2 bytes @ 0x89
  1803  0000E9                     	ds	2
  1804  0000EB                     sprintf@fmt:
  1805                           	opt callstack 0
  1806                           
  1807                           ; 2 bytes @ 0x8B
  1808  0000EB                     	ds	6
  1809  0000F1                     ??_main:
  1810                           
  1811                           ; 1 bytes @ 0x91
  1812  0000F1                     	ds	2
  1813                           
  1814                           	psect	cstackCOMRAM
  1815  000001                     __pcstackCOMRAM:
  1816                           	opt callstack 0
  1817  000001                     ??_encInt:
  1818  000001                     
  1819                           ; 1 bytes @ 0x0
  1820  000001                     	ds	1
  1821  000002                     sendCANmessage@id:
  1822                           	opt callstack 0
  1823                           
  1824                           ; 2 bytes @ 0x1
  1825  000002                     	ds	2
  1826  000004                     sendCANmessage@message:
  1827                           	opt callstack 0
  1828                           
  1829                           ; 2 bytes @ 0x3
  1830  000004                     	ds	2
  1831  000006                     sendCANmessage@length:
  1832                           	opt callstack 0
  1833                           
  1834                           ; 2 bytes @ 0x5
  1835  000006                     	ds	2
  1836  000008                     ??_sendCANmessage:
  1837                           
  1838                           ; 1 bytes @ 0x7
  1839  000008                     	ds	2
  1840  00000A                     ??_canRecInt2:
  1841                           
  1842                           ; 1 bytes @ 0x9
  1843  00000A                     	ds	2
  1844  00000C                     canRecInt2@message:
  1845                           	opt callstack 0
  1846                           
  1847                           ; 16 bytes @ 0xB
  1848  00000C                     	ds	16
  1849  00001C                     ?_strlen:
  1850                           	opt callstack 0
  1851  00001C                     ?___fpclassifyf:
  1852                           	opt callstack 0
  1853  00001C                     ?_isupper:
  1854                           	opt callstack 0
  1855  00001C                     ?_isdigit:
  1856                           	opt callstack 0
  1857  00001C                     ?_strncmp:
  1858                           	opt callstack 0
  1859  00001C                     ?_isspace:
  1860                           	opt callstack 0
  1861  00001C                     ?___wmul:
  1862                           	opt callstack 0
  1863  00001C                     ?___awdiv:
  1864                           	opt callstack 0
  1865  00001C                     ?___awmod:
  1866                           	opt callstack 0
  1867  00001C                     ?___fladd:
  1868                           	opt callstack 0
  1869  00001C                     ?___fldiv:
  1870                           	opt callstack 0
  1871  00001C                     ?___flmul:
  1872                           	opt callstack 0
  1873  00001C                     ?___flneg:
  1874                           	opt callstack 0
  1875  00001C                     ?___fltol:
  1876                           	opt callstack 0
  1877  00001C                     ?___aodiv:
  1878                           	opt callstack 0
  1879  00001C                     ?___aomod:
  1880                           	opt callstack 0
  1881  00001C                     Lcd_Port@a:
  1882                           	opt callstack 0
  1883  00001C                     ___wmul@multiplier:
  1884                           	opt callstack 0
  1885  00001C                     ___awdiv@dividend:
  1886                           	opt callstack 0
  1887  00001C                     ___awmod@dividend:
  1888                           	opt callstack 0
  1889  00001C                     isdigit@c:
  1890                           	opt callstack 0
  1891  00001C                     isspace@c:
  1892                           	opt callstack 0
  1893  00001C                     isupper@c:
  1894                           	opt callstack 0
  1895  00001C                     fputc@c:
  1896                           	opt callstack 0
  1897  00001C                     strcpy@dest:
  1898                           	opt callstack 0
  1899  00001C                     strlen@s:
  1900                           	opt callstack 0
  1901  00001C                     strncmp@_l:
  1902                           	opt callstack 0
  1903  00001C                     ___fleq@ff1:
  1904                           	opt callstack 0
  1905  00001C                     ___flneg@f1:
  1906                           	opt callstack 0
  1907  00001C                     ___fltol@f1:
  1908                           	opt callstack 0
  1909  00001C                     ___fladd@b:
  1910                           	opt callstack 0
  1911  00001C                     ___fldiv@b:
  1912                           	opt callstack 0
  1913  00001C                     ___flmul@b:
  1914                           	opt callstack 0
  1915  00001C                     ___fpclassifyf@x:
  1916                           	opt callstack 0
  1917  00001C                     ___aodiv@dividend:
  1918                           	opt callstack 0
  1919  00001C                     ___aomod@dividend:
  1920                           	opt callstack 0
  1921                           
  1922                           ; 8 bytes @ 0x1B
  1923  00001C                     	ds	1
  1924  00001D                     ??_Lcd_Cmd:
  1925  00001D                     Lcd_Write_Char@temp:
  1926                           	opt callstack 0
  1927                           
  1928                           ; 1 bytes @ 0x1C
  1929  00001D                     	ds	1
  1930  00001E                     ??_isupper:
  1931  00001E                     ??_isdigit:
  1932  00001E                     ??_isspace:
  1933  00001E                     Lcd_Cmd@a:
  1934                           	opt callstack 0
  1935  00001E                     Lcd_Write_Char@y:
  1936                           	opt callstack 0
  1937  00001E                     ___wmul@multiplicand:
  1938                           	opt callstack 0
  1939  00001E                     ___awdiv@divisor:
  1940                           	opt callstack 0
  1941  00001E                     ___awmod@divisor:
  1942                           	opt callstack 0
  1943  00001E                     fputc@fp:
  1944                           	opt callstack 0
  1945  00001E                     strcpy@src:
  1946                           	opt callstack 0
  1947  00001E                     strlen@a:
  1948                           	opt callstack 0
  1949  00001E                     strncmp@_r:
  1950                           	opt callstack 0
  1951                           
  1952                           ; 2 bytes @ 0x1D
  1953  00001E                     	ds	1
  1954  00001F                     ??_Lcd_Init:
  1955  00001F                     Lcd_Set_Cursor@b:
  1956                           	opt callstack 0
  1957  00001F                     Lcd_Write_Char@a:
  1958                           	opt callstack 0
  1959                           
  1960                           ; 1 bytes @ 0x1E
  1961  00001F                     	ds	1
  1962  000020                     ??_fputc:
  1963  000020                     ??___fpclassifyf:
  1964  000020                     ??_strcpy:
  1965  000020                     ??___fltol:
  1966  000020                     Lcd_Set_Cursor@a:
  1967                           	opt callstack 0
  1968  000020                     ___awdiv@counter:
  1969                           	opt callstack 0
  1970  000020                     ___awmod@counter:
  1971                           	opt callstack 0
  1972  000020                     ___wmul@product:
  1973                           	opt callstack 0
  1974  000020                     strncmp@n:
  1975                           	opt callstack 0
  1976  000020                     ___fleq@ff2:
  1977                           	opt callstack 0
  1978  000020                     ___fladd@a:
  1979                           	opt callstack 0
  1980  000020                     ___fldiv@a:
  1981                           	opt callstack 0
  1982  000020                     ___flmul@a:
  1983                           	opt callstack 0
  1984                           
  1985                           ; 4 bytes @ 0x1F
  1986  000020                     	ds	1
  1987  000021                     Lcd_Set_Cursor@z:
  1988                           	opt callstack 0
  1989  000021                     ___awdiv@sign:
  1990                           	opt callstack 0
  1991  000021                     ___awmod@sign:
  1992                           	opt callstack 0
  1993                           
  1994                           ; 1 bytes @ 0x20
  1995  000021                     	ds	1
  1996  000022                     ??_strncmp:
  1997  000022                     ?_tolower:
  1998                           	opt callstack 0
  1999  000022                     Lcd_Set_Cursor@y:
  2000                           	opt callstack 0
  2001  000022                     _isspace$2316:
  2002                           	opt callstack 0
  2003  000022                     Lcd_Write_String@a:
  2004                           	opt callstack 0
  2005  000022                     ___awdiv@quotient:
  2006                           	opt callstack 0
  2007  000022                     strcpy@s:
  2008                           	opt callstack 0
  2009  000022                     tolower@c:
  2010                           	opt callstack 0
  2011                           
  2012                           ; 2 bytes @ 0x21
  2013  000022                     	ds	1
  2014  000023                     ?_atoi:
  2015                           	opt callstack 0
  2016  000023                     Lcd_Set_Cursor@temp:
  2017                           	opt callstack 0
  2018  000023                     atoi@s:
  2019                           	opt callstack 0
  2020  000023                     strncmp@l:
  2021                           	opt callstack 0
  2022                           
  2023                           ; 2 bytes @ 0x22
  2024  000023                     	ds	1
  2025  000024                     ??_Lcd_Write_String:
  2026  000024                     ??_tolower:
  2027  000024                     ??___fladd:
  2028  000024                     ??___fldiv:
  2029  000024                     ??___flmul:
  2030  000024                     ??___fleq:
  2031  000024                     ___fltol@sign1:
  2032                           	opt callstack 0
  2033  000024                     ___fpclassifyf@e:
  2034                           	opt callstack 0
  2035  000024                     strcpy@d:
  2036                           	opt callstack 0
  2037  000024                     ___aodiv@divisor:
  2038                           	opt callstack 0
  2039  000024                     ___aomod@divisor:
  2040                           	opt callstack 0
  2041                           
  2042                           ; 8 bytes @ 0x23
  2043  000024                     	ds	1
  2044  000025                     ??_atoi:
  2045  000025                     ___fltol@exp1:
  2046                           	opt callstack 0
  2047  000025                     fputs@s:
  2048                           	opt callstack 0
  2049  000025                     strncmp@r:
  2050                           	opt callstack 0
  2051                           
  2052                           ; 2 bytes @ 0x24
  2053  000025                     	ds	1
  2054  000026                     Lcd_Write_String@i:
  2055                           	opt callstack 0
  2056  000026                     ___fpclassifyf@u:
  2057                           	opt callstack 0
  2058                           
  2059                           ; 4 bytes @ 0x25
  2060  000026                     	ds	1
  2061  000027                     fputs@fp:
  2062                           	opt callstack 0
  2063                           
  2064                           ; 2 bytes @ 0x26
  2065  000027                     	ds	1
  2066  000028                     ??_MenuYesNo:
  2067  000028                     ??___flge:
  2068  000028                     ?_floorf:
  2069                           	opt callstack 0
  2070  000028                     ___fladd@signs:
  2071                           	opt callstack 0
  2072  000028                     _tolower$2401:
  2073                           	opt callstack 0
  2074  000028                     floorf@x:
  2075                           	opt callstack 0
  2076                           
  2077                           ; 4 bytes @ 0x27
  2078  000028                     	ds	1
  2079  000029                     ___fladd@aexp:
  2080                           	opt callstack 0
  2081  000029                     fputs@c:
  2082                           	opt callstack 0
  2083                           
  2084                           ; 1 bytes @ 0x28
  2085  000029                     	ds	1
  2086  00002A                     ___fladd@bexp:
  2087                           	opt callstack 0
  2088  00002A                     fputs@i:
  2089                           	opt callstack 0
  2090                           
  2091                           ; 2 bytes @ 0x29
  2092  00002A                     	ds	1
  2093  00002B                     ___fladd@grs:
  2094                           	opt callstack 0
  2095                           
  2096                           ; 1 bytes @ 0x2A
  2097  00002B                     	ds	1
  2098  00002C                     ??_pad:
  2099  00002C                     
  2100                           ; 1 bytes @ 0x2B
  2101  00002C                     	ds	1
  2102  00002D                     
  2103                           ; 1 bytes @ 0x2C
  2104 ;;
  2105 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2106 ;;
  2107 ;; *************** function _main *****************
  2108 ;; Defined at:
  2109 ;;		line 142 in file "MainCode.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;		None
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;  str            20   30[BANK1 ] unsigned char [20]
  2114 ;;  str            20   50[BANK1 ] unsigned char [20]
  2115 ;;  str             8   70[BANK1 ] unsigned char [8]
  2116 ;;  str            20   10[BANK1 ] unsigned char [20]
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  1    wreg      void 
  2119 ;; Registers used:
  2120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2126 ;;      Params:         0       0       0       0       0       0       0       0       0
  2127 ;;      Locals:         0       0      68       0       0       0       0       0       0
  2128 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2129 ;;      Totals:         0       2      68       0       0       0       0       0       0
  2130 ;;Total ram usage:       70 bytes
  2131 ;; Hardware stack levels required when called:   11
  2132 ;; This function calls:
  2133 ;;		_Lcd_Clear
  2134 ;;		_Lcd_Init
  2135 ;;		_Lcd_Set_Cursor
  2136 ;;		_Lcd_Write_String
  2137 ;;		_MenuYesNo
  2138 ;;		___wmul
  2139 ;;		_initBuzzer
  2140 ;;		_initCAN
  2141 ;;		_sprintf
  2142 ;; This function is called by:
  2143 ;;		Startup code after reset
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147                           	psect	text0
  2148  0012A0                     __ptext0:
  2149                           	opt callstack 0
  2150  0012A0                     _main:
  2151                           	opt callstack 20
  2152                           
  2153                           ;MainCode.c: 144:                 }
  2154                           
  2155                           ;incstack = 0
  2156  0012A0  0E60               	movlw	96
  2157  0012A2  0139               	movlb	57	; () banked
  2158  0012A4  6FD9               	movwf	217,b	;volatile
  2159                           
  2160                           ; BSR set to: 57
  2161                           ;MainCode.c: 145:                 break;
  2162  0012A6  EC4C  F01C         	call	_initCAN	;wreg free
  2163                           
  2164                           ;MainCode.c: 146:             case CONF_SELFTEST:
  2165  0012AA  EC49  F01E         	call	_initBuzzer	;wreg free
  2166                           
  2167                           ;MainCode.c: 148:                 if (enter_state == 1) {
  2168  0012AE  013A               	movlb	58	; () banked
  2169  0012B0  9140               	bcf	64,0,b	;volatile
  2170                           
  2171                           ; BSR set to: 58
  2172                           ;MainCode.c: 149:                     tick_count = 1;
  2173  0012B2  9340               	bcf	64,1,b	;volatile
  2174                           
  2175                           ; BSR set to: 58
  2176                           ;MainCode.c: 150:                     enter_state = 0;
  2177  0012B4  9540               	bcf	64,2,b	;volatile
  2178                           
  2179                           ; BSR set to: 58
  2180                           ;MainCode.c: 151:                     Lcd_Clear();
  2181  0012B6  0E01               	movlw	1
  2182  0012B8  6FC0               	movwf	192,b	;volatile
  2183                           
  2184                           ; BSR set to: 58
  2185                           ;MainCode.c: 152:                     Lcd_Set_Cursor(1, 1);
  2186  0012BA  80C2               	bsf	16322,0,c	;volatile
  2187                           
  2188                           ; BSR set to: 58
  2189                           ;MainCode.c: 153:                     Lcd_Write_String("Robot will move");
  2190  0012BC  82C2               	bsf	16322,1,c	;volatile
  2191                           
  2192                           ; BSR set to: 58
  2193                           ;MainCode.c: 154:                     Lcd_Set_Cursor(2, 1);
  2194  0012BE  84C2               	bsf	16322,2,c	;volatile
  2195                           
  2196                           ; BSR set to: 58
  2197                           ;MainCode.c: 155:                     Lcd_Write_String("Are you sure??");
  2198  0012C0  0139               	movlb	57	; () banked
  2199  0012C2  8191               	bsf	145,0,b	;volatile
  2200                           
  2201                           ; BSR set to: 57
  2202                           ;MainCode.c: 156:                 }
  2203  0012C4  91A1               	bcf	161,0,b	;volatile
  2204                           
  2205                           ; BSR set to: 57
  2206                           ;MainCode.c: 157:                 else {
  2207  0012C6  80D2               	bsf	16338,0,c	;volatile
  2208                           
  2209                           ; BSR set to: 57
  2210                           ;MainCode.c: 159:                     if (!PORTAbits.RA2) {
  2211  0012C8  8CD2               	bsf	16338,6,c	;volatile
  2212                           
  2213                           ; BSR set to: 57
  2214                           ;MainCode.c: 160:                         if(tick_count == 0) state = SELFTEST;
  2215  0012CA  8ED2               	bsf	16338,7,c	;volatile
  2216                           
  2217                           ; BSR set to: 57
  2218                           ;MainCode.c: 162:                         enter_state = 1;
  2219  0012CC  9AD2               	bcf	16338,5,c	;volatile
  2220                           
  2221                           ; BSR set to: 57
  2222                           ;MainCode.c: 164:                     }
  2223  0012CE  8195               	bsf	149,0,b	;volatile
  2224                           
  2225                           ; BSR set to: 57
  2226                           ;MainCode.c: 165:                 }
  2227  0012D0  9395               	bcf	149,1,b	;volatile
  2228                           
  2229                           ; BSR set to: 57
  2230                           ;MainCode.c: 167:             case SELFTEST:
  2231  0012D2  0E30               	movlw	48
  2232  0012D4  12B2               	iorwf	16306,f,c	;volatile
  2233                           
  2234                           ; BSR set to: 57
  2235                           ;MainCode.c: 168:                 status = state;
  2236  0012D6  84B2               	bsf	16306,2,c	;volatile
  2237                           
  2238                           ; BSR set to: 57
  2239                           ;MainCode.c: 169:                 if (enter_state == 1) {
  2240  0012D8  82B2               	bsf	16306,1,c	;volatile
  2241                           
  2242                           ; BSR set to: 57
  2243                           ;MainCode.c: 170:                     enter_state = 0;
  2244  0012DA  0E06               	movlw	6
  2245  0012DC  6EB5               	movwf	16309,c	;volatile
  2246                           
  2247                           ; BSR set to: 57
  2248                           ;MainCode.c: 171:                     Lcd_Clear();
  2249  0012DE  0E00               	movlw	0
  2250  0012E0  6EB1               	movwf	16305,c	;volatile
  2251                           
  2252                           ; BSR set to: 57
  2253                           ;MainCode.c: 172:                     Lcd_Set_Cursor(1, 1);
  2254  0012E2  0E00               	movlw	0
  2255  0012E4  6EB0               	movwf	16304,c	;volatile
  2256                           
  2257                           ; BSR set to: 57
  2258                           ;MainCode.c: 175:                     Lcd_Write_String(".....");
  2259  0012E6  8ED2               	bsf	16338,7,c	;volatile
  2260                           
  2261                           ; BSR set to: 57
  2262                           ;MainCode.c: 176:                 }
  2263  0012E8  90C3               	bcf	16323,0,c	;volatile
  2264                           
  2265                           ; BSR set to: 57
  2266                           ;MainCode.c: 177:                 else {
  2267  0012EA  013A               	movlb	58	; () banked
  2268  0012EC  9150               	bcf	80,0,b	;volatile
  2269                           
  2270                           ; BSR set to: 58
  2271                           ;MainCode.c: 178:                     if(feedback == 1) {
  2272  0012EE  80CB               	bsf	16331,0,c	;volatile
  2273                           
  2274                           ; BSR set to: 58
  2275                           ;MainCode.c: 180:                         enter_state = 1;
  2276  0012F0  ECCD  F01A         	call	_Lcd_Init	;wreg free
  2277  0012F4  D2FA               	goto	l176
  2278  0012F6                     l177:
  2279                           
  2280                           ; BSR set to: 0
  2281                           ;MainCode.c: 184:                         feedback = 0;
  2282  0012F6  0060  F428  F041   	movff	_state,_status
  2283  0012FC  6A42               	clrf	_status+1,c
  2284                           
  2285                           ; BSR set to: 0
  2286                           ;MainCode.c: 185:                         enter_state = 1;
  2287  0012FE  0101               	movlb	1	; () banked
  2288  001300  05AB               	decf	_enter_state& (0+255),w,b
  2289  001302  11AC               	iorwf	(_enter_state+1)& (0+255),w,b
  2290  001304  A4D8               	btfss	status,2,c
  2291  001306  D021               	goto	l7185
  2292                           
  2293                           ; BSR set to: 1
  2294                           ;MainCode.c: 186:                         state = CONF_MOWING;
  2295  001308  0E00               	movlw	0
  2296  00130A  6F09               	movwf	(_tick_count+1)& (0+255),b
  2297  00130C  0E00               	movlw	0
  2298  00130E  6F08               	movwf	_tick_count& (0+255),b
  2299                           
  2300                           ;MainCode.c: 187:                         status = state;
  2301  001310  0E00               	movlw	0
  2302  001312  6FAC               	movwf	(_enter_state+1)& (0+255),b
  2303  001314  0E00               	movlw	0
  2304  001316  6FAB               	movwf	_enter_state& (0+255),b
  2305                           
  2306                           ; BSR set to: 1
  2307                           ;MainCode.c: 188:                         Lcd_Clear();
  2308  001318  EC9F  F01E         	call	_Lcd_Clear	;wreg free
  2309                           
  2310                           ;MainCode.c: 189:                         Lcd_Set_Cursor(1, 1);
  2311  00131C  0E01               	movlw	1
  2312  00131E  6E1F               	movwf	Lcd_Set_Cursor@b,c
  2313  001320  0E01               	movlw	1
  2314  001322  EC9C  F019         	call	_Lcd_Set_Cursor
  2315                           
  2316                           ;MainCode.c: 190:                         Lcd_Write_String("Selftest was OK!");
  2317  001326  0E99               	movlw	low STR_1
  2318  001328  6E22               	movwf	Lcd_Write_String@a,c
  2319  00132A  0E7E               	movlw	high STR_1
  2320  00132C  6E23               	movwf	Lcd_Write_String@a+1,c
  2321  00132E  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
  2322                           
  2323                           ;MainCode.c: 191:                         _delay((unsigned long)((2000)*(64000000/4000.0
      +                          )));
  2324  001332  0E01               	movlw	1
  2325  001334  6E1F               	movwf	Lcd_Set_Cursor@b,c
  2326  001336  0E02               	movlw	2
  2327  001338  EC9C  F019         	call	_Lcd_Set_Cursor
  2328                           
  2329                           ;MainCode.c: 192: 
  2330  00133C  0E0F               	movlw	low STR_2
  2331  00133E  6E22               	movwf	Lcd_Write_String@a,c
  2332  001340  0E7F               	movlw	high STR_2
  2333  001342  6E23               	movwf	Lcd_Write_String@a+1,c
  2334  001344  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
  2335                           
  2336                           ;MainCode.c: 193:                     }
  2337  001348  D2D0               	goto	l176
  2338  00134A                     l7185:
  2339                           
  2340                           ; BSR set to: 1
  2341                           ;MainCode.c: 195:                 break;
  2342  00134A  EC3A  F01A         	call	_MenuYesNo	;wreg free
  2343                           
  2344                           ;MainCode.c: 196:             case SELFTEST_FAIL:
  2345  00134E  B4CA               	btfsc	16330,2,c	;volatile
  2346  001350  D2CC               	goto	l176
  2347                           
  2348                           ;MainCode.c: 197:                 status = state;
  2349  001352  0101               	movlb	1	; () banked
  2350  001354  5108               	movf	_tick_count& (0+255),w,b
  2351  001356  1109               	iorwf	(_tick_count+1)& (0+255),w,b
  2352  001358  A4D8               	btfss	status,2,c
  2353  00135A  D002               	goto	l7193
  2354                           
  2355                           ; BSR set to: 1
  2356  00135C  0E01               	movlw	1
  2357  00135E  D001               	goto	L1
  2358  001360                     l7193:
  2359                           
  2360                           ; BSR set to: 1
  2361  001360  0E04               	movlw	4
  2362  001362                     L1:
  2363  001362  6F0A               	movwf	_state& (0+255),b
  2364                           
  2365                           ; BSR set to: 1
  2366                           ;MainCode.c: 199:                     tick_count = 0;
  2367  001364  0E00               	movlw	0
  2368  001366  6FAC               	movwf	(_enter_state+1)& (0+255),b
  2369  001368  0E01               	movlw	1
  2370  00136A  6FAB               	movwf	_enter_state& (0+255),b
  2371  00136C                     l183:
  2372  00136C  B4CA               	btfsc	16330,2,c	;volatile
  2373  00136E  D2BD               	goto	l176
  2374  001370  D7FD               	goto	l183
  2375  001372                     l187:
  2376                           
  2377                           ; BSR set to: 0
  2378                           ;MainCode.c: 205:                     Lcd_Write_String("Try Again?");
  2379  001372  0060  F428  F041   	movff	_state,_status
  2380  001378  6A42               	clrf	_status+1,c
  2381                           
  2382                           ; BSR set to: 0
  2383                           ;MainCode.c: 206:                 }
  2384  00137A  0101               	movlb	1	; () banked
  2385  00137C  05AB               	decf	_enter_state& (0+255),w,b
  2386  00137E  11AC               	iorwf	(_enter_state+1)& (0+255),w,b
  2387  001380  A4D8               	btfss	status,2,c
  2388  001382  D021               	goto	l7209
  2389                           
  2390                           ; BSR set to: 1
  2391                           ;MainCode.c: 207:                 else {
  2392  001384  0E00               	movlw	0
  2393  001386  6F09               	movwf	(_tick_count+1)& (0+255),b
  2394  001388  0E01               	movlw	1
  2395  00138A  6F08               	movwf	_tick_count& (0+255),b
  2396                           
  2397                           ;MainCode.c: 208:                     MenuYesNo();
  2398  00138C  0E00               	movlw	0
  2399  00138E  6FAC               	movwf	(_enter_state+1)& (0+255),b
  2400  001390  0E00               	movlw	0
  2401  001392  6FAB               	movwf	_enter_state& (0+255),b
  2402                           
  2403                           ; BSR set to: 1
  2404                           ;MainCode.c: 209:                     if (!PORTAbits.RA2) {
  2405  001394  EC9F  F01E         	call	_Lcd_Clear	;wreg free
  2406                           
  2407                           ;MainCode.c: 210:                         if(tick_count == 0) state = CONF_SELFTEST;
  2408  001398  0E01               	movlw	1
  2409  00139A  6E1F               	movwf	Lcd_Set_Cursor@b,c
  2410  00139C  0E01               	movlw	1
  2411  00139E  EC9C  F019         	call	_Lcd_Set_Cursor
  2412                           
  2413                           ;MainCode.c: 211:                         else state = STARTMENU;
  2414  0013A2  0E53               	movlw	low STR_3
  2415  0013A4  6E22               	movwf	Lcd_Write_String@a,c
  2416  0013A6  0E7F               	movlw	high STR_3
  2417  0013A8  6E23               	movwf	Lcd_Write_String@a+1,c
  2418  0013AA  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
  2419                           
  2420                           ;MainCode.c: 212:                         enter_state = 1;
  2421  0013AE  0E01               	movlw	1
  2422  0013B0  6E1F               	movwf	Lcd_Set_Cursor@b,c
  2423  0013B2  0E02               	movlw	2
  2424  0013B4  EC9C  F019         	call	_Lcd_Set_Cursor
  2425                           
  2426                           ;MainCode.c: 213:                         while (!PORTAbits.RA2);
  2427  0013B8  0E63               	movlw	low STR_4
  2428  0013BA  6E22               	movwf	Lcd_Write_String@a,c
  2429  0013BC  0E7F               	movlw	high STR_4
  2430  0013BE  6E23               	movwf	Lcd_Write_String@a+1,c
  2431  0013C0  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
  2432                           
  2433                           ;MainCode.c: 214:                     }
  2434  0013C4  D292               	goto	l176
  2435  0013C6                     l7209:
  2436                           
  2437                           ; BSR set to: 1
  2438                           ;MainCode.c: 216:                 break;
  2439  0013C6  EC3A  F01A         	call	_MenuYesNo	;wreg free
  2440                           
  2441                           ;MainCode.c: 217:             case CONF_MOWING:
  2442  0013CA  B4CA               	btfsc	16330,2,c	;volatile
  2443  0013CC  D28E               	goto	l176
  2444                           
  2445                           ;MainCode.c: 218:                 status = state;
  2446  0013CE  0101               	movlb	1	; () banked
  2447  0013D0  5108               	movf	_tick_count& (0+255),w,b
  2448  0013D2  1109               	iorwf	(_tick_count+1)& (0+255),w,b
  2449  0013D4  A4D8               	btfss	status,2,c
  2450  0013D6  D002               	goto	l7217
  2451                           
  2452                           ; BSR set to: 1
  2453  0013D8  0E02               	movlw	2
  2454  0013DA  D001               	goto	L2
  2455  0013DC                     l7217:
  2456                           
  2457                           ; BSR set to: 1
  2458  0013DC  0E00               	movlw	0
  2459  0013DE                     L2:
  2460  0013DE  6F0A               	movwf	_state& (0+255),b
  2461                           
  2462                           ; BSR set to: 1
  2463                           ;MainCode.c: 220:                     tick_count = 1;
  2464  0013E0  0E00               	movlw	0
  2465  0013E2  6FAC               	movwf	(_enter_state+1)& (0+255),b
  2466  0013E4  0E01               	movlw	1
  2467  0013E6  6FAB               	movwf	_enter_state& (0+255),b
  2468  0013E8                     l193:
  2469  0013E8  B4CA               	btfsc	16330,2,c	;volatile
  2470  0013EA  D27F               	goto	l176
  2471  0013EC  D7FD               	goto	l193
  2472  0013EE                     l196:
  2473                           
  2474                           ; BSR set to: 0
  2475                           ;MainCode.c: 226:                     Lcd_Write_String("Are you sure??");
  2476  0013EE  0060  F428  F041   	movff	_state,_status
  2477  0013F4  6A42               	clrf	_status+1,c
  2478                           
  2479                           ; BSR set to: 0
  2480                           ;MainCode.c: 227:                 }
  2481  0013F6  0101               	movlb	1	; () banked
  2482  0013F8  05AB               	decf	_enter_state& (0+255),w,b
  2483  0013FA  11AC               	iorwf	(_enter_state+1)& (0+255),w,b
  2484  0013FC  A4D8               	btfss	status,2,c
  2485  0013FE  D01D               	goto	l7233
  2486                           
  2487                           ; BSR set to: 1
  2488                           ;MainCode.c: 228:                 else {
  2489  001400  0E00               	movlw	0
  2490  001402  6FAC               	movwf	(_enter_state+1)& (0+255),b
  2491  001404  0E00               	movlw	0
  2492  001406  6FAB               	movwf	_enter_state& (0+255),b
  2493                           
  2494                           ; BSR set to: 1
  2495                           ;MainCode.c: 229:                     MenuYesNo();
  2496  001408  EC9F  F01E         	call	_Lcd_Clear	;wreg free
  2497                           
  2498                           ;MainCode.c: 230:                     if (!PORTAbits.RA2) {
  2499  00140C  0E01               	movlw	1
  2500  00140E  6E1F               	movwf	Lcd_Set_Cursor@b,c
  2501  001410  0E01               	movlw	1
  2502  001412  EC9C  F019         	call	_Lcd_Set_Cursor
  2503                           
  2504                           ;MainCode.c: 231:                         if(tick_count == 0) state = MOWING;
  2505  001416  0EFC               	movlw	low STR_5
  2506  001418  6E22               	movwf	Lcd_Write_String@a,c
  2507  00141A  0E7E               	movlw	high STR_5
  2508  00141C  6E23               	movwf	Lcd_Write_String@a+1,c
  2509  00141E  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
  2510                           
  2511                           ;MainCode.c: 232:                         else state = STARTMENU;
  2512  001422  0E01               	movlw	1
  2513  001424  6E1F               	movwf	Lcd_Set_Cursor@b,c
  2514  001426  0E02               	movlw	2
  2515  001428  EC9C  F019         	call	_Lcd_Set_Cursor
  2516                           
  2517                           ;MainCode.c: 233:                         enter_state = 1;
  2518  00142C  0EC5               	movlw	low STR_6
  2519  00142E  6E22               	movwf	Lcd_Write_String@a,c
  2520  001430  0E7F               	movlw	high STR_6
  2521  001432  6E23               	movwf	Lcd_Write_String@a+1,c
  2522  001434  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
  2523                           
  2524                           ;MainCode.c: 234:                         while (!PORTAbits.RA2);
  2525  001438  D258               	goto	l176
  2526  00143A                     l7233:
  2527                           
  2528                           ; BSR set to: 1
  2529                           ;MainCode.c: 236:                 }
  2530  00143A  0506               	decf	_feedback& (0+255),w,b
  2531  00143C  1107               	iorwf	(_feedback+1)& (0+255),w,b
  2532  00143E  A4D8               	btfss	status,2,c
  2533  001440  D00B               	goto	l7237
  2534                           
  2535                           ; BSR set to: 1
  2536                           ;MainCode.c: 237:                 break;
  2537  001442  0E00               	movlw	0
  2538  001444  6F07               	movwf	(_feedback+1)& (0+255),b
  2539  001446  0E00               	movlw	0
  2540  001448  6F06               	movwf	_feedback& (0+255),b
  2541                           
  2542                           ;MainCode.c: 238:             case MOWING:
  2543  00144A  0E00               	movlw	0
  2544  00144C  6FAC               	movwf	(_enter_state+1)& (0+255),b
  2545  00144E  0E01               	movlw	1
  2546  001450  6FAB               	movwf	_enter_state& (0+255),b
  2547                           
  2548                           ;MainCode.c: 239:                 status = state;
  2549  001452  0E03               	movlw	3
  2550  001454  6F0A               	movwf	_state& (0+255),b
  2551                           
  2552                           ;MainCode.c: 240:                 if (enter_state == 1) {
  2553  001456  D249               	goto	l176
  2554  001458                     l7237:
  2555                           
  2556                           ; BSR set to: 1
  2557  001458  0E02               	movlw	2
  2558  00145A  1906               	xorwf	_feedback& (0+255),w,b
  2559  00145C  1107               	iorwf	(_feedback+1)& (0+255),w,b
  2560  00145E  A4D8               	btfss	status,2,c
  2561  001460  D244               	goto	l176
  2562                           
  2563                           ; BSR set to: 1
  2564                           ;MainCode.c: 242:                     Lcd_Clear();
  2565  001462  0E00               	movlw	0
  2566  001464  6F07               	movwf	(_feedback+1)& (0+255),b
  2567  001466  0E00               	movlw	0
  2568  001468  6F06               	movwf	_feedback& (0+255),b
  2569                           
  2570                           ;MainCode.c: 243:                     Lcd_Set_Cursor(1, 1);
  2571  00146A  0E00               	movlw	0
  2572  00146C  6FAC               	movwf	(_enter_state+1)& (0+255),b
  2573  00146E  0E01               	movlw	1
  2574  001470  6FAB               	movwf	_enter_state& (0+255),b
  2575                           
  2576                           ;MainCode.c: 244:                     Lcd_Write_String("Mowing lawn");
  2577  001472  0E04               	movlw	4
  2578  001474  6F0A               	movwf	_state& (0+255),b
  2579                           
  2580                           ; BSR set to: 1
  2581                           ;MainCode.c: 245:                     Lcd_Set_Cursor(2, 1);
  2582  001476  0060  F428  F041   	movff	_state,_status
  2583  00147C  6A42               	clrf	_status+1,c
  2584                           
  2585                           ; BSR set to: 1
  2586                           ;MainCode.c: 246:                     Lcd_Write_String(".....");
  2587  00147E  EC9F  F01E         	call	_Lcd_Clear	;wreg free
  2588                           
  2589                           ;MainCode.c: 247:                     Lcd_Set_Cursor(3, 1);
  2590  001482  0E01               	movlw	1
  2591  001484  6E1F               	movwf	Lcd_Set_Cursor@b,c
  2592  001486  0E01               	movlw	1
  2593  001488  EC9C  F019         	call	_Lcd_Set_Cursor
  2594                           
  2595                           ;MainCode.c: 248:                     Lcd_Write_String("Master STATE:");
  2596  00148C  0E21               	movlw	low STR_7
  2597  00148E  6E22               	movwf	Lcd_Write_String@a,c
  2598  001490  0E7F               	movlw	high STR_7
  2599  001492  6E23               	movwf	Lcd_Write_String@a+1,c
  2600  001494  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
  2601                           
  2602                           ;MainCode.c: 249:                 }
  2603  001498  0EA3               	movlw	163
  2604  00149A  0100               	movlb	0	; () banked
  2605  00149C  6FF2               	movwf	(??_main+1)& (0+255),b
  2606  00149E  0E57               	movlw	87
  2607  0014A0  6FF1               	movwf	??_main& (0+255),b
  2608  0014A2  0E02               	movlw	2
  2609  0014A4                     u9197:
  2610  0014A4  2EE8               	decfsz	wreg,f,c
  2611  0014A6  D7FE               	bra	u9197
  2612  0014A8  2FF1               	decfsz	??_main& (0+255),f,b
  2613  0014AA  D7FC               	bra	u9197
  2614  0014AC  2FF2               	decfsz	(??_main+1)& (0+255),f,b
  2615  0014AE  D7FA               	bra	u9197
  2616  0014B0  F000               	nop	
  2617  0014B2  D21B               	goto	l176
  2618  0014B4                     l202:
  2619                           
  2620                           ; BSR set to: 0
  2621                           ;MainCode.c: 255:                     Lcd_Set_Cursor(4, 1);
  2622  0014B4  0060  F428  F041   	movff	_state,_status
  2623  0014BA  6A42               	clrf	_status+1,c
  2624                           
  2625                           ; BSR set to: 0
  2626                           ;MainCode.c: 256:                     Lcd_Write_String(master_state_lut[master_state]);
  2627  0014BC  0101               	movlb	1	; () banked
  2628  0014BE  05AB               	decf	_enter_state& (0+255),w,b
  2629  0014C0  11AC               	iorwf	(_enter_state+1)& (0+255),w,b
  2630  0014C2  A4D8               	btfss	status,2,c
  2631  0014C4  D021               	goto	l7265
  2632                           
  2633                           ; BSR set to: 1
  2634                           ;MainCode.c: 257:                     if(!PORTAbits.RA2)
  2635  0014C6  0E00               	movlw	0
  2636  0014C8  6F09               	movwf	(_tick_count+1)& (0+255),b
  2637  0014CA  0E00               	movlw	0
  2638  0014CC  6F08               	movwf	_tick_count& (0+255),b
  2639                           
  2640                           ;MainCode.c: 258:                     {
  2641  0014CE  0E00               	movlw	0
  2642  0014D0  6FAC               	movwf	(_enter_state+1)& (0+255),b
  2643  0014D2  0E00               	movlw	0
  2644  0014D4  6FAB               	movwf	_enter_state& (0+255),b
  2645                           
  2646                           ; BSR set to: 1
  2647                           ;MainCode.c: 259:                         T1CONbits.ON = 1;
  2648  0014D6  EC9F  F01E         	call	_Lcd_Clear	;wreg free
  2649                           
  2650                           ;MainCode.c: 260:                         if(TMR1H > 50)
  2651  0014DA  0E01               	movlw	1
  2652  0014DC  6E1F               	movwf	Lcd_Set_Cursor@b,c
  2653  0014DE  0E01               	movlw	1
  2654  0014E0  EC9C  F019         	call	_Lcd_Set_Cursor
  2655                           
  2656                           ;MainCode.c: 261:                         {
  2657  0014E4  0E43               	movlw	low STR_8
  2658  0014E6  6E22               	movwf	Lcd_Write_String@a,c
  2659  0014E8  0E7F               	movlw	high STR_8
  2660  0014EA  6E23               	movwf	Lcd_Write_String@a+1,c
  2661  0014EC  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
  2662                           
  2663                           ;MainCode.c: 262:                             state = STARTMENU;
  2664  0014F0  0E01               	movlw	1
  2665  0014F2  6E1F               	movwf	Lcd_Set_Cursor@b,c
  2666  0014F4  0E02               	movlw	2
  2667  0014F6  EC9C  F019         	call	_Lcd_Set_Cursor
  2668                           
  2669                           ;MainCode.c: 263:                             enter_state = 1;
  2670  0014FA  0EAA               	movlw	low STR_9
  2671  0014FC  6E22               	movwf	Lcd_Write_String@a,c
  2672  0014FE  0E7F               	movlw	high STR_9
  2673  001500  6E23               	movwf	Lcd_Write_String@a+1,c
  2674  001502  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
  2675                           
  2676                           ;MainCode.c: 264:                             Lcd_Clear();
  2677  001506  D1F1               	goto	l176
  2678  001508                     l7265:
  2679                           
  2680                           ; BSR set to: 1
  2681                           ;MainCode.c: 266:                             Lcd_Write_String("Release for restart");
  2682  001508  EC3A  F01A         	call	_MenuYesNo	;wreg free
  2683                           
  2684                           ;MainCode.c: 267:                             while (!PORTAbits.RA2){
  2685  00150C  B4CA               	btfsc	16330,2,c	;volatile
  2686  00150E  D1ED               	goto	l176
  2687                           
  2688                           ;MainCode.c: 268:                                 char str[20];
  2689  001510  0101               	movlb	1	; () banked
  2690  001512  5108               	movf	_tick_count& (0+255),w,b
  2691  001514  1109               	iorwf	(_tick_count+1)& (0+255),w,b
  2692  001516  A4D8               	btfss	status,2,c
  2693  001518  D002               	goto	l7273
  2694                           
  2695                           ; BSR set to: 1
  2696  00151A  0E01               	movlw	1
  2697  00151C  D001               	goto	L3
  2698  00151E                     l7273:
  2699                           
  2700                           ; BSR set to: 1
  2701  00151E  0E00               	movlw	0
  2702  001520                     L3:
  2703  001520  6F0A               	movwf	_state& (0+255),b
  2704                           
  2705                           ; BSR set to: 1
  2706                           ;MainCode.c: 270:                                 if(TMR1H > 100) {
  2707  001522  0E00               	movlw	0
  2708  001524  6FAC               	movwf	(_enter_state+1)& (0+255),b
  2709  001526  0E01               	movlw	1
  2710  001528  6FAB               	movwf	_enter_state& (0+255),b
  2711  00152A                     l208:
  2712  00152A  B4CA               	btfsc	16330,2,c	;volatile
  2713  00152C  D1DE               	goto	l176
  2714  00152E  D7FD               	goto	l208
  2715  001530                     l211:
  2716                           
  2717                           ; BSR set to: 0
  2718                           ;MainCode.c: 276:                                     Lcd_Write_String("to charging base
      +                          ");
  2719  001530  0060  F428  F041   	movff	_state,_status
  2720  001536  6A42               	clrf	_status+1,c
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;MainCode.c: 277:                                     while (!PORTAbits.RA2);
  2724  001538  0101               	movlb	1	; () banked
  2725  00153A  05AB               	decf	_enter_state& (0+255),w,b
  2726  00153C  11AC               	iorwf	(_enter_state+1)& (0+255),w,b
  2727  00153E  A4D8               	btfss	status,2,c
  2728  001540  D021               	goto	l7289
  2729                           
  2730                           ; BSR set to: 1
  2731                           ;MainCode.c: 278:                                 }
  2732  001542  0E00               	movlw	0
  2733  001544  6F09               	movwf	(_tick_count+1)& (0+255),b
  2734  001546  0E01               	movlw	1
  2735  001548  6F08               	movwf	_tick_count& (0+255),b
  2736                           
  2737                           ;MainCode.c: 279:                             }
  2738  00154A  0E00               	movlw	0
  2739  00154C  6FAC               	movwf	(_enter_state+1)& (0+255),b
  2740  00154E  0E00               	movlw	0
  2741  001550  6FAB               	movwf	_enter_state& (0+255),b
  2742                           
  2743                           ; BSR set to: 1
  2744                           ;MainCode.c: 280:                             T1CONbits.ON = 0;
  2745  001552  EC9F  F01E         	call	_Lcd_Clear	;wreg free
  2746                           
  2747                           ;MainCode.c: 281:                             TMR1H = 0;
  2748  001556  0E01               	movlw	1
  2749  001558  6E1F               	movwf	Lcd_Set_Cursor@b,c
  2750  00155A  0E01               	movlw	1
  2751  00155C  EC9C  F019         	call	_Lcd_Set_Cursor
  2752                           
  2753                           ;MainCode.c: 282:                             TMR1L = 0;
  2754  001560  0EAE               	movlw	low STR_10
  2755  001562  6E22               	movwf	Lcd_Write_String@a,c
  2756  001564  0E7E               	movlw	high STR_10
  2757  001566  6E23               	movwf	Lcd_Write_String@a+1,c
  2758  001568  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
  2759                           
  2760                           ;MainCode.c: 283:                         }
  2761  00156C  0E01               	movlw	1
  2762  00156E  6E1F               	movwf	Lcd_Set_Cursor@b,c
  2763  001570  0E02               	movlw	2
  2764  001572  EC9C  F019         	call	_Lcd_Set_Cursor
  2765                           
  2766                           ;MainCode.c: 284:                     }
  2767  001576  0E63               	movlw	low STR_4
  2768  001578  6E22               	movwf	Lcd_Write_String@a,c
  2769  00157A  0E7F               	movlw	high STR_4
  2770  00157C  6E23               	movwf	Lcd_Write_String@a+1,c
  2771  00157E  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
  2772                           
  2773                           ;MainCode.c: 285:                     else
  2774  001582  D1B3               	goto	l176
  2775  001584                     l7289:
  2776                           
  2777                           ; BSR set to: 1
  2778                           ;MainCode.c: 287:                         T1CONbits.ON = 0;
  2779  001584  EC3A  F01A         	call	_MenuYesNo	;wreg free
  2780                           
  2781                           ;MainCode.c: 288:                         TMR1L = 0;
  2782  001588  B4CA               	btfsc	16330,2,c	;volatile
  2783  00158A  D1AF               	goto	l176
  2784                           
  2785                           ;MainCode.c: 289:                         TMR1H = 0;
  2786  00158C  0101               	movlb	1	; () banked
  2787  00158E  5108               	movf	_tick_count& (0+255),w,b
  2788  001590  1109               	iorwf	(_tick_count+1)& (0+255),w,b
  2789  001592  A4D8               	btfss	status,2,c
  2790  001594  D002               	goto	l7297
  2791                           
  2792                           ; BSR set to: 1
  2793  001596  0E05               	movlw	5
  2794  001598  D001               	goto	L4
  2795  00159A                     l7297:
  2796                           
  2797                           ; BSR set to: 1
  2798  00159A  0E00               	movlw	0
  2799  00159C                     L4:
  2800  00159C  6F0A               	movwf	_state& (0+255),b
  2801                           
  2802                           ; BSR set to: 1
  2803                           ;MainCode.c: 291:                 }
  2804  00159E  0E00               	movlw	0
  2805  0015A0  6FAC               	movwf	(_enter_state+1)& (0+255),b
  2806  0015A2  0E01               	movlw	1
  2807  0015A4  6FAB               	movwf	_enter_state& (0+255),b
  2808  0015A6                     l217:
  2809  0015A6  B4CA               	btfsc	16330,2,c	;volatile
  2810  0015A8  D1A0               	goto	l176
  2811  0015AA  D7FD               	goto	l217
  2812  0015AC                     l220:
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;MainCode.c: 297:                     Lcd_Clear();
  2816  0015AC  0060  F428  F041   	movff	_state,_status
  2817  0015B2  6A42               	clrf	_status+1,c
  2818                           
  2819                           ; BSR set to: 0
  2820                           ;MainCode.c: 298:                     Lcd_Set_Cursor(1, 1);
  2821  0015B4  0101               	movlb	1	; () banked
  2822  0015B6  05AB               	decf	_enter_state& (0+255),w,b
  2823  0015B8  11AC               	iorwf	(_enter_state+1)& (0+255),w,b
  2824  0015BA  A4D8               	btfss	status,2,c
  2825  0015BC  D028               	goto	l7317
  2826                           
  2827                           ; BSR set to: 1
  2828                           ;MainCode.c: 299:                     Lcd_Write_String("Charging robot");
  2829  0015BE  0E00               	movlw	0
  2830  0015C0  6FAC               	movwf	(_enter_state+1)& (0+255),b
  2831  0015C2  0E00               	movlw	0
  2832  0015C4  6FAB               	movwf	_enter_state& (0+255),b
  2833                           
  2834                           ; BSR set to: 1
  2835                           ;MainCode.c: 300:                     Lcd_Set_Cursor(2, 1);
  2836  0015C6  EC9F  F01E         	call	_Lcd_Clear	;wreg free
  2837                           
  2838                           ;MainCode.c: 301:                     Lcd_Write_String("Voltage: ");
  2839  0015CA  0E01               	movlw	1
  2840  0015CC  6E1F               	movwf	Lcd_Set_Cursor@b,c
  2841  0015CE  0E01               	movlw	1
  2842  0015D0  EC9C  F019         	call	_Lcd_Set_Cursor
  2843                           
  2844                           ;MainCode.c: 302:                 }
  2845  0015D4  0E9E               	movlw	low STR_12
  2846  0015D6  6E22               	movwf	Lcd_Write_String@a,c
  2847  0015D8  0E7F               	movlw	high STR_12
  2848  0015DA  6E23               	movwf	Lcd_Write_String@a+1,c
  2849  0015DC  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
  2850                           
  2851                           ;MainCode.c: 303:                 else {
  2852  0015E0  0E01               	movlw	1
  2853  0015E2  6E1F               	movwf	Lcd_Set_Cursor@b,c
  2854  0015E4  0E02               	movlw	2
  2855  0015E6  EC9C  F019         	call	_Lcd_Set_Cursor
  2856                           
  2857                           ;MainCode.c: 304:                     char str[8];
  2858  0015EA  0EC5               	movlw	low STR_6
  2859  0015EC  6E22               	movwf	Lcd_Write_String@a,c
  2860  0015EE  0E7F               	movlw	high STR_6
  2861  0015F0  6E23               	movwf	Lcd_Write_String@a+1,c
  2862  0015F2  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
  2863                           
  2864                           ;MainCode.c: 305:                     sprintf(str, "%3.2f", charging_voltage);
  2865  0015F6  0E01               	movlw	1
  2866  0015F8  6E1F               	movwf	Lcd_Set_Cursor@b,c
  2867  0015FA  0E03               	movlw	3
  2868  0015FC  EC9C  F019         	call	_Lcd_Set_Cursor
  2869                           
  2870                           ;MainCode.c: 306:                     Lcd_Set_Cursor(2, 10);
  2871  001600  0E90               	movlw	low STR_14
  2872  001602  6E22               	movwf	Lcd_Write_String@a,c
  2873  001604  0E7F               	movlw	high STR_14
  2874  001606  6E23               	movwf	Lcd_Write_String@a+1,c
  2875  001608  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
  2876                           
  2877                           ;MainCode.c: 307:                     Lcd_Write_String(str);
  2878  00160C  D16E               	goto	l176
  2879  00160E                     l7317:
  2880                           
  2881                           ; BSR set to: 1
  2882                           ;MainCode.c: 309:                     Lcd_Write_String(charging_state_lut[charging_state
      +                          ]);;MainCode.c: 310: 
  2883  00160E  0E65               	movlw	low main@str
  2884  001610  0100               	movlb	0	; () banked
  2885  001612  6FE9               	movwf	sprintf@s& (0+255),b
  2886  001614  0E01               	movlw	high main@str
  2887  001616  6FEA               	movwf	(sprintf@s+1)& (0+255),b
  2888  001618  0EF7               	movlw	low STR_15
  2889  00161A  6FEB               	movwf	sprintf@fmt& (0+255),b
  2890  00161C  0E7F               	movlw	high STR_15
  2891  00161E  6FEC               	movwf	(sprintf@fmt+1)& (0+255),b
  2892  001620  006F FEC0  F0ED    	movff	16304,?_sprintf+4	;volatile
  2893  001626  6BEE               	clrf	(?_sprintf+5)& (0+255),b
  2894  001628  ECB4  F01C         	call	_sprintf	;wreg free
  2895                           
  2896                           ;MainCode.c: 313:                 }
  2897  00162C  0E01               	movlw	1
  2898  00162E  6E1F               	movwf	Lcd_Set_Cursor@b,c
  2899  001630  0E04               	movlw	4
  2900  001632  EC9C  F019         	call	_Lcd_Set_Cursor
  2901                           
  2902                           ;MainCode.c: 314:                 break;
  2903  001636  0060  F410  F01C   	movff	_master_state,___wmul@multiplier
  2904  00163C  0060  F414  F01D   	movff	_master_state+1,___wmul@multiplier+1
  2905  001642  0E00               	movlw	0
  2906  001644  6E1F               	movwf	___wmul@multiplicand+1,c
  2907  001646  0E14               	movlw	20
  2908  001648  6E1E               	movwf	___wmul@multiplicand,c
  2909  00164A  EC62  F01E         	call	___wmul	;wreg free
  2910  00164E  0E8C               	movlw	low _master_state_lut
  2911  001650  241C               	addwf	?___wmul,w,c
  2912  001652  6E22               	movwf	Lcd_Write_String@a,c
  2913  001654  0E02               	movlw	high _master_state_lut
  2914  001656  201D               	addwfc	?___wmul+1,w,c
  2915  001658  6E23               	movwf	Lcd_Write_String@a+1,c
  2916  00165A  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
  2917                           
  2918                           ;MainCode.c: 315:             case RETURN_HOME:
  2919  00165E  B4CA               	btfsc	16330,2,c	;volatile
  2920  001660  D050               	goto	l223
  2921                           
  2922                           ;MainCode.c: 316:                 status = state;;MainCode.c: 317:                 if (e
      +                          nter_state == 1) {
  2923  001662  80B2               	bsf	16306,0,c	;volatile
  2924                           
  2925                           ;MainCode.c: 318:                     enter_state = 0;
  2926  001664  0E32               	movlw	50
  2927  001666  64B1               	cpfsgt	16305,c	;volatile
  2928  001668  D140               	goto	l176
  2929                           
  2930                           ;MainCode.c: 319:                     Lcd_Clear();;MainCode.c: 320:                     
      +                          Lcd_Set_Cursor(1, 1);
  2931  00166A  0E00               	movlw	0
  2932  00166C  0101               	movlb	1	; () banked
  2933  00166E  6F0A               	movwf	_state& (0+255),b
  2934                           
  2935                           ;MainCode.c: 321:                     Lcd_Write_String("Returning home");
  2936  001670  0E00               	movlw	0
  2937  001672  6FAC               	movwf	(_enter_state+1)& (0+255),b
  2938  001674  0E01               	movlw	1
  2939  001676  6FAB               	movwf	_enter_state& (0+255),b
  2940                           
  2941                           ; BSR set to: 1
  2942                           ;MainCode.c: 322:                     Lcd_Set_Cursor(2, 1);
  2943  001678  EC9F  F01E         	call	_Lcd_Clear	;wreg free
  2944                           
  2945                           ;MainCode.c: 323:                     Lcd_Write_String(".....");
  2946  00167C  0E01               	movlw	1
  2947  00167E  6E1F               	movwf	Lcd_Set_Cursor@b,c
  2948  001680  0E01               	movlw	1
  2949  001682  EC9C  F019         	call	_Lcd_Set_Cursor
  2950                           
  2951                           ;MainCode.c: 324:                     Lcd_Set_Cursor(3, 1);
  2952  001686  0EC2               	movlw	low STR_16
  2953  001688  6E22               	movwf	Lcd_Write_String@a,c
  2954  00168A  0E7E               	movlw	high STR_16
  2955  00168C  6E23               	movwf	Lcd_Write_String@a+1,c
  2956  00168E  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
  2957                           
  2958                           ;MainCode.c: 325:                     Lcd_Write_String("Master STATE:");
  2959  001692  D02F               	goto	u9110
  2960  001694                     l7337:
  2961                           
  2962                           ;MainCode.c: 326:                 };MainCode.c: 327:                 else {
  2963  001694  0E79               	movlw	low main@str_1446
  2964  001696  0100               	movlb	0	; () banked
  2965  001698  6FE9               	movwf	sprintf@s& (0+255),b
  2966  00169A  0E01               	movlw	high main@str_1446
  2967  00169C  6FEA               	movwf	(sprintf@s+1)& (0+255),b
  2968  00169E  0EF7               	movlw	low STR_15
  2969  0016A0  6FEB               	movwf	sprintf@fmt& (0+255),b
  2970  0016A2  0E7F               	movlw	high STR_15
  2971  0016A4  6FEC               	movwf	(sprintf@fmt+1)& (0+255),b
  2972  0016A6  006F FEC0  F0ED    	movff	16304,?_sprintf+4	;volatile
  2973  0016AC  6BEE               	clrf	(?_sprintf+5)& (0+255),b
  2974  0016AE  ECB4  F01C         	call	_sprintf	;wreg free
  2975                           
  2976                           ;MainCode.c: 328:                     char str[20];
  2977  0016B2  0E64               	movlw	100
  2978  0016B4  64B1               	cpfsgt	16305,c	;volatile
  2979  0016B6  D01D               	goto	u9110
  2980                           
  2981                           ;MainCode.c: 329:                     sprintf(str, "%3d", TMR1L);
  2982  0016B8  0E07               	movlw	7
  2983  0016BA  0101               	movlb	1	; () banked
  2984  0016BC  6F0A               	movwf	_state& (0+255),b
  2985                           
  2986                           ; BSR set to: 1
  2987                           ;MainCode.c: 330: 
  2988  0016BE  EC9F  F01E         	call	_Lcd_Clear	;wreg free
  2989                           
  2990                           ;MainCode.c: 331: 
  2991  0016C2  0E01               	movlw	1
  2992  0016C4  6E1F               	movwf	Lcd_Set_Cursor@b,c
  2993  0016C6  0E01               	movlw	1
  2994  0016C8  EC9C  F019         	call	_Lcd_Set_Cursor
  2995                           
  2996                           ;MainCode.c: 332:                     Lcd_Set_Cursor(4, 1);
  2997  0016CC  0EE9               	movlw	low STR_18
  2998  0016CE  6E22               	movwf	Lcd_Write_String@a,c
  2999  0016D0  0E7E               	movlw	high STR_18
  3000  0016D2  6E23               	movwf	Lcd_Write_String@a+1,c
  3001  0016D4  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
  3002                           
  3003                           ;MainCode.c: 333:                     Lcd_Write_String(master_state_lut[master_state]);
  3004  0016D8  0E01               	movlw	1
  3005  0016DA  6E1F               	movwf	Lcd_Set_Cursor@b,c
  3006  0016DC  0E02               	movlw	2
  3007  0016DE  EC9C  F019         	call	_Lcd_Set_Cursor
  3008                           
  3009                           ;MainCode.c: 334:                     if(!PORTAbits.RA2)
  3010  0016E2  0E32               	movlw	low STR_19
  3011  0016E4  6E22               	movwf	Lcd_Write_String@a,c
  3012  0016E6  0E7F               	movlw	high STR_19
  3013  0016E8  6E23               	movwf	Lcd_Write_String@a+1,c
  3014  0016EA  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
  3015  0016EE                     l228:
  3016  0016EE  A4CA               	btfss	16330,2,c	;volatile
  3017  0016F0  D7FE               	goto	l228
  3018  0016F2                     u9110:
  3019                           
  3020                           ;MainCode.c: 325:                     Lcd_Write_String("Master STATE:");
  3021                           
  3022                           ;MainCode.c: 337:                         if(TMR1H > 50)
  3023  0016F2  A4CA               	btfss	16330,2,c	;volatile
  3024  0016F4  D7CF               	goto	l7337
  3025  0016F6                     u9120:
  3026                           
  3027                           ;MainCode.c: 338:                         {
  3028  0016F6  90B2               	bcf	16306,0,c	;volatile
  3029                           
  3030                           ;MainCode.c: 339:                             state = STARTMENU;
  3031  0016F8  0E00               	movlw	0
  3032  0016FA  6EB1               	movwf	16305,c	;volatile
  3033                           
  3034                           ;MainCode.c: 340:                             enter_state = 1;
  3035  0016FC  0E00               	movlw	0
  3036  0016FE  6EB0               	movwf	16304,c	;volatile
  3037  001700  D0F4               	goto	l176
  3038  001702                     l223:
  3039                           
  3040                           ;MainCode.c: 344:                             while (!PORTAbits.RA2){;MainCode.c: 345: 
  3041  001702  90B2               	bcf	16306,0,c	;volatile
  3042                           
  3043                           ;MainCode.c: 346:                             }
  3044  001704  0E00               	movlw	0
  3045  001706  6EB0               	movwf	16304,c	;volatile
  3046                           
  3047                           ;MainCode.c: 347:                             T1CONbits.ON = 0;
  3048  001708  0E00               	movlw	0
  3049  00170A  6EB1               	movwf	16305,c	;volatile
  3050  00170C  D0EE               	goto	l176
  3051  00170E                     l233:
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;MainCode.c: 352:                     else
  3055  00170E  0060  F428  F041   	movff	_state,_status
  3056  001714  6A42               	clrf	_status+1,c
  3057                           
  3058                           ; BSR set to: 0
  3059                           ;MainCode.c: 353:                     {
  3060  001716  0101               	movlb	1	; () banked
  3061  001718  05AB               	decf	_enter_state& (0+255),w,b
  3062  00171A  11AC               	iorwf	(_enter_state+1)& (0+255),w,b
  3063  00171C  A4D8               	btfss	status,2,c
  3064  00171E  D01D               	goto	l7371
  3065                           
  3066                           ; BSR set to: 1
  3067                           ;MainCode.c: 354:                         T1CONbits.ON = 0;
  3068  001720  0E00               	movlw	0
  3069  001722  6FAC               	movwf	(_enter_state+1)& (0+255),b
  3070  001724  0E00               	movlw	0
  3071  001726  6FAB               	movwf	_enter_state& (0+255),b
  3072                           
  3073                           ; BSR set to: 1
  3074                           ;MainCode.c: 355:                         TMR1L = 0;
  3075  001728  EC9F  F01E         	call	_Lcd_Clear	;wreg free
  3076                           
  3077                           ;MainCode.c: 356:                         TMR1H = 0;
  3078  00172C  0E01               	movlw	1
  3079  00172E  6E1F               	movwf	Lcd_Set_Cursor@b,c
  3080  001730  0E01               	movlw	1
  3081  001732  EC9C  F019         	call	_Lcd_Set_Cursor
  3082                           
  3083                           ;MainCode.c: 357:                     }
  3084  001736  0E81               	movlw	low STR_20
  3085  001738  6E22               	movwf	Lcd_Write_String@a,c
  3086  00173A  0E7F               	movlw	high STR_20
  3087  00173C  6E23               	movwf	Lcd_Write_String@a+1,c
  3088  00173E  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
  3089                           
  3090                           ;MainCode.c: 358:                 }
  3091  001742  0E01               	movlw	1
  3092  001744  6E1F               	movwf	Lcd_Set_Cursor@b,c
  3093  001746  0E02               	movlw	2
  3094  001748  EC9C  F019         	call	_Lcd_Set_Cursor
  3095                           
  3096                           ;MainCode.c: 359:                 break;
  3097  00174C  0EB5               	movlw	low STR_21
  3098  00174E  6E22               	movwf	Lcd_Write_String@a,c
  3099  001750  0E7F               	movlw	high STR_21
  3100  001752  6E23               	movwf	Lcd_Write_String@a+1,c
  3101  001754  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
  3102                           
  3103                           ;MainCode.c: 360:             default:
  3104  001758  D0C8               	goto	l176
  3105  00175A                     l7371:
  3106                           
  3107                           ; BSR set to: 1
  3108                           ;MainCode.c: 362:                 if (enter_state == 1) {;MainCode.c: 363:              
      +                                 enter_state = 0;
  3109  00175A  0EA1               	movlw	low main@str_1452
  3110  00175C  0100               	movlb	0	; () banked
  3111  00175E  6FE9               	movwf	sprintf@s& (0+255),b
  3112  001760  0E01               	movlw	high main@str_1452
  3113  001762  6FEA               	movwf	(sprintf@s+1)& (0+255),b
  3114  001764  0ECB               	movlw	low STR_22
  3115  001766  6FEB               	movwf	sprintf@fmt& (0+255),b
  3116  001768  0E7F               	movlw	high STR_22
  3117  00176A  6FEC               	movwf	(sprintf@fmt+1)& (0+255),b
  3118  00176C  0E00               	movlw	0
  3119  00176E  6FED               	movwf	(?_sprintf+4)& (0+255),b
  3120  001770  0E00               	movlw	0
  3121  001772  6FEE               	movwf	(?_sprintf+5)& (0+255),b
  3122  001774  0E00               	movlw	0
  3123  001776  6FEF               	movwf	(?_sprintf+6)& (0+255),b
  3124  001778  0E00               	movlw	0
  3125  00177A  6FF0               	movwf	(?_sprintf+7)& (0+255),b
  3126  00177C  ECB4  F01C         	call	_sprintf	;wreg free
  3127                           
  3128                           ;MainCode.c: 364:                     Lcd_Clear();
  3129  001780  0E0A               	movlw	10
  3130  001782  6E1F               	movwf	Lcd_Set_Cursor@b,c
  3131  001784  0E02               	movlw	2
  3132  001786  EC9C  F019         	call	_Lcd_Set_Cursor
  3133                           
  3134                           ;MainCode.c: 365:                     Lcd_Set_Cursor(1, 1);
  3135  00178A  0EA1               	movlw	low main@str_1452
  3136  00178C  6E22               	movwf	Lcd_Write_String@a,c
  3137  00178E  0E01               	movlw	high main@str_1452
  3138  001790  6E23               	movwf	Lcd_Write_String@a+1,c
  3139  001792  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
  3140                           
  3141                           ;MainCode.c: 366:                     Lcd_Write_String("Error statemachine");
  3142  001796  0E01               	movlw	1
  3143  001798  6E1F               	movwf	Lcd_Set_Cursor@b,c
  3144  00179A  0E03               	movlw	3
  3145  00179C  EC9C  F019         	call	_Lcd_Set_Cursor
  3146                           
  3147                           ;MainCode.c: 367:                 }
  3148  0017A0  0060  F6A4  F01C   	movff	_charging_state,___wmul@multiplier
  3149  0017A6  0060  F6A8  F01D   	movff	_charging_state+1,___wmul@multiplier+1
  3150  0017AC  0E00               	movlw	0
  3151  0017AE  6E1F               	movwf	___wmul@multiplicand+1,c
  3152  0017B0  0E14               	movlw	20
  3153  0017B2  6E1E               	movwf	___wmul@multiplicand,c
  3154  0017B4  EC62  F01E         	call	___wmul	;wreg free
  3155  0017B8  0E00               	movlw	low _charging_state_lut
  3156  0017BA  241C               	addwf	?___wmul,w,c
  3157  0017BC  6E22               	movwf	Lcd_Write_String@a,c
  3158  0017BE  0E02               	movlw	high _charging_state_lut
  3159  0017C0  201D               	addwfc	?___wmul+1,w,c
  3160  0017C2  6E23               	movwf	Lcd_Write_String@a+1,c
  3161  0017C4  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
  3162  0017C8  D090               	goto	l176
  3163  0017CA                     l236:
  3164                           
  3165                           ; BSR set to: 0
  3166                           ;MainCode.c: 374: }
  3167  0017CA  0060  F428  F041   	movff	_state,_status
  3168  0017D0  6A42               	clrf	_status+1,c
  3169                           
  3170                           ; BSR set to: 0
  3171                           ;MainCode.c: 375: 
  3172  0017D2  0101               	movlb	1	; () banked
  3173  0017D4  05AB               	decf	_enter_state& (0+255),w,b
  3174  0017D6  11AC               	iorwf	(_enter_state+1)& (0+255),w,b
  3175  0017D8  A4D8               	btfss	status,2,c
  3176  0017DA  D028               	goto	l7399
  3177                           
  3178                           ; BSR set to: 1
  3179                           ;MainCode.c: 376: void __attribute__((picinterrupt(("irq(TMR0), low_priority")))) buzzer
      +                          Int(void) {
  3180  0017DC  0E00               	movlw	0
  3181  0017DE  6FAC               	movwf	(_enter_state+1)& (0+255),b
  3182  0017E0  0E00               	movlw	0
  3183  0017E2  6FAB               	movwf	_enter_state& (0+255),b
  3184                           
  3185                           ; BSR set to: 1
  3186                           ;MainCode.c: 377:     PORTBbits.RB1 = 0;
  3187  0017E4  EC9F  F01E         	call	_Lcd_Clear	;wreg free
  3188                           
  3189                           ;MainCode.c: 378:     T0CON0bits.EN = 0;
  3190  0017E8  0E01               	movlw	1
  3191  0017EA  6E1F               	movwf	Lcd_Set_Cursor@b,c
  3192  0017EC  0E01               	movlw	1
  3193  0017EE  EC9C  F019         	call	_Lcd_Set_Cursor
  3194                           
  3195                           ;MainCode.c: 379:     PIR3bits.TMR0IF = 0;
  3196  0017F2  0E72               	movlw	low STR_23
  3197  0017F4  6E22               	movwf	Lcd_Write_String@a,c
  3198  0017F6  0E7F               	movlw	high STR_23
  3199  0017F8  6E23               	movwf	Lcd_Write_String@a+1,c
  3200  0017FA  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
  3201                           
  3202                           ;MainCode.c: 380: }
  3203  0017FE  0E01               	movlw	1
  3204  001800  6E1F               	movwf	Lcd_Set_Cursor@b,c
  3205  001802  0E02               	movlw	2
  3206  001804  EC9C  F019         	call	_Lcd_Set_Cursor
  3207                           
  3208                           ;MainCode.c: 381: 
  3209  001808  0EC5               	movlw	low STR_6
  3210  00180A  6E22               	movwf	Lcd_Write_String@a,c
  3211  00180C  0E7F               	movlw	high STR_6
  3212  00180E  6E23               	movwf	Lcd_Write_String@a+1,c
  3213  001810  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
  3214                           
  3215                           ;MainCode.c: 382: void __attribute__((picinterrupt(("irq(INT0), high_priority")))) encIn
      +                          t(void) {
  3216  001814  0E01               	movlw	1
  3217  001816  6E1F               	movwf	Lcd_Set_Cursor@b,c
  3218  001818  0E03               	movlw	3
  3219  00181A  EC9C  F019         	call	_Lcd_Set_Cursor
  3220                           
  3221                           ;MainCode.c: 383:     if (PORTAbits.RA0 == 1) {
  3222  00181E  0E90               	movlw	low STR_14
  3223  001820  6E22               	movwf	Lcd_Write_String@a,c
  3224  001822  0E7F               	movlw	high STR_14
  3225  001824  6E23               	movwf	Lcd_Write_String@a+1,c
  3226  001826  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
  3227                           
  3228                           ;MainCode.c: 384:         if (tick_count > min_tick_count) {
  3229  00182A  D05F               	goto	l176
  3230  00182C                     l7399:
  3231                           
  3232                           ; BSR set to: 1
  3233                           ;MainCode.c: 386:             playBuzzer();;MainCode.c: 387:         }
  3234  00182C  0E8D               	movlw	low main@str_1457
  3235  00182E  0100               	movlb	0	; () banked
  3236  001830  6FE9               	movwf	sprintf@s& (0+255),b
  3237  001832  0E01               	movlw	high main@str_1457
  3238  001834  6FEA               	movwf	(sprintf@s+1)& (0+255),b
  3239  001836  0EF7               	movlw	low STR_15
  3240  001838  6FEB               	movwf	sprintf@fmt& (0+255),b
  3241  00183A  0E7F               	movlw	high STR_15
  3242  00183C  6FEC               	movwf	(sprintf@fmt+1)& (0+255),b
  3243  00183E  006F FEC0  F0ED    	movff	16304,?_sprintf+4	;volatile
  3244  001844  6BEE               	clrf	(?_sprintf+5)& (0+255),b
  3245  001846  ECB4  F01C         	call	_sprintf	;wreg free
  3246                           
  3247                           ;MainCode.c: 390:             tick_count++;
  3248  00184A  0E01               	movlw	1
  3249  00184C  6E1F               	movwf	Lcd_Set_Cursor@b,c
  3250  00184E  0E04               	movlw	4
  3251  001850  EC9C  F019         	call	_Lcd_Set_Cursor
  3252                           
  3253                           ;MainCode.c: 391:             playBuzzer();
  3254  001854  0060  F410  F01C   	movff	_master_state,___wmul@multiplier
  3255  00185A  0060  F414  F01D   	movff	_master_state+1,___wmul@multiplier+1
  3256  001860  0E00               	movlw	0
  3257  001862  6E1F               	movwf	___wmul@multiplicand+1,c
  3258  001864  0E14               	movlw	20
  3259  001866  6E1E               	movwf	___wmul@multiplicand,c
  3260  001868  EC62  F01E         	call	___wmul	;wreg free
  3261  00186C  0E8C               	movlw	low _master_state_lut
  3262  00186E  241C               	addwf	?___wmul,w,c
  3263  001870  6E22               	movwf	Lcd_Write_String@a,c
  3264  001872  0E02               	movlw	high _master_state_lut
  3265  001874  201D               	addwfc	?___wmul+1,w,c
  3266  001876  6E23               	movwf	Lcd_Write_String@a+1,c
  3267  001878  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
  3268                           
  3269                           ;MainCode.c: 392:         }
  3270  00187C  B4CA               	btfsc	16330,2,c	;volatile
  3271  00187E  D741               	goto	l223
  3272                           
  3273                           ;MainCode.c: 393:     };MainCode.c: 394:     PIR1bits.INT0IF = 0;
  3274  001880  80B2               	bsf	16306,0,c	;volatile
  3275                           
  3276                           ;MainCode.c: 395: }
  3277  001882  0E32               	movlw	50
  3278  001884  64B1               	cpfsgt	16305,c	;volatile
  3279  001886  D031               	goto	l176
  3280                           
  3281                           ;MainCode.c: 396: ;MainCode.c: 397: void __attribute__((picinterrupt(("irq(AD), high_pri
      +                          ority")))) adcInt(void) {
  3282  001888  0E00               	movlw	0
  3283  00188A  0101               	movlb	1	; () banked
  3284  00188C  6F0A               	movwf	_state& (0+255),b
  3285                           
  3286                           ;MainCode.c: 398: 
  3287  00188E  0E00               	movlw	0
  3288  001890  6FAC               	movwf	(_enter_state+1)& (0+255),b
  3289  001892  0E01               	movlw	1
  3290  001894  6FAB               	movwf	_enter_state& (0+255),b
  3291                           
  3292                           ; BSR set to: 1
  3293                           ;MainCode.c: 399: 
  3294  001896  EC9F  F01E         	call	_Lcd_Clear	;wreg free
  3295                           
  3296                           ;MainCode.c: 400: 
  3297  00189A  0E01               	movlw	1
  3298  00189C  6E1F               	movwf	Lcd_Set_Cursor@b,c
  3299  00189E  0E01               	movlw	1
  3300  0018A0  EC9C  F019         	call	_Lcd_Set_Cursor
  3301                           
  3302                           ;MainCode.c: 401: }
  3303  0018A4  0EC2               	movlw	low STR_16
  3304  0018A6  6E22               	movwf	Lcd_Write_String@a,c
  3305  0018A8  0E7E               	movlw	high STR_16
  3306  0018AA  6E23               	movwf	Lcd_Write_String@a+1,c
  3307  0018AC  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
  3308  0018B0                     l241:
  3309                           
  3310                           ;MainCode.c: 402: 
  3311  0018B0  A4CA               	btfss	16330,2,c	;volatile
  3312  0018B2  D7FE               	goto	l241
  3313  0018B4  D720               	goto	u9120
  3314  0018B6                     l245:
  3315                           
  3316                           ; BSR set to: 0
  3317                           ;MainCode.c: 419:                 master_state = RXB0D1;
  3318  0018B6  0060  F428  F041   	movff	_state,_status
  3319  0018BC  6A42               	clrf	_status+1,c
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;MainCode.c: 420:                 break;
  3323  0018BE  0101               	movlb	1	; () banked
  3324  0018C0  05AB               	decf	_enter_state& (0+255),w,b
  3325  0018C2  11AC               	iorwf	(_enter_state+1)& (0+255),w,b
  3326  0018C4  A4D8               	btfss	status,2,c
  3327  0018C6  D011               	goto	l176
  3328                           
  3329                           ; BSR set to: 1
  3330                           ;MainCode.c: 421:             case 4:
  3331  0018C8  0E00               	movlw	0
  3332  0018CA  6FAC               	movwf	(_enter_state+1)& (0+255),b
  3333  0018CC  0E00               	movlw	0
  3334  0018CE  6FAB               	movwf	_enter_state& (0+255),b
  3335                           
  3336                           ; BSR set to: 1
  3337                           ;MainCode.c: 422:                 charging_state = RXB0D1;
  3338  0018D0  EC9F  F01E         	call	_Lcd_Clear	;wreg free
  3339                           
  3340                           ;MainCode.c: 423:                 break;
  3341  0018D4  0E01               	movlw	1
  3342  0018D6  6E1F               	movwf	Lcd_Set_Cursor@b,c
  3343  0018D8  0E01               	movlw	1
  3344  0018DA  EC9C  F019         	call	_Lcd_Set_Cursor
  3345                           
  3346                           ;MainCode.c: 424:         }
  3347  0018DE  0ED6               	movlw	low STR_28
  3348  0018E0  6E22               	movwf	Lcd_Write_String@a,c
  3349  0018E2  0E7E               	movlw	high STR_28
  3350  0018E4  6E23               	movwf	Lcd_Write_String@a+1,c
  3351  0018E6  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
  3352  0018EA                     l176:
  3353  0018EA  0101               	movlb	1	; () banked
  3354  0018EC  510A               	movf	_state& (0+255),w,b
  3355  0018EE  0100               	movlb	0	; () banked
  3356  0018F0  6FF1               	movwf	??_main& (0+255),b
  3357  0018F2  6BF2               	clrf	(??_main+1)& (0+255),b
  3358                           
  3359                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3360                           ; Switch size 1, requested type "simple"
  3361                           ; Number of cases is 1, Range of values is 0 to 0
  3362                           ; switch strategies available:
  3363                           ; Name         Instructions Cycles
  3364                           ; simple_byte            4     3 (average)
  3365                           ;	Chosen strategy is simple_byte
  3366  0018F4  51F2               	movf	(??_main+1)& (0+255),w,b
  3367  0018F6  0A00               	xorlw	0	; case 0
  3368  0018F8  A4D8               	btfss	status,2,c
  3369  0018FA  D7DD               	goto	l245
  3370                           
  3371                           ; BSR set to: 0
  3372                           ; Switch size 1, requested type "simple"
  3373                           ; Number of cases is 8, Range of values is 0 to 7
  3374                           ; switch strategies available:
  3375                           ; Name         Instructions Cycles
  3376                           ; simple_byte           25    13 (average)
  3377                           ;	Chosen strategy is simple_byte
  3378  0018FC  51F1               	movf	??_main& (0+255),w,b
  3379  0018FE  0A00               	xorlw	0	; case 0
  3380  001900  B4D8               	btfsc	status,2,c
  3381  001902  D4F9               	goto	l177
  3382  001904  0A01               	xorlw	1	; case 1
  3383  001906  B4D8               	btfsc	status,2,c
  3384  001908  D534               	goto	l187
  3385  00190A  0A03               	xorlw	3	; case 2
  3386  00190C  B4D8               	btfsc	status,2,c
  3387  00190E  D56F               	goto	l196
  3388  001910  0A01               	xorlw	1	; case 3
  3389  001912  B4D8               	btfsc	status,2,c
  3390  001914  D5CF               	goto	l202
  3391  001916  0A07               	xorlw	7	; case 4
  3392  001918  B4D8               	btfsc	status,2,c
  3393  00191A  D60A               	goto	l211
  3394  00191C  0A01               	xorlw	1	; case 5
  3395  00191E  B4D8               	btfsc	status,2,c
  3396  001920  D645               	goto	l220
  3397  001922  0A03               	xorlw	3	; case 6
  3398  001924  B4D8               	btfsc	status,2,c
  3399  001926  D6F3               	goto	l233
  3400  001928  0A01               	xorlw	1	; case 7
  3401  00192A  B4D8               	btfsc	status,2,c
  3402  00192C  D74E               	goto	l236
  3403  00192E  D7C3               	goto	l245
  3404  001930                     __end_of_main:
  3405                           	opt callstack 0
  3406                           
  3407 ;; *************** function _sprintf *****************
  3408 ;; Defined at:
  3409 ;;		line 9 in file "D:\MPLAB\pic\sources\c99\common\nf_sprintf.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;  s               2  137[BANK0 ] PTR unsigned char 
  3412 ;;		 -> main@str_1457(20), main@str_1452(8), main@str_1446(20), main@str(20), 
  3413 ;;  fmt             2  139[BANK0 ] PTR const unsigned char 
  3414 ;;		 -> STR_26(4), STR_22(6), STR_17(4), STR_15(4), 
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;  f               6    4[BANK1 ] struct _IO_FILE
  3417 ;;  ap              2    2[BANK1 ] PTR void [1]
  3418 ;;		 -> ?_sprintf(2), 
  3419 ;;  ret             2    0        int 
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  2  137[BANK0 ] int 
  3422 ;; Registers used:
  3423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3429 ;;      Params:         0       8       0       0       0       0       0       0       0
  3430 ;;      Locals:         0       0      10       0       0       0       0       0       0
  3431 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3432 ;;      Totals:         0       8      10       0       0       0       0       0       0
  3433 ;;Total ram usage:       18 bytes
  3434 ;; Hardware stack levels used:    1
  3435 ;; Hardware stack levels required when called:   10
  3436 ;; This function calls:
  3437 ;;		_vfprintf
  3438 ;; This function is called by:
  3439 ;;		_main
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           	psect	text1
  3444  003968                     __ptext1:
  3445                           	opt callstack 0
  3446  003968                     _sprintf:
  3447                           	opt callstack 20
  3448                           
  3449                           ; BSR set to: 0
  3450                           ;incstack = 0
  3451  003968  0EED               	movlw	low (?_sprintf+4)
  3452  00396A  0101               	movlb	1	; () banked
  3453  00396C  6F5D               	movwf	sprintf@ap& (0+255),b
  3454  00396E  0E00               	movlw	high (?_sprintf+4)
  3455  003970  6F5E               	movwf	(sprintf@ap+1)& (0+255),b
  3456  003972  0060  F3A4  F15F   	movff	sprintf@s,sprintf@f
  3457  003978  0060  F3A8  F160   	movff	sprintf@s+1,sprintf@f+1
  3458                           
  3459                           ; BSR set to: 1
  3460  00397E  0E00               	movlw	0
  3461  003980  6F62               	movwf	(sprintf@f+3)& (0+255),b
  3462  003982  0E00               	movlw	0
  3463  003984  6F61               	movwf	(sprintf@f+2)& (0+255),b
  3464                           
  3465                           ; BSR set to: 1
  3466  003986  0E00               	movlw	0
  3467  003988  6F64               	movwf	(sprintf@f+5)& (0+255),b
  3468  00398A  0E00               	movlw	0
  3469  00398C  6F63               	movwf	(sprintf@f+4)& (0+255),b
  3470                           
  3471                           ; BSR set to: 1
  3472  00398E  0E5F               	movlw	low sprintf@f
  3473  003990  0100               	movlb	0	; () banked
  3474  003992  6FE1               	movwf	vfprintf@fp& (0+255),b
  3475  003994  0E01               	movlw	high sprintf@f
  3476  003996  6FE2               	movwf	(vfprintf@fp+1)& (0+255),b
  3477  003998  0060  F3AC  F0E3   	movff	sprintf@fmt,vfprintf@fmt
  3478  00399E  0060  F3B0  F0E4   	movff	sprintf@fmt+1,vfprintf@fmt+1
  3479  0039A4  0E5D               	movlw	low sprintf@ap
  3480  0039A6  6FE5               	movwf	vfprintf@ap& (0+255),b
  3481  0039A8  0E01               	movlw	high sprintf@ap
  3482  0039AA  6FE6               	movwf	(vfprintf@ap+1)& (0+255),b
  3483  0039AC  EC17  F01C         	call	_vfprintf	;wreg free
  3484  0039B0  0101               	movlb	1	; () banked
  3485  0039B2  5161               	movf	(sprintf@f+2)& (0+255),w,b
  3486  0039B4  0100               	movlb	0	; () banked
  3487  0039B6  25E9               	addwf	sprintf@s& (0+255),w,b
  3488  0039B8  6ED9               	movwf	fsr2l,c
  3489  0039BA  0101               	movlb	1	; () banked
  3490  0039BC  5162               	movf	(sprintf@f+3)& (0+255),w,b
  3491  0039BE  0100               	movlb	0	; () banked
  3492  0039C0  21EA               	addwfc	(sprintf@s+1)& (0+255),w,b
  3493  0039C2  6EDA               	movwf	fsr2h,c
  3494  0039C4  0E00               	movlw	0
  3495  0039C6  6EDF               	movwf	indf2,c
  3496                           
  3497                           ; BSR set to: 0
  3498  0039C8  0012               	return		;funcret
  3499  0039CA                     __end_of_sprintf:
  3500                           	opt callstack 0
  3501                           
  3502 ;; *************** function _vfprintf *****************
  3503 ;; Defined at:
  3504 ;;		line 1368 in file "D:\MPLAB\pic\sources\c99\common\doprnt.c"
  3505 ;; Parameters:    Size  Location     Type
  3506 ;;  fp              2  129[BANK0 ] PTR struct _IO_FILE
  3507 ;;		 -> sprintf@f(6), 
  3508 ;;  fmt             2  131[BANK0 ] PTR const unsigned char 
  3509 ;;		 -> STR_26(4), STR_22(6), STR_17(4), STR_15(4), 
  3510 ;;  ap              2  133[BANK0 ] PTR PTR void 
  3511 ;;		 -> sprintf@ap(2), 
  3512 ;; Auto vars:     Size  Location     Type
  3513 ;;  cfmt            2  135[BANK0 ] PTR unsigned char 
  3514 ;;		 -> STR_26(4), STR_22(6), STR_17(4), STR_15(4), 
  3515 ;; Return value:  Size  Location     Type
  3516 ;;                  2  129[BANK0 ] int 
  3517 ;; Registers used:
  3518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3519 ;; Tracked objects:
  3520 ;;		On entry : 0/0
  3521 ;;		On exit  : 0/0
  3522 ;;		Unchanged: 0/0
  3523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3524 ;;      Params:         0       6       0       0       0       0       0       0       0
  3525 ;;      Locals:         0       2       0       0       0       0       0       0       0
  3526 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3527 ;;      Totals:         0       8       0       0       0       0       0       0       0
  3528 ;;Total ram usage:        8 bytes
  3529 ;; Hardware stack levels used:    1
  3530 ;; Hardware stack levels required when called:    9
  3531 ;; This function calls:
  3532 ;;		_vfpfcnvrt
  3533 ;; This function is called by:
  3534 ;;		_sprintf
  3535 ;; This function uses a non-reentrant model
  3536 ;;
  3537                           
  3538                           	psect	text2
  3539  00382E                     __ptext2:
  3540                           	opt callstack 0
  3541  00382E                     _vfprintf:
  3542                           	opt callstack 20
  3543                           
  3544                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1368: int vfprintf(FILE *fp, const char *fmt,
      +                           va_list ap);D:\MPLAB\pic\sources\c99\common\doprnt.c: 1369: {;D:\MPLAB\pic\sources\c99\
      +                          common\doprnt.c: 1371:     char *cfmt;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1373:  
      +                             cfmt = (char *)fmt;
  3545                           
  3546                           ; BSR set to: 0
  3547                           ;incstack = 0
  3548  00382E  0060  F38C  F0E7   	movff	vfprintf@fmt,vfprintf@cfmt
  3549  003834  0060  F390  F0E8   	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3550                           
  3551                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1374:     nout = 0;
  3552  00383A  0E00               	movlw	0
  3553  00383C  0100               	movlb	0	; () banked
  3554  00383E  6FF8               	movwf	(_nout+1)& (0+255),b
  3555  003840  0E00               	movlw	0
  3556  003842  6FF7               	movwf	_nout& (0+255),b
  3557                           
  3558                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt) {
  3559  003844  D017               	goto	l7099
  3560  003846                     l7097:
  3561                           
  3562                           ; BSR set to: 0
  3563                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1376:         nout += vfpfcnvrt(fp, &cfmt, ap
      +                          );
  3564  003846  0060  F384  F0C1   	movff	vfprintf@fp,vfpfcnvrt@fp
  3565  00384C  0060  F388  F0C2   	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3566  003852  0EE7               	movlw	low vfprintf@cfmt
  3567  003854  6FC3               	movwf	vfpfcnvrt@fmt& (0+255),b
  3568  003856  0E00               	movlw	high vfprintf@cfmt
  3569  003858  6FC4               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3570  00385A  0060  F394  F0C5   	movff	vfprintf@ap,vfpfcnvrt@ap
  3571  003860  0060  F398  F0C6   	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3572  003866  EC02  F006         	call	_vfpfcnvrt	;wreg free
  3573  00386A  0100               	movlb	0	; () banked
  3574  00386C  51C1               	movf	?_vfpfcnvrt& (0+255),w,b
  3575  00386E  27F7               	addwf	_nout& (0+255),f,b
  3576  003870  51C2               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  3577  003872  23F8               	addwfc	(_nout+1)& (0+255),f,b
  3578  003874                     l7099:
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt) {
  3582  003874  0060  F39F  FFF6   	movff	vfprintf@cfmt,tblptrl
  3583  00387A  0060  F3A3  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  3584  003880                     	if	0	;tblptru may be non-zero
  3585  003880                     	endif
  3586  003880                     	if	0	;tblptru may be non-zero
  3587  003880                     	endif
  3588  003880  0008               	tblrd		*
  3589  003882  50F5               	movf	tablat,w,c
  3590  003884  0900               	iorlw	0
  3591  003886  A4D8               	btfss	status,2,c
  3592  003888  D7DE               	goto	l7097
  3593                           
  3594                           ; BSR set to: 0
  3595                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1378:     return nout;
  3596  00388A  0060  F3DC  F0E1   	movff	_nout,?_vfprintf
  3597  003890  0060  F3E0  F0E2   	movff	_nout+1,?_vfprintf+1
  3598                           
  3599                           ; BSR set to: 0
  3600  003896  0012               	return		;funcret
  3601  003898                     __end_of_vfprintf:
  3602                           	opt callstack 0
  3603                           
  3604 ;; *************** function _vfpfcnvrt *****************
  3605 ;; Defined at:
  3606 ;;		line 670 in file "D:\MPLAB\pic\sources\c99\common\doprnt.c"
  3607 ;; Parameters:    Size  Location     Type
  3608 ;;  fp              2   97[BANK0 ] PTR struct _IO_FILE
  3609 ;;		 -> sprintf@f(6), 
  3610 ;;  fmt             2   99[BANK0 ] PTR PTR unsigned char 
  3611 ;;		 -> vfprintf@cfmt(2), 
  3612 ;;  ap              2  101[BANK0 ] PTR PTR void 
  3613 ;;		 -> sprintf@ap(2), 
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;  ll              8  107[BANK0 ] long long 
  3616 ;;  llu             8    0        unsigned long long 
  3617 ;;  f               4  121[BANK0 ] unsigned long long 
  3618 ;;  ct              3  125[BANK0 ] unsigned char [3]
  3619 ;;  vp              3    0        PTR void 
  3620 ;;  cp              3    0        PTR unsigned char 
  3621 ;;  i               2    0        int 
  3622 ;;  done            2    0        int 
  3623 ;;  c               1  128[BANK0 ] unsigned char 
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  2   97[BANK0 ] int 
  3626 ;; Registers used:
  3627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3633 ;;      Params:         0       6       0       0       0       0       0       0       0
  3634 ;;      Locals:         0      22       0       0       0       0       0       0       0
  3635 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3636 ;;      Totals:         0      32       0       0       0       0       0       0       0
  3637 ;;Total ram usage:       32 bytes
  3638 ;; Hardware stack levels used:    1
  3639 ;; Hardware stack levels required when called:    8
  3640 ;; This function calls:
  3641 ;;		_atoi
  3642 ;;		_dtoa
  3643 ;;		_efgtoa
  3644 ;;		_fputc
  3645 ;;		_isdigit
  3646 ;;		_isupper
  3647 ;;		_strncmp
  3648 ;;		_tolower
  3649 ;; This function is called by:
  3650 ;;		_vfprintf
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654                           	psect	text3
  3655  000C04                     __ptext3:
  3656                           	opt callstack 0
  3657  000C04                     _vfpfcnvrt:
  3658                           	opt callstack 20
  3659                           
  3660                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 670: static int vfpfcnvrt(FILE *fp, char *fmt
      +                          [], va_list ap);D:\MPLAB\pic\sources\c99\common\doprnt.c: 671: {;D:\MPLAB\pic\sources\c9
      +                          9\common\doprnt.c: 672:     char c, *cp, ct[3];;D:\MPLAB\pic\sources\c99\common\doprnt.c
      +                          : 673:     int done, i;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 674:     long long ll;
      +                          ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;;D:\MPLAB\pic
      +                          \sources\c99\common\doprnt.c: 676:     long double f;;D:\MPLAB\pic\sources\c99\common\do
      +                          prnt.c: 677:     void *vp;
  3661                           
  3662                           ; BSR set to: 0
  3663                           ;incstack = 0
  3664  000C04  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3665  000C0A  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3666  000C10  006F FF7B FFF6     	movff	postinc2,tblptrl
  3667  000C16  006F FF77 FFF7     	movff	postdec2,tblptrh
  3668  000C1C                     	if	0	;tblptru may be non-zero
  3669  000C1C                     	endif
  3670  000C1C                     	if	0	;tblptru may be non-zero
  3671  000C1C                     	endif
  3672  000C1C  0008               	tblrd		*
  3673  000C1E  50F5               	movf	tablat,w,c
  3674  000C20  0A25               	xorlw	37
  3675  000C22  A4D8               	btfss	status,2,c
  3676  000C24  D31B               	goto	l7085
  3677                           
  3678                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 681:         ++*fmt;
  3679  000C26  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3680  000C2C  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3681  000C32  2ADE               	incf	postinc2,f,c
  3682  000C34  0E00               	movlw	0
  3683  000C36  22DD               	addwfc	postdec2,f,c
  3684                           
  3685                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 683:         flags = width = 0;
  3686  000C38  0E00               	movlw	0
  3687  000C3A  6E32               	movwf	_width+1,c
  3688  000C3C  0E00               	movlw	0
  3689  000C3E  6E31               	movwf	_width,c
  3690  000C40  0060  F0C4  F035   	movff	_width,_flags
  3691  000C46  0060  F0C8  F036   	movff	_width+1,_flags+1
  3692                           
  3693                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 684:         prec = -1;
  3694  000C4C  6833               	setf	_prec,c
  3695  000C4E  6834               	setf	_prec+1,c
  3696                           
  3697                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 723:         if ((*fmt)[0] == '*') {
  3698  000C50  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3699  000C56  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3700  000C5C  006F FF7B FFF6     	movff	postinc2,tblptrl
  3701  000C62  006F FF77 FFF7     	movff	postdec2,tblptrh
  3702  000C68                     	if	0	;tblptru may be non-zero
  3703  000C68                     	endif
  3704  000C68                     	if	0	;tblptru may be non-zero
  3705  000C68                     	endif
  3706  000C68  0008               	tblrd		*
  3707  000C6A  50F5               	movf	tablat,w,c
  3708  000C6C  0A2A               	xorlw	42
  3709  000C6E  A4D8               	btfss	status,2,c
  3710  000C70  D02D               	goto	l6991
  3711                           
  3712                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 724:             ++*fmt;
  3713  000C72  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3714  000C78  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3715  000C7E  2ADE               	incf	postinc2,f,c
  3716  000C80  0E00               	movlw	0
  3717  000C82  22DD               	addwfc	postdec2,f,c
  3718                           
  3719                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 725:             width = (*(int *)__va_arg(*(
      +                          int **)ap, (int)0));
  3720  000C84  0060  F317  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3721  000C8A  0060  F31B  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3722  000C90  006F FF7C  F0C7    	movff	indf2,??_vfpfcnvrt
  3723  000C96  0E02               	movlw	2
  3724  000C98  26DE               	addwf	postinc2,f,c
  3725  000C9A  006F FF7C  F0C8    	movff	indf2,??_vfpfcnvrt+1
  3726  000CA0  0E00               	movlw	0
  3727  000CA2  22DD               	addwfc	postdec2,f,c
  3728  000CA4  0060  F31F  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3729  000CAA  0060  F323  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3730  000CB0  006F FF78  F031    	movff	postinc2,_width
  3731  000CB6  006F FF74  F032    	movff	postdec2,_width+1
  3732                           
  3733                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 726:             if (width < 0) {
  3734  000CBC  AE32               	btfss	_width+1,7,c
  3735  000CBE  D04C               	goto	u8710
  3736                           
  3737                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 727:                 flags |= (1 << 0);
  3738  000CC0  8035               	bsf	_flags,0,c
  3739                           
  3740                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 728:                 width = -width;
  3741  000CC2  6C31               	negf	_width,c
  3742  000CC4  1E32               	comf	_width+1,f,c
  3743  000CC6  B0D8               	btfsc	status,0,c
  3744  000CC8  2A32               	incf	_width+1,f,c
  3745  000CCA  D046               	goto	u8710
  3746  000CCC                     l6991:
  3747                           
  3748                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 731:             width = atoi(*fmt);
  3749  000CCC  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3750  000CD2  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3751  000CD8  006F FF78  F023    	movff	postinc2,atoi@s
  3752  000CDE  006F FF74  F024    	movff	postdec2,atoi@s+1
  3753  000CE4  ECC4  F013         	call	_atoi	;wreg free
  3754  000CE8  0060  F08C  F031   	movff	?_atoi,_width
  3755  000CEE  0060  F090  F032   	movff	?_atoi+1,_width+1
  3756                           
  3757                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 732:             while ((0 ? isdigit((*fmt)[0
      +                          ]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3758  000CF4  D009               	goto	l6995
  3759  000CF6                     l6993:
  3760                           
  3761                           ; BSR set to: 0
  3762                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 733:                 ++*fmt;
  3763  000CF6  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3764  000CFC  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3765  000D02  2ADE               	incf	postinc2,f,c
  3766  000D04  0E00               	movlw	0
  3767  000D06  22DD               	addwfc	postdec2,f,c
  3768  000D08                     l6995:
  3769  000D08  0ED0               	movlw	208
  3770  000D0A  0100               	movlb	0	; () banked
  3771  000D0C  6FC7               	movwf	??_vfpfcnvrt& (0+255),b
  3772  000D0E  0EFF               	movlw	255
  3773  000D10  6FC8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3774  000D12  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3775  000D18  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3776  000D1E  006F FF7B FFF6     	movff	postinc2,tblptrl
  3777  000D24  006F FF77 FFF7     	movff	postdec2,tblptrh
  3778  000D2A                     	if	0	;tblptru may be non-zero
  3779  000D2A                     	endif
  3780  000D2A                     	if	0	;tblptru may be non-zero
  3781  000D2A                     	endif
  3782  000D2A  0008               	tblrd		*
  3783  000D2C  50F5               	movf	tablat,w,c
  3784  000D2E  6FC9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3785  000D30  6BCA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3786  000D32  51C7               	movf	??_vfpfcnvrt& (0+255),w,b
  3787  000D34  27C9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3788  000D36  51C8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3789  000D38  23CA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3790  000D3A  51CA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3791  000D3C  E106               	bnz	u8690
  3792  000D3E  0E0A               	movlw	10
  3793  000D40  5DC9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3794  000D42  B0D8               	btfsc	status,0,c
  3795  000D44  D002               	goto	u8690
  3796  000D46  0E01               	movlw	1
  3797  000D48  D001               	goto	u8700
  3798  000D4A                     u8690:
  3799  000D4A  0E00               	movlw	0
  3800  000D4C                     u8700:
  3801  000D4C  6FD3               	movwf	_vfpfcnvrt$1806& (0+255),b
  3802  000D4E  6BD4               	clrf	(_vfpfcnvrt$1806+1)& (0+255),b
  3803                           
  3804                           ; BSR set to: 0
  3805  000D50  51D3               	movf	_vfpfcnvrt$1806& (0+255),w,b
  3806  000D52  11D4               	iorwf	(_vfpfcnvrt$1806+1)& (0+255),w,b
  3807  000D54  A4D8               	btfss	status,2,c
  3808  000D56  D7CF               	goto	l6993
  3809  000D58                     u8710:
  3810                           
  3811                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 740:         if ((*fmt)[0] == '.') {
  3812  000D58  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3813  000D5E  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3814  000D64  006F FF7B FFF6     	movff	postinc2,tblptrl
  3815  000D6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  3816  000D70                     	if	0	;tblptru may be non-zero
  3817  000D70                     	endif
  3818  000D70                     	if	0	;tblptru may be non-zero
  3819  000D70                     	endif
  3820  000D70  0008               	tblrd		*
  3821  000D72  50F5               	movf	tablat,w,c
  3822  000D74  0A2E               	xorlw	46
  3823  000D76  A4D8               	btfss	status,2,c
  3824  000D78  D08A               	goto	u8760
  3825                           
  3826                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 741:             prec = 0;
  3827  000D7A  0E00               	movlw	0
  3828  000D7C  6E34               	movwf	_prec+1,c
  3829  000D7E  0E00               	movlw	0
  3830  000D80  6E33               	movwf	_prec,c
  3831                           
  3832                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 742:             ++*fmt;
  3833  000D82  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3834  000D88  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3835  000D8E  2ADE               	incf	postinc2,f,c
  3836  000D90  0E00               	movlw	0
  3837  000D92  22DD               	addwfc	postdec2,f,c
  3838                           
  3839                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 743:             if ((*fmt)[0] == '*') {
  3840  000D94  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3841  000D9A  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3842  000DA0  006F FF7B FFF6     	movff	postinc2,tblptrl
  3843  000DA6  006F FF77 FFF7     	movff	postdec2,tblptrh
  3844  000DAC                     	if	0	;tblptru may be non-zero
  3845  000DAC                     	endif
  3846  000DAC                     	if	0	;tblptru may be non-zero
  3847  000DAC                     	endif
  3848  000DAC  0008               	tblrd		*
  3849  000DAE  50F5               	movf	tablat,w,c
  3850  000DB0  0A2A               	xorlw	42
  3851  000DB2  A4D8               	btfss	status,2,c
  3852  000DB4  D026               	goto	l7011
  3853                           
  3854                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 744:                 ++*fmt;
  3855  000DB6  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3856  000DBC  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3857  000DC2  2ADE               	incf	postinc2,f,c
  3858  000DC4  0E00               	movlw	0
  3859  000DC6  22DD               	addwfc	postdec2,f,c
  3860                           
  3861                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 745:                 prec = (*(int *)__va_arg
      +                          (*(int **)ap, (int)0));
  3862  000DC8  0060  F317  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3863  000DCE  0060  F31B  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3864  000DD4  006F FF7C  F0C7    	movff	indf2,??_vfpfcnvrt
  3865  000DDA  0E02               	movlw	2
  3866  000DDC  26DE               	addwf	postinc2,f,c
  3867  000DDE  006F FF7C  F0C8    	movff	indf2,??_vfpfcnvrt+1
  3868  000DE4  0E00               	movlw	0
  3869  000DE6  22DD               	addwfc	postdec2,f,c
  3870  000DE8  0060  F31F  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3871  000DEE  0060  F323  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3872  000DF4  006F FF78  F033    	movff	postinc2,_prec
  3873  000DFA  006F FF74  F034    	movff	postdec2,_prec+1
  3874                           
  3875                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 746:             } else {
  3876  000E00  D046               	goto	u8760
  3877  000E02                     l7011:
  3878                           
  3879                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 747:                 prec = atoi(*fmt);
  3880  000E02  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3881  000E08  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3882  000E0E  006F FF78  F023    	movff	postinc2,atoi@s
  3883  000E14  006F FF74  F024    	movff	postdec2,atoi@s+1
  3884  000E1A  ECC4  F013         	call	_atoi	;wreg free
  3885  000E1E  0060  F08C  F033   	movff	?_atoi,_prec
  3886  000E24  0060  F090  F034   	movff	?_atoi+1,_prec+1
  3887                           
  3888                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 748:                 while ((0 ? isdigit((*fm
      +                          t)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3889  000E2A  D009               	goto	l7015
  3890  000E2C                     l7013:
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 749:                     ++*fmt;
  3894  000E2C  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3895  000E32  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3896  000E38  2ADE               	incf	postinc2,f,c
  3897  000E3A  0E00               	movlw	0
  3898  000E3C  22DD               	addwfc	postdec2,f,c
  3899  000E3E                     l7015:
  3900  000E3E  0ED0               	movlw	208
  3901  000E40  0100               	movlb	0	; () banked
  3902  000E42  6FC7               	movwf	??_vfpfcnvrt& (0+255),b
  3903  000E44  0EFF               	movlw	255
  3904  000E46  6FC8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3905  000E48  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3906  000E4E  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3907  000E54  006F FF7B FFF6     	movff	postinc2,tblptrl
  3908  000E5A  006F FF77 FFF7     	movff	postdec2,tblptrh
  3909  000E60                     	if	0	;tblptru may be non-zero
  3910  000E60                     	endif
  3911  000E60                     	if	0	;tblptru may be non-zero
  3912  000E60                     	endif
  3913  000E60  0008               	tblrd		*
  3914  000E62  50F5               	movf	tablat,w,c
  3915  000E64  6FC9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3916  000E66  6BCA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3917  000E68  51C7               	movf	??_vfpfcnvrt& (0+255),w,b
  3918  000E6A  27C9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3919  000E6C  51C8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3920  000E6E  23CA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3921  000E70  51CA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3922  000E72  E106               	bnz	u8740
  3923  000E74  0E0A               	movlw	10
  3924  000E76  5DC9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3925  000E78  B0D8               	btfsc	status,0,c
  3926  000E7A  D002               	goto	u8740
  3927  000E7C  0E01               	movlw	1
  3928  000E7E  D001               	goto	u8750
  3929  000E80                     u8740:
  3930  000E80  0E00               	movlw	0
  3931  000E82                     u8750:
  3932  000E82  6FD5               	movwf	_vfpfcnvrt$1807& (0+255),b
  3933  000E84  6BD6               	clrf	(_vfpfcnvrt$1807+1)& (0+255),b
  3934                           
  3935                           ; BSR set to: 0
  3936  000E86  51D5               	movf	_vfpfcnvrt$1807& (0+255),w,b
  3937  000E88  11D6               	iorwf	(_vfpfcnvrt$1807+1)& (0+255),w,b
  3938  000E8A  A4D8               	btfss	status,2,c
  3939  000E8C  D7CF               	goto	l7013
  3940  000E8E                     u8760:
  3941                           
  3942                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 757:         ct[0] = tolower((int)(*fmt)[0]);
  3943  000E8E  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3944  000E94  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3945  000E9A  006F FF7B FFF6     	movff	postinc2,tblptrl
  3946  000EA0  006F FF77 FFF7     	movff	postdec2,tblptrh
  3947  000EA6                     	if	0	;tblptru may be non-zero
  3948  000EA6                     	endif
  3949  000EA6                     	if	0	;tblptru may be non-zero
  3950  000EA6                     	endif
  3951  000EA6  0008               	tblrd		*
  3952  000EA8  50F5               	movf	tablat,w,c
  3953  000EAA  6E22               	movwf	tolower@c,c
  3954  000EAC  6A23               	clrf	tolower@c+1,c
  3955  000EAE  EC15  F01D         	call	_tolower	;wreg free
  3956  000EB2  5022               	movf	?_tolower,w,c
  3957  000EB4  0100               	movlb	0	; () banked
  3958  000EB6  6FDD               	movwf	vfpfcnvrt@ct& (0+255),b
  3959                           
  3960                           ; BSR set to: 0
  3961                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 758:         if (ct[0]) {
  3962  000EB8  51DD               	movf	vfpfcnvrt@ct& (0+255),w,b
  3963  000EBA  B4D8               	btfsc	status,2,c
  3964  000EBC  D041               	goto	l7031
  3965                           
  3966                           ; BSR set to: 0
  3967                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 759:             ct[1] = tolower((int)(*fmt)[
      +                          1]);
  3968  000EBE  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3969  000EC4  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3970  000ECA  006F FF78  F0C7    	movff	postinc2,??_vfpfcnvrt
  3971  000ED0  006F FF74  F0C8    	movff	postdec2,??_vfpfcnvrt+1
  3972  000ED6  0E01               	movlw	1
  3973  000ED8  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  3974  000EDA  0E00               	movlw	0
  3975  000EDC  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3976  000EDE  0060  F31F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3977  000EE4  0060  F323  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3978  000EEA                     	if	0	;tblptru may be non-zero
  3979  000EEA                     	endif
  3980  000EEA                     	if	0	;tblptru may be non-zero
  3981  000EEA                     	endif
  3982  000EEA  0008               	tblrd		*
  3983  000EEC  50F5               	movf	tablat,w,c
  3984  000EEE  6E22               	movwf	tolower@c,c
  3985  000EF0  6A23               	clrf	tolower@c+1,c
  3986  000EF2  EC15  F01D         	call	_tolower	;wreg free
  3987  000EF6  5022               	movf	?_tolower,w,c
  3988  000EF8  0100               	movlb	0	; () banked
  3989  000EFA  6FDE               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3990                           
  3991                           ; BSR set to: 0
  3992                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 760:             if (ct[1]) {
  3993  000EFC  51DE               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3994  000EFE  B4D8               	btfsc	status,2,c
  3995  000F00  D01F               	goto	l7031
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 761:                 ct[2] = tolower((int)(*f
      +                          mt)[2]);
  3999  000F02  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4000  000F08  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4001  000F0E  006F FF78  F0C7    	movff	postinc2,??_vfpfcnvrt
  4002  000F14  006F FF74  F0C8    	movff	postdec2,??_vfpfcnvrt+1
  4003  000F1A  0E02               	movlw	2
  4004  000F1C  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  4005  000F1E  0E00               	movlw	0
  4006  000F20  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4007  000F22  0060  F31F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  4008  000F28  0060  F323  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  4009  000F2E                     	if	0	;tblptru may be non-zero
  4010  000F2E                     	endif
  4011  000F2E                     	if	0	;tblptru may be non-zero
  4012  000F2E                     	endif
  4013  000F2E  0008               	tblrd		*
  4014  000F30  50F5               	movf	tablat,w,c
  4015  000F32  6E22               	movwf	tolower@c,c
  4016  000F34  6A23               	clrf	tolower@c+1,c
  4017  000F36  EC15  F01D         	call	_tolower	;wreg free
  4018  000F3A  5022               	movf	?_tolower,w,c
  4019  000F3C  0100               	movlb	0	; () banked
  4020  000F3E  6FDF               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4021  000F40                     l7031:
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 825:         if ((*fmt[0] == 'd') || (*fmt[0]
      +                           == 'i')) {
  4025  000F40  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4026  000F46  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4027  000F4C  006F FF7B FFF6     	movff	postinc2,tblptrl
  4028  000F52  006F FF77 FFF7     	movff	postdec2,tblptrh
  4029  000F58                     	if	0	;tblptru may be non-zero
  4030  000F58                     	endif
  4031  000F58                     	if	0	;tblptru may be non-zero
  4032  000F58                     	endif
  4033  000F58  0008               	tblrd		*
  4034  000F5A  50F5               	movf	tablat,w,c
  4035  000F5C  0A64               	xorlw	100
  4036  000F5E  B4D8               	btfsc	status,2,c
  4037  000F60  D011               	goto	u8800
  4038                           
  4039                           ; BSR set to: 0
  4040  000F62  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4041  000F68  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4042  000F6E  006F FF7B FFF6     	movff	postinc2,tblptrl
  4043  000F74  006F FF77 FFF7     	movff	postdec2,tblptrh
  4044  000F7A                     	if	0	;tblptru may be non-zero
  4045  000F7A                     	endif
  4046  000F7A                     	if	0	;tblptru may be non-zero
  4047  000F7A                     	endif
  4048  000F7A  0008               	tblrd		*
  4049  000F7C  50F5               	movf	tablat,w,c
  4050  000F7E  0A69               	xorlw	105
  4051  000F80  A4D8               	btfss	status,2,c
  4052  000F82  D055               	goto	l7041
  4053  000F84                     u8800:
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 827:             ++*fmt;
  4057  000F84  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4058  000F8A  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4059  000F90  2ADE               	incf	postinc2,f,c
  4060  000F92  0E00               	movlw	0
  4061  000F94  22DD               	addwfc	postdec2,f,c
  4062                           
  4063                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 828:             ll = (long long)(*(int *)__v
      +                          a_arg(*(int **)ap, (int)0));
  4064  000F96  0060  F317  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  4065  000F9C  0060  F31B  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  4066  000FA2  006F FF7C  F0C7    	movff	indf2,??_vfpfcnvrt
  4067  000FA8  0E02               	movlw	2
  4068  000FAA  26DE               	addwf	postinc2,f,c
  4069  000FAC  006F FF7C  F0C8    	movff	indf2,??_vfpfcnvrt+1
  4070  000FB2  0E00               	movlw	0
  4071  000FB4  22DD               	addwfc	postdec2,f,c
  4072  000FB6  0060  F31F  FFD9   	movff	??_vfpfcnvrt,fsr2l
  4073  000FBC  0060  F323  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  4074  000FC2  006F FF78  F0CB    	movff	postinc2,vfpfcnvrt@ll
  4075  000FC8  006F FF74  F0CC    	movff	postdec2,vfpfcnvrt@ll+1
  4076  000FCE  0E00               	movlw	0
  4077  000FD0  BFCC               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4078  000FD2  0EFF               	movlw	-1
  4079  000FD4  6FCD               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4080  000FD6  6FCE               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4081  000FD8  6FCF               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4082  000FDA  6FD0               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4083  000FDC  6FD1               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4084  000FDE  6FD2               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4085                           
  4086                           ; BSR set to: 0
  4087                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 830:             return dtoa(fp, ll);
  4088  000FE0  0060  F304  F06A   	movff	vfpfcnvrt@fp,dtoa@fp
  4089  000FE6  0060  F308  F06B   	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4090  000FEC  0060  F32C  F06C   	movff	vfpfcnvrt@ll,dtoa@d
  4091  000FF2  0060  F330  F06D   	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4092  000FF8  0060  F334  F06E   	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4093  000FFE  0060  F338  F06F   	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4094  001004  0060  F33C  F070   	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4095  00100A  0060  F340  F071   	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4096  001010  0060  F344  F072   	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4097  001016  0060  F348  F073   	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4098  00101C  EC16  F010         	call	_dtoa	;wreg free
  4099  001020  0060  F1A8  F0C1   	movff	?_dtoa,?_vfpfcnvrt
  4100  001026  0060  F1AC  F0C2   	movff	?_dtoa+1,?_vfpfcnvrt+1
  4101  00102C  0012               	return	
  4102  00102E                     l7041:
  4103                           
  4104                           ; BSR set to: 0
  4105                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 920:         if (ct[0] == 'f') {
  4106  00102E  0E66               	movlw	102
  4107  001030  19DD               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  4108  001032  A4D8               	btfss	status,2,c
  4109  001034  D059               	goto	l7053
  4110                           
  4111                           ; BSR set to: 0
  4112                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 922:             c = (*fmt)[0];
  4113  001036  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4114  00103C  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4115  001042  006F FF7B FFF6     	movff	postinc2,tblptrl
  4116  001048  006F FF77 FFF7     	movff	postdec2,tblptrh
  4117  00104E                     	if	0	;tblptru may be non-zero
  4118  00104E                     	endif
  4119  00104E                     	if	0	;tblptru may be non-zero
  4120  00104E                     	endif
  4121  00104E  0008               	tblrd		*
  4122  001050  006F FFD4  F0E0    	movff	tablat,vfpfcnvrt@c
  4123                           
  4124                           ; BSR set to: 0
  4125                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 923:             ++*fmt;
  4126  001056  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4127  00105C  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4128  001062  2ADE               	incf	postinc2,f,c
  4129  001064  0E00               	movlw	0
  4130  001066  22DD               	addwfc	postdec2,f,c
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 924:             f = (long double)(*(double *
      +                          )__va_arg(*(double **)ap, (double)0));
  4134  001068  0060  F317  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  4135  00106E  0060  F31B  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  4136  001074  006F FF7C  F0C7    	movff	indf2,??_vfpfcnvrt
  4137  00107A  0E04               	movlw	4
  4138  00107C  26DE               	addwf	postinc2,f,c
  4139  00107E  006F FF7C  F0C8    	movff	indf2,??_vfpfcnvrt+1
  4140  001084  0E00               	movlw	0
  4141  001086  22DD               	addwfc	postdec2,f,c
  4142  001088  0060  F31F  FFD9   	movff	??_vfpfcnvrt,fsr2l
  4143  00108E  0060  F323  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  4144  001094  006F FF78  F0D9    	movff	postinc2,vfpfcnvrt@f
  4145  00109A  006F FF78  F0DA    	movff	postinc2,vfpfcnvrt@f+1
  4146  0010A0  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@f+2
  4147  0010A6  006F FF78  F0DC    	movff	postinc2,vfpfcnvrt@f+3
  4148  0010AC                     l7049:
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 926:             return efgtoa(fp, f, c);
  4152  0010AC  0060  F304  F07D   	movff	vfpfcnvrt@fp,efgtoa@fp
  4153  0010B2  0060  F308  F07E   	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4154  0010B8  0060  F364  F07F   	movff	vfpfcnvrt@f,efgtoa@f
  4155  0010BE  0060  F368  F080   	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4156  0010C4  0060  F36C  F081   	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4157  0010CA  0060  F370  F082   	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4158  0010D0  0060  F380  F083   	movff	vfpfcnvrt@c,efgtoa@c
  4159  0010D6  EC56  F000         	call	_efgtoa	;wreg free
  4160  0010DA  0060  F1F4  F0C1   	movff	?_efgtoa,?_vfpfcnvrt
  4161  0010E0  0060  F1F8  F0C2   	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4162  0010E6  0012               	return	
  4163  0010E8                     l7053:
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 928:         if (!strncmp(ct, "lf", ((sizeof(
      +                          "lf")/sizeof("lf"[0]))-1))) {
  4167  0010E8  0EDD               	movlw	low vfpfcnvrt@ct
  4168  0010EA  6E1C               	movwf	strncmp@_l,c
  4169  0010EC  0E00               	movlw	high vfpfcnvrt@ct
  4170  0010EE  6E1D               	movwf	strncmp@_l+1,c
  4171  0010F0  0EFB               	movlw	low STR_42
  4172  0010F2  6E1E               	movwf	strncmp@_r,c
  4173  0010F4  0E7F               	movlw	high STR_42
  4174  0010F6  6E1F               	movwf	strncmp@_r+1,c
  4175  0010F8  0E00               	movlw	0
  4176  0010FA  6E21               	movwf	strncmp@n+1,c
  4177  0010FC  0E02               	movlw	2
  4178  0010FE  6E20               	movwf	strncmp@n,c
  4179  001100  EC88  F018         	call	_strncmp	;wreg free
  4180  001104  501C               	movf	?_strncmp,w,c
  4181  001106  101D               	iorwf	?_strncmp+1,w,c
  4182  001108  A4D8               	btfss	status,2,c
  4183  00110A  D06D               	goto	l7069
  4184                           
  4185                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 931:             if ((0 ? isupper((int)(*fmt)
      +                          [0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  4186  00110C  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4187  001112  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4188  001118  006F FF78  F0C7    	movff	postinc2,??_vfpfcnvrt
  4189  00111E  006F FF74  F0C8    	movff	postdec2,??_vfpfcnvrt+1
  4190  001124  0E01               	movlw	1
  4191  001126  0100               	movlb	0	; () banked
  4192  001128  27C7               	addwf	??_vfpfcnvrt& (0+255),f,b
  4193  00112A  0E00               	movlw	0
  4194  00112C  23C8               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  4195  00112E  0060  F31F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  4196  001134  0060  F323  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  4197  00113A                     	if	0	;tblptru may be non-zero
  4198  00113A                     	endif
  4199  00113A                     	if	0	;tblptru may be non-zero
  4200  00113A                     	endif
  4201  00113A  0008               	tblrd		*
  4202  00113C  006F FFD4  F0E0    	movff	tablat,vfpfcnvrt@c
  4203  001142  0EBF               	movlw	191
  4204  001144  6FC7               	movwf	??_vfpfcnvrt& (0+255),b
  4205  001146  0EFF               	movlw	255
  4206  001148  6FC8               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4207  00114A  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4208  001150  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4209  001156  006F FF7B FFF6     	movff	postinc2,tblptrl
  4210  00115C  006F FF77 FFF7     	movff	postdec2,tblptrh
  4211  001162                     	if	0	;tblptru may be non-zero
  4212  001162                     	endif
  4213  001162                     	if	0	;tblptru may be non-zero
  4214  001162                     	endif
  4215  001162  0008               	tblrd		*
  4216  001164  50F5               	movf	tablat,w,c
  4217  001166  6FC9               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4218  001168  6BCA               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4219  00116A  51C7               	movf	??_vfpfcnvrt& (0+255),w,b
  4220  00116C  27C9               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4221  00116E  51C8               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4222  001170  23CA               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4223  001172  51CA               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4224  001174  E106               	bnz	u8830
  4225  001176  0E1A               	movlw	26
  4226  001178  5DC9               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4227  00117A  B0D8               	btfsc	status,0,c
  4228  00117C  D002               	goto	u8830
  4229  00117E  0E01               	movlw	1
  4230  001180  D001               	goto	u8840
  4231  001182                     u8830:
  4232  001182  0E00               	movlw	0
  4233  001184                     u8840:
  4234  001184  6FD7               	movwf	_vfpfcnvrt$1812& (0+255),b
  4235  001186  6BD8               	clrf	(_vfpfcnvrt$1812+1)& (0+255),b
  4236                           
  4237                           ; BSR set to: 0
  4238  001188  51D7               	movf	_vfpfcnvrt$1812& (0+255),w,b
  4239  00118A  11D8               	iorwf	(_vfpfcnvrt$1812+1)& (0+255),w,b
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 934:                 f = (long double)(*(doub
      +                          le *)__va_arg(*(double **)ap, (double)0));
  4243                           
  4244                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 933:             } else {
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 932:                 f = (*(long double *)__v
      +                          a_arg(*(long double **)ap, (long double)0));
  4248  00118C  0060  F317  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  4249  001192  0060  F31B  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  4250  001198  006F FF7C  F0C7    	movff	indf2,??_vfpfcnvrt
  4251  00119E  0E04               	movlw	4
  4252  0011A0  26DE               	addwf	postinc2,f,c
  4253  0011A2  006F FF7C  F0C8    	movff	indf2,??_vfpfcnvrt+1
  4254  0011A8  0E00               	movlw	0
  4255  0011AA  22DD               	addwfc	postdec2,f,c
  4256  0011AC  0060  F31F  FFD9   	movff	??_vfpfcnvrt,fsr2l
  4257  0011B2  0060  F323  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  4258  0011B8  006F FF78  F0D9    	movff	postinc2,vfpfcnvrt@f
  4259  0011BE  006F FF78  F0DA    	movff	postinc2,vfpfcnvrt@f+1
  4260  0011C4  006F FF78  F0DB    	movff	postinc2,vfpfcnvrt@f+2
  4261  0011CA  006F FF78  F0DC    	movff	postinc2,vfpfcnvrt@f+3
  4262                           
  4263                           ; BSR set to: 0
  4264                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 936:             *fmt += ((sizeof("lf")/sizeo
      +                          f("lf"[0]))-1);
  4265                           
  4266                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 935:             }
  4267  0011D0  0E02               	movlw	2
  4268  0011D2  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4269  0011D8  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4270  0011DE  26DE               	addwf	postinc2,f,c
  4271  0011E0  0E00               	movlw	0
  4272  0011E2  22DD               	addwfc	postdec2,f,c
  4273  0011E4  D763               	goto	l7049
  4274  0011E6                     l7069:
  4275                           
  4276                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1350:         if ((*fmt)[0] == '%') {
  4277  0011E6  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4278  0011EC  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4279  0011F2  006F FF7B FFF6     	movff	postinc2,tblptrl
  4280  0011F8  006F FF77 FFF7     	movff	postdec2,tblptrh
  4281  0011FE                     	if	0	;tblptru may be non-zero
  4282  0011FE                     	endif
  4283  0011FE                     	if	0	;tblptru may be non-zero
  4284  0011FE                     	endif
  4285  0011FE  0008               	tblrd		*
  4286  001200  50F5               	movf	tablat,w,c
  4287  001202  0A25               	xorlw	37
  4288  001204  A4D8               	btfss	status,2,c
  4289  001206  D01B               	goto	l7079
  4290                           
  4291                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1351:             ++*fmt;
  4292  001208  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4293  00120E  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4294  001214  2ADE               	incf	postinc2,f,c
  4295  001216  0E00               	movlw	0
  4296  001218  22DD               	addwfc	postdec2,f,c
  4297                           
  4298                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1352:             fputc((int)'%', fp);
  4299  00121A  0E00               	movlw	0
  4300  00121C  6E1D               	movwf	fputc@c+1,c
  4301  00121E  0E25               	movlw	37
  4302  001220  6E1C               	movwf	fputc@c,c
  4303  001222  0060  F304  F01E   	movff	vfpfcnvrt@fp,fputc@fp
  4304  001228  0060  F308  F01F   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4305  00122E  EC45  F019         	call	_fputc	;wreg free
  4306  001232                     l7075:
  4307                           
  4308                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1353:             return 1;
  4309  001232  0E00               	movlw	0
  4310  001234  0100               	movlb	0	; () banked
  4311  001236  6FC2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4312  001238  0E01               	movlw	1
  4313  00123A  6FC1               	movwf	?_vfpfcnvrt& (0+255),b
  4314  00123C  0012               	return	
  4315  00123E                     l7079:
  4316                           
  4317                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1357:         ++*fmt;
  4318  00123E  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4319  001244  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4320  00124A  2ADE               	incf	postinc2,f,c
  4321  00124C  0E00               	movlw	0
  4322  00124E  22DD               	addwfc	postdec2,f,c
  4323                           
  4324                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1358:         return 0;
  4325  001250  0E00               	movlw	0
  4326  001252  0100               	movlb	0	; () banked
  4327  001254  6FC2               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  4328  001256  0E00               	movlw	0
  4329  001258  6FC1               	movwf	?_vfpfcnvrt& (0+255),b
  4330  00125A  0012               	return	
  4331  00125C                     l7085:
  4332                           
  4333                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1362:     fputc((int)(*fmt)[0], fp);
  4334  00125C  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4335  001262  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4336  001268  006F FF7B FFF6     	movff	postinc2,tblptrl
  4337  00126E  006F FF77 FFF7     	movff	postdec2,tblptrh
  4338  001274                     	if	0	;tblptru may be non-zero
  4339  001274                     	endif
  4340  001274                     	if	0	;tblptru may be non-zero
  4341  001274                     	endif
  4342  001274  0008               	tblrd		*
  4343  001276  50F5               	movf	tablat,w,c
  4344  001278  6E1C               	movwf	fputc@c,c
  4345  00127A  6A1D               	clrf	fputc@c+1,c
  4346  00127C  0060  F304  F01E   	movff	vfpfcnvrt@fp,fputc@fp
  4347  001282  0060  F308  F01F   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4348  001288  EC45  F019         	call	_fputc	;wreg free
  4349                           
  4350                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  4351  00128C  0060  F30F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  4352  001292  0060  F313  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  4353  001298  2ADE               	incf	postinc2,f,c
  4354  00129A  0E00               	movlw	0
  4355  00129C  22DD               	addwfc	postdec2,f,c
  4356  00129E  D7C9               	goto	l7075
  4357  0012A0                     __end_of_vfpfcnvrt:
  4358                           	opt callstack 0
  4359                           
  4360 ;; *************** function _strncmp *****************
  4361 ;; Defined at:
  4362 ;;		line 3 in file "D:\MPLAB\pic\sources\c99\common\strncmp.c"
  4363 ;; Parameters:    Size  Location     Type
  4364 ;;  _l              2   27[COMRAM] PTR const unsigned char 
  4365 ;;		 -> vfpfcnvrt@ct(3), 
  4366 ;;  _r              2   29[COMRAM] PTR const unsigned char 
  4367 ;;		 -> STR_44(3), 
  4368 ;;  n               2   31[COMRAM] unsigned int 
  4369 ;; Auto vars:     Size  Location     Type
  4370 ;;  r               2   36[COMRAM] PTR const unsigned char 
  4371 ;;		 -> STR_44(3), 
  4372 ;;  l               2   34[COMRAM] PTR const unsigned char 
  4373 ;;		 -> vfpfcnvrt@ct(3), 
  4374 ;; Return value:  Size  Location     Type
  4375 ;;                  2   27[COMRAM] int 
  4376 ;; Registers used:
  4377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4378 ;; Tracked objects:
  4379 ;;		On entry : 0/0
  4380 ;;		On exit  : 0/0
  4381 ;;		Unchanged: 0/0
  4382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4383 ;;      Params:         6       0       0       0       0       0       0       0       0
  4384 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4385 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4386 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4387 ;;Total ram usage:       11 bytes
  4388 ;; Hardware stack levels used:    1
  4389 ;; Hardware stack levels required when called:    3
  4390 ;; This function calls:
  4391 ;;		Nothing
  4392 ;; This function is called by:
  4393 ;;		_vfpfcnvrt
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text4
  4398  003110                     __ptext4:
  4399                           	opt callstack 0
  4400  003110                     _strncmp:
  4401                           	opt callstack 24
  4402                           
  4403                           ;incstack = 0
  4404  003110  0060  F070  F023   	movff	strncmp@_l,strncmp@l
  4405  003116  0060  F074  F024   	movff	strncmp@_l+1,strncmp@l+1
  4406  00311C  0060  F078  F025   	movff	strncmp@_r,strncmp@r
  4407  003122  0060  F07C  F026   	movff	strncmp@_r+1,strncmp@r+1
  4408  003128  0620               	decf	strncmp@n,f,c
  4409  00312A  A0D8               	btfss	status,0,c
  4410  00312C  0621               	decf	strncmp@n+1,f,c
  4411  00312E  2820               	incf	strncmp@n,w,c
  4412  003130  E10F               	bnz	l6963
  4413  003132  2821               	incf	strncmp@n+1,w,c
  4414  003134  A4D8               	btfss	status,2,c
  4415  003136  D00C               	goto	l6963
  4416  003138  0E00               	movlw	0
  4417  00313A  6E1D               	movwf	?_strncmp+1,c
  4418  00313C  0E00               	movlw	0
  4419  00313E  6E1C               	movwf	?_strncmp,c
  4420  003140  0012               	return	
  4421  003142                     l6961:
  4422  003142  4A23               	infsnz	strncmp@l,f,c
  4423  003144  2A24               	incf	strncmp@l+1,f,c
  4424  003146  4A25               	infsnz	strncmp@r,f,c
  4425  003148  2A26               	incf	strncmp@r+1,f,c
  4426  00314A  0620               	decf	strncmp@n,f,c
  4427  00314C  A0D8               	btfss	status,0,c
  4428  00314E  0621               	decf	strncmp@n+1,f,c
  4429  003150                     l6963:
  4430  003150  0060  F08F  FFD9   	movff	strncmp@l,fsr2l
  4431  003156  0060  F093  FFDA   	movff	strncmp@l+1,fsr2h
  4432  00315C  50DF               	movf	indf2,w,c
  4433  00315E  B4D8               	btfsc	status,2,c
  4434  003160  D022               	goto	u8650
  4435  003162  0060  F097  FFF6   	movff	strncmp@r,tblptrl
  4436  003168  0060  F09B  FFF7   	movff	strncmp@r+1,tblptrh
  4437  00316E                     	if	0	;tblptru may be non-zero
  4438  00316E                     	endif
  4439  00316E                     	if	0	;tblptru may be non-zero
  4440  00316E                     	endif
  4441  00316E  0008               	tblrd		*
  4442  003170  50F5               	movf	tablat,w,c
  4443  003172  0900               	iorlw	0
  4444  003174  B4D8               	btfsc	status,2,c
  4445  003176  D017               	goto	u8650
  4446  003178  5020               	movf	strncmp@n,w,c
  4447  00317A  1021               	iorwf	strncmp@n+1,w,c
  4448  00317C  B4D8               	btfsc	status,2,c
  4449  00317E  D013               	goto	u8650
  4450  003180  0060  F08F  FFD9   	movff	strncmp@l,fsr2l
  4451  003186  0060  F093  FFDA   	movff	strncmp@l+1,fsr2h
  4452  00318C  50DF               	movf	indf2,w,c
  4453  00318E  6E22               	movwf	??_strncmp& (0+255),c
  4454  003190  0060  F097  FFF6   	movff	strncmp@r,tblptrl
  4455  003196  0060  F09B  FFF7   	movff	strncmp@r+1,tblptrh
  4456  00319C                     	if	0	;tblptru may be non-zero
  4457  00319C                     	endif
  4458  00319C                     	if	0	;tblptru may be non-zero
  4459  00319C                     	endif
  4460  00319C  0008               	tblrd		*
  4461  00319E  50F5               	movf	tablat,w,c
  4462  0031A0  1822               	xorwf	??_strncmp,w,c
  4463  0031A2  B4D8               	btfsc	status,2,c
  4464  0031A4  D7CE               	goto	l6961
  4465  0031A6                     u8650:
  4466  0031A6  0060  F08F  FFD9   	movff	strncmp@l,fsr2l
  4467  0031AC  0060  F093  FFDA   	movff	strncmp@l+1,fsr2h
  4468  0031B2  50DF               	movf	indf2,w,c
  4469  0031B4  6E22               	movwf	??_strncmp& (0+255),c
  4470  0031B6  0060  F097  FFF6   	movff	strncmp@r,tblptrl
  4471  0031BC  0060  F09B  FFF7   	movff	strncmp@r+1,tblptrh
  4472  0031C2                     	if	0	;tblptru may be non-zero
  4473  0031C2                     	endif
  4474  0031C2                     	if	0	;tblptru may be non-zero
  4475  0031C2                     	endif
  4476  0031C2  0008               	tblrd		*
  4477  0031C4  50F5               	movf	tablat,w,c
  4478  0031C6  5C22               	subwf	??_strncmp,w,c
  4479  0031C8  6E1C               	movwf	?_strncmp,c
  4480  0031CA  6A1D               	clrf	?_strncmp+1,c
  4481  0031CC  A0D8               	btfss	status,0,c
  4482  0031CE  061D               	decf	?_strncmp+1,f,c
  4483  0031D0  0012               	return		;funcret
  4484  0031D2                     __end_of_strncmp:
  4485                           	opt callstack 0
  4486                           
  4487 ;; *************** function _efgtoa *****************
  4488 ;; Defined at:
  4489 ;;		line 319 in file "D:\MPLAB\pic\sources\c99\common\doprnt.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;  fp              2   29[BANK0 ] PTR struct _IO_FILE
  4492 ;;		 -> sprintf@f(6), 
  4493 ;;  f               4   31[BANK0 ] PTR struct _IO_FILE
  4494 ;;  c               1   35[BANK0 ] unsigned char 
  4495 ;; Auto vars:     Size  Location     Type
  4496 ;;  u               4   93[BANK0 ] unsigned char 
  4497 ;;  g               4   85[BANK0 ] unsigned char 
  4498 ;;  l               4   79[BANK0 ] unsigned char 
  4499 ;;  h               4   75[BANK0 ] unsigned char 
  4500 ;;  ou              4   41[BANK0 ] unsigned char 
  4501 ;;  n               2   91[BANK0 ] int 
  4502 ;;  e               2   89[BANK0 ] int 
  4503 ;;  i               2   83[BANK0 ] int 
  4504 ;;  w               2   72[BANK0 ] int 
  4505 ;;  p               2   69[BANK0 ] int 
  4506 ;;  sign            2   67[BANK0 ] int 
  4507 ;;  d               2   65[BANK0 ] int 
  4508 ;;  ne              2   63[BANK0 ] int 
  4509 ;;  m               2   61[BANK0 ] int 
  4510 ;;  pp              2   59[BANK0 ] int 
  4511 ;;  t               2   57[BANK0 ] int 
  4512 ;;  mode            1   74[BANK0 ] unsigned char 
  4513 ;;  nmode           1   71[BANK0 ] unsigned char 
  4514 ;; Return value:  Size  Location     Type
  4515 ;;                  2   29[BANK0 ] int 
  4516 ;; Registers used:
  4517 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4518 ;; Tracked objects:
  4519 ;;		On entry : 0/0
  4520 ;;		On exit  : 0/0
  4521 ;;		Unchanged: 0/0
  4522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4523 ;;      Params:         0       7       0       0       0       0       0       0       0
  4524 ;;      Locals:         0      56       0       0       0       0       0       0       0
  4525 ;;      Temps:          0       5       0       0       0       0       0       0       0
  4526 ;;      Totals:         0      68       0       0       0       0       0       0       0
  4527 ;;Total ram usage:       68 bytes
  4528 ;; Hardware stack levels used:    1
  4529 ;; Hardware stack levels required when called:    7
  4530 ;; This function calls:
  4531 ;;		___awdiv
  4532 ;;		___awmod
  4533 ;;		___fladd
  4534 ;;		___fldiv
  4535 ;;		___fleq
  4536 ;;		___flge
  4537 ;;		___flmul
  4538 ;;		___flneg
  4539 ;;		___flsub
  4540 ;;		___fltol
  4541 ;;		___fpclassifyf
  4542 ;;		_floorf
  4543 ;;		_isupper
  4544 ;;		_pad
  4545 ;;		_strcpy
  4546 ;;		_tolower
  4547 ;; This function is called by:
  4548 ;;		_vfpfcnvrt
  4549 ;; This function uses a non-reentrant model
  4550 ;;
  4551                           
  4552                           	psect	text5
  4553  0000AC                     __ptext5:
  4554                           	opt callstack 0
  4555  0000AC                     _efgtoa:
  4556                           	opt callstack 20
  4557                           
  4558                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 319: static int efgtoa(FILE *fp, long double 
      +                          f, char c);D:\MPLAB\pic\sources\c99\common\doprnt.c: 320: {;D:\MPLAB\pic\sources\c99\com
      +                          mon\doprnt.c: 321:     char mode, nmode;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 322: 
      +                              int d, e, i, m, n, ne, p, pp, sign, t, w;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 
      +                          323:     long double g, h, l, ou, u;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 326:     
      +                          sign = 0;
  4559                           
  4560                           ;incstack = 0
  4561  0000AC  0E00               	movlw	0
  4562  0000AE  0100               	movlb	0	; () banked
  4563  0000B0  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  4564  0000B2  0E00               	movlw	0
  4565  0000B4  6FA3               	movwf	efgtoa@sign& (0+255),b
  4566                           
  4567                           ; BSR set to: 0
  4568                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 327:     g = f;
  4569  0000B6  0060  F1FC  F0B5   	movff	efgtoa@f,efgtoa@g
  4570  0000BC  0060  F200  F0B6   	movff	efgtoa@f+1,efgtoa@g+1
  4571  0000C2  0060  F204  F0B7   	movff	efgtoa@f+2,efgtoa@g+2
  4572  0000C8  0060  F208  F0B8   	movff	efgtoa@f+3,efgtoa@g+3
  4573                           
  4574                           ; BSR set to: 0
  4575                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 328:     if (g < 0.0) {
  4576  0000CE  AFB8               	btfss	(efgtoa@g+3)& (0+255),7,b
  4577  0000D0  D01E               	goto	l6623
  4578                           
  4579                           ; BSR set to: 0
  4580                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 329:         sign = 1;
  4581  0000D2  0E00               	movlw	0
  4582  0000D4  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  4583  0000D6  0E01               	movlw	1
  4584  0000D8  6FA3               	movwf	efgtoa@sign& (0+255),b
  4585                           
  4586                           ; BSR set to: 0
  4587                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 330:         g = -g;
  4588  0000DA  0060  F2D4  F01C   	movff	efgtoa@g,___flneg@f1
  4589  0000E0  0060  F2D8  F01D   	movff	efgtoa@g+1,___flneg@f1+1
  4590  0000E6  0060  F2DC  F01E   	movff	efgtoa@g+2,___flneg@f1+2
  4591  0000EC  0060  F2E0  F01F   	movff	efgtoa@g+3,___flneg@f1+3
  4592  0000F2  ECE1  F01D         	call	___flneg	;wreg free
  4593  0000F6  0060  F070  F0B5   	movff	?___flneg,efgtoa@g
  4594  0000FC  0060  F074  F0B6   	movff	?___flneg+1,efgtoa@g+1
  4595  000102  0060  F078  F0B7   	movff	?___flneg+2,efgtoa@g+2
  4596  000108  0060  F07C  F0B8   	movff	?___flneg+3,efgtoa@g+3
  4597  00010E                     l6623:
  4598                           
  4599                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  4600  00010E  0E00               	movlw	0
  4601  000110  0100               	movlb	0	; () banked
  4602  000112  6FBC               	movwf	(efgtoa@n+1)& (0+255),b
  4603  000114  0E00               	movlw	0
  4604  000116  6FBB               	movwf	efgtoa@n& (0+255),b
  4605                           
  4606                           ; BSR set to: 0
  4607                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 335:     w = width;
  4608  000118  0060  F0C4  F0A8   	movff	_width,efgtoa@w
  4609  00011E  0060  F0C8  F0A9   	movff	_width+1,efgtoa@w+1
  4610                           
  4611                           ; BSR set to: 0
  4612                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 336:     if (sign || (flags & (1 << 2))) {
  4613  000124  51A3               	movf	efgtoa@sign& (0+255),w,b
  4614  000126  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4615  000128  A4D8               	btfss	status,2,c
  4616  00012A  D002               	goto	u8040
  4617                           
  4618                           ; BSR set to: 0
  4619  00012C  A435               	btfss	_flags,2,c
  4620  00012E  D014               	goto	l6643
  4621  000130                     u8040:
  4622                           
  4623                           ; BSR set to: 0
  4624                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 337:         dbuf[n] = sign ? '-' : '+';
  4625  000130  51A3               	movf	efgtoa@sign& (0+255),w,b
  4626  000132  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4627  000134  A4D8               	btfss	status,2,c
  4628  000136  D004               	goto	l6635
  4629                           
  4630                           ; BSR set to: 0
  4631  000138  0E00               	movlw	0
  4632  00013A  6F8E               	movwf	(_efgtoa$1781+1)& (0+255),b
  4633  00013C  0E2B               	movlw	43
  4634  00013E  D003               	goto	L5
  4635  000140                     l6635:
  4636                           
  4637                           ; BSR set to: 0
  4638  000140  0E00               	movlw	0
  4639  000142  6F8E               	movwf	(_efgtoa$1781+1)& (0+255),b
  4640  000144  0E2D               	movlw	45
  4641  000146                     L5:
  4642  000146  6F8D               	movwf	_efgtoa$1781& (0+255),b
  4643                           
  4644                           ; BSR set to: 0
  4645  000148  0060  F234  F10B   	movff	_efgtoa$1781,_dbuf
  4646                           
  4647                           ; BSR set to: 0
  4648                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 338:         ++n;
  4649  00014E  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  4650  000150  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  4651                           
  4652                           ; BSR set to: 0
  4653                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 339:         --w;
  4654  000152  07A8               	decf	efgtoa@w& (0+255),f,b
  4655  000154  A0D8               	btfss	status,0,c
  4656  000156  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  4657  000158                     l6643:
  4658                           
  4659                           ; BSR set to: 0
  4660                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 344:         if ((0 ? isupper((int)c) : ((uns
      +                          igned)((int)c)-'A') < 26)) {
  4661  000158  0060  F2D4  F01C   	movff	efgtoa@g,___fpclassifyf@x
  4662  00015E  0060  F2D8  F01D   	movff	efgtoa@g+1,___fpclassifyf@x+1
  4663  000164  0060  F2DC  F01E   	movff	efgtoa@g+2,___fpclassifyf@x+2
  4664  00016A  0060  F2E0  F01F   	movff	efgtoa@g+3,___fpclassifyf@x+3
  4665  000170  EC75  F016         	call	___fpclassifyf	;wreg free
  4666  000174  041C               	decf	?___fpclassifyf,w,c
  4667  000176  101D               	iorwf	?___fpclassifyf+1,w,c
  4668  000178  A4D8               	btfss	status,2,c
  4669  00017A  D053               	goto	l6661
  4670  00017C  0EBF               	movlw	191
  4671  00017E  0100               	movlb	0	; () banked
  4672  000180  6F84               	movwf	??_efgtoa& (0+255),b
  4673  000182  0EFF               	movlw	255
  4674  000184  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  4675  000186  5183               	movf	efgtoa@c& (0+255),w,b
  4676  000188  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  4677  00018A  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  4678  00018C  5184               	movf	??_efgtoa& (0+255),w,b
  4679  00018E  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  4680  000190  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  4681  000192  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4682  000194  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  4683  000196  E106               	bnz	u8070
  4684  000198  0E1A               	movlw	26
  4685  00019A  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  4686  00019C  B0D8               	btfsc	status,0,c
  4687  00019E  D002               	goto	u8070
  4688  0001A0  0E01               	movlw	1
  4689  0001A2  D001               	goto	u8080
  4690  0001A4                     u8070:
  4691  0001A4  0E00               	movlw	0
  4692  0001A6                     u8080:
  4693  0001A6  6F8F               	movwf	_efgtoa$1782& (0+255),b
  4694  0001A8  6B90               	clrf	(_efgtoa$1782+1)& (0+255),b
  4695                           
  4696                           ; BSR set to: 0
  4697  0001AA  518F               	movf	_efgtoa$1782& (0+255),w,b
  4698  0001AC  1190               	iorwf	(_efgtoa$1782+1)& (0+255),w,b
  4699  0001AE  B4D8               	btfsc	status,2,c
  4700  0001B0  D00D               	goto	l6653
  4701                           
  4702                           ; BSR set to: 0
  4703                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 345:             strcpy(&dbuf[n], "INF");
  4704  0001B2  0E0B               	movlw	low _dbuf
  4705  0001B4  25BB               	addwf	efgtoa@n& (0+255),w,b
  4706  0001B6  6E1C               	movwf	strcpy@dest,c
  4707  0001B8  0E01               	movlw	high _dbuf
  4708  0001BA  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4709  0001BC  6E1D               	movwf	strcpy@dest+1,c
  4710  0001BE  0EE7               	movlw	low STR_34
  4711  0001C0  6E1E               	movwf	strcpy@src,c
  4712  0001C2  0E7F               	movlw	high STR_34
  4713  0001C4  6E1F               	movwf	strcpy@src+1,c
  4714  0001C6  EC81  F01C         	call	_strcpy	;wreg free
  4715                           
  4716                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 346:         } else {
  4717  0001CA  D00C               	goto	l6655
  4718  0001CC                     l6653:
  4719                           
  4720                           ; BSR set to: 0
  4721                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 347:             strcpy(&dbuf[n], "inf");
  4722  0001CC  0E0B               	movlw	low _dbuf
  4723  0001CE  25BB               	addwf	efgtoa@n& (0+255),w,b
  4724  0001D0  6E1C               	movwf	strcpy@dest,c
  4725  0001D2  0E01               	movlw	high _dbuf
  4726  0001D4  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4727  0001D6  6E1D               	movwf	strcpy@dest+1,c
  4728  0001D8  0EEF               	movlw	low STR_35
  4729  0001DA  6E1E               	movwf	strcpy@src,c
  4730  0001DC  0E7F               	movlw	high STR_35
  4731  0001DE  6E1F               	movwf	strcpy@src+1,c
  4732  0001E0  EC81  F01C         	call	_strcpy	;wreg free
  4733  0001E4                     l6655:
  4734                           
  4735                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 349:         w -= ((sizeof("inf")/sizeof("inf
      +                          "[0]))-1);
  4736  0001E4  0100               	movlb	0	; () banked
  4737  0001E6  0EFD               	movlw	253
  4738  0001E8  27A8               	addwf	efgtoa@w& (0+255),f,b
  4739  0001EA  0EFF               	movlw	255
  4740  0001EC  23A9               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4741  0001EE                     l6657:
  4742                           
  4743                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 350:         return pad(fp, &dbuf[0], w);
  4744  0001EE  0060  F1F4  F060   	movff	efgtoa@fp,pad@fp
  4745  0001F4  0060  F1F8  F061   	movff	efgtoa@fp+1,pad@fp+1
  4746  0001FA  0E0B               	movlw	low _dbuf
  4747  0001FC  0100               	movlb	0	; () banked
  4748  0001FE  6F62               	movwf	pad@buf& (0+255),b
  4749  000200  0E01               	movlw	high _dbuf
  4750  000202  6F63               	movwf	(pad@buf+1)& (0+255),b
  4751  000204  0060  F2A0  F064   	movff	efgtoa@w,pad@p
  4752  00020A  0060  F2A4  F065   	movff	efgtoa@w+1,pad@p+1
  4753  000210  ECE9  F018         	call	_pad	;wreg free
  4754  000214  0060  F180  F07D   	movff	?_pad,?_efgtoa
  4755  00021A  0060  F184  F07E   	movff	?_pad+1,?_efgtoa+1
  4756  000220  0012               	return	
  4757  000222                     l6661:
  4758                           
  4759                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 353:         if ((0 ? isupper((int)c) : ((uns
      +                          igned)((int)c)-'A') < 26)) {
  4760  000222  0060  F2D4  F01C   	movff	efgtoa@g,___fpclassifyf@x
  4761  000228  0060  F2D8  F01D   	movff	efgtoa@g+1,___fpclassifyf@x+1
  4762  00022E  0060  F2DC  F01E   	movff	efgtoa@g+2,___fpclassifyf@x+2
  4763  000234  0060  F2E0  F01F   	movff	efgtoa@g+3,___fpclassifyf@x+3
  4764  00023A  EC75  F016         	call	___fpclassifyf	;wreg free
  4765  00023E  501C               	movf	?___fpclassifyf,w,c
  4766  000240  101D               	iorwf	?___fpclassifyf+1,w,c
  4767  000242  A4D8               	btfss	status,2,c
  4768  000244  D035               	goto	l6679
  4769  000246  0EBF               	movlw	191
  4770  000248  0100               	movlb	0	; () banked
  4771  00024A  6F84               	movwf	??_efgtoa& (0+255),b
  4772  00024C  0EFF               	movlw	255
  4773  00024E  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  4774  000250  5183               	movf	efgtoa@c& (0+255),w,b
  4775  000252  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  4776  000254  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  4777  000256  5184               	movf	??_efgtoa& (0+255),w,b
  4778  000258  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  4779  00025A  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  4780  00025C  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4781  00025E  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  4782  000260  E106               	bnz	u8110
  4783  000262  0E1A               	movlw	26
  4784  000264  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  4785  000266  B0D8               	btfsc	status,0,c
  4786  000268  D002               	goto	u8110
  4787  00026A  0E01               	movlw	1
  4788  00026C  D001               	goto	u8120
  4789  00026E                     u8110:
  4790  00026E  0E00               	movlw	0
  4791  000270                     u8120:
  4792  000270  6F91               	movwf	_efgtoa$1786& (0+255),b
  4793  000272  6B92               	clrf	(_efgtoa$1786+1)& (0+255),b
  4794                           
  4795                           ; BSR set to: 0
  4796  000274  5191               	movf	_efgtoa$1786& (0+255),w,b
  4797  000276  1192               	iorwf	(_efgtoa$1786+1)& (0+255),w,b
  4798  000278  B4D8               	btfsc	status,2,c
  4799  00027A  D00D               	goto	l6671
  4800                           
  4801                           ; BSR set to: 0
  4802                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 354:             strcpy(&dbuf[n], "NAN");
  4803  00027C  0E0B               	movlw	low _dbuf
  4804  00027E  25BB               	addwf	efgtoa@n& (0+255),w,b
  4805  000280  6E1C               	movwf	strcpy@dest,c
  4806  000282  0E01               	movlw	high _dbuf
  4807  000284  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4808  000286  6E1D               	movwf	strcpy@dest+1,c
  4809  000288  0EEB               	movlw	low STR_38
  4810  00028A  6E1E               	movwf	strcpy@src,c
  4811  00028C  0E7F               	movlw	high STR_38
  4812  00028E  6E1F               	movwf	strcpy@src+1,c
  4813  000290  EC81  F01C         	call	_strcpy	;wreg free
  4814                           
  4815                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 355:         } else {
  4816  000294  D7A7               	goto	l6655
  4817  000296                     l6671:
  4818                           
  4819                           ; BSR set to: 0
  4820                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 356:             strcpy(&dbuf[n], "nan");
  4821  000296  0E0B               	movlw	low _dbuf
  4822  000298  25BB               	addwf	efgtoa@n& (0+255),w,b
  4823  00029A  6E1C               	movwf	strcpy@dest,c
  4824  00029C  0E01               	movlw	high _dbuf
  4825  00029E  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4826  0002A0  6E1D               	movwf	strcpy@dest+1,c
  4827  0002A2  0EF3               	movlw	low STR_39
  4828  0002A4  6E1E               	movwf	strcpy@src,c
  4829  0002A6  0E7F               	movlw	high STR_39
  4830  0002A8  6E1F               	movwf	strcpy@src+1,c
  4831  0002AA  EC81  F01C         	call	_strcpy	;wreg free
  4832  0002AE  D79A               	goto	l6655
  4833  0002B0                     l6679:
  4834                           
  4835                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  4836  0002B0  0E00               	movlw	0
  4837  0002B2  0100               	movlb	0	; () banked
  4838  0002B4  6FBD               	movwf	efgtoa@u& (0+255),b
  4839  0002B6  0E00               	movlw	0
  4840  0002B8  6FBE               	movwf	(efgtoa@u+1)& (0+255),b
  4841  0002BA  0E80               	movlw	128
  4842  0002BC  6FBF               	movwf	(efgtoa@u+2)& (0+255),b
  4843  0002BE  0E3F               	movlw	63
  4844  0002C0  6FC0               	movwf	(efgtoa@u+3)& (0+255),b
  4845                           
  4846                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  4847  0002C2  0E00               	movlw	0
  4848  0002C4  6FBA               	movwf	(efgtoa@e+1)& (0+255),b
  4849  0002C6  0E00               	movlw	0
  4850  0002C8  6FB9               	movwf	efgtoa@e& (0+255),b
  4851                           
  4852                           ; BSR set to: 0
  4853                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 365:     if (!(g == 0.0)) {
  4854  0002CA  0060  F2D4  F01C   	movff	efgtoa@g,___fleq@ff1
  4855  0002D0  0060  F2D8  F01D   	movff	efgtoa@g+1,___fleq@ff1+1
  4856  0002D6  0060  F2DC  F01E   	movff	efgtoa@g+2,___fleq@ff1+2
  4857  0002DC  0060  F2E0  F01F   	movff	efgtoa@g+3,___fleq@ff1+3
  4858  0002E2  0E00               	movlw	0
  4859  0002E4  6E20               	movwf	___fleq@ff2,c
  4860  0002E6  0E00               	movlw	0
  4861  0002E8  6E21               	movwf	___fleq@ff2+1,c
  4862  0002EA  0E00               	movlw	0
  4863  0002EC  6E22               	movwf	___fleq@ff2+2,c
  4864  0002EE  0E00               	movlw	0
  4865  0002F0  6E23               	movwf	___fleq@ff2+3,c
  4866  0002F2  EC13  F01B         	call	___fleq	;wreg free
  4867  0002F6  A0D8               	btfss	status,0,c
  4868  0002F8  D026               	goto	l6689
  4869  0002FA  D09C               	goto	u8160
  4870  0002FC                     l6685:
  4871                           
  4872                           ; BSR set to: 0
  4873                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 367:             u = u*10.0;
  4874  0002FC  0060  F2F4  F01C   	movff	efgtoa@u,___flmul@b
  4875  000302  0060  F2F8  F01D   	movff	efgtoa@u+1,___flmul@b+1
  4876  000308  0060  F2FC  F01E   	movff	efgtoa@u+2,___flmul@b+2
  4877  00030E  0060  F300  F01F   	movff	efgtoa@u+3,___flmul@b+3
  4878  000314  0E00               	movlw	0
  4879  000316  6E20               	movwf	___flmul@a,c
  4880  000318  0E00               	movlw	0
  4881  00031A  6E21               	movwf	___flmul@a+1,c
  4882  00031C  0E20               	movlw	32
  4883  00031E  6E22               	movwf	___flmul@a+2,c
  4884  000320  0E41               	movlw	65
  4885  000322  6E23               	movwf	___flmul@a+3,c
  4886  000324  EC98  F00C         	call	___flmul	;wreg free
  4887  000328  0060  F070  F0BD   	movff	?___flmul,efgtoa@u
  4888  00032E  0060  F074  F0BE   	movff	?___flmul+1,efgtoa@u+1
  4889  000334  0060  F078  F0BF   	movff	?___flmul+2,efgtoa@u+2
  4890  00033A  0060  F07C  F0C0   	movff	?___flmul+3,efgtoa@u+3
  4891                           
  4892                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 368:             ++e;
  4893  000340  0100               	movlb	0	; () banked
  4894  000342  4BB9               	infsnz	efgtoa@e& (0+255),f,b
  4895  000344  2BBA               	incf	(efgtoa@e+1)& (0+255),f,b
  4896  000346                     l6689:
  4897                           
  4898                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 366:         while (!(g < (u*10.0))) {
  4899  000346  0060  F2D4  F06D   	movff	efgtoa@g,___flge@ff1
  4900  00034C  0060  F2D8  F06E   	movff	efgtoa@g+1,___flge@ff1+1
  4901  000352  0060  F2DC  F06F   	movff	efgtoa@g+2,___flge@ff1+2
  4902  000358  0060  F2E0  F070   	movff	efgtoa@g+3,___flge@ff1+3
  4903  00035E  0E00               	movlw	0
  4904  000360  6E20               	movwf	___flmul@a,c
  4905  000362  0E00               	movlw	0
  4906  000364  6E21               	movwf	___flmul@a+1,c
  4907  000366  0E20               	movlw	32
  4908  000368  6E22               	movwf	___flmul@a+2,c
  4909  00036A  0E41               	movlw	65
  4910  00036C  6E23               	movwf	___flmul@a+3,c
  4911  00036E  0060  F2F4  F01C   	movff	efgtoa@u,___flmul@b
  4912  000374  0060  F2F8  F01D   	movff	efgtoa@u+1,___flmul@b+1
  4913  00037A  0060  F2FC  F01E   	movff	efgtoa@u+2,___flmul@b+2
  4914  000380  0060  F300  F01F   	movff	efgtoa@u+3,___flmul@b+3
  4915  000386  EC98  F00C         	call	___flmul	;wreg free
  4916  00038A  0060  F070  F071   	movff	?___flmul,___flge@ff2
  4917  000390  0060  F074  F072   	movff	?___flmul+1,___flge@ff2+1
  4918  000396  0060  F078  F073   	movff	?___flmul+2,___flge@ff2+2
  4919  00039C  0060  F07C  F074   	movff	?___flmul+3,___flge@ff2+3
  4920  0003A2  EC56  F017         	call	___flge	;wreg free
  4921  0003A6  0100               	movlb	0	; () banked
  4922  0003A8  A0D8               	btfss	status,0,c
  4923  0003AA  D027               	goto	l6695
  4924  0003AC  D7A7               	goto	l6685
  4925  0003AE                     l6691:
  4926                           
  4927                           ; BSR set to: 0
  4928                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 371:             u = u/10.0;
  4929  0003AE  0060  F2F4  F01C   	movff	efgtoa@u,___fldiv@b
  4930  0003B4  0060  F2F8  F01D   	movff	efgtoa@u+1,___fldiv@b+1
  4931  0003BA  0060  F2FC  F01E   	movff	efgtoa@u+2,___fldiv@b+2
  4932  0003C0  0060  F300  F01F   	movff	efgtoa@u+3,___fldiv@b+3
  4933  0003C6  0E00               	movlw	0
  4934  0003C8  6E20               	movwf	___fldiv@a,c
  4935  0003CA  0E00               	movlw	0
  4936  0003CC  6E21               	movwf	___fldiv@a+1,c
  4937  0003CE  0E20               	movlw	32
  4938  0003D0  6E22               	movwf	___fldiv@a+2,c
  4939  0003D2  0E41               	movlw	65
  4940  0003D4  6E23               	movwf	___fldiv@a+3,c
  4941  0003D6  EC6F  F011         	call	___fldiv	;wreg free
  4942  0003DA  0060  F070  F0BD   	movff	?___fldiv,efgtoa@u
  4943  0003E0  0060  F074  F0BE   	movff	?___fldiv+1,efgtoa@u+1
  4944  0003E6  0060  F078  F0BF   	movff	?___fldiv+2,efgtoa@u+2
  4945  0003EC  0060  F07C  F0C0   	movff	?___fldiv+3,efgtoa@u+3
  4946                           
  4947                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 372:             --e;
  4948  0003F2  0100               	movlb	0	; () banked
  4949  0003F4  07B9               	decf	efgtoa@e& (0+255),f,b
  4950  0003F6  A0D8               	btfss	status,0,c
  4951  0003F8  07BA               	decf	(efgtoa@e+1)& (0+255),f,b
  4952  0003FA                     l6695:
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 370:         while (g < u) {
  4956  0003FA  0060  F2D4  F06D   	movff	efgtoa@g,___flge@ff1
  4957  000400  0060  F2D8  F06E   	movff	efgtoa@g+1,___flge@ff1+1
  4958  000406  0060  F2DC  F06F   	movff	efgtoa@g+2,___flge@ff1+2
  4959  00040C  0060  F2E0  F070   	movff	efgtoa@g+3,___flge@ff1+3
  4960  000412  0060  F2F4  F071   	movff	efgtoa@u,___flge@ff2
  4961  000418  0060  F2F8  F072   	movff	efgtoa@u+1,___flge@ff2+1
  4962  00041E  0060  F2FC  F073   	movff	efgtoa@u+2,___flge@ff2+2
  4963  000424  0060  F300  F074   	movff	efgtoa@u+3,___flge@ff2+3
  4964  00042A  EC56  F017         	call	___flge	;wreg free
  4965  00042E  0100               	movlb	0	; () banked
  4966  000430  A0D8               	btfss	status,0,c
  4967  000432  D7BD               	goto	l6691
  4968  000434                     u8160:
  4969                           
  4970                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 377:     mode = tolower((int)c);
  4971  000434  0060  F20C  F022   	movff	efgtoa@c,tolower@c
  4972  00043A  6A23               	clrf	tolower@c+1,c
  4973  00043C  EC15  F01D         	call	_tolower	;wreg free
  4974  000440  5022               	movf	?_tolower,w,c
  4975  000442  0100               	movlb	0	; () banked
  4976  000444  6FAA               	movwf	efgtoa@mode& (0+255),b
  4977                           
  4978                           ; BSR set to: 0
  4979                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 378:     nmode = mode;
  4980  000446  0060  F2A8  F0A7   	movff	efgtoa@mode,efgtoa@nmode
  4981                           
  4982                           ; BSR set to: 0
  4983                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 379:     if (mode == 'g') {
  4984  00044C  0E67               	movlw	103
  4985  00044E  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  4986  000450  A4D8               	btfss	status,2,c
  4987  000452  D01B               	goto	l6711
  4988                           
  4989                           ; BSR set to: 0
  4990                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 380:   if (prec == 0) {
  4991  000454  5033               	movf	_prec,w,c
  4992  000456  1034               	iorwf	_prec+1,w,c
  4993  000458  A4D8               	btfss	status,2,c
  4994  00045A  D004               	goto	l6707
  4995                           
  4996                           ; BSR set to: 0
  4997                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  4998  00045C  0E00               	movlw	0
  4999  00045E  6E34               	movwf	_prec+1,c
  5000  000460  0E01               	movlw	1
  5001  000462  6E33               	movwf	_prec,c
  5002  000464                     l6707:
  5003                           
  5004                           ; BSR set to: 0
  5005                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 383:         p = (0 < prec) ? prec : 6;
  5006  000464  BE34               	btfsc	_prec+1,7,c
  5007  000466  D005               	goto	u8190
  5008  000468  5034               	movf	_prec+1,w,c
  5009  00046A  E108               	bnz	l480
  5010  00046C  0433               	decf	_prec,w,c
  5011  00046E  B0D8               	btfsc	status,0,c
  5012  000470  D005               	goto	l480
  5013  000472                     u8190:
  5014                           
  5015                           ; BSR set to: 0
  5016  000472  0E00               	movlw	0
  5017  000474  6FA6               	movwf	(efgtoa@p+1)& (0+255),b
  5018  000476  0E06               	movlw	6
  5019  000478  6FA5               	movwf	efgtoa@p& (0+255),b
  5020  00047A  D00A               	goto	l6717
  5021  00047C                     l480:
  5022                           
  5023                           ; BSR set to: 0
  5024  00047C  0060  F0CC  F0A5   	movff	_prec,efgtoa@p
  5025  000482  0060  F0D0  F0A6   	movff	_prec+1,efgtoa@p+1
  5026  000488  D003               	goto	l6717
  5027  00048A                     l6711:
  5028                           
  5029                           ; BSR set to: 0
  5030                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 385:         p = (prec < 0) ? 6 : prec;
  5031  00048A  AE34               	btfss	_prec+1,7,c
  5032  00048C  D7F7               	goto	l480
  5033  00048E  D7F1               	goto	u8190
  5034  000490                     l6717:
  5035                           
  5036                           ; BSR set to: 0
  5037                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 389:     if (mode == 'g') {
  5038  000490  0E67               	movlw	103
  5039  000492  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  5040  000494  A4D8               	btfss	status,2,c
  5041  000496  D024               	goto	l6727
  5042                           
  5043                           ; BSR set to: 0
  5044                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 390:         if (!(e < -4) && !((p - 1) < e))
      +                           {
  5045  000498  AFBA               	btfss	(efgtoa@e+1)& (0+255),7,b
  5046  00049A  D006               	goto	u8220
  5047  00049C  0EFC               	movlw	252
  5048  00049E  5DB9               	subwf	efgtoa@e& (0+255),w,b
  5049  0004A0  0EFF               	movlw	255
  5050  0004A2  59BA               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5051  0004A4  A0D8               	btfss	status,0,c
  5052  0004A6  D01A               	goto	l6725
  5053  0004A8                     u8220:
  5054                           
  5055                           ; BSR set to: 0
  5056  0004A8  0EFF               	movlw	255
  5057  0004AA  6F84               	movwf	??_efgtoa& (0+255),b
  5058  0004AC  0EFF               	movlw	255
  5059  0004AE  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  5060  0004B0  0060  F294  F086   	movff	efgtoa@p,??_efgtoa+2
  5061  0004B6  0060  F298  F087   	movff	efgtoa@p+1,??_efgtoa+3
  5062  0004BC  5184               	movf	??_efgtoa& (0+255),w,b
  5063  0004BE  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  5064  0004C0  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  5065  0004C2  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5066  0004C4  51B9               	movf	efgtoa@e& (0+255),w,b
  5067  0004C6  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  5068  0004C8  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  5069  0004CA  0A80               	xorlw	128
  5070  0004CC  6F88               	movwf	(??_efgtoa+4)& (0+255),b
  5071  0004CE  51BA               	movf	(efgtoa@e+1)& (0+255),w,b
  5072  0004D0  0A80               	xorlw	128
  5073  0004D2  5988               	subwfb	(??_efgtoa+4)& (0+255),w,b
  5074  0004D4  A0D8               	btfss	status,0,c
  5075  0004D6  D002               	goto	l6725
  5076                           
  5077                           ; BSR set to: 0
  5078                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 391:             nmode = 'f';
  5079  0004D8  0E66               	movlw	102
  5080  0004DA  D001               	goto	L6
  5081  0004DC                     l6725:
  5082                           
  5083                           ; BSR set to: 0
  5084                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 393:             nmode = 'e';
  5085  0004DC  0E65               	movlw	101
  5086  0004DE                     L6:
  5087  0004DE  6FA7               	movwf	efgtoa@nmode& (0+255),b
  5088  0004E0                     l6727:
  5089                           
  5090                           ; BSR set to: 0
  5091                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 398:     m = p;
  5092  0004E0  0060  F294  F09D   	movff	efgtoa@p,efgtoa@m
  5093  0004E6  0060  F298  F09E   	movff	efgtoa@p+1,efgtoa@m+1
  5094                           
  5095                           ; BSR set to: 0
  5096                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 399:     if (!(mode == 'g') || ((nmode == 'f'
      +                          ) && (e < 0))) {
  5097  0004EC  0E67               	movlw	103
  5098  0004EE  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  5099  0004F0  A4D8               	btfss	status,2,c
  5100  0004F2  D005               	goto	u8260
  5101                           
  5102                           ; BSR set to: 0
  5103  0004F4  0E66               	movlw	102
  5104  0004F6  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  5105  0004F8  B4D8               	btfsc	status,2,c
  5106                           
  5107                           ; BSR set to: 0
  5108  0004FA  AFBA               	btfss	(efgtoa@e+1)& (0+255),7,b
  5109  0004FC  D002               	goto	l6737
  5110  0004FE                     u8260:
  5111                           
  5112                           ; BSR set to: 0
  5113                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 400:         ++m;
  5114  0004FE  4B9D               	infsnz	efgtoa@m& (0+255),f,b
  5115  000500  2B9E               	incf	(efgtoa@m+1)& (0+255),f,b
  5116  000502                     l6737:
  5117                           
  5118                           ; BSR set to: 0
  5119                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 404:     if (nmode == 'f') {
  5120  000502  0E66               	movlw	102
  5121  000504  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  5122  000506  A4D8               	btfss	status,2,c
  5123  000508  D016               	goto	l6747
  5124                           
  5125                           ; BSR set to: 0
  5126                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 405:         if (e < 0) {
  5127  00050A  AFBA               	btfss	(efgtoa@e+1)& (0+255),7,b
  5128  00050C  D00C               	goto	l6743
  5129                           
  5130                           ; BSR set to: 0
  5131                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 406:             u = 1.0;
  5132  00050E  0E00               	movlw	0
  5133  000510  6FBD               	movwf	efgtoa@u& (0+255),b
  5134  000512  0E00               	movlw	0
  5135  000514  6FBE               	movwf	(efgtoa@u+1)& (0+255),b
  5136  000516  0E80               	movlw	128
  5137  000518  6FBF               	movwf	(efgtoa@u+2)& (0+255),b
  5138  00051A  0E3F               	movlw	63
  5139  00051C  6FC0               	movwf	(efgtoa@u+3)& (0+255),b
  5140                           
  5141                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 407:             e = 0;
  5142  00051E  0E00               	movlw	0
  5143  000520  6FBA               	movwf	(efgtoa@e+1)& (0+255),b
  5144  000522  0E00               	movlw	0
  5145  000524  6FB9               	movwf	efgtoa@e& (0+255),b
  5146  000526                     l6743:
  5147                           
  5148                           ; BSR set to: 0
  5149                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 409:         if (!(mode == 'g')) {
  5150  000526  0E67               	movlw	103
  5151  000528  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  5152  00052A  B4D8               	btfsc	status,2,c
  5153  00052C  D004               	goto	l6747
  5154                           
  5155                           ; BSR set to: 0
  5156                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 410:             m += e;
  5157  00052E  51B9               	movf	efgtoa@e& (0+255),w,b
  5158  000530  279D               	addwf	efgtoa@m& (0+255),f,b
  5159  000532  51BA               	movf	(efgtoa@e+1)& (0+255),w,b
  5160  000534  239E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5161  000536                     l6747:
  5162                           
  5163                           ; BSR set to: 0
  5164                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  5165  000536  0E00               	movlw	0
  5166  000538  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  5167  00053A  0E00               	movlw	0
  5168  00053C  6FB3               	movwf	efgtoa@i& (0+255),b
  5169                           
  5170                           ; BSR set to: 0
  5171                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 416:     h = g;
  5172  00053E  0060  F2D4  F0AB   	movff	efgtoa@g,efgtoa@h
  5173  000544  0060  F2D8  F0AC   	movff	efgtoa@g+1,efgtoa@h+1
  5174  00054A  0060  F2DC  F0AD   	movff	efgtoa@g+2,efgtoa@h+2
  5175  000550  0060  F2E0  F0AE   	movff	efgtoa@g+3,efgtoa@h+3
  5176                           
  5177                           ; BSR set to: 0
  5178                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  5179  000556  0060  F2F4  F089   	movff	efgtoa@u,efgtoa@ou
  5180  00055C  0060  F2F8  F08A   	movff	efgtoa@u+1,efgtoa@ou+1
  5181  000562  0060  F2FC  F08B   	movff	efgtoa@u+2,efgtoa@ou+2
  5182  000568  0060  F300  F08C   	movff	efgtoa@u+3,efgtoa@ou+3
  5183                           
  5184                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 418:     while (i < m) {
  5185  00056E  D0AD               	goto	l6761
  5186  000570                     l6753:
  5187                           
  5188                           ; BSR set to: 0
  5189                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 419:         l = floorf(h/u);
  5190  000570  0060  F2AC  F01C   	movff	efgtoa@h,___fldiv@b
  5191  000576  0060  F2B0  F01D   	movff	efgtoa@h+1,___fldiv@b+1
  5192  00057C  0060  F2B4  F01E   	movff	efgtoa@h+2,___fldiv@b+2
  5193  000582  0060  F2B8  F01F   	movff	efgtoa@h+3,___fldiv@b+3
  5194  000588  0060  F2F4  F020   	movff	efgtoa@u,___fldiv@a
  5195  00058E  0060  F2F8  F021   	movff	efgtoa@u+1,___fldiv@a+1
  5196  000594  0060  F2FC  F022   	movff	efgtoa@u+2,___fldiv@a+2
  5197  00059A  0060  F300  F023   	movff	efgtoa@u+3,___fldiv@a+3
  5198  0005A0  EC6F  F011         	call	___fldiv	;wreg free
  5199  0005A4  0060  F070  F028   	movff	?___fldiv,floorf@x
  5200  0005AA  0060  F074  F029   	movff	?___fldiv+1,floorf@x+1
  5201  0005B0  0060  F078  F02A   	movff	?___fldiv+2,floorf@x+2
  5202  0005B6  0060  F07C  F02B   	movff	?___fldiv+3,floorf@x+3
  5203  0005BC  ECC6  F012         	call	_floorf	;wreg free
  5204  0005C0  0060  F0A0  F0AF   	movff	?_floorf,efgtoa@l
  5205  0005C6  0060  F0A4  F0B0   	movff	?_floorf+1,efgtoa@l+1
  5206  0005CC  0060  F0A8  F0B1   	movff	?_floorf+2,efgtoa@l+2
  5207  0005D2  0060  F0AC  F0B2   	movff	?_floorf+3,efgtoa@l+3
  5208                           
  5209                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 420:         d = (int)l;
  5210  0005D8  0060  F2BC  F01C   	movff	efgtoa@l,___fltol@f1
  5211  0005DE  0060  F2C0  F01D   	movff	efgtoa@l+1,___fltol@f1+1
  5212  0005E4  0060  F2C4  F01E   	movff	efgtoa@l+2,___fltol@f1+2
  5213  0005EA  0060  F2C8  F01F   	movff	efgtoa@l+3,___fltol@f1+3
  5214  0005F0  ECBF  F017         	call	___fltol	;wreg free
  5215  0005F4  0060  F070  F0A1   	movff	?___fltol,efgtoa@d
  5216  0005FA  0060  F074  F0A2   	movff	?___fltol+1,efgtoa@d+1
  5217                           
  5218                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 421:         h -= l*u;
  5219  000600  0060  F2AC  F06D   	movff	efgtoa@h,___flsub@b
  5220  000606  0060  F2B0  F06E   	movff	efgtoa@h+1,___flsub@b+1
  5221  00060C  0060  F2B4  F06F   	movff	efgtoa@h+2,___flsub@b+2
  5222  000612  0060  F2B8  F070   	movff	efgtoa@h+3,___flsub@b+3
  5223  000618  0060  F2F4  F020   	movff	efgtoa@u,___flmul@a
  5224  00061E  0060  F2F8  F021   	movff	efgtoa@u+1,___flmul@a+1
  5225  000624  0060  F2FC  F022   	movff	efgtoa@u+2,___flmul@a+2
  5226  00062A  0060  F300  F023   	movff	efgtoa@u+3,___flmul@a+3
  5227  000630  0060  F2BC  F01C   	movff	efgtoa@l,___flmul@b
  5228  000636  0060  F2C0  F01D   	movff	efgtoa@l+1,___flmul@b+1
  5229  00063C  0060  F2C4  F01E   	movff	efgtoa@l+2,___flmul@b+2
  5230  000642  0060  F2C8  F01F   	movff	efgtoa@l+3,___flmul@b+3
  5231  000648  EC98  F00C         	call	___flmul	;wreg free
  5232  00064C  0060  F070  F071   	movff	?___flmul,___flsub@a
  5233  000652  0060  F074  F072   	movff	?___flmul+1,___flsub@a+1
  5234  000658  0060  F078  F073   	movff	?___flmul+2,___flsub@a+2
  5235  00065E  0060  F07C  F074   	movff	?___flmul+3,___flsub@a+3
  5236  000664  ECE5  F01C         	call	___flsub	;wreg free
  5237  000668  0060  F1B4  F0AB   	movff	?___flsub,efgtoa@h
  5238  00066E  0060  F1B8  F0AC   	movff	?___flsub+1,efgtoa@h+1
  5239  000674  0060  F1BC  F0AD   	movff	?___flsub+2,efgtoa@h+2
  5240  00067A  0060  F1C0  F0AE   	movff	?___flsub+3,efgtoa@h+3
  5241                           
  5242                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 422:         u = u/10.0;
  5243  000680  0060  F2F4  F01C   	movff	efgtoa@u,___fldiv@b
  5244  000686  0060  F2F8  F01D   	movff	efgtoa@u+1,___fldiv@b+1
  5245  00068C  0060  F2FC  F01E   	movff	efgtoa@u+2,___fldiv@b+2
  5246  000692  0060  F300  F01F   	movff	efgtoa@u+3,___fldiv@b+3
  5247  000698  0E00               	movlw	0
  5248  00069A  6E20               	movwf	___fldiv@a,c
  5249  00069C  0E00               	movlw	0
  5250  00069E  6E21               	movwf	___fldiv@a+1,c
  5251  0006A0  0E20               	movlw	32
  5252  0006A2  6E22               	movwf	___fldiv@a+2,c
  5253  0006A4  0E41               	movlw	65
  5254  0006A6  6E23               	movwf	___fldiv@a+3,c
  5255  0006A8  EC6F  F011         	call	___fldiv	;wreg free
  5256  0006AC  0060  F070  F0BD   	movff	?___fldiv,efgtoa@u
  5257  0006B2  0060  F074  F0BE   	movff	?___fldiv+1,efgtoa@u+1
  5258  0006B8  0060  F078  F0BF   	movff	?___fldiv+2,efgtoa@u+2
  5259  0006BE  0060  F07C  F0C0   	movff	?___fldiv+3,efgtoa@u+3
  5260                           
  5261                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 423:         ++i;
  5262  0006C4  0100               	movlb	0	; () banked
  5263  0006C6  4BB3               	infsnz	efgtoa@i& (0+255),f,b
  5264  0006C8  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
  5265  0006CA                     l6761:
  5266                           
  5267                           ; BSR set to: 0
  5268                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 418:     while (i < m) {
  5269  0006CA  519D               	movf	efgtoa@m& (0+255),w,b
  5270  0006CC  5DB3               	subwf	efgtoa@i& (0+255),w,b
  5271  0006CE  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  5272  0006D0  0A80               	xorlw	128
  5273  0006D2  6F84               	movwf	??_efgtoa& (0+255),b
  5274  0006D4  519E               	movf	(efgtoa@m+1)& (0+255),w,b
  5275  0006D6  0A80               	xorlw	128
  5276  0006D8  5984               	subwfb	??_efgtoa& (0+255),w,b
  5277  0006DA  A0D8               	btfss	status,0,c
  5278  0006DC  D749               	goto	l6753
  5279                           
  5280                           ; BSR set to: 0
  5281                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 427:     l = u*5.0;
  5282  0006DE  0060  F2F4  F01C   	movff	efgtoa@u,___flmul@b
  5283  0006E4  0060  F2F8  F01D   	movff	efgtoa@u+1,___flmul@b+1
  5284  0006EA  0060  F2FC  F01E   	movff	efgtoa@u+2,___flmul@b+2
  5285  0006F0  0060  F300  F01F   	movff	efgtoa@u+3,___flmul@b+3
  5286  0006F6  0E00               	movlw	0
  5287  0006F8  6E20               	movwf	___flmul@a,c
  5288  0006FA  0E00               	movlw	0
  5289  0006FC  6E21               	movwf	___flmul@a+1,c
  5290  0006FE  0EA0               	movlw	160
  5291  000700  6E22               	movwf	___flmul@a+2,c
  5292  000702  0E40               	movlw	64
  5293  000704  6E23               	movwf	___flmul@a+3,c
  5294  000706  EC98  F00C         	call	___flmul	;wreg free
  5295  00070A  0060  F070  F0AF   	movff	?___flmul,efgtoa@l
  5296  000710  0060  F074  F0B0   	movff	?___flmul+1,efgtoa@l+1
  5297  000716  0060  F078  F0B1   	movff	?___flmul+2,efgtoa@l+2
  5298  00071C  0060  F07C  F0B2   	movff	?___flmul+3,efgtoa@l+3
  5299                           
  5300                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 428:     if (h < l) {
  5301  000722  0060  F2AC  F06D   	movff	efgtoa@h,___flge@ff1
  5302  000728  0060  F2B0  F06E   	movff	efgtoa@h+1,___flge@ff1+1
  5303  00072E  0060  F2B4  F06F   	movff	efgtoa@h+2,___flge@ff1+2
  5304  000734  0060  F2B8  F070   	movff	efgtoa@h+3,___flge@ff1+3
  5305  00073A  0060  F2BC  F071   	movff	efgtoa@l,___flge@ff2
  5306  000740  0060  F2C0  F072   	movff	efgtoa@l+1,___flge@ff2+1
  5307  000746  0060  F2C4  F073   	movff	efgtoa@l+2,___flge@ff2+2
  5308  00074C  0060  F2C8  F074   	movff	efgtoa@l+3,___flge@ff2+3
  5309  000752  EC56  F017         	call	___flge	;wreg free
  5310  000756  0100               	movlb	0	; () banked
  5311  000758  A0D8               	btfss	status,0,c
  5312  00075A  D01F               	goto	u8330
  5313                           
  5314                           ; BSR set to: 0
  5315                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 432:         if ((h == l) && !(d % 2)) {
  5316                           
  5317                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 430:     } else {
  5318                           
  5319                           ; BSR set to: 0
  5320                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 429:         l = 0.0;
  5321  00075C  0060  F2AC  F01C   	movff	efgtoa@h,___fleq@ff1
  5322  000762  0060  F2B0  F01D   	movff	efgtoa@h+1,___fleq@ff1+1
  5323  000768  0060  F2B4  F01E   	movff	efgtoa@h+2,___fleq@ff1+2
  5324  00076E  0060  F2B8  F01F   	movff	efgtoa@h+3,___fleq@ff1+3
  5325  000774  0060  F2BC  F020   	movff	efgtoa@l,___fleq@ff2
  5326  00077A  0060  F2C0  F021   	movff	efgtoa@l+1,___fleq@ff2+1
  5327  000780  0060  F2C4  F022   	movff	efgtoa@l+2,___fleq@ff2+2
  5328  000786  0060  F2C8  F023   	movff	efgtoa@l+3,___fleq@ff2+3
  5329  00078C  EC13  F01B         	call	___fleq	;wreg free
  5330  000790  A0D8               	btfss	status,0,c
  5331  000792  D00B               	goto	l6775
  5332  000794  0100               	movlb	0	; () banked
  5333  000796  B1A1               	btfsc	efgtoa@d& (0+255),0,b
  5334  000798  D008               	goto	l6775
  5335  00079A                     u8330:
  5336                           
  5337                           ; BSR set to: 0
  5338                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 433:             l = 0.0;
  5339  00079A  0E00               	movlw	0
  5340  00079C  6FAF               	movwf	efgtoa@l& (0+255),b
  5341  00079E  0E00               	movlw	0
  5342  0007A0  6FB0               	movwf	(efgtoa@l+1)& (0+255),b
  5343  0007A2  0E00               	movlw	0
  5344  0007A4  6FB1               	movwf	(efgtoa@l+2)& (0+255),b
  5345  0007A6  0E00               	movlw	0
  5346  0007A8  6FB2               	movwf	(efgtoa@l+3)& (0+255),b
  5347  0007AA                     l6775:
  5348                           
  5349                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 438:     h = g + l;
  5350  0007AA  0060  F2D4  F01C   	movff	efgtoa@g,___fladd@b
  5351  0007B0  0060  F2D8  F01D   	movff	efgtoa@g+1,___fladd@b+1
  5352  0007B6  0060  F2DC  F01E   	movff	efgtoa@g+2,___fladd@b+2
  5353  0007BC  0060  F2E0  F01F   	movff	efgtoa@g+3,___fladd@b+3
  5354  0007C2  0060  F2BC  F020   	movff	efgtoa@l,___fladd@a
  5355  0007C8  0060  F2C0  F021   	movff	efgtoa@l+1,___fladd@a+1
  5356  0007CE  0060  F2C4  F022   	movff	efgtoa@l+2,___fladd@a+2
  5357  0007D4  0060  F2C8  F023   	movff	efgtoa@l+3,___fladd@a+3
  5358  0007DA  EC72  F00E         	call	___fladd	;wreg free
  5359  0007DE  0060  F070  F0AB   	movff	?___fladd,efgtoa@h
  5360  0007E4  0060  F074  F0AC   	movff	?___fladd+1,efgtoa@h+1
  5361  0007EA  0060  F078  F0AD   	movff	?___fladd+2,efgtoa@h+2
  5362  0007F0  0060  F07C  F0AE   	movff	?___fladd+3,efgtoa@h+3
  5363                           
  5364                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  5365  0007F6  0060  F224  F0BD   	movff	efgtoa@ou,efgtoa@u
  5366  0007FC  0060  F228  F0BE   	movff	efgtoa@ou+1,efgtoa@u+1
  5367  000802  0060  F22C  F0BF   	movff	efgtoa@ou+2,efgtoa@u+2
  5368  000808  0060  F230  F0C0   	movff	efgtoa@ou+3,efgtoa@u+3
  5369                           
  5370                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 442:     ne = (nmode == 'e') ? 0 : e;
  5371  00080E  0E65               	movlw	101
  5372  000810  0100               	movlb	0	; () banked
  5373  000812  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  5374  000814  B4D8               	btfsc	status,2,c
  5375  000816  D007               	goto	l6783
  5376                           
  5377                           ; BSR set to: 0
  5378  000818  0060  F2E4  F09F   	movff	efgtoa@e,efgtoa@ne
  5379  00081E  0060  F2E8  F0A0   	movff	efgtoa@e+1,efgtoa@ne+1
  5380  000824  D004               	goto	l506
  5381  000826                     l6783:
  5382                           
  5383                           ; BSR set to: 0
  5384  000826  0E00               	movlw	0
  5385  000828  6FA0               	movwf	(efgtoa@ne+1)& (0+255),b
  5386  00082A  0E00               	movlw	0
  5387  00082C  6F9F               	movwf	efgtoa@ne& (0+255),b
  5388  00082E                     l506:
  5389                           
  5390                           ; BSR set to: 0
  5391                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  5392  00082E  0E00               	movlw	0
  5393  000830  6F9C               	movwf	(efgtoa@pp+1)& (0+255),b
  5394  000832  0E00               	movlw	0
  5395  000834  6F9B               	movwf	efgtoa@pp& (0+255),b
  5396                           
  5397                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  5398  000836  0E00               	movlw	0
  5399  000838  6F9A               	movwf	(efgtoa@t+1)& (0+255),b
  5400  00083A  0E00               	movlw	0
  5401  00083C  6F99               	movwf	efgtoa@t& (0+255),b
  5402                           
  5403                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  5404  00083E  0E00               	movlw	0
  5405  000840  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  5406  000842  0E00               	movlw	0
  5407  000844  6FB3               	movwf	efgtoa@i& (0+255),b
  5408                           
  5409                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 446:     while ((i < m) && (n < (80 - 5))) {
  5410  000846  D0F9               	goto	l6833
  5411  000848                     l6785:
  5412                           
  5413                           ; BSR set to: 0
  5414                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 447:         l = floorf(h/u);
  5415  000848  0060  F2AC  F01C   	movff	efgtoa@h,___fldiv@b
  5416  00084E  0060  F2B0  F01D   	movff	efgtoa@h+1,___fldiv@b+1
  5417  000854  0060  F2B4  F01E   	movff	efgtoa@h+2,___fldiv@b+2
  5418  00085A  0060  F2B8  F01F   	movff	efgtoa@h+3,___fldiv@b+3
  5419  000860  0060  F2F4  F020   	movff	efgtoa@u,___fldiv@a
  5420  000866  0060  F2F8  F021   	movff	efgtoa@u+1,___fldiv@a+1
  5421  00086C  0060  F2FC  F022   	movff	efgtoa@u+2,___fldiv@a+2
  5422  000872  0060  F300  F023   	movff	efgtoa@u+3,___fldiv@a+3
  5423  000878  EC6F  F011         	call	___fldiv	;wreg free
  5424  00087C  0060  F070  F028   	movff	?___fldiv,floorf@x
  5425  000882  0060  F074  F029   	movff	?___fldiv+1,floorf@x+1
  5426  000888  0060  F078  F02A   	movff	?___fldiv+2,floorf@x+2
  5427  00088E  0060  F07C  F02B   	movff	?___fldiv+3,floorf@x+3
  5428  000894  ECC6  F012         	call	_floorf	;wreg free
  5429  000898  0060  F0A0  F0AF   	movff	?_floorf,efgtoa@l
  5430  00089E  0060  F0A4  F0B0   	movff	?_floorf+1,efgtoa@l+1
  5431  0008A4  0060  F0A8  F0B1   	movff	?_floorf+2,efgtoa@l+2
  5432  0008AA  0060  F0AC  F0B2   	movff	?_floorf+3,efgtoa@l+3
  5433                           
  5434                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 448:         d = (int)l;
  5435  0008B0  0060  F2BC  F01C   	movff	efgtoa@l,___fltol@f1
  5436  0008B6  0060  F2C0  F01D   	movff	efgtoa@l+1,___fltol@f1+1
  5437  0008BC  0060  F2C4  F01E   	movff	efgtoa@l+2,___fltol@f1+2
  5438  0008C2  0060  F2C8  F01F   	movff	efgtoa@l+3,___fltol@f1+3
  5439  0008C8  ECBF  F017         	call	___fltol	;wreg free
  5440  0008CC  0060  F070  F0A1   	movff	?___fltol,efgtoa@d
  5441  0008D2  0060  F074  F0A2   	movff	?___fltol+1,efgtoa@d+1
  5442                           
  5443                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 449:         if (!(flags & (1 << 4)) && !d &&
      +                           (mode == 'g') && (ne < 0)) {
  5444  0008D8  B835               	btfsc	_flags,4,c
  5445  0008DA  D00D               	goto	l6797
  5446  0008DC  0100               	movlb	0	; () banked
  5447  0008DE  51A1               	movf	efgtoa@d& (0+255),w,b
  5448  0008E0  11A2               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5449  0008E2  A4D8               	btfss	status,2,c
  5450  0008E4  D008               	goto	l6797
  5451                           
  5452                           ; BSR set to: 0
  5453  0008E6  0E67               	movlw	103
  5454  0008E8  19AA               	xorwf	efgtoa@mode& (0+255),w,b
  5455  0008EA  B4D8               	btfsc	status,2,c
  5456                           
  5457                           ; BSR set to: 0
  5458  0008EC  AFA0               	btfss	(efgtoa@ne+1)& (0+255),7,b
  5459  0008EE  D003               	goto	l6797
  5460                           
  5461                           ; BSR set to: 0
  5462                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 450:             ++t;
  5463  0008F0  4B99               	infsnz	efgtoa@t& (0+255),f,b
  5464  0008F2  2B9A               	incf	(efgtoa@t+1)& (0+255),f,b
  5465                           
  5466                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 451:         } else {
  5467  0008F4  D03A               	goto	l6825
  5468  0008F6                     l6797:
  5469                           
  5470                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 452:             if (!pp && (ne < 0)) {
  5471  0008F6  0100               	movlb	0	; () banked
  5472  0008F8  519B               	movf	efgtoa@pp& (0+255),w,b
  5473  0008FA  119C               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5474  0008FC  B4D8               	btfsc	status,2,c
  5475                           
  5476                           ; BSR set to: 0
  5477  0008FE  AFA0               	btfss	(efgtoa@ne+1)& (0+255),7,b
  5478  000900  D022               	goto	l6817
  5479                           
  5480                           ; BSR set to: 0
  5481                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 453:                 dbuf[n++] = '.';
  5482  000902  0E0B               	movlw	low _dbuf
  5483  000904  25BB               	addwf	efgtoa@n& (0+255),w,b
  5484  000906  6ED9               	movwf	fsr2l,c
  5485  000908  0E01               	movlw	high _dbuf
  5486  00090A  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5487  00090C  6EDA               	movwf	fsr2h,c
  5488  00090E  0E2E               	movlw	46
  5489  000910  6EDF               	movwf	indf2,c
  5490                           
  5491                           ; BSR set to: 0
  5492  000912  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  5493  000914  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  5494                           
  5495                           ; BSR set to: 0
  5496                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 454:                 --w;
  5497  000916  07A8               	decf	efgtoa@w& (0+255),f,b
  5498  000918  A0D8               	btfss	status,0,c
  5499  00091A  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  5500                           
  5501                           ; BSR set to: 0
  5502                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 455:                 pp = 1;
  5503  00091C  0E00               	movlw	0
  5504  00091E  6F9C               	movwf	(efgtoa@pp+1)& (0+255),b
  5505  000920  0E01               	movlw	1
  5506  000922  6F9B               	movwf	efgtoa@pp& (0+255),b
  5507  000924  D010               	goto	l6817
  5508  000926                     l6809:
  5509                           
  5510                           ; BSR set to: 0
  5511                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 458:                 dbuf[n++] = '0';
  5512  000926  0E0B               	movlw	low _dbuf
  5513  000928  25BB               	addwf	efgtoa@n& (0+255),w,b
  5514  00092A  6ED9               	movwf	fsr2l,c
  5515  00092C  0E01               	movlw	high _dbuf
  5516  00092E  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5517  000930  6EDA               	movwf	fsr2h,c
  5518  000932  0E30               	movlw	48
  5519  000934  6EDF               	movwf	indf2,c
  5520                           
  5521                           ; BSR set to: 0
  5522  000936  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  5523  000938  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  5524                           
  5525                           ; BSR set to: 0
  5526                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 459:                 --w;
  5527  00093A  07A8               	decf	efgtoa@w& (0+255),f,b
  5528  00093C  A0D8               	btfss	status,0,c
  5529  00093E  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  5530                           
  5531                           ; BSR set to: 0
  5532                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 460:                 --t;
  5533  000940  0799               	decf	efgtoa@t& (0+255),f,b
  5534  000942  A0D8               	btfss	status,0,c
  5535  000944  079A               	decf	(efgtoa@t+1)& (0+255),f,b
  5536  000946                     l6817:
  5537                           
  5538                           ; BSR set to: 0
  5539                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 457:             while (t) {
  5540  000946  5199               	movf	efgtoa@t& (0+255),w,b
  5541  000948  119A               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5542  00094A  A4D8               	btfss	status,2,c
  5543  00094C  D7EC               	goto	l6809
  5544                           
  5545                           ; BSR set to: 0
  5546                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 462:             dbuf[n++] = '0' + d;
  5547  00094E  0E0B               	movlw	low _dbuf
  5548  000950  25BB               	addwf	efgtoa@n& (0+255),w,b
  5549  000952  6ED9               	movwf	fsr2l,c
  5550  000954  0E01               	movlw	high _dbuf
  5551  000956  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5552  000958  6EDA               	movwf	fsr2h,c
  5553  00095A  51A1               	movf	efgtoa@d& (0+255),w,b
  5554  00095C  0F30               	addlw	48
  5555  00095E  6EDF               	movwf	indf2,c
  5556                           
  5557                           ; BSR set to: 0
  5558  000960  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  5559  000962  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  5560                           
  5561                           ; BSR set to: 0
  5562                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 463:             --w;
  5563  000964  07A8               	decf	efgtoa@w& (0+255),f,b
  5564  000966  A0D8               	btfss	status,0,c
  5565  000968  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  5566  00096A                     l6825:
  5567                           
  5568                           ; BSR set to: 0
  5569                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 465:         h -= l*u;
  5570  00096A  0060  F2AC  F06D   	movff	efgtoa@h,___flsub@b
  5571  000970  0060  F2B0  F06E   	movff	efgtoa@h+1,___flsub@b+1
  5572  000976  0060  F2B4  F06F   	movff	efgtoa@h+2,___flsub@b+2
  5573  00097C  0060  F2B8  F070   	movff	efgtoa@h+3,___flsub@b+3
  5574  000982  0060  F2F4  F020   	movff	efgtoa@u,___flmul@a
  5575  000988  0060  F2F8  F021   	movff	efgtoa@u+1,___flmul@a+1
  5576  00098E  0060  F2FC  F022   	movff	efgtoa@u+2,___flmul@a+2
  5577  000994  0060  F300  F023   	movff	efgtoa@u+3,___flmul@a+3
  5578  00099A  0060  F2BC  F01C   	movff	efgtoa@l,___flmul@b
  5579  0009A0  0060  F2C0  F01D   	movff	efgtoa@l+1,___flmul@b+1
  5580  0009A6  0060  F2C4  F01E   	movff	efgtoa@l+2,___flmul@b+2
  5581  0009AC  0060  F2C8  F01F   	movff	efgtoa@l+3,___flmul@b+3
  5582  0009B2  EC98  F00C         	call	___flmul	;wreg free
  5583  0009B6  0060  F070  F071   	movff	?___flmul,___flsub@a
  5584  0009BC  0060  F074  F072   	movff	?___flmul+1,___flsub@a+1
  5585  0009C2  0060  F078  F073   	movff	?___flmul+2,___flsub@a+2
  5586  0009C8  0060  F07C  F074   	movff	?___flmul+3,___flsub@a+3
  5587  0009CE  ECE5  F01C         	call	___flsub	;wreg free
  5588  0009D2  0060  F1B4  F0AB   	movff	?___flsub,efgtoa@h
  5589  0009D8  0060  F1B8  F0AC   	movff	?___flsub+1,efgtoa@h+1
  5590  0009DE  0060  F1BC  F0AD   	movff	?___flsub+2,efgtoa@h+2
  5591  0009E4  0060  F1C0  F0AE   	movff	?___flsub+3,efgtoa@h+3
  5592                           
  5593                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 466:         u = u/10.0;
  5594  0009EA  0060  F2F4  F01C   	movff	efgtoa@u,___fldiv@b
  5595  0009F0  0060  F2F8  F01D   	movff	efgtoa@u+1,___fldiv@b+1
  5596  0009F6  0060  F2FC  F01E   	movff	efgtoa@u+2,___fldiv@b+2
  5597  0009FC  0060  F300  F01F   	movff	efgtoa@u+3,___fldiv@b+3
  5598  000A02  0E00               	movlw	0
  5599  000A04  6E20               	movwf	___fldiv@a,c
  5600  000A06  0E00               	movlw	0
  5601  000A08  6E21               	movwf	___fldiv@a+1,c
  5602  000A0A  0E20               	movlw	32
  5603  000A0C  6E22               	movwf	___fldiv@a+2,c
  5604  000A0E  0E41               	movlw	65
  5605  000A10  6E23               	movwf	___fldiv@a+3,c
  5606  000A12  EC6F  F011         	call	___fldiv	;wreg free
  5607  000A16  0060  F070  F0BD   	movff	?___fldiv,efgtoa@u
  5608  000A1C  0060  F074  F0BE   	movff	?___fldiv+1,efgtoa@u+1
  5609  000A22  0060  F078  F0BF   	movff	?___fldiv+2,efgtoa@u+2
  5610  000A28  0060  F07C  F0C0   	movff	?___fldiv+3,efgtoa@u+3
  5611                           
  5612                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 467:         --ne;
  5613  000A2E  0100               	movlb	0	; () banked
  5614  000A30  079F               	decf	efgtoa@ne& (0+255),f,b
  5615  000A32  A0D8               	btfss	status,0,c
  5616  000A34  07A0               	decf	(efgtoa@ne+1)& (0+255),f,b
  5617                           
  5618                           ; BSR set to: 0
  5619                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 468:         ++i;
  5620  000A36  4BB3               	infsnz	efgtoa@i& (0+255),f,b
  5621  000A38  2BB4               	incf	(efgtoa@i+1)& (0+255),f,b
  5622  000A3A                     l6833:
  5623                           
  5624                           ; BSR set to: 0
  5625                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 446:     while ((i < m) && (n < (80 - 5))) {
  5626  000A3A  519D               	movf	efgtoa@m& (0+255),w,b
  5627  000A3C  5DB3               	subwf	efgtoa@i& (0+255),w,b
  5628  000A3E  51B4               	movf	(efgtoa@i+1)& (0+255),w,b
  5629  000A40  0A80               	xorlw	128
  5630  000A42  6F84               	movwf	??_efgtoa& (0+255),b
  5631  000A44  519E               	movf	(efgtoa@m+1)& (0+255),w,b
  5632  000A46  0A80               	xorlw	128
  5633  000A48  5984               	subwfb	??_efgtoa& (0+255),w,b
  5634  000A4A  B0D8               	btfsc	status,0,c
  5635  000A4C  D008               	goto	u8430
  5636                           
  5637                           ; BSR set to: 0
  5638  000A4E  BFBC               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5639  000A50  D6FB               	goto	l6785
  5640  000A52  51BC               	movf	(efgtoa@n+1)& (0+255),w,b
  5641  000A54  E104               	bnz	u8430
  5642  000A56  0E4B               	movlw	75
  5643  000A58  5DBB               	subwf	efgtoa@n& (0+255),w,b
  5644  000A5A  A0D8               	btfss	status,0,c
  5645  000A5C  D6F5               	goto	l6785
  5646  000A5E                     u8430:
  5647                           
  5648                           ; BSR set to: 0
  5649                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 470:     if (!pp && (flags & (1 << 4))) {
  5650  000A5E  519B               	movf	efgtoa@pp& (0+255),w,b
  5651  000A60  119C               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5652  000A62  B4D8               	btfsc	status,2,c
  5653                           
  5654                           ; BSR set to: 0
  5655  000A64  A835               	btfss	_flags,4,c
  5656  000A66  D00A               	goto	l6845
  5657                           
  5658                           ; BSR set to: 0
  5659                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 471:         dbuf[n++] = '.';
  5660  000A68  0E0B               	movlw	low _dbuf
  5661  000A6A  25BB               	addwf	efgtoa@n& (0+255),w,b
  5662  000A6C  6ED9               	movwf	fsr2l,c
  5663  000A6E  0E01               	movlw	high _dbuf
  5664  000A70  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5665  000A72  6EDA               	movwf	fsr2h,c
  5666  000A74  0E2E               	movlw	46
  5667  000A76  6EDF               	movwf	indf2,c
  5668                           
  5669                           ; BSR set to: 0
  5670  000A78  4BBB               	infsnz	efgtoa@n& (0+255),f,b
  5671  000A7A  2BBC               	incf	(efgtoa@n+1)& (0+255),f,b
  5672  000A7C                     l6845:
  5673                           
  5674                           ; BSR set to: 0
  5675                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] = '\0';
  5676  000A7C  0E0B               	movlw	low _dbuf
  5677  000A7E  25BB               	addwf	efgtoa@n& (0+255),w,b
  5678  000A80  6ED9               	movwf	fsr2l,c
  5679  000A82  0E01               	movlw	high _dbuf
  5680  000A84  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5681  000A86  6EDA               	movwf	fsr2h,c
  5682  000A88  0E00               	movlw	0
  5683  000A8A  6EDF               	movwf	indf2,c
  5684                           
  5685                           ; BSR set to: 0
  5686                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 476:     if (nmode == 'e') {
  5687  000A8C  0E65               	movlw	101
  5688  000A8E  19A7               	xorwf	efgtoa@nmode& (0+255),w,b
  5689  000A90  A4D8               	btfss	status,2,c
  5690  000A92  EFF7  F000         	goto	l6657
  5691                           
  5692                           ; BSR set to: 0
  5693                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 477:         i = sizeof(dbuf) - 1;
  5694  000A96  0E00               	movlw	0
  5695  000A98  6FB4               	movwf	(efgtoa@i+1)& (0+255),b
  5696  000A9A  0E4F               	movlw	79
  5697  000A9C  6FB3               	movwf	efgtoa@i& (0+255),b
  5698                           
  5699                           ; BSR set to: 0
  5700                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 478:         dbuf[i] = '\0';
  5701  000A9E  0E0B               	movlw	low _dbuf
  5702  000AA0  25B3               	addwf	efgtoa@i& (0+255),w,b
  5703  000AA2  6ED9               	movwf	fsr2l,c
  5704  000AA4  0E01               	movlw	high _dbuf
  5705  000AA6  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5706  000AA8  6EDA               	movwf	fsr2h,c
  5707  000AAA  0E00               	movlw	0
  5708  000AAC  6EDF               	movwf	indf2,c
  5709                           
  5710                           ; BSR set to: 0
  5711                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 479:         sign = 0;
  5712  000AAE  0E00               	movlw	0
  5713  000AB0  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  5714  000AB2  0E00               	movlw	0
  5715  000AB4  6FA3               	movwf	efgtoa@sign& (0+255),b
  5716                           
  5717                           ; BSR set to: 0
  5718                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 480:         if (e < 0) {
  5719  000AB6  AFBA               	btfss	(efgtoa@e+1)& (0+255),7,b
  5720  000AB8  D008               	goto	l6861
  5721                           
  5722                           ; BSR set to: 0
  5723                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 481:             sign = 1;
  5724  000ABA  0E00               	movlw	0
  5725  000ABC  6FA4               	movwf	(efgtoa@sign+1)& (0+255),b
  5726  000ABE  0E01               	movlw	1
  5727  000AC0  6FA3               	movwf	efgtoa@sign& (0+255),b
  5728                           
  5729                           ; BSR set to: 0
  5730                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 482:             e = -e;
  5731  000AC2  6DB9               	negf	efgtoa@e& (0+255),b
  5732  000AC4  1FBA               	comf	(efgtoa@e+1)& (0+255),f,b
  5733  000AC6  B0D8               	btfsc	status,0,c
  5734  000AC8  2BBA               	incf	(efgtoa@e+1)& (0+255),f,b
  5735  000ACA                     l6861:
  5736                           
  5737                           ; BSR set to: 0
  5738                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 484:         p = 2;
  5739  000ACA  0E00               	movlw	0
  5740  000ACC  6FA6               	movwf	(efgtoa@p+1)& (0+255),b
  5741  000ACE  0E02               	movlw	2
  5742  000AD0  6FA5               	movwf	efgtoa@p& (0+255),b
  5743                           
  5744                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 485:         while (e || (0 < p)) {
  5745  000AD2  D031               	goto	l6873
  5746  000AD4                     l6863:
  5747                           
  5748                           ; BSR set to: 0
  5749                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 486:             --i;
  5750  000AD4  07B3               	decf	efgtoa@i& (0+255),f,b
  5751  000AD6  A0D8               	btfss	status,0,c
  5752  000AD8  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
  5753                           
  5754                           ; BSR set to: 0
  5755                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 487:             dbuf[i] = '0' + (e % 10);
  5756  000ADA  0E0B               	movlw	low _dbuf
  5757  000ADC  25B3               	addwf	efgtoa@i& (0+255),w,b
  5758  000ADE  6ED9               	movwf	fsr2l,c
  5759  000AE0  0E01               	movlw	high _dbuf
  5760  000AE2  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5761  000AE4  6EDA               	movwf	fsr2h,c
  5762  000AE6  0060  F2E4  F01C   	movff	efgtoa@e,___awmod@dividend
  5763  000AEC  0060  F2E8  F01D   	movff	efgtoa@e+1,___awmod@dividend+1
  5764  000AF2  0E00               	movlw	0
  5765  000AF4  6E1F               	movwf	___awmod@divisor+1,c
  5766  000AF6  0E0A               	movlw	10
  5767  000AF8  6E1E               	movwf	___awmod@divisor,c
  5768  000AFA  ECDD  F01B         	call	___awmod	;wreg free
  5769  000AFE  501C               	movf	?___awmod,w,c
  5770  000B00  0F30               	addlw	48
  5771  000B02  6EDF               	movwf	indf2,c
  5772                           
  5773                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 488:             e = e / 10;
  5774  000B04  0060  F2E4  F01C   	movff	efgtoa@e,___awdiv@dividend
  5775  000B0A  0060  F2E8  F01D   	movff	efgtoa@e+1,___awdiv@dividend+1
  5776  000B10  0E00               	movlw	0
  5777  000B12  6E1F               	movwf	___awdiv@divisor+1,c
  5778  000B14  0E0A               	movlw	10
  5779  000B16  6E1E               	movwf	___awdiv@divisor,c
  5780  000B18  EC58  F01B         	call	___awdiv	;wreg free
  5781  000B1C  0060  F070  F0B9   	movff	?___awdiv,efgtoa@e
  5782  000B22  0060  F074  F0BA   	movff	?___awdiv+1,efgtoa@e+1
  5783                           
  5784                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 489:             --p;
  5785  000B28  0100               	movlb	0	; () banked
  5786  000B2A  07A5               	decf	efgtoa@p& (0+255),f,b
  5787  000B2C  A0D8               	btfss	status,0,c
  5788  000B2E  07A6               	decf	(efgtoa@p+1)& (0+255),f,b
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 490:             --w;
  5792  000B30  07A8               	decf	efgtoa@w& (0+255),f,b
  5793  000B32  A0D8               	btfss	status,0,c
  5794  000B34  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  5795  000B36                     l6873:
  5796                           
  5797                           ; BSR set to: 0
  5798                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 485:         while (e || (0 < p)) {
  5799  000B36  51B9               	movf	efgtoa@e& (0+255),w,b
  5800  000B38  11BA               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5801  000B3A  A4D8               	btfss	status,2,c
  5802  000B3C  D7CB               	goto	l6863
  5803                           
  5804                           ; BSR set to: 0
  5805  000B3E  BFA6               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5806  000B40  D005               	goto	u8490
  5807  000B42  51A6               	movf	(efgtoa@p+1)& (0+255),w,b
  5808  000B44  E1C7               	bnz	l6863
  5809  000B46  05A5               	decf	efgtoa@p& (0+255),w,b
  5810  000B48  B0D8               	btfsc	status,0,c
  5811  000B4A  D7C4               	goto	l6863
  5812  000B4C                     u8490:
  5813                           
  5814                           ; BSR set to: 0
  5815                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 492:         --i;
  5816  000B4C  07B3               	decf	efgtoa@i& (0+255),f,b
  5817  000B4E  A0D8               	btfss	status,0,c
  5818  000B50  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
  5819                           
  5820                           ; BSR set to: 0
  5821                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 493:         dbuf[i] = sign ? '-' : '+';
  5822  000B52  51A3               	movf	efgtoa@sign& (0+255),w,b
  5823  000B54  11A4               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5824  000B56  A4D8               	btfss	status,2,c
  5825  000B58  D004               	goto	l6883
  5826                           
  5827                           ; BSR set to: 0
  5828  000B5A  0E00               	movlw	0
  5829  000B5C  6F94               	movwf	(_efgtoa$1790+1)& (0+255),b
  5830  000B5E  0E2B               	movlw	43
  5831  000B60  D003               	goto	L7
  5832  000B62                     l6883:
  5833                           
  5834                           ; BSR set to: 0
  5835  000B62  0E00               	movlw	0
  5836  000B64  6F94               	movwf	(_efgtoa$1790+1)& (0+255),b
  5837  000B66  0E2D               	movlw	45
  5838  000B68                     L7:
  5839  000B68  6F93               	movwf	_efgtoa$1790& (0+255),b
  5840                           
  5841                           ; BSR set to: 0
  5842  000B6A  0E0B               	movlw	low _dbuf
  5843  000B6C  25B3               	addwf	efgtoa@i& (0+255),w,b
  5844  000B6E  6ED9               	movwf	fsr2l,c
  5845  000B70  0E01               	movlw	high _dbuf
  5846  000B72  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5847  000B74  6EDA               	movwf	fsr2h,c
  5848  000B76  0060  F24F  FFDF   	movff	_efgtoa$1790,indf2
  5849                           
  5850                           ; BSR set to: 0
  5851                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 494:         --w;
  5852  000B7C  07A8               	decf	efgtoa@w& (0+255),f,b
  5853  000B7E  A0D8               	btfss	status,0,c
  5854  000B80  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  5855                           
  5856                           ; BSR set to: 0
  5857                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 496:         dbuf[i] = (0 ? isupper((int)c) :
      +                           ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5858  000B82  07B3               	decf	efgtoa@i& (0+255),f,b
  5859  000B84  A0D8               	btfss	status,0,c
  5860  000B86  07B4               	decf	(efgtoa@i+1)& (0+255),f,b
  5861                           
  5862                           ; BSR set to: 0
  5863  000B88  0EBF               	movlw	191
  5864  000B8A  6F84               	movwf	??_efgtoa& (0+255),b
  5865  000B8C  0EFF               	movlw	255
  5866  000B8E  6F85               	movwf	(??_efgtoa+1)& (0+255),b
  5867  000B90  5183               	movf	efgtoa@c& (0+255),w,b
  5868  000B92  6F86               	movwf	(??_efgtoa+2)& (0+255),b
  5869  000B94  6B87               	clrf	(??_efgtoa+3)& (0+255),b
  5870  000B96  5184               	movf	??_efgtoa& (0+255),w,b
  5871  000B98  2786               	addwf	(??_efgtoa+2)& (0+255),f,b
  5872  000B9A  5185               	movf	(??_efgtoa+1)& (0+255),w,b
  5873  000B9C  2387               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5874  000B9E  5187               	movf	(??_efgtoa+3)& (0+255),w,b
  5875  000BA0  E106               	bnz	u8510
  5876  000BA2  0E1A               	movlw	26
  5877  000BA4  5D86               	subwf	(??_efgtoa+2)& (0+255),w,b
  5878  000BA6  B0D8               	btfsc	status,0,c
  5879  000BA8  D002               	goto	u8510
  5880  000BAA  0E01               	movlw	1
  5881  000BAC  D001               	goto	u8520
  5882  000BAE                     u8510:
  5883  000BAE  0E00               	movlw	0
  5884  000BB0                     u8520:
  5885  000BB0  6F97               	movwf	_efgtoa$1792& (0+255),b
  5886  000BB2  6B98               	clrf	(_efgtoa$1792+1)& (0+255),b
  5887                           
  5888                           ; BSR set to: 0
  5889  000BB4  5197               	movf	_efgtoa$1792& (0+255),w,b
  5890  000BB6  1198               	iorwf	(_efgtoa$1792+1)& (0+255),w,b
  5891  000BB8  A4D8               	btfss	status,2,c
  5892  000BBA  D004               	goto	l6899
  5893                           
  5894                           ; BSR set to: 0
  5895  000BBC  0E00               	movlw	0
  5896  000BBE  6F96               	movwf	(_efgtoa$1791+1)& (0+255),b
  5897  000BC0  0E65               	movlw	101
  5898  000BC2  D003               	goto	L8
  5899  000BC4                     l6899:
  5900                           
  5901                           ; BSR set to: 0
  5902  000BC4  0E00               	movlw	0
  5903  000BC6  6F96               	movwf	(_efgtoa$1791+1)& (0+255),b
  5904  000BC8  0E45               	movlw	69
  5905  000BCA                     L8:
  5906  000BCA  6F95               	movwf	_efgtoa$1791& (0+255),b
  5907                           
  5908                           ; BSR set to: 0
  5909  000BCC  0E0B               	movlw	low _dbuf
  5910  000BCE  25B3               	addwf	efgtoa@i& (0+255),w,b
  5911  000BD0  6ED9               	movwf	fsr2l,c
  5912  000BD2  0E01               	movlw	high _dbuf
  5913  000BD4  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5914  000BD6  6EDA               	movwf	fsr2h,c
  5915  000BD8  0060  F257  FFDF   	movff	_efgtoa$1791,indf2
  5916                           
  5917                           ; BSR set to: 0
  5918                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 497:         --w;
  5919  000BDE  07A8               	decf	efgtoa@w& (0+255),f,b
  5920  000BE0  A0D8               	btfss	status,0,c
  5921  000BE2  07A9               	decf	(efgtoa@w+1)& (0+255),f,b
  5922                           
  5923                           ; BSR set to: 0
  5924                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 498:         strcpy(&dbuf[n], &dbuf[i]);
  5925  000BE4  0E0B               	movlw	low _dbuf
  5926  000BE6  25BB               	addwf	efgtoa@n& (0+255),w,b
  5927  000BE8  6E1C               	movwf	strcpy@dest,c
  5928  000BEA  0E01               	movlw	high _dbuf
  5929  000BEC  21BC               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5930  000BEE  6E1D               	movwf	strcpy@dest+1,c
  5931  000BF0  0E0B               	movlw	low _dbuf
  5932  000BF2  25B3               	addwf	efgtoa@i& (0+255),w,b
  5933  000BF4  6E1E               	movwf	strcpy@src,c
  5934  000BF6  0E01               	movlw	high _dbuf
  5935  000BF8  21B4               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5936  000BFA  6E1F               	movwf	strcpy@src+1,c
  5937  000BFC  EC81  F01C         	call	_strcpy	;wreg free
  5938  000C00  EFF7  F000         	goto	l6657
  5939  000C04                     __end_of_efgtoa:
  5940                           	opt callstack 0
  5941                           
  5942 ;; *************** function _tolower *****************
  5943 ;; Defined at:
  5944 ;;		line 4 in file "D:\MPLAB\pic\sources\c99\common\tolower.c"
  5945 ;; Parameters:    Size  Location     Type
  5946 ;;  c               2   33[COMRAM] int 
  5947 ;; Auto vars:     Size  Location     Type
  5948 ;;		None
  5949 ;; Return value:  Size  Location     Type
  5950 ;;                  2   33[COMRAM] int 
  5951 ;; Registers used:
  5952 ;;		wreg, status,2, status,0
  5953 ;; Tracked objects:
  5954 ;;		On entry : 0/0
  5955 ;;		On exit  : 0/0
  5956 ;;		Unchanged: 0/0
  5957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5958 ;;      Params:         2       0       0       0       0       0       0       0       0
  5959 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5960 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5961 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5962 ;;Total ram usage:        8 bytes
  5963 ;; Hardware stack levels used:    1
  5964 ;; Hardware stack levels required when called:    4
  5965 ;; This function calls:
  5966 ;;		_isupper
  5967 ;; This function is called by:
  5968 ;;		_efgtoa
  5969 ;;		_vfpfcnvrt
  5970 ;; This function uses a non-reentrant model
  5971 ;;
  5972                           
  5973                           	psect	text6
  5974  003A2A                     __ptext6:
  5975                           	opt callstack 0
  5976  003A2A                     _tolower:
  5977                           	opt callstack 23
  5978                           
  5979                           ;incstack = 0
  5980  003A2A  0EBF               	movlw	191
  5981  003A2C  6E24               	movwf	??_tolower& (0+255),c
  5982  003A2E  0EFF               	movlw	255
  5983  003A30  6E25               	movwf	(??_tolower+1)& (0+255),c
  5984  003A32  0060  F088  F026   	movff	tolower@c,??_tolower+2
  5985  003A38  0060  F08C  F027   	movff	tolower@c+1,??_tolower+3
  5986  003A3E  5024               	movf	??_tolower,w,c
  5987  003A40  2626               	addwf	??_tolower+2,f,c
  5988  003A42  5025               	movf	??_tolower+1,w,c
  5989  003A44  2227               	addwfc	??_tolower+3,f,c
  5990  003A46  5027               	movf	??_tolower+3,w,c
  5991  003A48  E106               	bnz	u6870
  5992  003A4A  0E1A               	movlw	26
  5993  003A4C  5C26               	subwf	??_tolower+2,w,c
  5994  003A4E  B0D8               	btfsc	status,0,c
  5995  003A50  D002               	goto	u6870
  5996  003A52  0E01               	movlw	1
  5997  003A54  D001               	goto	u6880
  5998  003A56                     u6870:
  5999  003A56  0E00               	movlw	0
  6000  003A58                     u6880:
  6001  003A58  6E28               	movwf	_tolower$2401,c
  6002  003A5A  6A29               	clrf	_tolower$2401+1,c
  6003  003A5C  5028               	movf	_tolower$2401,w,c
  6004  003A5E  1029               	iorwf	_tolower$2401+1,w,c
  6005  003A60  B4D8               	btfsc	status,2,c
  6006  003A62  D006               	goto	l1391
  6007  003A64  0E20               	movlw	32
  6008  003A66  1022               	iorwf	tolower@c,w,c
  6009  003A68  6E22               	movwf	?_tolower,c
  6010  003A6A  5023               	movf	tolower@c+1,w,c
  6011  003A6C  6E23               	movwf	?_tolower+1,c
  6012  003A6E  0012               	return	
  6013  003A70                     l1391:
  6014  003A70  0060  F088  F022   	movff	tolower@c,?_tolower
  6015  003A76  0060  F08C  F023   	movff	tolower@c+1,?_tolower+1
  6016  003A7C  0012               	return		;funcret
  6017  003A7E                     __end_of_tolower:
  6018                           	opt callstack 0
  6019                           
  6020 ;; *************** function _isupper *****************
  6021 ;; Defined at:
  6022 ;;		line 5 in file "D:\MPLAB\pic\sources\c99\common\isupper.c"
  6023 ;; Parameters:    Size  Location     Type
  6024 ;;  c               2   27[COMRAM] int 
  6025 ;; Auto vars:     Size  Location     Type
  6026 ;;		None
  6027 ;; Return value:  Size  Location     Type
  6028 ;;                  2   27[COMRAM] int 
  6029 ;; Registers used:
  6030 ;;		wreg, status,2, status,0
  6031 ;; Tracked objects:
  6032 ;;		On entry : 0/0
  6033 ;;		On exit  : 0/0
  6034 ;;		Unchanged: 0/0
  6035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6036 ;;      Params:         2       0       0       0       0       0       0       0       0
  6037 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6038 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6039 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6040 ;;Total ram usage:        6 bytes
  6041 ;; Hardware stack levels used:    1
  6042 ;; Hardware stack levels required when called:    3
  6043 ;; This function calls:
  6044 ;;		Nothing
  6045 ;; This function is called by:
  6046 ;;		_efgtoa
  6047 ;;		_vfpfcnvrt
  6048 ;;		_tolower
  6049 ;; This function uses a non-reentrant model
  6050 ;;
  6051                           
  6052                           	psect	text7
  6053  003BF8                     __ptext7:
  6054                           	opt callstack 0
  6055  003BF8                     _isupper:
  6056                           	opt callstack 23
  6057                           
  6058                           ;incstack = 0
  6059  003BF8  0EBF               	movlw	191
  6060  003BFA  6E1E               	movwf	??_isupper& (0+255),c
  6061  003BFC  0EFF               	movlw	255
  6062  003BFE  6E1F               	movwf	(??_isupper+1)& (0+255),c
  6063  003C00  0060  F070  F020   	movff	isupper@c,??_isupper+2
  6064  003C06  0060  F074  F021   	movff	isupper@c+1,??_isupper+3
  6065  003C0C  501E               	movf	??_isupper,w,c
  6066  003C0E  2620               	addwf	??_isupper+2,f,c
  6067  003C10  501F               	movf	??_isupper+1,w,c
  6068  003C12  2221               	addwfc	??_isupper+3,f,c
  6069  003C14  5021               	movf	??_isupper+3,w,c
  6070  003C16  E106               	bnz	u6320
  6071  003C18  0E1A               	movlw	26
  6072  003C1A  5C20               	subwf	??_isupper+2,w,c
  6073  003C1C  B0D8               	btfsc	status,0,c
  6074  003C1E  D002               	goto	u6320
  6075  003C20  0E01               	movlw	1
  6076  003C22  D001               	goto	u6330
  6077  003C24                     u6320:
  6078  003C24  0E00               	movlw	0
  6079  003C26                     u6330:
  6080  003C26  6E1C               	movwf	?_isupper,c
  6081  003C28  6A1D               	clrf	?_isupper+1,c
  6082  003C2A  0012               	return		;funcret
  6083  003C2C                     __end_of_isupper:
  6084                           	opt callstack 0
  6085                           
  6086 ;; *************** function _strcpy *****************
  6087 ;; Defined at:
  6088 ;;		line 7 in file "D:\MPLAB\pic\sources\c99\common\strcpy.c"
  6089 ;; Parameters:    Size  Location     Type
  6090 ;;  dest            2   27[COMRAM] PTR unsigned char 
  6091 ;;		 -> dbuf(80), 
  6092 ;;  src             2   29[COMRAM] PTR const unsigned char 
  6093 ;;		 -> STR_39(4), STR_38(4), STR_35(4), STR_34(4), 
  6094 ;;		 -> dbuf(80), 
  6095 ;; Auto vars:     Size  Location     Type
  6096 ;;  d               2   35[COMRAM] PTR unsigned char 
  6097 ;;		 -> dbuf(80), 
  6098 ;;  s               2   33[COMRAM] PTR const unsigned char 
  6099 ;;		 -> STR_39(4), STR_38(4), STR_35(4), STR_34(4), 
  6100 ;;		 -> dbuf(80), 
  6101 ;; Return value:  Size  Location     Type
  6102 ;;                  2   27[COMRAM] PTR unsigned char 
  6103 ;; Registers used:
  6104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6105 ;; Tracked objects:
  6106 ;;		On entry : 0/0
  6107 ;;		On exit  : 0/0
  6108 ;;		Unchanged: 0/0
  6109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6110 ;;      Params:         4       0       0       0       0       0       0       0       0
  6111 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6112 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6113 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6114 ;;Total ram usage:       10 bytes
  6115 ;; Hardware stack levels used:    1
  6116 ;; Hardware stack levels required when called:    3
  6117 ;; This function calls:
  6118 ;;		Nothing
  6119 ;; This function is called by:
  6120 ;;		_efgtoa
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           
  6124                           	psect	text8
  6125  003902                     __ptext8:
  6126                           	opt callstack 0
  6127  003902                     _strcpy:
  6128                           	opt callstack 23
  6129                           
  6130                           ;incstack = 0
  6131  003902  0060  F078  F022   	movff	strcpy@src,strcpy@s
  6132  003908  0060  F07C  F023   	movff	strcpy@src+1,strcpy@s+1
  6133  00390E  0060  F070  F024   	movff	strcpy@dest,strcpy@d
  6134  003914  0060  F074  F025   	movff	strcpy@dest+1,strcpy@d+1
  6135  00391A                     l5965:
  6136  00391A  5022               	movf	strcpy@s,w,c
  6137  00391C  6E20               	movwf	??_strcpy& (0+255),c
  6138  00391E  5023               	movf	strcpy@s+1,w,c
  6139  003920  6E21               	movwf	(??_strcpy+1)& (0+255),c
  6140  003922  4A22               	infsnz	strcpy@s,f,c
  6141  003924  2A23               	incf	strcpy@s+1,f,c
  6142  003926  0060  F083  FFF6   	movff	??_strcpy,tblptrl
  6143  00392C  0060  F087  FFF7   	movff	??_strcpy+1,tblptrh
  6144  003932  6AF8               	clrf	tblptru,c
  6145  003934  0060  F093  FFD9   	movff	strcpy@d,fsr2l
  6146  00393A  0060  F097  FFDA   	movff	strcpy@d+1,fsr2h
  6147  003940  4A24               	infsnz	strcpy@d,f,c
  6148  003942  2A25               	incf	strcpy@d+1,f,c
  6149  003944  0E07               	movlw	(high __ramtop+-1)
  6150  003946  64F7               	cpfsgt	tblptrh,c
  6151  003948  D003               	bra	u6857
  6152  00394A  0008               	tblrd		*
  6153  00394C  50F5               	movf	tablat,w,c
  6154  00394E  D007               	bra	u6850
  6155  003950                     u6857:
  6156  003950  006F FFDB FFE1     	movff	tblptrl,fsr1l
  6157  003956  006F FFDF FFE2     	movff	tblptrh,fsr1h
  6158  00395C  50E7               	movf	indf1,w,c
  6159  00395E                     u6850:
  6160  00395E  6EDF               	movwf	indf2,c
  6161  003960  50DF               	movf	indf2,w,c
  6162  003962  B4D8               	btfsc	status,2,c
  6163  003964  0012               	return	
  6164  003966  D7D9               	goto	l5965
  6165  003968                     __end_of_strcpy:
  6166                           	opt callstack 0
  6167                           
  6168 ;; *************** function _floorf *****************
  6169 ;; Defined at:
  6170 ;;		line 3 in file "D:\MPLAB\pic\sources\c99\common\floorf.c"
  6171 ;; Parameters:    Size  Location     Type
  6172 ;;  x               4   39[COMRAM] float 
  6173 ;; Auto vars:     Size  Location     Type
  6174 ;;  u               4   25[BANK0 ] struct .
  6175 ;;  m               4   19[BANK0 ] unsigned long 
  6176 ;;  e               2   23[BANK0 ] int 
  6177 ;; Return value:  Size  Location     Type
  6178 ;;                  4   39[COMRAM] float 
  6179 ;; Registers used:
  6180 ;;		wreg, status,2, status,0
  6181 ;; Tracked objects:
  6182 ;;		On entry : 0/0
  6183 ;;		On exit  : 0/0
  6184 ;;		Unchanged: 0/0
  6185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6186 ;;      Params:         4       0       0       0       0       0       0       0       0
  6187 ;;      Locals:         0      10       0       0       0       0       0       0       0
  6188 ;;      Temps:          0       6       0       0       0       0       0       0       0
  6189 ;;      Totals:         4      16       0       0       0       0       0       0       0
  6190 ;;Total ram usage:       20 bytes
  6191 ;; Hardware stack levels used:    1
  6192 ;; Hardware stack levels required when called:    3
  6193 ;; This function calls:
  6194 ;;		Nothing
  6195 ;; This function is called by:
  6196 ;;		_efgtoa
  6197 ;; This function uses a non-reentrant model
  6198 ;;
  6199                           
  6200                           	psect	text9
  6201  00258C                     __ptext9:
  6202                           	opt callstack 0
  6203  00258C                     _floorf:
  6204                           	opt callstack 23
  6205                           
  6206                           ;incstack = 0
  6207  00258C  0060  F3CC  F079   	movff	floorf@F524,floorf@u
  6208  002592  0060  F3D0  F07A   	movff	floorf@F524+1,floorf@u+1
  6209  002598  0060  F3D4  F07B   	movff	floorf@F524+2,floorf@u+2
  6210  00259E  0060  F3D8  F07C   	movff	floorf@F524+3,floorf@u+3
  6211  0025A4  0060  F0A0  F079   	movff	floorf@x,floorf@u
  6212  0025AA  0060  F0A4  F07A   	movff	floorf@x+1,floorf@u+1
  6213  0025B0  0060  F0A8  F07B   	movff	floorf@x+2,floorf@u+2
  6214  0025B6  0060  F0AC  F07C   	movff	floorf@x+3,floorf@u+3
  6215  0025BC  0E81               	movlw	129
  6216  0025BE  0100               	movlb	0	; () banked
  6217  0025C0  6F6D               	movwf	??_floorf& (0+255),b
  6218  0025C2  0EFF               	movlw	255
  6219  0025C4  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6220  0025C6  0060  F1E4  F06F   	movff	floorf@u,??_floorf+2
  6221  0025CC  0060  F1E8  F070   	movff	floorf@u+1,??_floorf+3
  6222  0025D2  0060  F1EC  F071   	movff	floorf@u+2,??_floorf+4
  6223  0025D8  0060  F1F0  F072   	movff	floorf@u+3,??_floorf+5
  6224  0025DE  0E18               	movlw	24
  6225  0025E0  D005               	goto	u6900
  6226  0025E2                     u6905:
  6227  0025E2  90D8               	bcf	status,0,c
  6228  0025E4  3372               	rrcf	(??_floorf+5)& (0+255),f,b
  6229  0025E6  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  6230  0025E8  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6231  0025EA  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6232  0025EC                     u6900:
  6233  0025EC  2EE8               	decfsz	wreg,f,c
  6234  0025EE  D7F9               	goto	u6905
  6235  0025F0  516F               	movf	(??_floorf+2)& (0+255),w,b
  6236  0025F2  256D               	addwf	??_floorf& (0+255),w,b
  6237  0025F4  6F77               	movwf	floorf@e& (0+255),b
  6238  0025F6  0E00               	movlw	0
  6239  0025F8  216E               	addwfc	(??_floorf+1)& (0+255),w,b
  6240  0025FA  6F78               	movwf	(floorf@e+1)& (0+255),b
  6241  0025FC  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  6242  0025FE  D013               	goto	l5983
  6243  002600  5178               	movf	(floorf@e+1)& (0+255),w,b
  6244  002602  E104               	bnz	u6910
  6245  002604  0E17               	movlw	23
  6246  002606  5D77               	subwf	floorf@e& (0+255),w,b
  6247  002608  A0D8               	btfss	status,0,c
  6248  00260A  D00D               	goto	l5983
  6249  00260C                     u6910:
  6250                           
  6251                           ; BSR set to: 0
  6252  00260C  0060  F0A0  F028   	movff	floorf@x,?_floorf
  6253  002612  0060  F0A4  F029   	movff	floorf@x+1,?_floorf+1
  6254  002618  0060  F0A8  F02A   	movff	floorf@x+2,?_floorf+2
  6255  00261E  0060  F0AC  F02B   	movff	floorf@x+3,?_floorf+3
  6256  002624  0012               	return	
  6257  002626                     l5983:
  6258                           
  6259                           ; BSR set to: 0
  6260  002626  BF78               	btfsc	(floorf@e+1)& (0+255),7,b
  6261  002628  D068               	goto	l5993
  6262                           
  6263                           ; BSR set to: 0
  6264  00262A  0060  F1DC  F06D   	movff	floorf@e,??_floorf
  6265  002630  0EFF               	movlw	255
  6266  002632  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6267  002634  0EFF               	movlw	255
  6268  002636  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6269  002638  0E7F               	movlw	127
  6270  00263A  6F70               	movwf	(??_floorf+3)& (0+255),b
  6271  00263C  0E00               	movlw	0
  6272  00263E  6F71               	movwf	(??_floorf+4)& (0+255),b
  6273  002640                     u6935:
  6274  002640  676D               	tstfsz	??_floorf& (0+255),b
  6275  002642  D001               	goto	u6936
  6276  002644  D007               	goto	u6937
  6277  002646                     u6936:
  6278  002646  3571               	rlcf	(??_floorf+4)& (0+255),w,b
  6279  002648  3371               	rrcf	(??_floorf+4)& (0+255),f,b
  6280  00264A  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6281  00264C  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6282  00264E  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  6283  002650  2F6D               	decfsz	??_floorf& (0+255),f,b
  6284  002652  D7F6               	goto	u6935
  6285  002654                     u6937:
  6286  002654  0060  F1B8  F073   	movff	??_floorf+1,floorf@m
  6287  00265A  0060  F1BC  F074   	movff	??_floorf+2,floorf@m+1
  6288  002660  0060  F1C0  F075   	movff	??_floorf+3,floorf@m+2
  6289  002666  0060  F1C4  F076   	movff	??_floorf+4,floorf@m+3
  6290  00266C  0100               	movlb	0	; () banked
  6291  00266E  5173               	movf	floorf@m& (0+255),w,b
  6292  002670  1579               	andwf	floorf@u& (0+255),w,b
  6293  002672  6F6D               	movwf	??_floorf& (0+255),b
  6294  002674  5174               	movf	(floorf@m+1)& (0+255),w,b
  6295  002676  157A               	andwf	(floorf@u+1)& (0+255),w,b
  6296  002678  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6297  00267A  5175               	movf	(floorf@m+2)& (0+255),w,b
  6298  00267C  157B               	andwf	(floorf@u+2)& (0+255),w,b
  6299  00267E  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6300  002680  5176               	movf	(floorf@m+3)& (0+255),w,b
  6301  002682  157C               	andwf	(floorf@u+3)& (0+255),w,b
  6302  002684  6F70               	movwf	(??_floorf+3)& (0+255),b
  6303  002686  516D               	movf	??_floorf& (0+255),w,b
  6304  002688  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6305  00268A  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6306  00268C  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6307  00268E  B4D8               	btfsc	status,2,c
  6308  002690  D7BD               	goto	u6910
  6309                           
  6310                           ; BSR set to: 0
  6311  002692  0060  F1E4  F06D   	movff	floorf@u,??_floorf
  6312  002698  0060  F1E8  F06E   	movff	floorf@u+1,??_floorf+1
  6313  00269E  0060  F1EC  F06F   	movff	floorf@u+2,??_floorf+2
  6314  0026A4  0060  F1F0  F070   	movff	floorf@u+3,??_floorf+3
  6315  0026AA  0E20               	movlw	32
  6316  0026AC  D005               	goto	u6950
  6317  0026AE                     u6955:
  6318  0026AE  90D8               	bcf	status,0,c
  6319  0026B0  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6320  0026B2  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6321  0026B4  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  6322  0026B6  336D               	rrcf	??_floorf& (0+255),f,b
  6323  0026B8                     u6950:
  6324  0026B8  2EE8               	decfsz	wreg,f,c
  6325  0026BA  D7F9               	goto	u6955
  6326  0026BC  516D               	movf	??_floorf& (0+255),w,b
  6327  0026BE  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6328  0026C0  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6329  0026C2  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6330  0026C4  B4D8               	btfsc	status,2,c
  6331  0026C6  D008               	goto	l1311
  6332                           
  6333                           ; BSR set to: 0
  6334  0026C8  5173               	movf	floorf@m& (0+255),w,b
  6335  0026CA  2779               	addwf	floorf@u& (0+255),f,b
  6336  0026CC  5174               	movf	(floorf@m+1)& (0+255),w,b
  6337  0026CE  237A               	addwfc	(floorf@u+1)& (0+255),f,b
  6338  0026D0  5175               	movf	(floorf@m+2)& (0+255),w,b
  6339  0026D2  237B               	addwfc	(floorf@u+2)& (0+255),f,b
  6340  0026D4  5176               	movf	(floorf@m+3)& (0+255),w,b
  6341  0026D6  237C               	addwfc	(floorf@u+3)& (0+255),f,b
  6342  0026D8                     l1311:
  6343                           
  6344                           ; BSR set to: 0
  6345  0026D8  1D73               	comf	floorf@m& (0+255),w,b
  6346  0026DA  6F6D               	movwf	??_floorf& (0+255),b
  6347  0026DC  1D74               	comf	(floorf@m+1)& (0+255),w,b
  6348  0026DE  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6349  0026E0  1D75               	comf	(floorf@m+2)& (0+255),w,b
  6350  0026E2  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6351  0026E4  1D76               	comf	(floorf@m+3)& (0+255),w,b
  6352  0026E6  6F70               	movwf	(??_floorf+3)& (0+255),b
  6353  0026E8  516D               	movf	??_floorf& (0+255),w,b
  6354  0026EA  1779               	andwf	floorf@u& (0+255),f,b
  6355  0026EC  516E               	movf	(??_floorf+1)& (0+255),w,b
  6356  0026EE  177A               	andwf	(floorf@u+1)& (0+255),f,b
  6357  0026F0  516F               	movf	(??_floorf+2)& (0+255),w,b
  6358  0026F2  177B               	andwf	(floorf@u+2)& (0+255),f,b
  6359  0026F4  5170               	movf	(??_floorf+3)& (0+255),w,b
  6360  0026F6  177C               	andwf	(floorf@u+3)& (0+255),f,b
  6361  0026F8  D03A               	goto	l6001
  6362  0026FA                     l5993:
  6363                           
  6364                           ; BSR set to: 0
  6365  0026FA  0060  F1E4  F06D   	movff	floorf@u,??_floorf
  6366  002700  0060  F1E8  F06E   	movff	floorf@u+1,??_floorf+1
  6367  002706  0060  F1EC  F06F   	movff	floorf@u+2,??_floorf+2
  6368  00270C  0060  F1F0  F070   	movff	floorf@u+3,??_floorf+3
  6369  002712  0E20               	movlw	32
  6370  002714  D005               	goto	u6970
  6371  002716                     u6975:
  6372  002716  90D8               	bcf	status,0,c
  6373  002718  3370               	rrcf	(??_floorf+3)& (0+255),f,b
  6374  00271A  336F               	rrcf	(??_floorf+2)& (0+255),f,b
  6375  00271C  336E               	rrcf	(??_floorf+1)& (0+255),f,b
  6376  00271E  336D               	rrcf	??_floorf& (0+255),f,b
  6377  002720                     u6970:
  6378  002720  2EE8               	decfsz	wreg,f,c
  6379  002722  D7F9               	goto	u6975
  6380  002724  516D               	movf	??_floorf& (0+255),w,b
  6381  002726  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6382  002728  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6383  00272A  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6384  00272C  A4D8               	btfss	status,2,c
  6385  00272E  D008               	goto	l5997
  6386                           
  6387                           ; BSR set to: 0
  6388  002730  0E00               	movlw	0
  6389  002732  6F79               	movwf	floorf@u& (0+255),b
  6390  002734  0E00               	movlw	0
  6391  002736  6F7A               	movwf	(floorf@u+1)& (0+255),b
  6392  002738  0E00               	movlw	0
  6393  00273A  6F7B               	movwf	(floorf@u+2)& (0+255),b
  6394  00273C  0E00               	movlw	0
  6395  00273E  D016               	goto	L9
  6396  002740                     l5997:
  6397                           
  6398                           ; BSR set to: 0
  6399  002740  90D8               	bcf	status,0,c
  6400  002742  3579               	rlcf	floorf@u& (0+255),w,b
  6401  002744  6F6D               	movwf	??_floorf& (0+255),b
  6402  002746  357A               	rlcf	(floorf@u+1)& (0+255),w,b
  6403  002748  6F6E               	movwf	(??_floorf+1)& (0+255),b
  6404  00274A  357B               	rlcf	(floorf@u+2)& (0+255),w,b
  6405  00274C  6F6F               	movwf	(??_floorf+2)& (0+255),b
  6406  00274E  357C               	rlcf	(floorf@u+3)& (0+255),w,b
  6407  002750  6F70               	movwf	(??_floorf+3)& (0+255),b
  6408  002752  516D               	movf	??_floorf& (0+255),w,b
  6409  002754  116E               	iorwf	(??_floorf+1)& (0+255),w,b
  6410  002756  116F               	iorwf	(??_floorf+2)& (0+255),w,b
  6411  002758  1170               	iorwf	(??_floorf+3)& (0+255),w,b
  6412  00275A  B4D8               	btfsc	status,2,c
  6413  00275C  D008               	goto	l6001
  6414                           
  6415                           ; BSR set to: 0
  6416  00275E  0E00               	movlw	0
  6417  002760  6F79               	movwf	floorf@u& (0+255),b
  6418  002762  0E00               	movlw	0
  6419  002764  6F7A               	movwf	(floorf@u+1)& (0+255),b
  6420  002766  0E80               	movlw	128
  6421  002768  6F7B               	movwf	(floorf@u+2)& (0+255),b
  6422  00276A  0EBF               	movlw	191
  6423  00276C                     L9:
  6424  00276C  6F7C               	movwf	(floorf@u+3)& (0+255),b
  6425  00276E                     l6001:
  6426                           
  6427                           ; BSR set to: 0
  6428  00276E  0060  F1E4  F028   	movff	floorf@u,?_floorf
  6429  002774  0060  F1E8  F029   	movff	floorf@u+1,?_floorf+1
  6430  00277A  0060  F1EC  F02A   	movff	floorf@u+2,?_floorf+2
  6431  002780  0060  F1F0  F02B   	movff	floorf@u+3,?_floorf+3
  6432                           
  6433                           ; BSR set to: 0
  6434  002786  0012               	return		;funcret
  6435  002788                     __end_of_floorf:
  6436                           	opt callstack 0
  6437                           
  6438 ;; *************** function ___fpclassifyf *****************
  6439 ;; Defined at:
  6440 ;;		line 4 in file "D:\MPLAB\pic\sources\c99\common\__fpclassifyf.c"
  6441 ;; Parameters:    Size  Location     Type
  6442 ;;  x               4   27[COMRAM] float 
  6443 ;; Auto vars:     Size  Location     Type
  6444 ;;  u               4   37[COMRAM] struct .
  6445 ;;  e               2   35[COMRAM] int 
  6446 ;; Return value:  Size  Location     Type
  6447 ;;                  2   27[COMRAM] int 
  6448 ;; Registers used:
  6449 ;;		wreg, status,2, status,0
  6450 ;; Tracked objects:
  6451 ;;		On entry : 0/0
  6452 ;;		On exit  : 0/0
  6453 ;;		Unchanged: 0/0
  6454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6455 ;;      Params:         4       0       0       0       0       0       0       0       0
  6456 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6457 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6458 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6459 ;;Total ram usage:       14 bytes
  6460 ;; Hardware stack levels used:    1
  6461 ;; Hardware stack levels required when called:    3
  6462 ;; This function calls:
  6463 ;;		Nothing
  6464 ;; This function is called by:
  6465 ;;		_efgtoa
  6466 ;; This function uses a non-reentrant model
  6467 ;;
  6468                           
  6469                           	psect	text10
  6470  002CEA                     __ptext10:
  6471                           	opt callstack 0
  6472  002CEA                     ___fpclassifyf:
  6473                           	opt callstack 23
  6474                           
  6475                           ; BSR set to: 0
  6476                           ;incstack = 0
  6477  002CEA  0060  F0B4  F026   	movff	___fpclassifyf@F463,___fpclassifyf@u
  6478  002CF0  0060  F0B8  F027   	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  6479  002CF6  0060  F0BC  F028   	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  6480  002CFC  0060  F0C0  F029   	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  6481  002D02  0060  F070  F026   	movff	___fpclassifyf@x,___fpclassifyf@u
  6482  002D08  0060  F074  F027   	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6483  002D0E  0060  F078  F028   	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6484  002D14  0060  F07C  F029   	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6485  002D1A  0060  F098  F020   	movff	___fpclassifyf@u,??___fpclassifyf
  6486  002D20  0060  F09C  F021   	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6487  002D26  0060  F0A0  F022   	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6488  002D2C  0060  F0A4  F023   	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6489  002D32  0E18               	movlw	24
  6490  002D34  D005               	goto	u6780
  6491  002D36                     u6785:
  6492  002D36  90D8               	bcf	status,0,c
  6493  002D38  3223               	rrcf	??___fpclassifyf+3,f,c
  6494  002D3A  3222               	rrcf	??___fpclassifyf+2,f,c
  6495  002D3C  3221               	rrcf	??___fpclassifyf+1,f,c
  6496  002D3E  3220               	rrcf	??___fpclassifyf,f,c
  6497  002D40                     u6780:
  6498  002D40  2EE8               	decfsz	wreg,f,c
  6499  002D42  D7F9               	goto	u6785
  6500  002D44  5020               	movf	??___fpclassifyf,w,c
  6501  002D46  6E24               	movwf	___fpclassifyf@e,c
  6502  002D48  6A25               	clrf	___fpclassifyf@e+1,c
  6503  002D4A  5024               	movf	___fpclassifyf@e,w,c
  6504  002D4C  1025               	iorwf	___fpclassifyf@e+1,w,c
  6505  002D4E  A4D8               	btfss	status,2,c
  6506  002D50  D019               	goto	l5953
  6507  002D52  90D8               	bcf	status,0,c
  6508  002D54  3426               	rlcf	___fpclassifyf@u,w,c
  6509  002D56  6E20               	movwf	??___fpclassifyf& (0+255),c
  6510  002D58  3427               	rlcf	___fpclassifyf@u+1,w,c
  6511  002D5A  6E21               	movwf	(??___fpclassifyf+1)& (0+255),c
  6512  002D5C  3428               	rlcf	___fpclassifyf@u+2,w,c
  6513  002D5E  6E22               	movwf	(??___fpclassifyf+2)& (0+255),c
  6514  002D60  3429               	rlcf	___fpclassifyf@u+3,w,c
  6515  002D62  6E23               	movwf	(??___fpclassifyf+3)& (0+255),c
  6516  002D64  5020               	movf	??___fpclassifyf,w,c
  6517  002D66  1021               	iorwf	??___fpclassifyf+1,w,c
  6518  002D68  1022               	iorwf	??___fpclassifyf+2,w,c
  6519  002D6A  1023               	iorwf	??___fpclassifyf+3,w,c
  6520  002D6C  A4D8               	btfss	status,2,c
  6521  002D6E  D005               	goto	l5949
  6522  002D70  0E00               	movlw	0
  6523  002D72  6E1D               	movwf	?___fpclassifyf+1,c
  6524  002D74  0E02               	movlw	2
  6525  002D76  6E1C               	movwf	?___fpclassifyf,c
  6526  002D78  0012               	return	
  6527  002D7A                     l5949:
  6528  002D7A  0E00               	movlw	0
  6529  002D7C  6E1D               	movwf	?___fpclassifyf+1,c
  6530  002D7E  0E03               	movlw	3
  6531  002D80  6E1C               	movwf	?___fpclassifyf,c
  6532  002D82  0012               	return	
  6533  002D84                     l5953:
  6534  002D84  2824               	incf	___fpclassifyf@e,w,c
  6535  002D86  1025               	iorwf	___fpclassifyf@e+1,w,c
  6536  002D88  A4D8               	btfss	status,2,c
  6537  002D8A  D020               	goto	l5959
  6538  002D8C  0060  F098  F020   	movff	___fpclassifyf@u,??___fpclassifyf
  6539  002D92  0060  F09C  F021   	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6540  002D98  0060  F0A0  F022   	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6541  002D9E  0060  F0A4  F023   	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6542  002DA4  0E09               	movlw	9
  6543  002DA6                     u6825:
  6544  002DA6  90D8               	bcf	status,0,c
  6545  002DA8  3620               	rlcf	??___fpclassifyf,f,c
  6546  002DAA  3621               	rlcf	??___fpclassifyf+1,f,c
  6547  002DAC  3622               	rlcf	??___fpclassifyf+2,f,c
  6548  002DAE  3623               	rlcf	??___fpclassifyf+3,f,c
  6549  002DB0  2EE8               	decfsz	wreg,f,c
  6550  002DB2  D7F9               	goto	u6825
  6551  002DB4  5020               	movf	??___fpclassifyf,w,c
  6552  002DB6  1021               	iorwf	??___fpclassifyf+1,w,c
  6553  002DB8  1022               	iorwf	??___fpclassifyf+2,w,c
  6554  002DBA  1023               	iorwf	??___fpclassifyf+3,w,c
  6555  002DBC  A4D8               	btfss	status,2,c
  6556  002DBE  D002               	goto	u6830
  6557  002DC0  0E01               	movlw	1
  6558  002DC2  D001               	goto	u6840
  6559  002DC4                     u6830:
  6560  002DC4  0E00               	movlw	0
  6561  002DC6                     u6840:
  6562  002DC6  6E1C               	movwf	?___fpclassifyf,c
  6563  002DC8  6A1D               	clrf	?___fpclassifyf+1,c
  6564  002DCA  0012               	return	
  6565  002DCC                     l5959:
  6566  002DCC  0E00               	movlw	0
  6567  002DCE  6E1D               	movwf	?___fpclassifyf+1,c
  6568  002DD0  0E04               	movlw	4
  6569  002DD2  6E1C               	movwf	?___fpclassifyf,c
  6570  002DD4  0012               	return		;funcret
  6571  002DD6                     __end_of___fpclassifyf:
  6572                           	opt callstack 0
  6573                           
  6574 ;; *************** function ___fltol *****************
  6575 ;; Defined at:
  6576 ;;		line 43 in file "D:\MPLAB\pic\sources\c99\common\fltol.c"
  6577 ;; Parameters:    Size  Location     Type
  6578 ;;  f1              4   27[COMRAM] int 
  6579 ;; Auto vars:     Size  Location     Type
  6580 ;;  exp1            1   36[COMRAM] unsigned char 
  6581 ;;  sign1           1   35[COMRAM] unsigned char 
  6582 ;; Return value:  Size  Location     Type
  6583 ;;                  4   27[COMRAM] long 
  6584 ;; Registers used:
  6585 ;;		wreg, status,2, status,0
  6586 ;; Tracked objects:
  6587 ;;		On entry : 0/0
  6588 ;;		On exit  : 0/0
  6589 ;;		Unchanged: 0/0
  6590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6591 ;;      Params:         4       0       0       0       0       0       0       0       0
  6592 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6593 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6594 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6595 ;;Total ram usage:       10 bytes
  6596 ;; Hardware stack levels used:    1
  6597 ;; Hardware stack levels required when called:    3
  6598 ;; This function calls:
  6599 ;;		Nothing
  6600 ;; This function is called by:
  6601 ;;		_efgtoa
  6602 ;; This function uses a non-reentrant model
  6603 ;;
  6604                           
  6605                           	psect	text11
  6606  002F7E                     __ptext11:
  6607                           	opt callstack 0
  6608  002F7E                     ___fltol:
  6609                           	opt callstack 23
  6610                           
  6611                           ;incstack = 0
  6612  002F7E  341E               	rlcf	___fltol@f1+2,w,c
  6613  002F80  341F               	rlcf	___fltol@f1+3,w,c
  6614  002F82  6E25               	movwf	___fltol@exp1,c
  6615  002F84  5025               	movf	___fltol@exp1,w,c
  6616  002F86  A4D8               	btfss	status,2,c
  6617  002F88  D009               	goto	l6501
  6618  002F8A                     u7780:
  6619  002F8A  0E00               	movlw	0
  6620  002F8C  6E1C               	movwf	?___fltol,c
  6621  002F8E  0E00               	movlw	0
  6622  002F90  6E1D               	movwf	?___fltol+1,c
  6623  002F92  0E00               	movlw	0
  6624  002F94  6E1E               	movwf	?___fltol+2,c
  6625  002F96  0E00               	movlw	0
  6626  002F98  6E1F               	movwf	?___fltol+3,c
  6627  002F9A  0012               	return	
  6628  002F9C                     l6501:
  6629  002F9C  0060  F070  F020   	movff	___fltol@f1,??___fltol
  6630  002FA2  0060  F074  F021   	movff	___fltol@f1+1,??___fltol+1
  6631  002FA8  0060  F078  F022   	movff	___fltol@f1+2,??___fltol+2
  6632  002FAE  0060  F07C  F023   	movff	___fltol@f1+3,??___fltol+3
  6633  002FB4  0E20               	movlw	32
  6634  002FB6  D005               	goto	u7790
  6635  002FB8                     u7795:
  6636  002FB8  90D8               	bcf	status,0,c
  6637  002FBA  3223               	rrcf	??___fltol+3,f,c
  6638  002FBC  3222               	rrcf	??___fltol+2,f,c
  6639  002FBE  3221               	rrcf	??___fltol+1,f,c
  6640  002FC0  3220               	rrcf	??___fltol,f,c
  6641  002FC2                     u7790:
  6642  002FC2  2EE8               	decfsz	wreg,f,c
  6643  002FC4  D7F9               	goto	u7795
  6644  002FC6  5020               	movf	??___fltol,w,c
  6645  002FC8  6E24               	movwf	___fltol@sign1,c
  6646  002FCA  8E1E               	bsf	___fltol@f1+2,7,c
  6647  002FCC  0EFF               	movlw	255
  6648  002FCE  161C               	andwf	___fltol@f1,f,c
  6649  002FD0  0EFF               	movlw	255
  6650  002FD2  161D               	andwf	___fltol@f1+1,f,c
  6651  002FD4  0EFF               	movlw	255
  6652  002FD6  161E               	andwf	___fltol@f1+2,f,c
  6653  002FD8  0E00               	movlw	0
  6654  002FDA  161F               	andwf	___fltol@f1+3,f,c
  6655  002FDC  0E96               	movlw	150
  6656  002FDE  5E25               	subwf	___fltol@exp1,f,c
  6657  002FE0  AE25               	btfss	___fltol@exp1,7,c
  6658  002FE2  D00D               	goto	l6521
  6659  002FE4  5025               	movf	___fltol@exp1,w,c
  6660  002FE6  0A80               	xorlw	128
  6661  002FE8  0F97               	addlw	151
  6662  002FEA  A0D8               	btfss	status,0,c
  6663  002FEC  D7CE               	goto	u7780
  6664  002FEE                     l6517:
  6665  002FEE  90D8               	bcf	status,0,c
  6666  002FF0  321F               	rrcf	___fltol@f1+3,f,c
  6667  002FF2  321E               	rrcf	___fltol@f1+2,f,c
  6668  002FF4  321D               	rrcf	___fltol@f1+1,f,c
  6669  002FF6  321C               	rrcf	___fltol@f1,f,c
  6670  002FF8  3E25               	incfsz	___fltol@exp1,f,c
  6671  002FFA  D7F9               	goto	l6517
  6672  002FFC  D00D               	goto	u7830
  6673  002FFE                     l6521:
  6674  002FFE  0E1F               	movlw	31
  6675  003000  6425               	cpfsgt	___fltol@exp1,c
  6676  003002  D007               	goto	l6529
  6677  003004  D7C2               	goto	u7780
  6678  003006                     l6527:
  6679  003006  90D8               	bcf	status,0,c
  6680  003008  361C               	rlcf	___fltol@f1,f,c
  6681  00300A  361D               	rlcf	___fltol@f1+1,f,c
  6682  00300C  361E               	rlcf	___fltol@f1+2,f,c
  6683  00300E  361F               	rlcf	___fltol@f1+3,f,c
  6684  003010  0625               	decf	___fltol@exp1,f,c
  6685  003012                     l6529:
  6686  003012  5025               	movf	___fltol@exp1,w,c
  6687  003014  A4D8               	btfss	status,2,c
  6688  003016  D7F7               	goto	l6527
  6689  003018                     u7830:
  6690  003018  5024               	movf	___fltol@sign1,w,c
  6691  00301A  B4D8               	btfsc	status,2,c
  6692  00301C  D008               	goto	l6535
  6693  00301E  1E1F               	comf	___fltol@f1+3,f,c
  6694  003020  1E1E               	comf	___fltol@f1+2,f,c
  6695  003022  1E1D               	comf	___fltol@f1+1,f,c
  6696  003024  6C1C               	negf	___fltol@f1,c
  6697  003026  0E00               	movlw	0
  6698  003028  221D               	addwfc	___fltol@f1+1,f,c
  6699  00302A  221E               	addwfc	___fltol@f1+2,f,c
  6700  00302C  221F               	addwfc	___fltol@f1+3,f,c
  6701  00302E                     l6535:
  6702  00302E  0060  F070  F01C   	movff	___fltol@f1,?___fltol
  6703  003034  0060  F074  F01D   	movff	___fltol@f1+1,?___fltol+1
  6704  00303A  0060  F078  F01E   	movff	___fltol@f1+2,?___fltol+2
  6705  003040  0060  F07C  F01F   	movff	___fltol@f1+3,?___fltol+3
  6706  003046  0012               	return		;funcret
  6707  003048                     __end_of___fltol:
  6708                           	opt callstack 0
  6709                           
  6710 ;; *************** function ___flsub *****************
  6711 ;; Defined at:
  6712 ;;		line 245 in file "D:\MPLAB\pic\sources\c99\common\sprcadd.c"
  6713 ;; Parameters:    Size  Location     Type
  6714 ;;  b               4   13[BANK0 ] long 
  6715 ;;  a               4   17[BANK0 ] long 
  6716 ;; Auto vars:     Size  Location     Type
  6717 ;;		None
  6718 ;; Return value:  Size  Location     Type
  6719 ;;                  4   13[BANK0 ] long 
  6720 ;; Registers used:
  6721 ;;		wreg, status,2, status,0, cstack
  6722 ;; Tracked objects:
  6723 ;;		On entry : 0/0
  6724 ;;		On exit  : 0/0
  6725 ;;		Unchanged: 0/0
  6726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6727 ;;      Params:         0       8       0       0       0       0       0       0       0
  6728 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6729 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6730 ;;      Totals:         0       8       0       0       0       0       0       0       0
  6731 ;;Total ram usage:        8 bytes
  6732 ;; Hardware stack levels used:    1
  6733 ;; Hardware stack levels required when called:    4
  6734 ;; This function calls:
  6735 ;;		___fladd
  6736 ;; This function is called by:
  6737 ;;		_efgtoa
  6738 ;; This function uses a non-reentrant model
  6739 ;;
  6740                           
  6741                           	psect	text12
  6742  0039CA                     __ptext12:
  6743                           	opt callstack 0
  6744  0039CA                     ___flsub:
  6745                           	opt callstack 22
  6746                           
  6747                           ;incstack = 0
  6748  0039CA  0E00               	movlw	0
  6749  0039CC  0100               	movlb	0	; () banked
  6750  0039CE  1B71               	xorwf	___flsub@a& (0+255),f,b
  6751  0039D0  0E00               	movlw	0
  6752  0039D2  1B72               	xorwf	(___flsub@a+1)& (0+255),f,b
  6753  0039D4  0E00               	movlw	0
  6754  0039D6  1B73               	xorwf	(___flsub@a+2)& (0+255),f,b
  6755  0039D8  0E80               	movlw	128
  6756  0039DA  1B74               	xorwf	(___flsub@a+3)& (0+255),f,b
  6757                           
  6758                           ; BSR set to: 0
  6759  0039DC  0060  F1B4  F01C   	movff	___flsub@b,___fladd@b
  6760  0039E2  0060  F1B8  F01D   	movff	___flsub@b+1,___fladd@b+1
  6761  0039E8  0060  F1BC  F01E   	movff	___flsub@b+2,___fladd@b+2
  6762  0039EE  0060  F1C0  F01F   	movff	___flsub@b+3,___fladd@b+3
  6763  0039F4  0060  F1C4  F020   	movff	___flsub@a,___fladd@a
  6764  0039FA  0060  F1C8  F021   	movff	___flsub@a+1,___fladd@a+1
  6765  003A00  0060  F1CC  F022   	movff	___flsub@a+2,___fladd@a+2
  6766  003A06  0060  F1D0  F023   	movff	___flsub@a+3,___fladd@a+3
  6767  003A0C  EC72  F00E         	call	___fladd	;wreg free
  6768  003A10  0060  F070  F06D   	movff	?___fladd,?___flsub
  6769  003A16  0060  F074  F06E   	movff	?___fladd+1,?___flsub+1
  6770  003A1C  0060  F078  F06F   	movff	?___fladd+2,?___flsub+2
  6771  003A22  0060  F07C  F070   	movff	?___fladd+3,?___flsub+3
  6772  003A28  0012               	return		;funcret
  6773  003A2A                     __end_of___flsub:
  6774                           	opt callstack 0
  6775                           
  6776 ;; *************** function ___fladd *****************
  6777 ;; Defined at:
  6778 ;;		line 10 in file "D:\MPLAB\pic\sources\c99\common\sprcadd.c"
  6779 ;; Parameters:    Size  Location     Type
  6780 ;;  b               4   27[COMRAM] long 
  6781 ;;  a               4   31[COMRAM] long 
  6782 ;; Auto vars:     Size  Location     Type
  6783 ;;  grs             1   42[COMRAM] unsigned char 
  6784 ;;  bexp            1   41[COMRAM] unsigned char 
  6785 ;;  aexp            1   40[COMRAM] unsigned char 
  6786 ;;  signs           1   39[COMRAM] unsigned char 
  6787 ;; Return value:  Size  Location     Type
  6788 ;;                  4   27[COMRAM] unsigned char 
  6789 ;; Registers used:
  6790 ;;		wreg, status,2, status,0
  6791 ;; Tracked objects:
  6792 ;;		On entry : 0/0
  6793 ;;		On exit  : 0/0
  6794 ;;		Unchanged: 0/0
  6795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6796 ;;      Params:         8       0       0       0       0       0       0       0       0
  6797 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6798 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6799 ;;      Totals:        16       0       0       0       0       0       0       0       0
  6800 ;;Total ram usage:       16 bytes
  6801 ;; Hardware stack levels used:    1
  6802 ;; Hardware stack levels required when called:    3
  6803 ;; This function calls:
  6804 ;;		Nothing
  6805 ;; This function is called by:
  6806 ;;		_efgtoa
  6807 ;;		___flsub
  6808 ;; This function uses a non-reentrant model
  6809 ;;
  6810                           
  6811                           	psect	text13
  6812  001CE4                     __ptext13:
  6813                           	opt callstack 0
  6814  001CE4                     ___fladd:
  6815                           	opt callstack 22
  6816                           
  6817                           ;incstack = 0
  6818  001CE4  501F               	movf	___fladd@b+3,w,c
  6819  001CE6  0B80               	andlw	128
  6820  001CE8  6E28               	movwf	___fladd@signs,c
  6821  001CEA  501F               	movf	___fladd@b+3,w,c
  6822  001CEC  241F               	addwf	___fladd@b+3,w,c
  6823  001CEE  6E2A               	movwf	___fladd@bexp,c
  6824  001CF0  BE1E               	btfsc	___fladd@b+2,7,c
  6825  001CF2  802A               	bsf	___fladd@bexp,0,c
  6826  001CF4  502A               	movf	___fladd@bexp,w,c
  6827  001CF6  B4D8               	btfsc	status,2,c
  6828  001CF8  D00D               	goto	l5729
  6829  001CFA  282A               	incf	___fladd@bexp,w,c
  6830  001CFC  A4D8               	btfss	status,2,c
  6831  001CFE  D008               	goto	l5725
  6832  001D00  0E00               	movlw	0
  6833  001D02  6E1C               	movwf	___fladd@b,c
  6834  001D04  0E00               	movlw	0
  6835  001D06  6E1D               	movwf	___fladd@b+1,c
  6836  001D08  0E00               	movlw	0
  6837  001D0A  6E1E               	movwf	___fladd@b+2,c
  6838  001D0C  0E00               	movlw	0
  6839  001D0E  6E1F               	movwf	___fladd@b+3,c
  6840  001D10                     l5725:
  6841  001D10  8E1E               	bsf	___fladd@b+2,7,c
  6842  001D12  D006               	goto	L10
  6843  001D14                     l5729:
  6844  001D14  0E00               	movlw	0
  6845  001D16  6E1C               	movwf	___fladd@b,c
  6846  001D18  0E00               	movlw	0
  6847  001D1A  6E1D               	movwf	___fladd@b+1,c
  6848  001D1C  0E00               	movlw	0
  6849  001D1E  6E1E               	movwf	___fladd@b+2,c
  6850  001D20                     L10:
  6851  001D20  0E00               	movlw	0
  6852  001D22  6E1F               	movwf	___fladd@b+3,c
  6853  001D24  5023               	movf	___fladd@a+3,w,c
  6854  001D26  0B80               	andlw	128
  6855  001D28  6E29               	movwf	___fladd@aexp,c
  6856  001D2A  5028               	movf	___fladd@signs,w,c
  6857  001D2C  1829               	xorwf	___fladd@aexp,w,c
  6858  001D2E  A4D8               	btfss	status,2,c
  6859  001D30  8C28               	bsf	___fladd@signs,6,c
  6860  001D32  5023               	movf	___fladd@a+3,w,c
  6861  001D34  2423               	addwf	___fladd@a+3,w,c
  6862  001D36  6E29               	movwf	___fladd@aexp,c
  6863  001D38  BE22               	btfsc	___fladd@a+2,7,c
  6864  001D3A  8029               	bsf	___fladd@aexp,0,c
  6865  001D3C  5029               	movf	___fladd@aexp,w,c
  6866  001D3E  B4D8               	btfsc	status,2,c
  6867  001D40  D00D               	goto	l5753
  6868  001D42  2829               	incf	___fladd@aexp,w,c
  6869  001D44  A4D8               	btfss	status,2,c
  6870  001D46  D008               	goto	l5749
  6871  001D48  0E00               	movlw	0
  6872  001D4A  6E20               	movwf	___fladd@a,c
  6873  001D4C  0E00               	movlw	0
  6874  001D4E  6E21               	movwf	___fladd@a+1,c
  6875  001D50  0E00               	movlw	0
  6876  001D52  6E22               	movwf	___fladd@a+2,c
  6877  001D54  0E00               	movlw	0
  6878  001D56  6E23               	movwf	___fladd@a+3,c
  6879  001D58                     l5749:
  6880  001D58  8E22               	bsf	___fladd@a+2,7,c
  6881  001D5A  D006               	goto	L11
  6882  001D5C                     l5753:
  6883  001D5C  0E00               	movlw	0
  6884  001D5E  6E20               	movwf	___fladd@a,c
  6885  001D60  0E00               	movlw	0
  6886  001D62  6E21               	movwf	___fladd@a+1,c
  6887  001D64  0E00               	movlw	0
  6888  001D66  6E22               	movwf	___fladd@a+2,c
  6889  001D68                     L11:
  6890  001D68  0E00               	movlw	0
  6891  001D6A  6E23               	movwf	___fladd@a+3,c
  6892  001D6C  502A               	movf	___fladd@bexp,w,c
  6893  001D6E  5C29               	subwf	___fladd@aexp,w,c
  6894  001D70  B0D8               	btfsc	status,0,c
  6895  001D72  D031               	goto	l5791
  6896  001D74  AC28               	btfss	___fladd@signs,6,c
  6897  001D76  D002               	goto	l5761
  6898  001D78  0E80               	movlw	128
  6899  001D7A  1A28               	xorwf	___fladd@signs,f,c
  6900  001D7C                     l5761:
  6901  001D7C  0060  F0A8  F02B   	movff	___fladd@bexp,___fladd@grs
  6902  001D82  0060  F0A4  F02A   	movff	___fladd@aexp,___fladd@bexp
  6903  001D88  0060  F0AC  F029   	movff	___fladd@grs,___fladd@aexp
  6904  001D8E  0060  F070  F02B   	movff	___fladd@b,___fladd@grs
  6905  001D94  0060  F080  F01C   	movff	___fladd@a,___fladd@b
  6906  001D9A  0060  F0AC  F020   	movff	___fladd@grs,___fladd@a
  6907  001DA0  0060  F074  F02B   	movff	___fladd@b+1,___fladd@grs
  6908  001DA6  0060  F084  F01D   	movff	___fladd@a+1,___fladd@b+1
  6909  001DAC  0060  F0AC  F021   	movff	___fladd@grs,___fladd@a+1
  6910  001DB2  0060  F078  F02B   	movff	___fladd@b+2,___fladd@grs
  6911  001DB8  0060  F088  F01E   	movff	___fladd@a+2,___fladd@b+2
  6912  001DBE  0060  F0AC  F022   	movff	___fladd@grs,___fladd@a+2
  6913  001DC4  0060  F07C  F02B   	movff	___fladd@b+3,___fladd@grs
  6914  001DCA  0060  F08C  F01F   	movff	___fladd@a+3,___fladd@b+3
  6915  001DD0  0060  F0AC  F023   	movff	___fladd@grs,___fladd@a+3
  6916  001DD6                     l5791:
  6917  001DD6  0E00               	movlw	0
  6918  001DD8  6E2B               	movwf	___fladd@grs,c
  6919  001DDA  502A               	movf	___fladd@bexp,w,c
  6920  001DDC  0060  F0A4  F024   	movff	___fladd@aexp,??___fladd
  6921  001DE2  6A25               	clrf	(??___fladd+1)& (0+255),c
  6922  001DE4  5E24               	subwf	??___fladd,f,c
  6923  001DE6  0E00               	movlw	0
  6924  001DE8  5A25               	subwfb	??___fladd+1,f,c
  6925  001DEA  BE25               	btfsc	??___fladd+1,7,c
  6926  001DEC  D02D               	goto	l1111
  6927  001DEE  5025               	movf	??___fladd+1,w,c
  6928  001DF0  E104               	bnz	u6430
  6929  001DF2  0E1A               	movlw	26
  6930  001DF4  5C24               	subwf	??___fladd,w,c
  6931  001DF6  A0D8               	btfss	status,0,c
  6932  001DF8  D027               	goto	l1111
  6933  001DFA                     u6430:
  6934  001DFA  501C               	movf	___fladd@b,w,c
  6935  001DFC  101D               	iorwf	___fladd@b+1,w,c
  6936  001DFE  101E               	iorwf	___fladd@b+2,w,c
  6937  001E00  101F               	iorwf	___fladd@b+3,w,c
  6938  001E02  B4D8               	btfsc	status,2,c
  6939  001E04  D002               	goto	u6440
  6940  001E06  0E01               	movlw	1
  6941  001E08  D001               	goto	u6450
  6942  001E0A                     u6440:
  6943  001E0A  0E00               	movlw	0
  6944  001E0C                     u6450:
  6945  001E0C  6E2B               	movwf	___fladd@grs,c
  6946  001E0E  0E00               	movlw	0
  6947  001E10  6E1C               	movwf	___fladd@b,c
  6948  001E12  0E00               	movlw	0
  6949  001E14  6E1D               	movwf	___fladd@b+1,c
  6950  001E16  0E00               	movlw	0
  6951  001E18  6E1E               	movwf	___fladd@b+2,c
  6952  001E1A  0E00               	movlw	0
  6953  001E1C  6E1F               	movwf	___fladd@b+3,c
  6954  001E1E  0060  F0A4  F02A   	movff	___fladd@aexp,___fladd@bexp
  6955  001E24  D015               	goto	u6480
  6956  001E26                     l1112:
  6957  001E26  A02B               	btfss	___fladd@grs,0,c
  6958  001E28  D005               	goto	l5803
  6959  001E2A  90D8               	bcf	status,0,c
  6960  001E2C  302B               	rrcf	___fladd@grs,w,c
  6961  001E2E  0901               	iorlw	1
  6962  001E30  6E2B               	movwf	___fladd@grs,c
  6963  001E32  D002               	goto	l5805
  6964  001E34                     l5803:
  6965  001E34  90D8               	bcf	status,0,c
  6966  001E36  322B               	rrcf	___fladd@grs,f,c
  6967  001E38                     l5805:
  6968  001E38  B01C               	btfsc	___fladd@b,0,c
  6969  001E3A  8E2B               	bsf	___fladd@grs,7,c
  6970  001E3C  341F               	rlcf	___fladd@b+3,w,c
  6971  001E3E  321F               	rrcf	___fladd@b+3,f,c
  6972  001E40  321E               	rrcf	___fladd@b+2,f,c
  6973  001E42  321D               	rrcf	___fladd@b+1,f,c
  6974  001E44  321C               	rrcf	___fladd@b,f,c
  6975  001E46  2A2A               	incf	___fladd@bexp,f,c
  6976  001E48                     l1111:
  6977  001E48  5029               	movf	___fladd@aexp,w,c
  6978  001E4A  5C2A               	subwf	___fladd@bexp,w,c
  6979  001E4C  A0D8               	btfss	status,0,c
  6980  001E4E  D7EB               	goto	l1112
  6981  001E50                     u6480:
  6982  001E50  BC28               	btfsc	___fladd@signs,6,c
  6983  001E52  D028               	goto	l5837
  6984  001E54  502A               	movf	___fladd@bexp,w,c
  6985  001E56  A4D8               	btfss	status,2,c
  6986  001E58  D009               	goto	l5819
  6987  001E5A  0E00               	movlw	0
  6988  001E5C  6E1C               	movwf	?___fladd,c
  6989  001E5E  0E00               	movlw	0
  6990  001E60  6E1D               	movwf	?___fladd+1,c
  6991  001E62  0E00               	movlw	0
  6992  001E64  6E1E               	movwf	?___fladd+2,c
  6993  001E66  0E00               	movlw	0
  6994  001E68  6E1F               	movwf	?___fladd+3,c
  6995  001E6A  0012               	return	
  6996  001E6C                     l5819:
  6997  001E6C  5020               	movf	___fladd@a,w,c
  6998  001E6E  261C               	addwf	___fladd@b,f,c
  6999  001E70  5021               	movf	___fladd@a+1,w,c
  7000  001E72  221D               	addwfc	___fladd@b+1,f,c
  7001  001E74  5022               	movf	___fladd@a+2,w,c
  7002  001E76  221E               	addwfc	___fladd@b+2,f,c
  7003  001E78  5023               	movf	___fladd@a+3,w,c
  7004  001E7A  221F               	addwfc	___fladd@b+3,f,c
  7005  001E7C  A01F               	btfss	___fladd@b+3,0,c
  7006  001E7E  D071               	goto	u6610
  7007  001E80  A02B               	btfss	___fladd@grs,0,c
  7008  001E82  D005               	goto	l5827
  7009  001E84  90D8               	bcf	status,0,c
  7010  001E86  302B               	rrcf	___fladd@grs,w,c
  7011  001E88  0901               	iorlw	1
  7012  001E8A  6E2B               	movwf	___fladd@grs,c
  7013  001E8C  D002               	goto	l5829
  7014  001E8E                     l5827:
  7015  001E8E  90D8               	bcf	status,0,c
  7016  001E90  322B               	rrcf	___fladd@grs,f,c
  7017  001E92                     l5829:
  7018  001E92  B01C               	btfsc	___fladd@b,0,c
  7019  001E94  8E2B               	bsf	___fladd@grs,7,c
  7020  001E96  341F               	rlcf	___fladd@b+3,w,c
  7021  001E98  321F               	rrcf	___fladd@b+3,f,c
  7022  001E9A  321E               	rrcf	___fladd@b+2,f,c
  7023  001E9C  321D               	rrcf	___fladd@b+1,f,c
  7024  001E9E  321C               	rrcf	___fladd@b,f,c
  7025  001EA0  2A2A               	incf	___fladd@bexp,f,c
  7026  001EA2  D05F               	goto	u6610
  7027  001EA4                     l5837:
  7028  001EA4  5020               	movf	___fladd@a,w,c
  7029  001EA6  5C1C               	subwf	___fladd@b,w,c
  7030  001EA8  5021               	movf	___fladd@a+1,w,c
  7031  001EAA  581D               	subwfb	___fladd@b+1,w,c
  7032  001EAC  5022               	movf	___fladd@a+2,w,c
  7033  001EAE  581E               	subwfb	___fladd@b+2,w,c
  7034  001EB0  501F               	movf	___fladd@b+3,w,c
  7035  001EB2  0A80               	xorlw	128
  7036  001EB4  6E24               	movwf	??___fladd& (0+255),c
  7037  001EB6  5023               	movf	___fladd@a+3,w,c
  7038  001EB8  0A80               	xorlw	128
  7039  001EBA  5824               	subwfb	??___fladd& (0+255),w,c
  7040  001EBC  B0D8               	btfsc	status,0,c
  7041  001EBE  D025               	goto	l5847
  7042  001EC0  501C               	movf	___fladd@b,w,c
  7043  001EC2  5C20               	subwf	___fladd@a,w,c
  7044  001EC4  6E24               	movwf	??___fladd& (0+255),c
  7045  001EC6  501D               	movf	___fladd@b+1,w,c
  7046  001EC8  5821               	subwfb	___fladd@a+1,w,c
  7047  001ECA  6E25               	movwf	(??___fladd+1)& (0+255),c
  7048  001ECC  501E               	movf	___fladd@b+2,w,c
  7049  001ECE  5822               	subwfb	___fladd@a+2,w,c
  7050  001ED0  6E26               	movwf	(??___fladd+2)& (0+255),c
  7051  001ED2  501F               	movf	___fladd@b+3,w,c
  7052  001ED4  5823               	subwfb	___fladd@a+3,w,c
  7053  001ED6  6E27               	movwf	(??___fladd+3)& (0+255),c
  7054  001ED8  0EFF               	movlw	255
  7055  001EDA  2424               	addwf	??___fladd,w,c
  7056  001EDC  6E1C               	movwf	___fladd@b,c
  7057  001EDE  0EFF               	movlw	255
  7058  001EE0  2025               	addwfc	??___fladd+1,w,c
  7059  001EE2  6E1D               	movwf	___fladd@b+1,c
  7060  001EE4  0EFF               	movlw	255
  7061  001EE6  2026               	addwfc	??___fladd+2,w,c
  7062  001EE8  6E1E               	movwf	___fladd@b+2,c
  7063  001EEA  0EFF               	movlw	255
  7064  001EEC  2027               	addwfc	??___fladd+3,w,c
  7065  001EEE  6E1F               	movwf	___fladd@b+3,c
  7066  001EF0  0E80               	movlw	128
  7067  001EF2  1A28               	xorwf	___fladd@signs,f,c
  7068  001EF4  6C2B               	negf	___fladd@grs,c
  7069  001EF6  502B               	movf	___fladd@grs,w,c
  7070  001EF8  A4D8               	btfss	status,2,c
  7071  001EFA  D00F               	goto	l1127
  7072  001EFC  0E01               	movlw	1
  7073  001EFE  261C               	addwf	___fladd@b,f,c
  7074  001F00  0E00               	movlw	0
  7075  001F02  221D               	addwfc	___fladd@b+1,f,c
  7076  001F04  221E               	addwfc	___fladd@b+2,f,c
  7077  001F06  221F               	addwfc	___fladd@b+3,f,c
  7078  001F08  D008               	goto	l1127
  7079  001F0A                     l5847:
  7080  001F0A  5020               	movf	___fladd@a,w,c
  7081  001F0C  5E1C               	subwf	___fladd@b,f,c
  7082  001F0E  5021               	movf	___fladd@a+1,w,c
  7083  001F10  5A1D               	subwfb	___fladd@b+1,f,c
  7084  001F12  5022               	movf	___fladd@a+2,w,c
  7085  001F14  5A1E               	subwfb	___fladd@b+2,f,c
  7086  001F16  5023               	movf	___fladd@a+3,w,c
  7087  001F18  5A1F               	subwfb	___fladd@b+3,f,c
  7088  001F1A                     l1127:
  7089  001F1A  501C               	movf	___fladd@b,w,c
  7090  001F1C  101D               	iorwf	___fladd@b+1,w,c
  7091  001F1E  101E               	iorwf	___fladd@b+2,w,c
  7092  001F20  101F               	iorwf	___fladd@b+3,w,c
  7093  001F22  A4D8               	btfss	status,2,c
  7094  001F24  D01C               	goto	l5871
  7095  001F26  502B               	movf	___fladd@grs,w,c
  7096  001F28  A4D8               	btfss	status,2,c
  7097  001F2A  D019               	goto	l5871
  7098  001F2C  0E00               	movlw	0
  7099  001F2E  6E1C               	movwf	?___fladd,c
  7100  001F30  0E00               	movlw	0
  7101  001F32  6E1D               	movwf	?___fladd+1,c
  7102  001F34  0E00               	movlw	0
  7103  001F36  6E1E               	movwf	?___fladd+2,c
  7104  001F38  0E00               	movlw	0
  7105  001F3A  6E1F               	movwf	?___fladd+3,c
  7106  001F3C  0012               	return	
  7107  001F3E                     l5855:
  7108  001F3E  90D8               	bcf	status,0,c
  7109  001F40  361C               	rlcf	___fladd@b,f,c
  7110  001F42  361D               	rlcf	___fladd@b+1,f,c
  7111  001F44  361E               	rlcf	___fladd@b+2,f,c
  7112  001F46  361F               	rlcf	___fladd@b+3,f,c
  7113  001F48  BE2B               	btfsc	___fladd@grs,7,c
  7114  001F4A  801C               	bsf	___fladd@b,0,c
  7115  001F4C  A02B               	btfss	___fladd@grs,0,c
  7116  001F4E  D002               	goto	l5865
  7117  001F50  80D8               	bsf	status,0,c
  7118  001F52  D001               	goto	L12
  7119  001F54                     l5865:
  7120  001F54  90D8               	bcf	status,0,c
  7121  001F56                     L12:
  7122  001F56  362B               	rlcf	___fladd@grs,f,c
  7123  001F58  502A               	movf	___fladd@bexp,w,c
  7124  001F5A  A4D8               	btfss	status,2,c
  7125  001F5C  062A               	decf	___fladd@bexp,f,c
  7126  001F5E                     l5871:
  7127  001F5E  AE1E               	btfss	___fladd@b+2,7,c
  7128  001F60  D7EE               	goto	l5855
  7129  001F62                     u6610:
  7130  001F62  0E00               	movlw	0
  7131  001F64  6E29               	movwf	___fladd@aexp,c
  7132  001F66  AE2B               	btfss	___fladd@grs,7,c
  7133  001F68  D00C               	goto	l1136
  7134  001F6A  0060  F0AC  F024   	movff	___fladd@grs,??___fladd
  7135  001F70  0E7F               	movlw	127
  7136  001F72  1624               	andwf	??___fladd,f,c
  7137  001F74  B4D8               	btfsc	status,2,c
  7138  001F76  D003               	goto	l1137
  7139  001F78                     u6630:
  7140  001F78  0E01               	movlw	1
  7141  001F7A  6E29               	movwf	___fladd@aexp,c
  7142  001F7C  D002               	goto	l1136
  7143  001F7E                     l1137:
  7144  001F7E  B01C               	btfsc	___fladd@b,0,c
  7145  001F80  D7FB               	goto	u6630
  7146  001F82                     l1136:
  7147  001F82  5029               	movf	___fladd@aexp,w,c
  7148  001F84  B4D8               	btfsc	status,2,c
  7149  001F86  D028               	goto	l5891
  7150  001F88  0E01               	movlw	1
  7151  001F8A  261C               	addwf	___fladd@b,f,c
  7152  001F8C  0E00               	movlw	0
  7153  001F8E  221D               	addwfc	___fladd@b+1,f,c
  7154  001F90  221E               	addwfc	___fladd@b+2,f,c
  7155  001F92  221F               	addwfc	___fladd@b+3,f,c
  7156  001F94  A01F               	btfss	___fladd@b+3,0,c
  7157  001F96  D020               	goto	l5891
  7158  001F98  0060  F070  F024   	movff	___fladd@b,??___fladd
  7159  001F9E  0060  F074  F025   	movff	___fladd@b+1,??___fladd+1
  7160  001FA4  0060  F078  F026   	movff	___fladd@b+2,??___fladd+2
  7161  001FAA  0060  F07C  F027   	movff	___fladd@b+3,??___fladd+3
  7162  001FB0  3427               	rlcf	??___fladd+3,w,c
  7163  001FB2  3227               	rrcf	??___fladd+3,f,c
  7164  001FB4  3226               	rrcf	??___fladd+2,f,c
  7165  001FB6  3225               	rrcf	??___fladd+1,f,c
  7166  001FB8  3224               	rrcf	??___fladd,f,c
  7167  001FBA  0060  F090  F01C   	movff	??___fladd,___fladd@b
  7168  001FC0  0060  F094  F01D   	movff	??___fladd+1,___fladd@b+1
  7169  001FC6  0060  F098  F01E   	movff	??___fladd+2,___fladd@b+2
  7170  001FCC  0060  F09C  F01F   	movff	??___fladd+3,___fladd@b+3
  7171  001FD2  282A               	incf	___fladd@bexp,w,c
  7172  001FD4  A4D8               	btfss	status,2,c
  7173  001FD6  2A2A               	incf	___fladd@bexp,f,c
  7174  001FD8                     l5891:
  7175  001FD8  282A               	incf	___fladd@bexp,w,c
  7176  001FDA  B4D8               	btfsc	status,2,c
  7177  001FDC  D003               	goto	u6690
  7178  001FDE  502A               	movf	___fladd@bexp,w,c
  7179  001FE0  A4D8               	btfss	status,2,c
  7180  001FE2  D00D               	goto	l5899
  7181  001FE4                     u6690:
  7182  001FE4  0E00               	movlw	0
  7183  001FE6  6E1C               	movwf	___fladd@b,c
  7184  001FE8  0E00               	movlw	0
  7185  001FEA  6E1D               	movwf	___fladd@b+1,c
  7186  001FEC  0E00               	movlw	0
  7187  001FEE  6E1E               	movwf	___fladd@b+2,c
  7188  001FF0  0E00               	movlw	0
  7189  001FF2  6E1F               	movwf	___fladd@b+3,c
  7190  001FF4  502A               	movf	___fladd@bexp,w,c
  7191  001FF6  A4D8               	btfss	status,2,c
  7192  001FF8  D002               	goto	l5899
  7193  001FFA  0E00               	movlw	0
  7194  001FFC  6E28               	movwf	___fladd@signs,c
  7195  001FFE                     l5899:
  7196  001FFE  A02A               	btfss	___fladd@bexp,0,c
  7197  002000  D002               	goto	l5903
  7198  002002  8E1E               	bsf	___fladd@b+2,7,c
  7199  002004  D001               	goto	l5905
  7200  002006                     l5903:
  7201  002006  9E1E               	bcf	___fladd@b+2,7,c
  7202  002008                     l5905:
  7203  002008  90D8               	bcf	status,0,c
  7204  00200A  302A               	rrcf	___fladd@bexp,w,c
  7205  00200C  6E1F               	movwf	___fladd@b+3,c
  7206  00200E  BE28               	btfsc	___fladd@signs,7,c
  7207  002010  8E1F               	bsf	___fladd@b+3,7,c
  7208  002012  0060  F070  F01C   	movff	___fladd@b,?___fladd
  7209  002018  0060  F074  F01D   	movff	___fladd@b+1,?___fladd+1
  7210  00201E  0060  F078  F01E   	movff	___fladd@b+2,?___fladd+2
  7211  002024  0060  F07C  F01F   	movff	___fladd@b+3,?___fladd+3
  7212  00202A  0012               	return		;funcret
  7213  00202C                     __end_of___fladd:
  7214                           	opt callstack 0
  7215                           
  7216 ;; *************** function ___flneg *****************
  7217 ;; Defined at:
  7218 ;;		line 15 in file "D:\MPLAB\pic\sources\c99\common\flneg.c"
  7219 ;; Parameters:    Size  Location     Type
  7220 ;;  f1              4   27[COMRAM] unsigned char 
  7221 ;; Auto vars:     Size  Location     Type
  7222 ;;		None
  7223 ;; Return value:  Size  Location     Type
  7224 ;;                  4   27[COMRAM] unsigned char 
  7225 ;; Registers used:
  7226 ;;		wreg, status,2, status,0
  7227 ;; Tracked objects:
  7228 ;;		On entry : 0/0
  7229 ;;		On exit  : 0/0
  7230 ;;		Unchanged: 0/0
  7231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7232 ;;      Params:         4       0       0       0       0       0       0       0       0
  7233 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7234 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7235 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7236 ;;Total ram usage:        4 bytes
  7237 ;; Hardware stack levels used:    1
  7238 ;; Hardware stack levels required when called:    3
  7239 ;; This function calls:
  7240 ;;		Nothing
  7241 ;; This function is called by:
  7242 ;;		_efgtoa
  7243 ;; This function uses a non-reentrant model
  7244 ;;
  7245                           
  7246                           	psect	text14
  7247  003BC2                     __ptext14:
  7248                           	opt callstack 0
  7249  003BC2                     ___flneg:
  7250                           	opt callstack 23
  7251                           
  7252                           ;incstack = 0
  7253  003BC2  501C               	movf	___flneg@f1,w,c
  7254  003BC4  101D               	iorwf	___flneg@f1+1,w,c
  7255  003BC6  101E               	iorwf	___flneg@f1+2,w,c
  7256  003BC8  101F               	iorwf	___flneg@f1+3,w,c
  7257  003BCA  B4D8               	btfsc	status,2,c
  7258  003BCC  D008               	goto	l6491
  7259  003BCE  0E00               	movlw	0
  7260  003BD0  1A1C               	xorwf	___flneg@f1,f,c
  7261  003BD2  0E00               	movlw	0
  7262  003BD4  1A1D               	xorwf	___flneg@f1+1,f,c
  7263  003BD6  0E00               	movlw	0
  7264  003BD8  1A1E               	xorwf	___flneg@f1+2,f,c
  7265  003BDA  0E80               	movlw	128
  7266  003BDC  1A1F               	xorwf	___flneg@f1+3,f,c
  7267  003BDE                     l6491:
  7268  003BDE  0060  F070  F01C   	movff	___flneg@f1,?___flneg
  7269  003BE4  0060  F074  F01D   	movff	___flneg@f1+1,?___flneg+1
  7270  003BEA  0060  F078  F01E   	movff	___flneg@f1+2,?___flneg+2
  7271  003BF0  0060  F07C  F01F   	movff	___flneg@f1+3,?___flneg+3
  7272  003BF6  0012               	return		;funcret
  7273  003BF8                     __end_of___flneg:
  7274                           	opt callstack 0
  7275                           
  7276 ;; *************** function ___flmul *****************
  7277 ;; Defined at:
  7278 ;;		line 8 in file "D:\MPLAB\pic\sources\c99\common\sprcmul.c"
  7279 ;; Parameters:    Size  Location     Type
  7280 ;;  b               4   27[COMRAM] unsigned char 
  7281 ;;  a               4   31[COMRAM] unsigned char 
  7282 ;; Auto vars:     Size  Location     Type
  7283 ;;  prod            4    7[BANK0 ] struct .
  7284 ;;  grs             4    2[BANK0 ] unsigned long 
  7285 ;;  temp            2   11[BANK0 ] struct .
  7286 ;;  bexp            1    6[BANK0 ] unsigned char 
  7287 ;;  aexp            1    1[BANK0 ] unsigned char 
  7288 ;;  sign            1    0[BANK0 ] unsigned char 
  7289 ;; Return value:  Size  Location     Type
  7290 ;;                  4   27[COMRAM] unsigned char 
  7291 ;; Registers used:
  7292 ;;		wreg, status,2, status,0, prodl, prodh
  7293 ;; Tracked objects:
  7294 ;;		On entry : 0/0
  7295 ;;		On exit  : 0/0
  7296 ;;		Unchanged: 0/0
  7297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7298 ;;      Params:         8       0       0       0       0       0       0       0       0
  7299 ;;      Locals:         0      13       0       0       0       0       0       0       0
  7300 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7301 ;;      Totals:        12      13       0       0       0       0       0       0       0
  7302 ;;Total ram usage:       25 bytes
  7303 ;; Hardware stack levels used:    1
  7304 ;; Hardware stack levels required when called:    3
  7305 ;; This function calls:
  7306 ;;		Nothing
  7307 ;; This function is called by:
  7308 ;;		_efgtoa
  7309 ;; This function uses a non-reentrant model
  7310 ;;
  7311                           
  7312                           	psect	text15
  7313  001930                     __ptext15:
  7314                           	opt callstack 0
  7315  001930                     ___flmul:
  7316                           	opt callstack 23
  7317                           
  7318                           ;incstack = 0
  7319  001930  501F               	movf	___flmul@b+3,w,c
  7320  001932  0B80               	andlw	128
  7321  001934  0100               	movlb	0	; () banked
  7322  001936  6F60               	movwf	___flmul@sign& (0+255),b
  7323  001938  501F               	movf	___flmul@b+3,w,c
  7324  00193A  241F               	addwf	___flmul@b+3,w,c
  7325  00193C  6F66               	movwf	___flmul@bexp& (0+255),b
  7326                           
  7327                           ; BSR set to: 0
  7328  00193E  BE1E               	btfsc	___flmul@b+2,7,c
  7329                           
  7330                           ; BSR set to: 0
  7331  001940  8166               	bsf	___flmul@bexp& (0+255),0,b
  7332                           
  7333                           ; BSR set to: 0
  7334  001942  5166               	movf	___flmul@bexp& (0+255),w,b
  7335  001944  B4D8               	btfsc	status,2,c
  7336  001946  D00D               	goto	l6247
  7337                           
  7338                           ; BSR set to: 0
  7339  001948  2966               	incf	___flmul@bexp& (0+255),w,b
  7340  00194A  A4D8               	btfss	status,2,c
  7341  00194C  D008               	goto	l6245
  7342                           
  7343                           ; BSR set to: 0
  7344  00194E  0E00               	movlw	0
  7345  001950  6E1C               	movwf	___flmul@b,c
  7346  001952  0E00               	movlw	0
  7347  001954  6E1D               	movwf	___flmul@b+1,c
  7348  001956  0E00               	movlw	0
  7349  001958  6E1E               	movwf	___flmul@b+2,c
  7350  00195A  0E00               	movlw	0
  7351  00195C  6E1F               	movwf	___flmul@b+3,c
  7352  00195E                     l6245:
  7353                           
  7354                           ; BSR set to: 0
  7355  00195E  8E1E               	bsf	___flmul@b+2,7,c
  7356  001960  D008               	goto	l6249
  7357  001962                     l6247:
  7358                           
  7359                           ; BSR set to: 0
  7360  001962  0E00               	movlw	0
  7361  001964  6E1C               	movwf	___flmul@b,c
  7362  001966  0E00               	movlw	0
  7363  001968  6E1D               	movwf	___flmul@b+1,c
  7364  00196A  0E00               	movlw	0
  7365  00196C  6E1E               	movwf	___flmul@b+2,c
  7366  00196E  0E00               	movlw	0
  7367  001970  6E1F               	movwf	___flmul@b+3,c
  7368  001972                     l6249:
  7369                           
  7370                           ; BSR set to: 0
  7371  001972  5023               	movf	___flmul@a+3,w,c
  7372  001974  0B80               	andlw	128
  7373  001976  1B60               	xorwf	___flmul@sign& (0+255),f,b
  7374                           
  7375                           ; BSR set to: 0
  7376  001978  5023               	movf	___flmul@a+3,w,c
  7377  00197A  2423               	addwf	___flmul@a+3,w,c
  7378  00197C  6F61               	movwf	___flmul@aexp& (0+255),b
  7379                           
  7380                           ; BSR set to: 0
  7381  00197E  BE22               	btfsc	___flmul@a+2,7,c
  7382                           
  7383                           ; BSR set to: 0
  7384  001980  8161               	bsf	___flmul@aexp& (0+255),0,b
  7385                           
  7386                           ; BSR set to: 0
  7387  001982  5161               	movf	___flmul@aexp& (0+255),w,b
  7388  001984  B4D8               	btfsc	status,2,c
  7389  001986  D00D               	goto	l6265
  7390                           
  7391                           ; BSR set to: 0
  7392  001988  2961               	incf	___flmul@aexp& (0+255),w,b
  7393  00198A  A4D8               	btfss	status,2,c
  7394  00198C  D008               	goto	l6263
  7395                           
  7396                           ; BSR set to: 0
  7397  00198E  0E00               	movlw	0
  7398  001990  6E20               	movwf	___flmul@a,c
  7399  001992  0E00               	movlw	0
  7400  001994  6E21               	movwf	___flmul@a+1,c
  7401  001996  0E00               	movlw	0
  7402  001998  6E22               	movwf	___flmul@a+2,c
  7403  00199A  0E00               	movlw	0
  7404  00199C  6E23               	movwf	___flmul@a+3,c
  7405  00199E                     l6263:
  7406                           
  7407                           ; BSR set to: 0
  7408  00199E  8E22               	bsf	___flmul@a+2,7,c
  7409  0019A0  D008               	goto	l1196
  7410  0019A2                     l6265:
  7411                           
  7412                           ; BSR set to: 0
  7413  0019A2  0E00               	movlw	0
  7414  0019A4  6E20               	movwf	___flmul@a,c
  7415  0019A6  0E00               	movlw	0
  7416  0019A8  6E21               	movwf	___flmul@a+1,c
  7417  0019AA  0E00               	movlw	0
  7418  0019AC  6E22               	movwf	___flmul@a+2,c
  7419  0019AE  0E00               	movlw	0
  7420  0019B0  6E23               	movwf	___flmul@a+3,c
  7421  0019B2                     l1196:
  7422                           
  7423                           ; BSR set to: 0
  7424  0019B2  5161               	movf	___flmul@aexp& (0+255),w,b
  7425  0019B4  B4D8               	btfsc	status,2,c
  7426  0019B6  D003               	goto	u7450
  7427                           
  7428                           ; BSR set to: 0
  7429  0019B8  5166               	movf	___flmul@bexp& (0+255),w,b
  7430  0019BA  A4D8               	btfss	status,2,c
  7431  0019BC  D009               	goto	l6273
  7432  0019BE                     u7450:
  7433                           
  7434                           ; BSR set to: 0
  7435  0019BE  0E00               	movlw	0
  7436  0019C0  6E1C               	movwf	?___flmul,c
  7437  0019C2  0E00               	movlw	0
  7438  0019C4  6E1D               	movwf	?___flmul+1,c
  7439  0019C6  0E00               	movlw	0
  7440  0019C8  6E1E               	movwf	?___flmul+2,c
  7441  0019CA  0E00               	movlw	0
  7442  0019CC  6E1F               	movwf	?___flmul+3,c
  7443  0019CE  0012               	return	
  7444  0019D0                     l6273:
  7445                           
  7446                           ; BSR set to: 0
  7447  0019D0  5022               	movf	___flmul@a+2,w,c
  7448  0019D2  021C               	mulwf	___flmul@b,c
  7449  0019D4  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7450  0019DA  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7451                           
  7452                           ; BSR set to: 0
  7453  0019E0  516B               	movf	___flmul@temp& (0+255),w,b
  7454  0019E2  6F62               	movwf	___flmul@grs& (0+255),b
  7455  0019E4  6B63               	clrf	(___flmul@grs+1)& (0+255),b
  7456  0019E6  6B64               	clrf	(___flmul@grs+2)& (0+255),b
  7457  0019E8  6B65               	clrf	(___flmul@grs+3)& (0+255),b
  7458                           
  7459                           ; BSR set to: 0
  7460  0019EA  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7461  0019EC  6F67               	movwf	___flmul@prod& (0+255),b
  7462  0019EE  6B68               	clrf	(___flmul@prod+1)& (0+255),b
  7463  0019F0  6B69               	clrf	(___flmul@prod+2)& (0+255),b
  7464  0019F2  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
  7465  0019F4  5021               	movf	___flmul@a+1,w,c
  7466  0019F6  021D               	mulwf	___flmul@b+1,c
  7467  0019F8  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7468  0019FE  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7469                           
  7470                           ; BSR set to: 0
  7471  001A04  516B               	movf	___flmul@temp& (0+255),w,b
  7472  001A06  2762               	addwf	___flmul@grs& (0+255),f,b
  7473  001A08  0E00               	movlw	0
  7474  001A0A  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7475  001A0C  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7476  001A0E  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7477                           
  7478                           ; BSR set to: 0
  7479  001A10  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7480  001A12  2767               	addwf	___flmul@prod& (0+255),f,b
  7481  001A14  0E00               	movlw	0
  7482  001A16  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7483  001A18  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7484  001A1A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7485  001A1C  5020               	movf	___flmul@a,w,c
  7486  001A1E  021E               	mulwf	___flmul@b+2,c
  7487  001A20  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7488  001A26  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7489                           
  7490                           ; BSR set to: 0
  7491  001A2C  516B               	movf	___flmul@temp& (0+255),w,b
  7492  001A2E  2762               	addwf	___flmul@grs& (0+255),f,b
  7493  001A30  0E00               	movlw	0
  7494  001A32  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7495  001A34  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7496  001A36  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7497                           
  7498                           ; BSR set to: 0
  7499  001A38  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7500  001A3A  2767               	addwf	___flmul@prod& (0+255),f,b
  7501  001A3C  0E00               	movlw	0
  7502  001A3E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7503  001A40  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7504  001A42  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7505                           
  7506                           ; BSR set to: 0
  7507  001A44  0060  F190  F065   	movff	___flmul@grs+2,___flmul@grs+3
  7508  001A4A  0060  F18C  F064   	movff	___flmul@grs+1,___flmul@grs+2
  7509  001A50  0060  F188  F063   	movff	___flmul@grs,___flmul@grs+1
  7510  001A56  6B62               	clrf	___flmul@grs& (0+255),b
  7511                           
  7512                           ; BSR set to: 0
  7513  001A58  5020               	movf	___flmul@a,w,c
  7514  001A5A  021D               	mulwf	___flmul@b+1,c
  7515  001A5C  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7516  001A62  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7517                           
  7518                           ; BSR set to: 0
  7519  001A68  516B               	movf	___flmul@temp& (0+255),w,b
  7520  001A6A  2762               	addwf	___flmul@grs& (0+255),f,b
  7521  001A6C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7522  001A6E  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7523  001A70  0E00               	movlw	0
  7524  001A72  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7525  001A74  0E00               	movlw	0
  7526  001A76  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7527                           
  7528                           ; BSR set to: 0
  7529  001A78  5021               	movf	___flmul@a+1,w,c
  7530  001A7A  021C               	mulwf	___flmul@b,c
  7531  001A7C  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7532  001A82  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7533                           
  7534                           ; BSR set to: 0
  7535  001A88  516B               	movf	___flmul@temp& (0+255),w,b
  7536  001A8A  2762               	addwf	___flmul@grs& (0+255),f,b
  7537  001A8C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7538  001A8E  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7539  001A90  0E00               	movlw	0
  7540  001A92  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7541  001A94  0E00               	movlw	0
  7542  001A96  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7543                           
  7544                           ; BSR set to: 0
  7545  001A98  0060  F190  F065   	movff	___flmul@grs+2,___flmul@grs+3
  7546  001A9E  0060  F18C  F064   	movff	___flmul@grs+1,___flmul@grs+2
  7547  001AA4  0060  F188  F063   	movff	___flmul@grs,___flmul@grs+1
  7548  001AAA  6B62               	clrf	___flmul@grs& (0+255),b
  7549  001AAC  5020               	movf	___flmul@a,w,c
  7550  001AAE  021C               	mulwf	___flmul@b,c
  7551  001AB0  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7552  001AB6  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7553                           
  7554                           ; BSR set to: 0
  7555  001ABC  516B               	movf	___flmul@temp& (0+255),w,b
  7556  001ABE  2762               	addwf	___flmul@grs& (0+255),f,b
  7557  001AC0  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7558  001AC2  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  7559  001AC4  0E00               	movlw	0
  7560  001AC6  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  7561  001AC8  0E00               	movlw	0
  7562  001ACA  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  7563                           
  7564                           ; BSR set to: 0
  7565  001ACC  5022               	movf	___flmul@a+2,w,c
  7566  001ACE  021D               	mulwf	___flmul@b+1,c
  7567  001AD0  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7568  001AD6  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7569  001ADC  516B               	movf	___flmul@temp& (0+255),w,b
  7570  001ADE  2767               	addwf	___flmul@prod& (0+255),f,b
  7571  001AE0  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7572  001AE2  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7573  001AE4  0E00               	movlw	0
  7574  001AE6  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7575  001AE8  0E00               	movlw	0
  7576  001AEA  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7577                           
  7578                           ; BSR set to: 0
  7579  001AEC  5021               	movf	___flmul@a+1,w,c
  7580  001AEE  021E               	mulwf	___flmul@b+2,c
  7581  001AF0  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7582  001AF6  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7583                           
  7584                           ; BSR set to: 0
  7585  001AFC  516B               	movf	___flmul@temp& (0+255),w,b
  7586  001AFE  2767               	addwf	___flmul@prod& (0+255),f,b
  7587  001B00  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7588  001B02  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7589  001B04  0E00               	movlw	0
  7590  001B06  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7591  001B08  0E00               	movlw	0
  7592  001B0A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7593  001B0C  5022               	movf	___flmul@a+2,w,c
  7594  001B0E  021E               	mulwf	___flmul@b+2,c
  7595  001B10  006F FFCC  F06B    	movff	prodl,___flmul@temp
  7596  001B16  006F FFD0  F06C    	movff	prodh,___flmul@temp+1
  7597                           
  7598                           ; BSR set to: 0
  7599  001B1C  516B               	movf	___flmul@temp& (0+255),w,b
  7600  001B1E  6E24               	movwf	??___flmul& (0+255),c
  7601  001B20  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7602  001B22  6E25               	movwf	(??___flmul+1)& (0+255),c
  7603  001B24  6A26               	clrf	(??___flmul+2)& (0+255),c
  7604  001B26  6A27               	clrf	(??___flmul+3)& (0+255),c
  7605  001B28  0060  F098  F027   	movff	??___flmul+2,??___flmul+3
  7606  001B2E  0060  F094  F026   	movff	??___flmul+1,??___flmul+2
  7607  001B34  0060  F090  F025   	movff	??___flmul,??___flmul+1
  7608  001B3A  6A24               	clrf	??___flmul,c
  7609  001B3C  5024               	movf	??___flmul,w,c
  7610  001B3E  2767               	addwf	___flmul@prod& (0+255),f,b
  7611  001B40  5025               	movf	??___flmul+1,w,c
  7612  001B42  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7613  001B44  5026               	movf	??___flmul+2,w,c
  7614  001B46  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7615  001B48  5027               	movf	??___flmul+3,w,c
  7616  001B4A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7617                           
  7618                           ; BSR set to: 0
  7619  001B4C  0060  F188  F024   	movff	___flmul@grs,??___flmul
  7620  001B52  0060  F18C  F025   	movff	___flmul@grs+1,??___flmul+1
  7621  001B58  0060  F190  F026   	movff	___flmul@grs+2,??___flmul+2
  7622  001B5E  0060  F194  F027   	movff	___flmul@grs+3,??___flmul+3
  7623  001B64  0E19               	movlw	25
  7624  001B66  D005               	goto	u7460
  7625  001B68                     u7465:
  7626  001B68  90D8               	bcf	status,0,c
  7627  001B6A  3227               	rrcf	??___flmul+3,f,c
  7628  001B6C  3226               	rrcf	??___flmul+2,f,c
  7629  001B6E  3225               	rrcf	??___flmul+1,f,c
  7630  001B70  3224               	rrcf	??___flmul,f,c
  7631  001B72                     u7460:
  7632  001B72  2EE8               	decfsz	wreg,f,c
  7633  001B74  D7F9               	goto	u7465
  7634  001B76  5024               	movf	??___flmul,w,c
  7635  001B78  2767               	addwf	___flmul@prod& (0+255),f,b
  7636  001B7A  5025               	movf	??___flmul+1,w,c
  7637  001B7C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7638  001B7E  5026               	movf	??___flmul+2,w,c
  7639  001B80  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7640  001B82  5027               	movf	??___flmul+3,w,c
  7641  001B84  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7642                           
  7643                           ; BSR set to: 0
  7644  001B86  0060  F190  F065   	movff	___flmul@grs+2,___flmul@grs+3
  7645  001B8C  0060  F18C  F064   	movff	___flmul@grs+1,___flmul@grs+2
  7646  001B92  0060  F188  F063   	movff	___flmul@grs,___flmul@grs+1
  7647  001B98  6B62               	clrf	___flmul@grs& (0+255),b
  7648                           
  7649                           ; BSR set to: 0
  7650  001B9A  5161               	movf	___flmul@aexp& (0+255),w,b
  7651  001B9C  0060  F198  F024   	movff	___flmul@bexp,??___flmul
  7652  001BA2  6A25               	clrf	(??___flmul+1)& (0+255),c
  7653  001BA4  2624               	addwf	??___flmul,f,c
  7654  001BA6  0E00               	movlw	0
  7655  001BA8  2225               	addwfc	??___flmul+1,f,c
  7656  001BAA  0E82               	movlw	130
  7657  001BAC  2424               	addwf	??___flmul,w,c
  7658  001BAE  6F6B               	movwf	___flmul@temp& (0+255),b
  7659  001BB0  0EFF               	movlw	255
  7660  001BB2  2025               	addwfc	??___flmul+1,w,c
  7661  001BB4  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
  7662  001BB6  D00F               	goto	l6321
  7663  001BB8                     l6315:
  7664                           
  7665                           ; BSR set to: 0
  7666  001BB8  90D8               	bcf	status,0,c
  7667  001BBA  3767               	rlcf	___flmul@prod& (0+255),f,b
  7668  001BBC  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
  7669  001BBE  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
  7670  001BC0  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
  7671                           
  7672                           ; BSR set to: 0
  7673  001BC2  BF65               	btfsc	(___flmul@grs+3)& (0+255),7,b
  7674                           
  7675                           ; BSR set to: 0
  7676  001BC4  8167               	bsf	___flmul@prod& (0+255),0,b
  7677                           
  7678                           ; BSR set to: 0
  7679  001BC6  90D8               	bcf	status,0,c
  7680  001BC8  3762               	rlcf	___flmul@grs& (0+255),f,b
  7681  001BCA  3763               	rlcf	(___flmul@grs+1)& (0+255),f,b
  7682  001BCC  3764               	rlcf	(___flmul@grs+2)& (0+255),f,b
  7683  001BCE  3765               	rlcf	(___flmul@grs+3)& (0+255),f,b
  7684  001BD0  076B               	decf	___flmul@temp& (0+255),f,b
  7685  001BD2  A0D8               	btfss	status,0,c
  7686  001BD4  076C               	decf	(___flmul@temp+1)& (0+255),f,b
  7687  001BD6                     l6321:
  7688                           
  7689                           ; BSR set to: 0
  7690  001BD6  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
  7691  001BD8  D7EF               	goto	l6315
  7692                           
  7693                           ; BSR set to: 0
  7694  001BDA  0E00               	movlw	0
  7695  001BDC  6F61               	movwf	___flmul@aexp& (0+255),b
  7696                           
  7697                           ; BSR set to: 0
  7698  001BDE  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
  7699  001BE0  D017               	goto	l1205
  7700                           
  7701                           ; BSR set to: 0
  7702  001BE2  0EFF               	movlw	255
  7703  001BE4  1562               	andwf	___flmul@grs& (0+255),w,b
  7704  001BE6  6E24               	movwf	??___flmul& (0+255),c
  7705  001BE8  0EFF               	movlw	255
  7706  001BEA  1563               	andwf	(___flmul@grs+1)& (0+255),w,b
  7707  001BEC  6E25               	movwf	(??___flmul+1)& (0+255),c
  7708  001BEE  0EFF               	movlw	255
  7709  001BF0  1564               	andwf	(___flmul@grs+2)& (0+255),w,b
  7710  001BF2  6E26               	movwf	(??___flmul+2)& (0+255),c
  7711  001BF4  0E7F               	movlw	127
  7712  001BF6  1565               	andwf	(___flmul@grs+3)& (0+255),w,b
  7713  001BF8  6E27               	movwf	(??___flmul+3)& (0+255),c
  7714  001BFA  5024               	movf	??___flmul,w,c
  7715  001BFC  1025               	iorwf	??___flmul+1,w,c
  7716  001BFE  1026               	iorwf	??___flmul+2,w,c
  7717  001C00  1027               	iorwf	??___flmul+3,w,c
  7718  001C02  B4D8               	btfsc	status,2,c
  7719  001C04  D003               	goto	l1206
  7720  001C06                     u7500:
  7721                           
  7722                           ; BSR set to: 0
  7723  001C06  0E01               	movlw	1
  7724  001C08  6F61               	movwf	___flmul@aexp& (0+255),b
  7725  001C0A  D002               	goto	l1205
  7726  001C0C                     l1206:
  7727                           
  7728                           ; BSR set to: 0
  7729  001C0C  B167               	btfsc	___flmul@prod& (0+255),0,b
  7730  001C0E  D7FB               	goto	u7500
  7731  001C10                     l1205:
  7732                           
  7733                           ; BSR set to: 0
  7734  001C10  5161               	movf	___flmul@aexp& (0+255),w,b
  7735  001C12  B4D8               	btfsc	status,2,c
  7736  001C14  D027               	goto	l6341
  7737                           
  7738                           ; BSR set to: 0
  7739  001C16  0E01               	movlw	1
  7740  001C18  2767               	addwf	___flmul@prod& (0+255),f,b
  7741  001C1A  0E00               	movlw	0
  7742  001C1C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7743  001C1E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7744  001C20  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7745                           
  7746                           ; BSR set to: 0
  7747  001C22  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
  7748  001C24  D01F               	goto	l6341
  7749                           
  7750                           ; BSR set to: 0
  7751  001C26  0060  F19C  F024   	movff	___flmul@prod,??___flmul
  7752  001C2C  0060  F1A0  F025   	movff	___flmul@prod+1,??___flmul+1
  7753  001C32  0060  F1A4  F026   	movff	___flmul@prod+2,??___flmul+2
  7754  001C38  0060  F1A8  F027   	movff	___flmul@prod+3,??___flmul+3
  7755  001C3E  3427               	rlcf	??___flmul+3,w,c
  7756  001C40  3227               	rrcf	??___flmul+3,f,c
  7757  001C42  3226               	rrcf	??___flmul+2,f,c
  7758  001C44  3225               	rrcf	??___flmul+1,f,c
  7759  001C46  3224               	rrcf	??___flmul,f,c
  7760  001C48  0060  F090  F067   	movff	??___flmul,___flmul@prod
  7761  001C4E  0060  F094  F068   	movff	??___flmul+1,___flmul@prod+1
  7762  001C54  0060  F098  F069   	movff	??___flmul+2,___flmul@prod+2
  7763  001C5A  0060  F09C  F06A   	movff	??___flmul+3,___flmul@prod+3
  7764                           
  7765                           ; BSR set to: 0
  7766  001C60  4B6B               	infsnz	___flmul@temp& (0+255),f,b
  7767  001C62  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
  7768  001C64                     l6341:
  7769                           
  7770                           ; BSR set to: 0
  7771  001C64  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  7772  001C66  D00D               	goto	l6345
  7773  001C68  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7774  001C6A  E103               	bnz	u7540
  7775  001C6C  296B               	incf	___flmul@temp& (0+255),w,b
  7776  001C6E  A0D8               	btfss	status,0,c
  7777  001C70  D008               	goto	l6345
  7778  001C72                     u7540:
  7779                           
  7780                           ; BSR set to: 0
  7781  001C72  0E00               	movlw	0
  7782  001C74  6F67               	movwf	___flmul@prod& (0+255),b
  7783  001C76  0E00               	movlw	0
  7784  001C78  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  7785  001C7A  0E80               	movlw	128
  7786  001C7C  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  7787  001C7E  0E7F               	movlw	127
  7788  001C80  D021               	goto	L13
  7789  001C82                     l6345:
  7790                           
  7791                           ; BSR set to: 0
  7792  001C82  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  7793  001C84  D005               	goto	u7550
  7794  001C86  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  7795  001C88  E10E               	bnz	l1213
  7796  001C8A  056B               	decf	___flmul@temp& (0+255),w,b
  7797  001C8C  B0D8               	btfsc	status,0,c
  7798  001C8E  D00B               	goto	l1213
  7799  001C90                     u7550:
  7800                           
  7801                           ; BSR set to: 0
  7802  001C90  0E00               	movlw	0
  7803  001C92  6F67               	movwf	___flmul@prod& (0+255),b
  7804  001C94  0E00               	movlw	0
  7805  001C96  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  7806  001C98  0E00               	movlw	0
  7807  001C9A  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  7808  001C9C  0E00               	movlw	0
  7809  001C9E  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  7810  001CA0  0E00               	movlw	0
  7811  001CA2  6F60               	movwf	___flmul@sign& (0+255),b
  7812  001CA4  D010               	goto	l6357
  7813  001CA6                     l1213:
  7814                           
  7815                           ; BSR set to: 0
  7816  001CA6  0060  F1AC  F066   	movff	___flmul@temp,___flmul@bexp
  7817                           
  7818                           ; BSR set to: 0
  7819  001CAC  0EFF               	movlw	255
  7820  001CAE  1767               	andwf	___flmul@prod& (0+255),f,b
  7821  001CB0  0EFF               	movlw	255
  7822  001CB2  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
  7823  001CB4  0E7F               	movlw	127
  7824  001CB6  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
  7825  001CB8  0E00               	movlw	0
  7826  001CBA  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
  7827                           
  7828                           ; BSR set to: 0
  7829  001CBC  B166               	btfsc	___flmul@bexp& (0+255),0,b
  7830                           
  7831                           ; BSR set to: 0
  7832  001CBE  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
  7833                           
  7834                           ; BSR set to: 0
  7835  001CC0  90D8               	bcf	status,0,c
  7836  001CC2  3166               	rrcf	___flmul@bexp& (0+255),w,b
  7837  001CC4                     L13:
  7838  001CC4  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  7839  001CC6                     l6357:
  7840                           
  7841                           ; BSR set to: 0
  7842  001CC6  5160               	movf	___flmul@sign& (0+255),w,b
  7843  001CC8  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
  7844                           
  7845                           ; BSR set to: 0
  7846  001CCA  0060  F19C  F01C   	movff	___flmul@prod,?___flmul
  7847  001CD0  0060  F1A0  F01D   	movff	___flmul@prod+1,?___flmul+1
  7848  001CD6  0060  F1A4  F01E   	movff	___flmul@prod+2,?___flmul+2
  7849  001CDC  0060  F1A8  F01F   	movff	___flmul@prod+3,?___flmul+3
  7850                           
  7851                           ; BSR set to: 0
  7852  001CE2  0012               	return		;funcret
  7853  001CE4                     __end_of___flmul:
  7854                           	opt callstack 0
  7855                           
  7856 ;; *************** function ___flge *****************
  7857 ;; Defined at:
  7858 ;;		line 4 in file "D:\MPLAB\pic\sources\c99\common\flge.c"
  7859 ;; Parameters:    Size  Location     Type
  7860 ;;  ff1             4   13[BANK0 ] unsigned char 
  7861 ;;  ff2             4   17[BANK0 ] unsigned char 
  7862 ;; Auto vars:     Size  Location     Type
  7863 ;;		None
  7864 ;; Return value:  Size  Location     Type
  7865 ;;		None               void
  7866 ;; Registers used:
  7867 ;;		wreg, status,2, status,0
  7868 ;; Tracked objects:
  7869 ;;		On entry : 0/0
  7870 ;;		On exit  : 0/0
  7871 ;;		Unchanged: 0/0
  7872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7873 ;;      Params:         0       8       0       0       0       0       0       0       0
  7874 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7875 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7876 ;;      Totals:         4       8       0       0       0       0       0       0       0
  7877 ;;Total ram usage:       12 bytes
  7878 ;; Hardware stack levels used:    1
  7879 ;; Hardware stack levels required when called:    3
  7880 ;; This function calls:
  7881 ;;		Nothing
  7882 ;; This function is called by:
  7883 ;;		_efgtoa
  7884 ;; This function uses a non-reentrant model
  7885 ;;
  7886                           
  7887                           	psect	text16
  7888  002EAC                     __ptext16:
  7889                           	opt callstack 0
  7890  002EAC                     ___flge:
  7891                           	opt callstack 23
  7892                           
  7893                           ; BSR set to: 0
  7894                           ;incstack = 0
  7895  002EAC  0E00               	movlw	0
  7896  002EAE  0100               	movlb	0	; () banked
  7897  002EB0  156D               	andwf	___flge@ff1& (0+255),w,b
  7898  002EB2  6E28               	movwf	??___flge& (0+255),c
  7899  002EB4  0E00               	movlw	0
  7900  002EB6  156E               	andwf	(___flge@ff1+1)& (0+255),w,b
  7901  002EB8  6E29               	movwf	(??___flge+1)& (0+255),c
  7902  002EBA  0E80               	movlw	128
  7903  002EBC  156F               	andwf	(___flge@ff1+2)& (0+255),w,b
  7904  002EBE  6E2A               	movwf	(??___flge+2)& (0+255),c
  7905  002EC0  0E7F               	movlw	127
  7906  002EC2  1570               	andwf	(___flge@ff1+3)& (0+255),w,b
  7907  002EC4  6E2B               	movwf	(??___flge+3)& (0+255),c
  7908  002EC6  5028               	movf	??___flge,w,c
  7909  002EC8  1029               	iorwf	??___flge+1,w,c
  7910  002ECA  102A               	iorwf	??___flge+2,w,c
  7911  002ECC  102B               	iorwf	??___flge+3,w,c
  7912  002ECE  A4D8               	btfss	status,2,c
  7913  002ED0  D008               	goto	l6469
  7914                           
  7915                           ; BSR set to: 0
  7916  002ED2  0E00               	movlw	0
  7917  002ED4  6F6D               	movwf	___flge@ff1& (0+255),b
  7918  002ED6  0E00               	movlw	0
  7919  002ED8  6F6E               	movwf	(___flge@ff1+1)& (0+255),b
  7920  002EDA  0E00               	movlw	0
  7921  002EDC  6F6F               	movwf	(___flge@ff1+2)& (0+255),b
  7922  002EDE  0E00               	movlw	0
  7923  002EE0  6F70               	movwf	(___flge@ff1+3)& (0+255),b
  7924  002EE2                     l6469:
  7925                           
  7926                           ; BSR set to: 0
  7927  002EE2  0E00               	movlw	0
  7928  002EE4  1571               	andwf	___flge@ff2& (0+255),w,b
  7929  002EE6  6E28               	movwf	??___flge& (0+255),c
  7930  002EE8  0E00               	movlw	0
  7931  002EEA  1572               	andwf	(___flge@ff2+1)& (0+255),w,b
  7932  002EEC  6E29               	movwf	(??___flge+1)& (0+255),c
  7933  002EEE  0E80               	movlw	128
  7934  002EF0  1573               	andwf	(___flge@ff2+2)& (0+255),w,b
  7935  002EF2  6E2A               	movwf	(??___flge+2)& (0+255),c
  7936  002EF4  0E7F               	movlw	127
  7937  002EF6  1574               	andwf	(___flge@ff2+3)& (0+255),w,b
  7938  002EF8  6E2B               	movwf	(??___flge+3)& (0+255),c
  7939  002EFA  5028               	movf	??___flge,w,c
  7940  002EFC  1029               	iorwf	??___flge+1,w,c
  7941  002EFE  102A               	iorwf	??___flge+2,w,c
  7942  002F00  102B               	iorwf	??___flge+3,w,c
  7943  002F02  A4D8               	btfss	status,2,c
  7944  002F04  D008               	goto	l6473
  7945                           
  7946                           ; BSR set to: 0
  7947  002F06  0E00               	movlw	0
  7948  002F08  6F71               	movwf	___flge@ff2& (0+255),b
  7949  002F0A  0E00               	movlw	0
  7950  002F0C  6F72               	movwf	(___flge@ff2+1)& (0+255),b
  7951  002F0E  0E00               	movlw	0
  7952  002F10  6F73               	movwf	(___flge@ff2+2)& (0+255),b
  7953  002F12  0E00               	movlw	0
  7954  002F14  6F74               	movwf	(___flge@ff2+3)& (0+255),b
  7955  002F16                     l6473:
  7956                           
  7957                           ; BSR set to: 0
  7958  002F16  AF70               	btfss	(___flge@ff1+3)& (0+255),7,b
  7959  002F18  D009               	goto	l6477
  7960                           
  7961                           ; BSR set to: 0
  7962  002F1A  6D6D               	negf	___flge@ff1& (0+255),b
  7963  002F1C  1F6E               	comf	(___flge@ff1+1)& (0+255),f,b
  7964  002F1E  B0D8               	btfsc	status,0,c
  7965  002F20  2B6E               	incf	(___flge@ff1+1)& (0+255),f,b
  7966  002F22  1F6F               	comf	(___flge@ff1+2)& (0+255),f,b
  7967  002F24  B0D8               	btfsc	status,0,c
  7968  002F26  2B6F               	incf	(___flge@ff1+2)& (0+255),f,b
  7969  002F28  0E80               	movlw	128
  7970  002F2A  5770               	subfwb	(___flge@ff1+3)& (0+255),f,b
  7971  002F2C                     l6477:
  7972                           
  7973                           ; BSR set to: 0
  7974  002F2C  AF74               	btfss	(___flge@ff2+3)& (0+255),7,b
  7975  002F2E  D009               	goto	l847
  7976                           
  7977                           ; BSR set to: 0
  7978  002F30  6D71               	negf	___flge@ff2& (0+255),b
  7979  002F32  1F72               	comf	(___flge@ff2+1)& (0+255),f,b
  7980  002F34  B0D8               	btfsc	status,0,c
  7981  002F36  2B72               	incf	(___flge@ff2+1)& (0+255),f,b
  7982  002F38  1F73               	comf	(___flge@ff2+2)& (0+255),f,b
  7983  002F3A  B0D8               	btfsc	status,0,c
  7984  002F3C  2B73               	incf	(___flge@ff2+2)& (0+255),f,b
  7985  002F3E  0E80               	movlw	128
  7986  002F40  5774               	subfwb	(___flge@ff2+3)& (0+255),f,b
  7987  002F42                     l847:
  7988                           
  7989                           ; BSR set to: 0
  7990  002F42  0E00               	movlw	0
  7991  002F44  1B6D               	xorwf	___flge@ff1& (0+255),f,b
  7992  002F46  0E00               	movlw	0
  7993  002F48  1B6E               	xorwf	(___flge@ff1+1)& (0+255),f,b
  7994  002F4A  0E00               	movlw	0
  7995  002F4C  1B6F               	xorwf	(___flge@ff1+2)& (0+255),f,b
  7996  002F4E  0E80               	movlw	128
  7997  002F50  1B70               	xorwf	(___flge@ff1+3)& (0+255),f,b
  7998  002F52  0E00               	movlw	0
  7999  002F54  1B71               	xorwf	___flge@ff2& (0+255),f,b
  8000  002F56  0E00               	movlw	0
  8001  002F58  1B72               	xorwf	(___flge@ff2+1)& (0+255),f,b
  8002  002F5A  0E00               	movlw	0
  8003  002F5C  1B73               	xorwf	(___flge@ff2+2)& (0+255),f,b
  8004  002F5E  0E80               	movlw	128
  8005  002F60  1B74               	xorwf	(___flge@ff2+3)& (0+255),f,b
  8006  002F62  5171               	movf	___flge@ff2& (0+255),w,b
  8007  002F64  5D6D               	subwf	___flge@ff1& (0+255),w,b
  8008  002F66  5172               	movf	(___flge@ff2+1)& (0+255),w,b
  8009  002F68  596E               	subwfb	(___flge@ff1+1)& (0+255),w,b
  8010  002F6A  5173               	movf	(___flge@ff2+2)& (0+255),w,b
  8011  002F6C  596F               	subwfb	(___flge@ff1+2)& (0+255),w,b
  8012  002F6E  5174               	movf	(___flge@ff2+3)& (0+255),w,b
  8013  002F70  5970               	subwfb	(___flge@ff1+3)& (0+255),w,b
  8014  002F72  B0D8               	btfsc	status,0,c
  8015  002F74  D002               	goto	l6483
  8016                           
  8017                           ; BSR set to: 0
  8018  002F76  90D8               	bcf	status,0,c
  8019  002F78  0012               	return	
  8020  002F7A                     l6483:
  8021                           
  8022                           ; BSR set to: 0
  8023  002F7A  80D8               	bsf	status,0,c
  8024                           
  8025                           ; BSR set to: 0
  8026  002F7C  0012               	return		;funcret
  8027  002F7E                     __end_of___flge:
  8028                           	opt callstack 0
  8029                           
  8030 ;; *************** function ___fleq *****************
  8031 ;; Defined at:
  8032 ;;		line 4 in file "D:\MPLAB\pic\sources\c99\common\fleq.c"
  8033 ;; Parameters:    Size  Location     Type
  8034 ;;  ff1             4   27[COMRAM] unsigned char 
  8035 ;;  ff2             4   31[COMRAM] unsigned char 
  8036 ;; Auto vars:     Size  Location     Type
  8037 ;;		None
  8038 ;; Return value:  Size  Location     Type
  8039 ;;		None               void
  8040 ;; Registers used:
  8041 ;;		wreg, status,2, status,0
  8042 ;; Tracked objects:
  8043 ;;		On entry : 0/0
  8044 ;;		On exit  : 0/0
  8045 ;;		Unchanged: 0/0
  8046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8047 ;;      Params:         8       0       0       0       0       0       0       0       0
  8048 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8049 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8050 ;;      Totals:        12       0       0       0       0       0       0       0       0
  8051 ;;Total ram usage:       12 bytes
  8052 ;; Hardware stack levels used:    1
  8053 ;; Hardware stack levels required when called:    3
  8054 ;; This function calls:
  8055 ;;		Nothing
  8056 ;; This function is called by:
  8057 ;;		_efgtoa
  8058 ;; This function uses a non-reentrant model
  8059 ;;
  8060                           
  8061                           	psect	text17
  8062  003626                     __ptext17:
  8063                           	opt callstack 0
  8064  003626                     ___fleq:
  8065                           	opt callstack 23
  8066                           
  8067                           ; BSR set to: 0
  8068                           ;incstack = 0
  8069  003626  0E00               	movlw	0
  8070  003628  141C               	andwf	___fleq@ff1,w,c
  8071  00362A  6E24               	movwf	??___fleq& (0+255),c
  8072  00362C  0E00               	movlw	0
  8073  00362E  141D               	andwf	___fleq@ff1+1,w,c
  8074  003630  6E25               	movwf	(??___fleq+1)& (0+255),c
  8075  003632  0E80               	movlw	128
  8076  003634  141E               	andwf	___fleq@ff1+2,w,c
  8077  003636  6E26               	movwf	(??___fleq+2)& (0+255),c
  8078  003638  0E7F               	movlw	127
  8079  00363A  141F               	andwf	___fleq@ff1+3,w,c
  8080  00363C  6E27               	movwf	(??___fleq+3)& (0+255),c
  8081  00363E  5024               	movf	??___fleq,w,c
  8082  003640  1025               	iorwf	??___fleq+1,w,c
  8083  003642  1026               	iorwf	??___fleq+2,w,c
  8084  003644  1027               	iorwf	??___fleq+3,w,c
  8085  003646  A4D8               	btfss	status,2,c
  8086  003648  D008               	goto	l6453
  8087  00364A  0E00               	movlw	0
  8088  00364C  6E1C               	movwf	___fleq@ff1,c
  8089  00364E  0E00               	movlw	0
  8090  003650  6E1D               	movwf	___fleq@ff1+1,c
  8091  003652  0E00               	movlw	0
  8092  003654  6E1E               	movwf	___fleq@ff1+2,c
  8093  003656  0E00               	movlw	0
  8094  003658  6E1F               	movwf	___fleq@ff1+3,c
  8095  00365A                     l6453:
  8096  00365A  0E00               	movlw	0
  8097  00365C  1420               	andwf	___fleq@ff2,w,c
  8098  00365E  6E24               	movwf	??___fleq& (0+255),c
  8099  003660  0E00               	movlw	0
  8100  003662  1421               	andwf	___fleq@ff2+1,w,c
  8101  003664  6E25               	movwf	(??___fleq+1)& (0+255),c
  8102  003666  0E80               	movlw	128
  8103  003668  1422               	andwf	___fleq@ff2+2,w,c
  8104  00366A  6E26               	movwf	(??___fleq+2)& (0+255),c
  8105  00366C  0E7F               	movlw	127
  8106  00366E  1423               	andwf	___fleq@ff2+3,w,c
  8107  003670  6E27               	movwf	(??___fleq+3)& (0+255),c
  8108  003672  5024               	movf	??___fleq,w,c
  8109  003674  1025               	iorwf	??___fleq+1,w,c
  8110  003676  1026               	iorwf	??___fleq+2,w,c
  8111  003678  1027               	iorwf	??___fleq+3,w,c
  8112  00367A  A4D8               	btfss	status,2,c
  8113  00367C  D008               	goto	l6457
  8114  00367E  0E00               	movlw	0
  8115  003680  6E20               	movwf	___fleq@ff2,c
  8116  003682  0E00               	movlw	0
  8117  003684  6E21               	movwf	___fleq@ff2+1,c
  8118  003686  0E00               	movlw	0
  8119  003688  6E22               	movwf	___fleq@ff2+2,c
  8120  00368A  0E00               	movlw	0
  8121  00368C  6E23               	movwf	___fleq@ff2+3,c
  8122  00368E                     l6457:
  8123  00368E  5020               	movf	___fleq@ff2,w,c
  8124  003690  181C               	xorwf	___fleq@ff1,w,c
  8125  003692  E10A               	bnz	u7710
  8126  003694  5021               	movf	___fleq@ff2+1,w,c
  8127  003696  181D               	xorwf	___fleq@ff1+1,w,c
  8128  003698  E107               	bnz	u7710
  8129  00369A  5022               	movf	___fleq@ff2+2,w,c
  8130  00369C  181E               	xorwf	___fleq@ff1+2,w,c
  8131  00369E  E104               	bnz	u7710
  8132  0036A0  5023               	movf	___fleq@ff2+3,w,c
  8133  0036A2  181F               	xorwf	___fleq@ff1+3,w,c
  8134  0036A4  B4D8               	btfsc	status,2,c
  8135  0036A6  D002               	goto	l6461
  8136  0036A8                     u7710:
  8137  0036A8  90D8               	bcf	status,0,c
  8138  0036AA  0012               	return	
  8139  0036AC                     l6461:
  8140  0036AC  80D8               	bsf	status,0,c
  8141  0036AE  0012               	return		;funcret
  8142  0036B0                     __end_of___fleq:
  8143                           	opt callstack 0
  8144                           
  8145 ;; *************** function ___fldiv *****************
  8146 ;; Defined at:
  8147 ;;		line 11 in file "D:\MPLAB\pic\sources\c99\common\sprcdiv.c"
  8148 ;; Parameters:    Size  Location     Type
  8149 ;;  b               4   27[COMRAM] unsigned char 
  8150 ;;  a               4   31[COMRAM] unsigned char 
  8151 ;; Auto vars:     Size  Location     Type
  8152 ;;  grs             4    7[BANK0 ] unsigned long 
  8153 ;;  rem             4    0[BANK0 ] unsigned long 
  8154 ;;  new_exp         2    5[BANK0 ] short 
  8155 ;;  aexp            1   12[BANK0 ] unsigned char 
  8156 ;;  bexp            1   11[BANK0 ] unsigned char 
  8157 ;;  sign            1    4[BANK0 ] unsigned char 
  8158 ;; Return value:  Size  Location     Type
  8159 ;;                  4   27[COMRAM] unsigned char 
  8160 ;; Registers used:
  8161 ;;		wreg, status,2, status,0
  8162 ;; Tracked objects:
  8163 ;;		On entry : 0/0
  8164 ;;		On exit  : 0/0
  8165 ;;		Unchanged: 0/0
  8166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8167 ;;      Params:         8       0       0       0       0       0       0       0       0
  8168 ;;      Locals:         0      13       0       0       0       0       0       0       0
  8169 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8170 ;;      Totals:        12      13       0       0       0       0       0       0       0
  8171 ;;Total ram usage:       25 bytes
  8172 ;; Hardware stack levels used:    1
  8173 ;; Hardware stack levels required when called:    3
  8174 ;; This function calls:
  8175 ;;		Nothing
  8176 ;; This function is called by:
  8177 ;;		_efgtoa
  8178 ;; This function uses a non-reentrant model
  8179 ;;
  8180                           
  8181                           	psect	text18
  8182  0022DE                     __ptext18:
  8183                           	opt callstack 0
  8184  0022DE                     ___fldiv:
  8185                           	opt callstack 23
  8186                           
  8187                           ;incstack = 0
  8188  0022DE  501F               	movf	___fldiv@b+3,w,c
  8189  0022E0  0B80               	andlw	128
  8190  0022E2  0100               	movlb	0	; () banked
  8191  0022E4  6F64               	movwf	___fldiv@sign& (0+255),b
  8192  0022E6  501F               	movf	___fldiv@b+3,w,c
  8193  0022E8  241F               	addwf	___fldiv@b+3,w,c
  8194  0022EA  6F6B               	movwf	___fldiv@bexp& (0+255),b
  8195                           
  8196                           ; BSR set to: 0
  8197  0022EC  BE1E               	btfsc	___fldiv@b+2,7,c
  8198                           
  8199                           ; BSR set to: 0
  8200  0022EE  816B               	bsf	___fldiv@bexp& (0+255),0,b
  8201                           
  8202                           ; BSR set to: 0
  8203  0022F0  516B               	movf	___fldiv@bexp& (0+255),w,b
  8204  0022F2  B4D8               	btfsc	status,2,c
  8205  0022F4  D00D               	goto	l6111
  8206                           
  8207                           ; BSR set to: 0
  8208  0022F6  296B               	incf	___fldiv@bexp& (0+255),w,b
  8209  0022F8  A4D8               	btfss	status,2,c
  8210  0022FA  D008               	goto	l6107
  8211                           
  8212                           ; BSR set to: 0
  8213  0022FC  0E00               	movlw	0
  8214  0022FE  6E1C               	movwf	___fldiv@b,c
  8215  002300  0E00               	movlw	0
  8216  002302  6E1D               	movwf	___fldiv@b+1,c
  8217  002304  0E00               	movlw	0
  8218  002306  6E1E               	movwf	___fldiv@b+2,c
  8219  002308  0E00               	movlw	0
  8220  00230A  6E1F               	movwf	___fldiv@b+3,c
  8221  00230C                     l6107:
  8222                           
  8223                           ; BSR set to: 0
  8224  00230C  8E1E               	bsf	___fldiv@b+2,7,c
  8225  00230E  D006               	goto	L14
  8226  002310                     l6111:
  8227                           
  8228                           ; BSR set to: 0
  8229  002310  0E00               	movlw	0
  8230  002312  6E1C               	movwf	___fldiv@b,c
  8231  002314  0E00               	movlw	0
  8232  002316  6E1D               	movwf	___fldiv@b+1,c
  8233  002318  0E00               	movlw	0
  8234  00231A  6E1E               	movwf	___fldiv@b+2,c
  8235  00231C                     L14:
  8236  00231C  0E00               	movlw	0
  8237  00231E  6E1F               	movwf	___fldiv@b+3,c
  8238                           
  8239                           ; BSR set to: 0
  8240  002320  5023               	movf	___fldiv@a+3,w,c
  8241  002322  0B80               	andlw	128
  8242  002324  1B64               	xorwf	___fldiv@sign& (0+255),f,b
  8243                           
  8244                           ; BSR set to: 0
  8245  002326  5023               	movf	___fldiv@a+3,w,c
  8246  002328  2423               	addwf	___fldiv@a+3,w,c
  8247  00232A  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8248                           
  8249                           ; BSR set to: 0
  8250  00232C  BE22               	btfsc	___fldiv@a+2,7,c
  8251                           
  8252                           ; BSR set to: 0
  8253  00232E  816C               	bsf	___fldiv@aexp& (0+255),0,b
  8254                           
  8255                           ; BSR set to: 0
  8256  002330  516C               	movf	___fldiv@aexp& (0+255),w,b
  8257  002332  B4D8               	btfsc	status,2,c
  8258  002334  D00D               	goto	l6131
  8259                           
  8260                           ; BSR set to: 0
  8261  002336  296C               	incf	___fldiv@aexp& (0+255),w,b
  8262  002338  A4D8               	btfss	status,2,c
  8263  00233A  D008               	goto	l6127
  8264                           
  8265                           ; BSR set to: 0
  8266  00233C  0E00               	movlw	0
  8267  00233E  6E20               	movwf	___fldiv@a,c
  8268  002340  0E00               	movlw	0
  8269  002342  6E21               	movwf	___fldiv@a+1,c
  8270  002344  0E00               	movlw	0
  8271  002346  6E22               	movwf	___fldiv@a+2,c
  8272  002348  0E00               	movlw	0
  8273  00234A  6E23               	movwf	___fldiv@a+3,c
  8274  00234C                     l6127:
  8275                           
  8276                           ; BSR set to: 0
  8277  00234C  8E22               	bsf	___fldiv@a+2,7,c
  8278  00234E  D006               	goto	L15
  8279  002350                     l6131:
  8280                           
  8281                           ; BSR set to: 0
  8282  002350  0E00               	movlw	0
  8283  002352  6E20               	movwf	___fldiv@a,c
  8284  002354  0E00               	movlw	0
  8285  002356  6E21               	movwf	___fldiv@a+1,c
  8286  002358  0E00               	movlw	0
  8287  00235A  6E22               	movwf	___fldiv@a+2,c
  8288  00235C                     L15:
  8289  00235C  0E00               	movlw	0
  8290  00235E  6E23               	movwf	___fldiv@a+3,c
  8291                           
  8292                           ; BSR set to: 0
  8293  002360  5020               	movf	___fldiv@a,w,c
  8294  002362  1021               	iorwf	___fldiv@a+1,w,c
  8295  002364  1022               	iorwf	___fldiv@a+2,w,c
  8296  002366  1023               	iorwf	___fldiv@a+3,w,c
  8297  002368  A4D8               	btfss	status,2,c
  8298  00236A  D01B               	goto	l6145
  8299                           
  8300                           ; BSR set to: 0
  8301  00236C  0E00               	movlw	0
  8302  00236E  6E1C               	movwf	___fldiv@b,c
  8303  002370  0E00               	movlw	0
  8304  002372  6E1D               	movwf	___fldiv@b+1,c
  8305  002374  0E00               	movlw	0
  8306  002376  6E1E               	movwf	___fldiv@b+2,c
  8307  002378  0E00               	movlw	0
  8308  00237A  6E1F               	movwf	___fldiv@b+3,c
  8309                           
  8310                           ; BSR set to: 0
  8311  00237C  0E80               	movlw	128
  8312  00237E  121E               	iorwf	___fldiv@b+2,f,c
  8313  002380  0E7F               	movlw	127
  8314  002382  121F               	iorwf	___fldiv@b+3,f,c
  8315  002384                     l6139:
  8316                           
  8317                           ; BSR set to: 0
  8318  002384  5164               	movf	___fldiv@sign& (0+255),w,b
  8319  002386  121F               	iorwf	___fldiv@b+3,f,c
  8320                           
  8321                           ; BSR set to: 0
  8322  002388  0060  F070  F01C   	movff	___fldiv@b,?___fldiv
  8323  00238E  0060  F074  F01D   	movff	___fldiv@b+1,?___fldiv+1
  8324  002394  0060  F078  F01E   	movff	___fldiv@b+2,?___fldiv+2
  8325  00239A  0060  F07C  F01F   	movff	___fldiv@b+3,?___fldiv+3
  8326  0023A0  0012               	return	
  8327  0023A2                     l6145:
  8328                           
  8329                           ; BSR set to: 0
  8330  0023A2  516B               	movf	___fldiv@bexp& (0+255),w,b
  8331  0023A4  A4D8               	btfss	status,2,c
  8332  0023A6  D009               	goto	l6153
  8333                           
  8334                           ; BSR set to: 0
  8335                           
  8336                           ; BSR set to: 0
  8337  0023A8  0E00               	movlw	0
  8338  0023AA  6E1C               	movwf	?___fldiv,c
  8339  0023AC  0E00               	movlw	0
  8340  0023AE  6E1D               	movwf	?___fldiv+1,c
  8341  0023B0  0E00               	movlw	0
  8342  0023B2  6E1E               	movwf	?___fldiv+2,c
  8343  0023B4  0E00               	movlw	0
  8344  0023B6  6E1F               	movwf	?___fldiv+3,c
  8345  0023B8  0012               	return	
  8346  0023BA                     l6153:
  8347                           
  8348                           ; BSR set to: 0
  8349  0023BA  516C               	movf	___fldiv@aexp& (0+255),w,b
  8350  0023BC  0060  F1AC  F024   	movff	___fldiv@bexp,??___fldiv
  8351  0023C2  6A25               	clrf	(??___fldiv+1)& (0+255),c
  8352  0023C4  5E24               	subwf	??___fldiv,f,c
  8353  0023C6  0E00               	movlw	0
  8354  0023C8  5A25               	subwfb	??___fldiv+1,f,c
  8355  0023CA  0E7F               	movlw	127
  8356  0023CC  2424               	addwf	??___fldiv,w,c
  8357  0023CE  6F65               	movwf	___fldiv@new_exp& (0+255),b
  8358  0023D0  0E00               	movlw	0
  8359  0023D2  2025               	addwfc	??___fldiv+1,w,c
  8360  0023D4  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8361                           
  8362                           ; BSR set to: 0
  8363  0023D6  0060  F070  F060   	movff	___fldiv@b,___fldiv@rem
  8364  0023DC  0060  F074  F061   	movff	___fldiv@b+1,___fldiv@rem+1
  8365  0023E2  0060  F078  F062   	movff	___fldiv@b+2,___fldiv@rem+2
  8366  0023E8  0060  F07C  F063   	movff	___fldiv@b+3,___fldiv@rem+3
  8367                           
  8368                           ; BSR set to: 0
  8369  0023EE  0E00               	movlw	0
  8370  0023F0  6E1C               	movwf	___fldiv@b,c
  8371  0023F2  0E00               	movlw	0
  8372  0023F4  6E1D               	movwf	___fldiv@b+1,c
  8373  0023F6  0E00               	movlw	0
  8374  0023F8  6E1E               	movwf	___fldiv@b+2,c
  8375  0023FA  0E00               	movlw	0
  8376  0023FC  6E1F               	movwf	___fldiv@b+3,c
  8377                           
  8378                           ; BSR set to: 0
  8379  0023FE  0E00               	movlw	0
  8380  002400  6F67               	movwf	___fldiv@grs& (0+255),b
  8381  002402  0E00               	movlw	0
  8382  002404  6F68               	movwf	(___fldiv@grs+1)& (0+255),b
  8383  002406  0E00               	movlw	0
  8384  002408  6F69               	movwf	(___fldiv@grs+2)& (0+255),b
  8385  00240A  0E00               	movlw	0
  8386  00240C  6F6A               	movwf	(___fldiv@grs+3)& (0+255),b
  8387                           
  8388                           ; BSR set to: 0
  8389  00240E  0E00               	movlw	0
  8390  002410  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8391  002412  D028               	goto	l1166
  8392  002414                     l6163:
  8393                           
  8394                           ; BSR set to: 0
  8395  002414  516C               	movf	___fldiv@aexp& (0+255),w,b
  8396  002416  B4D8               	btfsc	status,2,c
  8397  002418  D011               	goto	l6171
  8398                           
  8399                           ; BSR set to: 0
  8400  00241A  90D8               	bcf	status,0,c
  8401  00241C  3760               	rlcf	___fldiv@rem& (0+255),f,b
  8402  00241E  3761               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  8403  002420  3762               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  8404  002422  3763               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  8405  002424  90D8               	bcf	status,0,c
  8406  002426  361C               	rlcf	___fldiv@b,f,c
  8407  002428  361D               	rlcf	___fldiv@b+1,f,c
  8408  00242A  361E               	rlcf	___fldiv@b+2,f,c
  8409  00242C  361F               	rlcf	___fldiv@b+3,f,c
  8410                           
  8411                           ; BSR set to: 0
  8412  00242E  BF6A               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  8413                           
  8414                           ; BSR set to: 0
  8415  002430  801C               	bsf	___fldiv@b,0,c
  8416                           
  8417                           ; BSR set to: 0
  8418  002432  90D8               	bcf	status,0,c
  8419  002434  3767               	rlcf	___fldiv@grs& (0+255),f,b
  8420  002436  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  8421  002438  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  8422  00243A  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  8423  00243C                     l6171:
  8424                           
  8425                           ; BSR set to: 0
  8426  00243C  5020               	movf	___fldiv@a,w,c
  8427  00243E  5D60               	subwf	___fldiv@rem& (0+255),w,b
  8428  002440  5021               	movf	___fldiv@a+1,w,c
  8429  002442  5961               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  8430  002444  5022               	movf	___fldiv@a+2,w,c
  8431  002446  5962               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  8432  002448  5023               	movf	___fldiv@a+3,w,c
  8433  00244A  5963               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  8434  00244C  A0D8               	btfss	status,0,c
  8435  00244E  D009               	goto	l6177
  8436                           
  8437                           ; BSR set to: 0
  8438  002450  8D6A               	bsf	(___fldiv@grs+3)& (0+255),6,b
  8439                           
  8440                           ; BSR set to: 0
  8441  002452  5020               	movf	___fldiv@a,w,c
  8442  002454  5F60               	subwf	___fldiv@rem& (0+255),f,b
  8443  002456  5021               	movf	___fldiv@a+1,w,c
  8444  002458  5B61               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  8445  00245A  5022               	movf	___fldiv@a+2,w,c
  8446  00245C  5B62               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  8447  00245E  5023               	movf	___fldiv@a+3,w,c
  8448  002460  5B63               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  8449  002462                     l6177:
  8450                           
  8451                           ; BSR set to: 0
  8452  002462  2B6C               	incf	___fldiv@aexp& (0+255),f,b
  8453  002464                     l1166:
  8454                           
  8455                           ; BSR set to: 0
  8456  002464  0E19               	movlw	25
  8457  002466  656C               	cpfsgt	___fldiv@aexp& (0+255),b
  8458  002468  D7D5               	goto	l6163
  8459                           
  8460                           ; BSR set to: 0
  8461  00246A  5160               	movf	___fldiv@rem& (0+255),w,b
  8462  00246C  1161               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  8463  00246E  1162               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  8464  002470  1163               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  8465  002472  B4D8               	btfsc	status,2,c
  8466  002474  D011               	goto	l6189
  8467                           
  8468                           ; BSR set to: 0
  8469  002476  8167               	bsf	___fldiv@grs& (0+255),0,b
  8470  002478  D00F               	goto	l6189
  8471  00247A                     l6183:
  8472                           
  8473                           ; BSR set to: 0
  8474  00247A  90D8               	bcf	status,0,c
  8475  00247C  361C               	rlcf	___fldiv@b,f,c
  8476  00247E  361D               	rlcf	___fldiv@b+1,f,c
  8477  002480  361E               	rlcf	___fldiv@b+2,f,c
  8478  002482  361F               	rlcf	___fldiv@b+3,f,c
  8479                           
  8480                           ; BSR set to: 0
  8481  002484  BF6A               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  8482                           
  8483                           ; BSR set to: 0
  8484  002486  801C               	bsf	___fldiv@b,0,c
  8485                           
  8486                           ; BSR set to: 0
  8487  002488  90D8               	bcf	status,0,c
  8488  00248A  3767               	rlcf	___fldiv@grs& (0+255),f,b
  8489  00248C  3768               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  8490  00248E  3769               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  8491  002490  376A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  8492  002492  0765               	decf	___fldiv@new_exp& (0+255),f,b
  8493  002494  A0D8               	btfss	status,0,c
  8494  002496  0766               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  8495  002498                     l6189:
  8496                           
  8497                           ; BSR set to: 0
  8498  002498  AE1E               	btfss	___fldiv@b+2,7,c
  8499  00249A  D7EF               	goto	l6183
  8500                           
  8501                           ; BSR set to: 0
  8502  00249C  0E00               	movlw	0
  8503  00249E  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8504                           
  8505                           ; BSR set to: 0
  8506  0024A0  AF6A               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8507  0024A2  D017               	goto	l1177
  8508                           
  8509                           ; BSR set to: 0
  8510  0024A4  0EFF               	movlw	255
  8511  0024A6  1567               	andwf	___fldiv@grs& (0+255),w,b
  8512  0024A8  6E24               	movwf	??___fldiv& (0+255),c
  8513  0024AA  0EFF               	movlw	255
  8514  0024AC  1568               	andwf	(___fldiv@grs+1)& (0+255),w,b
  8515  0024AE  6E25               	movwf	(??___fldiv+1)& (0+255),c
  8516  0024B0  0EFF               	movlw	255
  8517  0024B2  1569               	andwf	(___fldiv@grs+2)& (0+255),w,b
  8518  0024B4  6E26               	movwf	(??___fldiv+2)& (0+255),c
  8519  0024B6  0E7F               	movlw	127
  8520  0024B8  156A               	andwf	(___fldiv@grs+3)& (0+255),w,b
  8521  0024BA  6E27               	movwf	(??___fldiv+3)& (0+255),c
  8522  0024BC  5024               	movf	??___fldiv,w,c
  8523  0024BE  1025               	iorwf	??___fldiv+1,w,c
  8524  0024C0  1026               	iorwf	??___fldiv+2,w,c
  8525  0024C2  1027               	iorwf	??___fldiv+3,w,c
  8526  0024C4  B4D8               	btfsc	status,2,c
  8527  0024C6  D003               	goto	l1178
  8528  0024C8                     u7310:
  8529                           
  8530                           ; BSR set to: 0
  8531  0024C8  0E01               	movlw	1
  8532  0024CA  6F6C               	movwf	___fldiv@aexp& (0+255),b
  8533  0024CC  D002               	goto	l1177
  8534  0024CE                     l1178:
  8535                           
  8536                           ; BSR set to: 0
  8537  0024CE  B01C               	btfsc	___fldiv@b,0,c
  8538  0024D0  D7FB               	goto	u7310
  8539  0024D2                     l1177:
  8540                           
  8541                           ; BSR set to: 0
  8542  0024D2  516C               	movf	___fldiv@aexp& (0+255),w,b
  8543  0024D4  B4D8               	btfsc	status,2,c
  8544  0024D6  D027               	goto	l6209
  8545                           
  8546                           ; BSR set to: 0
  8547  0024D8  0E01               	movlw	1
  8548  0024DA  261C               	addwf	___fldiv@b,f,c
  8549  0024DC  0E00               	movlw	0
  8550  0024DE  221D               	addwfc	___fldiv@b+1,f,c
  8551  0024E0  221E               	addwfc	___fldiv@b+2,f,c
  8552  0024E2  221F               	addwfc	___fldiv@b+3,f,c
  8553                           
  8554                           ; BSR set to: 0
  8555  0024E4  A01F               	btfss	___fldiv@b+3,0,c
  8556  0024E6  D01F               	goto	l6209
  8557                           
  8558                           ; BSR set to: 0
  8559  0024E8  0060  F070  F024   	movff	___fldiv@b,??___fldiv
  8560  0024EE  0060  F074  F025   	movff	___fldiv@b+1,??___fldiv+1
  8561  0024F4  0060  F078  F026   	movff	___fldiv@b+2,??___fldiv+2
  8562  0024FA  0060  F07C  F027   	movff	___fldiv@b+3,??___fldiv+3
  8563  002500  3427               	rlcf	??___fldiv+3,w,c
  8564  002502  3227               	rrcf	??___fldiv+3,f,c
  8565  002504  3226               	rrcf	??___fldiv+2,f,c
  8566  002506  3225               	rrcf	??___fldiv+1,f,c
  8567  002508  3224               	rrcf	??___fldiv,f,c
  8568  00250A  0060  F090  F01C   	movff	??___fldiv,___fldiv@b
  8569  002510  0060  F094  F01D   	movff	??___fldiv+1,___fldiv@b+1
  8570  002516  0060  F098  F01E   	movff	??___fldiv+2,___fldiv@b+2
  8571  00251C  0060  F09C  F01F   	movff	??___fldiv+3,___fldiv@b+3
  8572                           
  8573                           ; BSR set to: 0
  8574  002522  4B65               	infsnz	___fldiv@new_exp& (0+255),f,b
  8575  002524  2B66               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  8576  002526                     l6209:
  8577                           
  8578                           ; BSR set to: 0
  8579  002526  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  8580  002528  D010               	goto	l6213
  8581  00252A  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  8582  00252C  E103               	bnz	u7350
  8583  00252E  2965               	incf	___fldiv@new_exp& (0+255),w,b
  8584  002530  A0D8               	btfss	status,0,c
  8585  002532  D00B               	goto	l6213
  8586  002534                     u7350:
  8587                           
  8588                           ; BSR set to: 0
  8589  002534  0E00               	movlw	0
  8590  002536  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8591  002538  6965               	setf	___fldiv@new_exp& (0+255),b
  8592  00253A  0E00               	movlw	0
  8593  00253C  6E1C               	movwf	___fldiv@b,c
  8594  00253E  0E00               	movlw	0
  8595  002540  6E1D               	movwf	___fldiv@b+1,c
  8596  002542  0E00               	movlw	0
  8597  002544  6E1E               	movwf	___fldiv@b+2,c
  8598  002546  0E00               	movlw	0
  8599  002548  6E1F               	movwf	___fldiv@b+3,c
  8600  00254A                     l6213:
  8601                           
  8602                           ; BSR set to: 0
  8603  00254A  BF66               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  8604  00254C  D005               	goto	u7360
  8605  00254E  5166               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  8606  002550  E111               	bnz	l6217
  8607  002552  0565               	decf	___fldiv@new_exp& (0+255),w,b
  8608  002554  B0D8               	btfsc	status,0,c
  8609  002556  D00E               	goto	l6217
  8610  002558                     u7360:
  8611                           
  8612                           ; BSR set to: 0
  8613  002558  0E00               	movlw	0
  8614  00255A  6F66               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8615  00255C  0E00               	movlw	0
  8616  00255E  6F65               	movwf	___fldiv@new_exp& (0+255),b
  8617  002560  0E00               	movlw	0
  8618  002562  6E1C               	movwf	___fldiv@b,c
  8619  002564  0E00               	movlw	0
  8620  002566  6E1D               	movwf	___fldiv@b+1,c
  8621  002568  0E00               	movlw	0
  8622  00256A  6E1E               	movwf	___fldiv@b+2,c
  8623  00256C  0E00               	movlw	0
  8624  00256E  6E1F               	movwf	___fldiv@b+3,c
  8625  002570  0E00               	movlw	0
  8626  002572  6F64               	movwf	___fldiv@sign& (0+255),b
  8627  002574                     l6217:
  8628                           
  8629                           ; BSR set to: 0
  8630  002574  0060  F194  F06B   	movff	___fldiv@new_exp,___fldiv@bexp
  8631                           
  8632                           ; BSR set to: 0
  8633  00257A  A16B               	btfss	___fldiv@bexp& (0+255),0,b
  8634  00257C  D002               	goto	l6223
  8635                           
  8636                           ; BSR set to: 0
  8637  00257E  8E1E               	bsf	___fldiv@b+2,7,c
  8638  002580  D001               	goto	l6225
  8639  002582                     l6223:
  8640                           
  8641                           ; BSR set to: 0
  8642  002582  9E1E               	bcf	___fldiv@b+2,7,c
  8643  002584                     l6225:
  8644                           
  8645                           ; BSR set to: 0
  8646  002584  90D8               	bcf	status,0,c
  8647  002586  316B               	rrcf	___fldiv@bexp& (0+255),w,b
  8648  002588  6E1F               	movwf	___fldiv@b+3,c
  8649  00258A  D6FC               	goto	l6139
  8650  00258C                     __end_of___fldiv:
  8651                           	opt callstack 0
  8652                           
  8653 ;; *************** function ___awmod *****************
  8654 ;; Defined at:
  8655 ;;		line 7 in file "D:\MPLAB\pic\sources\c99\common\awmod.c"
  8656 ;; Parameters:    Size  Location     Type
  8657 ;;  dividend        2   27[COMRAM] int 
  8658 ;;  divisor         2   29[COMRAM] int 
  8659 ;; Auto vars:     Size  Location     Type
  8660 ;;  sign            1   32[COMRAM] unsigned char 
  8661 ;;  counter         1   31[COMRAM] unsigned char 
  8662 ;; Return value:  Size  Location     Type
  8663 ;;                  2   27[COMRAM] int 
  8664 ;; Registers used:
  8665 ;;		wreg, status,2, status,0
  8666 ;; Tracked objects:
  8667 ;;		On entry : 0/0
  8668 ;;		On exit  : 0/0
  8669 ;;		Unchanged: 0/0
  8670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8671 ;;      Params:         4       0       0       0       0       0       0       0       0
  8672 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8673 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8674 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8675 ;;Total ram usage:        6 bytes
  8676 ;; Hardware stack levels used:    1
  8677 ;; Hardware stack levels required when called:    3
  8678 ;; This function calls:
  8679 ;;		Nothing
  8680 ;; This function is called by:
  8681 ;;		_efgtoa
  8682 ;; This function uses a non-reentrant model
  8683 ;;
  8684                           
  8685                           	psect	text19
  8686  0037BA                     __ptext19:
  8687                           	opt callstack 0
  8688  0037BA                     ___awmod:
  8689                           	opt callstack 23
  8690                           
  8691                           ; BSR set to: 0
  8692                           ;incstack = 0
  8693  0037BA  0E00               	movlw	0
  8694  0037BC  6E21               	movwf	___awmod@sign,c
  8695  0037BE  AE1D               	btfss	___awmod@dividend+1,7,c
  8696  0037C0  D006               	goto	l6421
  8697  0037C2  6C1C               	negf	___awmod@dividend,c
  8698  0037C4  1E1D               	comf	___awmod@dividend+1,f,c
  8699  0037C6  B0D8               	btfsc	status,0,c
  8700  0037C8  2A1D               	incf	___awmod@dividend+1,f,c
  8701  0037CA  0E01               	movlw	1
  8702  0037CC  6E21               	movwf	___awmod@sign,c
  8703  0037CE                     l6421:
  8704  0037CE  AE1F               	btfss	___awmod@divisor+1,7,c
  8705  0037D0  D004               	goto	l6425
  8706  0037D2  6C1E               	negf	___awmod@divisor,c
  8707  0037D4  1E1F               	comf	___awmod@divisor+1,f,c
  8708  0037D6  B0D8               	btfsc	status,0,c
  8709  0037D8  2A1F               	incf	___awmod@divisor+1,f,c
  8710  0037DA                     l6425:
  8711  0037DA  501E               	movf	___awmod@divisor,w,c
  8712  0037DC  101F               	iorwf	___awmod@divisor+1,w,c
  8713  0037DE  B4D8               	btfsc	status,2,c
  8714  0037E0  D018               	goto	l6441
  8715  0037E2  0E01               	movlw	1
  8716  0037E4  6E20               	movwf	___awmod@counter,c
  8717  0037E6  D004               	goto	l6431
  8718  0037E8                     l6429:
  8719  0037E8  90D8               	bcf	status,0,c
  8720  0037EA  361E               	rlcf	___awmod@divisor,f,c
  8721  0037EC  361F               	rlcf	___awmod@divisor+1,f,c
  8722  0037EE  2A20               	incf	___awmod@counter,f,c
  8723  0037F0                     l6431:
  8724  0037F0  AE1F               	btfss	___awmod@divisor+1,7,c
  8725  0037F2  D7FA               	goto	l6429
  8726  0037F4                     u7660:
  8727  0037F4  501E               	movf	___awmod@divisor,w,c
  8728  0037F6  5C1C               	subwf	___awmod@dividend,w,c
  8729  0037F8  501F               	movf	___awmod@divisor+1,w,c
  8730  0037FA  581D               	subwfb	___awmod@dividend+1,w,c
  8731  0037FC  A0D8               	btfss	status,0,c
  8732  0037FE  D004               	goto	l6437
  8733  003800  501E               	movf	___awmod@divisor,w,c
  8734  003802  5E1C               	subwf	___awmod@dividend,f,c
  8735  003804  501F               	movf	___awmod@divisor+1,w,c
  8736  003806  5A1D               	subwfb	___awmod@dividend+1,f,c
  8737  003808                     l6437:
  8738  003808  90D8               	bcf	status,0,c
  8739  00380A  321F               	rrcf	___awmod@divisor+1,f,c
  8740  00380C  321E               	rrcf	___awmod@divisor,f,c
  8741  00380E  2E20               	decfsz	___awmod@counter,f,c
  8742  003810  D7F1               	goto	u7660
  8743  003812                     l6441:
  8744  003812  5021               	movf	___awmod@sign,w,c
  8745  003814  B4D8               	btfsc	status,2,c
  8746  003816  D004               	goto	l6445
  8747  003818  6C1C               	negf	___awmod@dividend,c
  8748  00381A  1E1D               	comf	___awmod@dividend+1,f,c
  8749  00381C  B0D8               	btfsc	status,0,c
  8750  00381E  2A1D               	incf	___awmod@dividend+1,f,c
  8751  003820                     l6445:
  8752  003820  0060  F070  F01C   	movff	___awmod@dividend,?___awmod
  8753  003826  0060  F074  F01D   	movff	___awmod@dividend+1,?___awmod+1
  8754  00382C  0012               	return		;funcret
  8755  00382E                     __end_of___awmod:
  8756                           	opt callstack 0
  8757                           
  8758 ;; *************** function ___awdiv *****************
  8759 ;; Defined at:
  8760 ;;		line 7 in file "D:\MPLAB\pic\sources\c99\common\awdiv.c"
  8761 ;; Parameters:    Size  Location     Type
  8762 ;;  dividend        2   27[COMRAM] int 
  8763 ;;  divisor         2   29[COMRAM] int 
  8764 ;; Auto vars:     Size  Location     Type
  8765 ;;  quotient        2   33[COMRAM] int 
  8766 ;;  sign            1   32[COMRAM] unsigned char 
  8767 ;;  counter         1   31[COMRAM] unsigned char 
  8768 ;; Return value:  Size  Location     Type
  8769 ;;                  2   27[COMRAM] int 
  8770 ;; Registers used:
  8771 ;;		wreg, status,2, status,0
  8772 ;; Tracked objects:
  8773 ;;		On entry : 0/0
  8774 ;;		On exit  : 0/0
  8775 ;;		Unchanged: 0/0
  8776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8777 ;;      Params:         4       0       0       0       0       0       0       0       0
  8778 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8779 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8780 ;;      Totals:         8       0       0       0       0       0       0       0       0
  8781 ;;Total ram usage:        8 bytes
  8782 ;; Hardware stack levels used:    1
  8783 ;; Hardware stack levels required when called:    3
  8784 ;; This function calls:
  8785 ;;		Nothing
  8786 ;; This function is called by:
  8787 ;;		_efgtoa
  8788 ;; This function uses a non-reentrant model
  8789 ;;
  8790                           
  8791                           	psect	text20
  8792  0036B0                     __ptext20:
  8793                           	opt callstack 0
  8794  0036B0                     ___awdiv:
  8795                           	opt callstack 23
  8796                           
  8797                           ;incstack = 0
  8798  0036B0  0E00               	movlw	0
  8799  0036B2  6E21               	movwf	___awdiv@sign,c
  8800  0036B4  AE1F               	btfss	___awdiv@divisor+1,7,c
  8801  0036B6  D006               	goto	l6377
  8802  0036B8  6C1E               	negf	___awdiv@divisor,c
  8803  0036BA  1E1F               	comf	___awdiv@divisor+1,f,c
  8804  0036BC  B0D8               	btfsc	status,0,c
  8805  0036BE  2A1F               	incf	___awdiv@divisor+1,f,c
  8806  0036C0  0E01               	movlw	1
  8807  0036C2  6E21               	movwf	___awdiv@sign,c
  8808  0036C4                     l6377:
  8809  0036C4  AE1D               	btfss	___awdiv@dividend+1,7,c
  8810  0036C6  D006               	goto	l6383
  8811  0036C8  6C1C               	negf	___awdiv@dividend,c
  8812  0036CA  1E1D               	comf	___awdiv@dividend+1,f,c
  8813  0036CC  B0D8               	btfsc	status,0,c
  8814  0036CE  2A1D               	incf	___awdiv@dividend+1,f,c
  8815  0036D0  0E01               	movlw	1
  8816  0036D2  1A21               	xorwf	___awdiv@sign,f,c
  8817  0036D4                     l6383:
  8818  0036D4  0E00               	movlw	0
  8819  0036D6  6E23               	movwf	___awdiv@quotient+1,c
  8820  0036D8  0E00               	movlw	0
  8821  0036DA  6E22               	movwf	___awdiv@quotient,c
  8822  0036DC  501E               	movf	___awdiv@divisor,w,c
  8823  0036DE  101F               	iorwf	___awdiv@divisor+1,w,c
  8824  0036E0  B4D8               	btfsc	status,2,c
  8825  0036E2  D01C               	goto	l6405
  8826  0036E4  0E01               	movlw	1
  8827  0036E6  6E20               	movwf	___awdiv@counter,c
  8828  0036E8  D004               	goto	l6391
  8829  0036EA                     l6389:
  8830  0036EA  90D8               	bcf	status,0,c
  8831  0036EC  361E               	rlcf	___awdiv@divisor,f,c
  8832  0036EE  361F               	rlcf	___awdiv@divisor+1,f,c
  8833  0036F0  2A20               	incf	___awdiv@counter,f,c
  8834  0036F2                     l6391:
  8835  0036F2  AE1F               	btfss	___awdiv@divisor+1,7,c
  8836  0036F4  D7FA               	goto	l6389
  8837  0036F6                     u7600:
  8838  0036F6  90D8               	bcf	status,0,c
  8839  0036F8  3622               	rlcf	___awdiv@quotient,f,c
  8840  0036FA  3623               	rlcf	___awdiv@quotient+1,f,c
  8841  0036FC  501E               	movf	___awdiv@divisor,w,c
  8842  0036FE  5C1C               	subwf	___awdiv@dividend,w,c
  8843  003700  501F               	movf	___awdiv@divisor+1,w,c
  8844  003702  581D               	subwfb	___awdiv@dividend+1,w,c
  8845  003704  A0D8               	btfss	status,0,c
  8846  003706  D005               	goto	l6401
  8847  003708  501E               	movf	___awdiv@divisor,w,c
  8848  00370A  5E1C               	subwf	___awdiv@dividend,f,c
  8849  00370C  501F               	movf	___awdiv@divisor+1,w,c
  8850  00370E  5A1D               	subwfb	___awdiv@dividend+1,f,c
  8851  003710  8022               	bsf	___awdiv@quotient,0,c
  8852  003712                     l6401:
  8853  003712  90D8               	bcf	status,0,c
  8854  003714  321F               	rrcf	___awdiv@divisor+1,f,c
  8855  003716  321E               	rrcf	___awdiv@divisor,f,c
  8856  003718  2E20               	decfsz	___awdiv@counter,f,c
  8857  00371A  D7ED               	goto	u7600
  8858  00371C                     l6405:
  8859  00371C  5021               	movf	___awdiv@sign,w,c
  8860  00371E  B4D8               	btfsc	status,2,c
  8861  003720  D004               	goto	l6409
  8862  003722  6C22               	negf	___awdiv@quotient,c
  8863  003724  1E23               	comf	___awdiv@quotient+1,f,c
  8864  003726  B0D8               	btfsc	status,0,c
  8865  003728  2A23               	incf	___awdiv@quotient+1,f,c
  8866  00372A                     l6409:
  8867  00372A  0060  F088  F01C   	movff	___awdiv@quotient,?___awdiv
  8868  003730  0060  F08C  F01D   	movff	___awdiv@quotient+1,?___awdiv+1
  8869  003736  0012               	return		;funcret
  8870  003738                     __end_of___awdiv:
  8871                           	opt callstack 0
  8872                           
  8873 ;; *************** function _dtoa *****************
  8874 ;; Defined at:
  8875 ;;		line 274 in file "D:\MPLAB\pic\sources\c99\common\doprnt.c"
  8876 ;; Parameters:    Size  Location     Type
  8877 ;;  fp              2   10[BANK0 ] PTR struct _IO_FILE
  8878 ;;		 -> sprintf@f(6), 
  8879 ;;  d               8   12[BANK0 ] long long 
  8880 ;; Auto vars:     Size  Location     Type
  8881 ;;  n               8   36[BANK0 ] long long 
  8882 ;;  i               2   44[BANK0 ] int 
  8883 ;;  s               2   34[BANK0 ] int 
  8884 ;;  w               2   32[BANK0 ] int 
  8885 ;;  p               2   30[BANK0 ] int 
  8886 ;; Return value:  Size  Location     Type
  8887 ;;                  2   10[BANK0 ] int 
  8888 ;; Registers used:
  8889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8890 ;; Tracked objects:
  8891 ;;		On entry : 0/0
  8892 ;;		On exit  : 0/0
  8893 ;;		Unchanged: 0/0
  8894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8895 ;;      Params:         0      10       0       0       0       0       0       0       0
  8896 ;;      Locals:         0      18       0       0       0       0       0       0       0
  8897 ;;      Temps:          0       8       0       0       0       0       0       0       0
  8898 ;;      Totals:         0      36       0       0       0       0       0       0       0
  8899 ;;Total ram usage:       36 bytes
  8900 ;; Hardware stack levels used:    1
  8901 ;; Hardware stack levels required when called:    7
  8902 ;; This function calls:
  8903 ;;		___aodiv
  8904 ;;		___aomod
  8905 ;;		_abs
  8906 ;;		_pad
  8907 ;; This function is called by:
  8908 ;;		_vfpfcnvrt
  8909 ;; This function uses a non-reentrant model
  8910 ;;
  8911                           
  8912                           	psect	text21
  8913  00202C                     __ptext21:
  8914                           	opt callstack 0
  8915  00202C                     _dtoa:
  8916                           	opt callstack 20
  8917                           
  8918                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 274: static int dtoa(FILE *fp, long long d);D
      +                          :\MPLAB\pic\sources\c99\common\doprnt.c: 275: {;D:\MPLAB\pic\sources\c99\common\doprnt.c
      +                          : 276:     int i, p, s, w;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 277:     long long 
      +                          n;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 280:     n = d;
  8919                           
  8920                           ;incstack = 0
  8921  00202C  0060  F1B0  F084   	movff	dtoa@d,dtoa@n
  8922  002032  0060  F1B4  F085   	movff	dtoa@d+1,dtoa@n+1
  8923  002038  0060  F1B8  F086   	movff	dtoa@d+2,dtoa@n+2
  8924  00203E  0060  F1BC  F087   	movff	dtoa@d+3,dtoa@n+3
  8925  002044  0060  F1C0  F088   	movff	dtoa@d+4,dtoa@n+4
  8926  00204A  0060  F1C4  F089   	movff	dtoa@d+5,dtoa@n+5
  8927  002050  0060  F1C8  F08A   	movff	dtoa@d+6,dtoa@n+6
  8928  002056  0060  F1CC  F08B   	movff	dtoa@d+7,dtoa@n+7
  8929                           
  8930                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 281:     s = n < 0 ? 1 : 0;
  8931  00205C  0100               	movlb	0	; () banked
  8932  00205E  AF8B               	btfss	(dtoa@n+7)& (0+255),7,b
  8933  002060  D002               	goto	u7870
  8934  002062  0E01               	movlw	1
  8935  002064  D001               	goto	u7880
  8936  002066                     u7870:
  8937  002066  0E00               	movlw	0
  8938  002068                     u7880:
  8939  002068  6F82               	movwf	dtoa@s& (0+255),b
  8940  00206A  6B83               	clrf	(dtoa@s+1)& (0+255),b
  8941                           
  8942                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  8943  00206C  5182               	movf	dtoa@s& (0+255),w,b
  8944  00206E  1183               	iorwf	(dtoa@s+1)& (0+255),w,b
  8945  002070  B4D8               	btfsc	status,2,c
  8946  002072  D010               	goto	l6557
  8947                           
  8948                           ; BSR set to: 0
  8949                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 283:         n = -n;
  8950  002074  1F8B               	comf	(dtoa@n+7)& (0+255),f,b
  8951  002076  1F8A               	comf	(dtoa@n+6)& (0+255),f,b
  8952  002078  1F89               	comf	(dtoa@n+5)& (0+255),f,b
  8953  00207A  1F88               	comf	(dtoa@n+4)& (0+255),f,b
  8954  00207C  1F87               	comf	(dtoa@n+3)& (0+255),f,b
  8955  00207E  1F86               	comf	(dtoa@n+2)& (0+255),f,b
  8956  002080  1F85               	comf	(dtoa@n+1)& (0+255),f,b
  8957  002082  6D84               	negf	dtoa@n& (0+255),b
  8958  002084  0E00               	movlw	0
  8959  002086  2385               	addwfc	(dtoa@n+1)& (0+255),f,b
  8960  002088  2386               	addwfc	(dtoa@n+2)& (0+255),f,b
  8961  00208A  2387               	addwfc	(dtoa@n+3)& (0+255),f,b
  8962  00208C  2388               	addwfc	(dtoa@n+4)& (0+255),f,b
  8963  00208E  2389               	addwfc	(dtoa@n+5)& (0+255),f,b
  8964  002090  238A               	addwfc	(dtoa@n+6)& (0+255),f,b
  8965  002092  238B               	addwfc	(dtoa@n+7)& (0+255),f,b
  8966  002094                     l6557:
  8967                           
  8968                           ; BSR set to: 0
  8969                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 287:     if (!(prec < 0)) {
  8970  002094  AE34               	btfss	_prec+1,7,c
  8971                           
  8972                           ; BSR set to: 0
  8973                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 288:         flags &= ~(1 << 1);
  8974  002096  9235               	bcf	_flags,1,c
  8975                           
  8976                           ; BSR set to: 0
  8977                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 290:     p = (0 < prec) ? prec : 1;
  8978  002098  BE34               	btfsc	_prec+1,7,c
  8979  00209A  D005               	goto	u7910
  8980  00209C  5034               	movf	_prec+1,w,c
  8981  00209E  E108               	bnz	l424
  8982  0020A0  0433               	decf	_prec,w,c
  8983  0020A2  B0D8               	btfsc	status,0,c
  8984  0020A4  D005               	goto	l424
  8985  0020A6                     u7910:
  8986                           
  8987                           ; BSR set to: 0
  8988  0020A6  0E00               	movlw	0
  8989  0020A8  6F7F               	movwf	(dtoa@p+1)& (0+255),b
  8990  0020AA  0E01               	movlw	1
  8991  0020AC  6F7E               	movwf	dtoa@p& (0+255),b
  8992  0020AE  D006               	goto	l426
  8993  0020B0                     l424:
  8994                           
  8995                           ; BSR set to: 0
  8996  0020B0  0060  F0CC  F07E   	movff	_prec,dtoa@p
  8997  0020B6  0060  F0D0  F07F   	movff	_prec+1,dtoa@p+1
  8998  0020BC                     l426:
  8999                           
  9000                           ; BSR set to: 0
  9001                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 291:     w = width;
  9002  0020BC  0060  F0C4  F080   	movff	_width,dtoa@w
  9003  0020C2  0060  F0C8  F081   	movff	_width+1,dtoa@w+1
  9004                           
  9005                           ; BSR set to: 0
  9006                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 292:     if (s || (flags & (1 << 2))) {
  9007  0020C8  5182               	movf	dtoa@s& (0+255),w,b
  9008  0020CA  1183               	iorwf	(dtoa@s+1)& (0+255),w,b
  9009  0020CC  A4D8               	btfss	status,2,c
  9010  0020CE  D002               	goto	u7930
  9011                           
  9012                           ; BSR set to: 0
  9013  0020D0  A435               	btfss	_flags,2,c
  9014  0020D2  D003               	goto	l6571
  9015  0020D4                     u7930:
  9016                           
  9017                           ; BSR set to: 0
  9018                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 293:         --w;
  9019  0020D4  0780               	decf	dtoa@w& (0+255),f,b
  9020  0020D6  A0D8               	btfss	status,0,c
  9021  0020D8  0781               	decf	(dtoa@w+1)& (0+255),f,b
  9022  0020DA                     l6571:
  9023                           
  9024                           ; BSR set to: 0
  9025                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 297:     i = sizeof(dbuf) - 1;
  9026  0020DA  0E00               	movlw	0
  9027  0020DC  6F8D               	movwf	(dtoa@i+1)& (0+255),b
  9028  0020DE  0E4F               	movlw	79
  9029  0020E0  6F8C               	movwf	dtoa@i& (0+255),b
  9030                           
  9031                           ; BSR set to: 0
  9032                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] = '\0';
  9033  0020E2  0E00               	movlw	0
  9034  0020E4  0101               	movlb	1	; () banked
  9035  0020E6  6F5A               	movwf	(_dbuf+79)& (0+255),b
  9036                           
  9037                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 299:     while (!(i < 1) && (n || (0 < p) || 
      +                          ((0 < w) && (flags & (1 << 1))))) {
  9038  0020E8  D09F               	goto	l6585
  9039  0020EA                     l6575:
  9040                           
  9041                           ; BSR set to: 0
  9042                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 300:         --i;
  9043  0020EA  078C               	decf	dtoa@i& (0+255),f,b
  9044  0020EC  A0D8               	btfss	status,0,c
  9045  0020EE  078D               	decf	(dtoa@i+1)& (0+255),f,b
  9046                           
  9047                           ; BSR set to: 0
  9048                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 301:         dbuf[i] = '0' + abs(n % 10);
  9049  0020F0  0E0B               	movlw	low _dbuf
  9050  0020F2  258C               	addwf	dtoa@i& (0+255),w,b
  9051  0020F4  6ED9               	movwf	fsr2l,c
  9052  0020F6  0E01               	movlw	high _dbuf
  9053  0020F8  218D               	addwfc	(dtoa@i+1)& (0+255),w,b
  9054  0020FA  6EDA               	movwf	fsr2h,c
  9055  0020FC  0060  F210  F01C   	movff	dtoa@n,___aomod@dividend
  9056  002102  0060  F214  F01D   	movff	dtoa@n+1,___aomod@dividend+1
  9057  002108  0060  F218  F01E   	movff	dtoa@n+2,___aomod@dividend+2
  9058  00210E  0060  F21C  F01F   	movff	dtoa@n+3,___aomod@dividend+3
  9059  002114  0060  F220  F020   	movff	dtoa@n+4,___aomod@dividend+4
  9060  00211A  0060  F224  F021   	movff	dtoa@n+5,___aomod@dividend+5
  9061  002120  0060  F228  F022   	movff	dtoa@n+6,___aomod@dividend+6
  9062  002126  0060  F22C  F023   	movff	dtoa@n+7,___aomod@dividend+7
  9063  00212C  0E0A               	movlw	10
  9064  00212E  6E24               	movwf	___aomod@divisor,c
  9065  002130  0E00               	movlw	0
  9066  002132  6E25               	movwf	___aomod@divisor+1,c
  9067  002134  0E00               	movlw	0
  9068  002136  6E26               	movwf	___aomod@divisor+2,c
  9069  002138  0E00               	movlw	0
  9070  00213A  6E27               	movwf	___aomod@divisor+3,c
  9071  00213C  0E00               	movlw	0
  9072  00213E  6E28               	movwf	___aomod@divisor+4,c
  9073  002140  0E00               	movlw	0
  9074  002142  6E29               	movwf	___aomod@divisor+5,c
  9075  002144  0E00               	movlw	0
  9076  002146  6E2A               	movwf	___aomod@divisor+6,c
  9077  002148  0E00               	movlw	0
  9078  00214A  6E2B               	movwf	___aomod@divisor+7,c
  9079  00214C  ECDA  F015         	call	___aomod	;wreg free
  9080  002150  0060  F070  F074   	movff	?___aomod,??_dtoa
  9081  002156  0060  F074  F075   	movff	?___aomod+1,??_dtoa+1
  9082  00215C  0060  F078  F076   	movff	?___aomod+2,??_dtoa+2
  9083  002162  0060  F07C  F077   	movff	?___aomod+3,??_dtoa+3
  9084  002168  0060  F080  F078   	movff	?___aomod+4,??_dtoa+4
  9085  00216E  0060  F084  F079   	movff	?___aomod+5,??_dtoa+5
  9086  002174  0060  F088  F07A   	movff	?___aomod+6,??_dtoa+6
  9087  00217A  0060  F08C  F07B   	movff	?___aomod+7,??_dtoa+7
  9088  002180  0060  F1D0  F062   	movff	??_dtoa,abs@a
  9089  002186  0060  F1D8  F063   	movff	??_dtoa+2,abs@a+1
  9090  00218C  EC86  F01D         	call	_abs	;wreg free
  9091  002190  0100               	movlb	0	; () banked
  9092  002192  5162               	movf	?_abs& (0+255),w,b
  9093  002194  0F30               	addlw	48
  9094  002196  6EDF               	movwf	indf2,c
  9095                           
  9096                           ; BSR set to: 0
  9097                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 302:         --p;
  9098  002198  077E               	decf	dtoa@p& (0+255),f,b
  9099  00219A  A0D8               	btfss	status,0,c
  9100  00219C  077F               	decf	(dtoa@p+1)& (0+255),f,b
  9101                           
  9102                           ; BSR set to: 0
  9103                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 303:         --w;
  9104  00219E  0780               	decf	dtoa@w& (0+255),f,b
  9105  0021A0  A0D8               	btfss	status,0,c
  9106  0021A2  0781               	decf	(dtoa@w+1)& (0+255),f,b
  9107                           
  9108                           ; BSR set to: 0
  9109                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 304:         n = n / 10;
  9110  0021A4  0060  F210  F01C   	movff	dtoa@n,___aodiv@dividend
  9111  0021AA  0060  F214  F01D   	movff	dtoa@n+1,___aodiv@dividend+1
  9112  0021B0  0060  F218  F01E   	movff	dtoa@n+2,___aodiv@dividend+2
  9113  0021B6  0060  F21C  F01F   	movff	dtoa@n+3,___aodiv@dividend+3
  9114  0021BC  0060  F220  F020   	movff	dtoa@n+4,___aodiv@dividend+4
  9115  0021C2  0060  F224  F021   	movff	dtoa@n+5,___aodiv@dividend+5
  9116  0021C8  0060  F228  F022   	movff	dtoa@n+6,___aodiv@dividend+6
  9117  0021CE  0060  F22C  F023   	movff	dtoa@n+7,___aodiv@dividend+7
  9118  0021D4  0E0A               	movlw	10
  9119  0021D6  6E24               	movwf	___aodiv@divisor,c
  9120  0021D8  0E00               	movlw	0
  9121  0021DA  6E25               	movwf	___aodiv@divisor+1,c
  9122  0021DC  0E00               	movlw	0
  9123  0021DE  6E26               	movwf	___aodiv@divisor+2,c
  9124  0021E0  0E00               	movlw	0
  9125  0021E2  6E27               	movwf	___aodiv@divisor+3,c
  9126  0021E4  0E00               	movlw	0
  9127  0021E6  6E28               	movwf	___aodiv@divisor+4,c
  9128  0021E8  0E00               	movlw	0
  9129  0021EA  6E29               	movwf	___aodiv@divisor+5,c
  9130  0021EC  0E00               	movlw	0
  9131  0021EE  6E2A               	movwf	___aodiv@divisor+6,c
  9132  0021F0  0E00               	movlw	0
  9133  0021F2  6E2B               	movwf	___aodiv@divisor+7,c
  9134  0021F4  EC2D  F015         	call	___aodiv	;wreg free
  9135  0021F8  0060  F070  F084   	movff	?___aodiv,dtoa@n
  9136  0021FE  0060  F074  F085   	movff	?___aodiv+1,dtoa@n+1
  9137  002204  0060  F078  F086   	movff	?___aodiv+2,dtoa@n+2
  9138  00220A  0060  F07C  F087   	movff	?___aodiv+3,dtoa@n+3
  9139  002210  0060  F080  F088   	movff	?___aodiv+4,dtoa@n+4
  9140  002216  0060  F084  F089   	movff	?___aodiv+5,dtoa@n+5
  9141  00221C  0060  F088  F08A   	movff	?___aodiv+6,dtoa@n+6
  9142  002222  0060  F08C  F08B   	movff	?___aodiv+7,dtoa@n+7
  9143  002228                     l6585:
  9144                           
  9145                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 299:     while (!(i < 1) && (n || (0 < p) || 
      +                          ((0 < w) && (flags & (1 << 1))))) {
  9146  002228  0100               	movlb	0	; () banked
  9147  00222A  BF8D               	btfsc	(dtoa@i+1)& (0+255),7,b
  9148  00222C  D01F               	goto	u7980
  9149  00222E  518D               	movf	(dtoa@i+1)& (0+255),w,b
  9150  002230  E103               	bnz	u7940
  9151  002232  058C               	decf	dtoa@i& (0+255),w,b
  9152  002234  A0D8               	btfss	status,0,c
  9153  002236  D01A               	goto	u7980
  9154  002238                     u7940:
  9155                           
  9156                           ; BSR set to: 0
  9157  002238  5184               	movf	dtoa@n& (0+255),w,b
  9158  00223A  1185               	iorwf	(dtoa@n+1)& (0+255),w,b
  9159  00223C  1186               	iorwf	(dtoa@n+2)& (0+255),w,b
  9160  00223E  1187               	iorwf	(dtoa@n+3)& (0+255),w,b
  9161  002240  1188               	iorwf	(dtoa@n+4)& (0+255),w,b
  9162  002242  1189               	iorwf	(dtoa@n+5)& (0+255),w,b
  9163  002244  118A               	iorwf	(dtoa@n+6)& (0+255),w,b
  9164  002246  118B               	iorwf	(dtoa@n+7)& (0+255),w,b
  9165  002248  A4D8               	btfss	status,2,c
  9166  00224A  D74F               	goto	l6575
  9167                           
  9168                           ; BSR set to: 0
  9169  00224C  BF7F               	btfsc	(dtoa@p+1)& (0+255),7,b
  9170  00224E  D005               	goto	u7960
  9171  002250  517F               	movf	(dtoa@p+1)& (0+255),w,b
  9172  002252  E102               	bnz	u7961
  9173  002254  057E               	decf	dtoa@p& (0+255),w,b
  9174  002256  B0D8               	btfsc	status,0,c
  9175  002258                     u7961:
  9176  002258  D748               	goto	l6575
  9177  00225A                     u7960:
  9178                           
  9179                           ; BSR set to: 0
  9180  00225A  BF81               	btfsc	(dtoa@w+1)& (0+255),7,b
  9181  00225C  D007               	goto	u7980
  9182  00225E  5181               	movf	(dtoa@w+1)& (0+255),w,b
  9183  002260  E103               	bnz	u7970
  9184  002262  0580               	decf	dtoa@w& (0+255),w,b
  9185  002264  A0D8               	btfss	status,0,c
  9186  002266  D002               	goto	u7980
  9187  002268                     u7970:
  9188                           
  9189                           ; BSR set to: 0
  9190  002268  B235               	btfsc	_flags,1,c
  9191  00226A  D73F               	goto	l6575
  9192  00226C                     u7980:
  9193                           
  9194                           ; BSR set to: 0
  9195                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 308:     if (s || (flags & (1 << 2))) {
  9196  00226C  5182               	movf	dtoa@s& (0+255),w,b
  9197  00226E  1183               	iorwf	(dtoa@s+1)& (0+255),w,b
  9198  002270  A4D8               	btfss	status,2,c
  9199  002272  D002               	goto	u8000
  9200                           
  9201                           ; BSR set to: 0
  9202  002274  A435               	btfss	_flags,2,c
  9203  002276  D018               	goto	l6609
  9204  002278                     u8000:
  9205                           
  9206                           ; BSR set to: 0
  9207                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 309:         --i;
  9208  002278  078C               	decf	dtoa@i& (0+255),f,b
  9209  00227A  A0D8               	btfss	status,0,c
  9210  00227C  078D               	decf	(dtoa@i+1)& (0+255),f,b
  9211                           
  9212                           ; BSR set to: 0
  9213                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 310:         dbuf[i] = s ? '-' : '+';
  9214  00227E  5182               	movf	dtoa@s& (0+255),w,b
  9215  002280  1183               	iorwf	(dtoa@s+1)& (0+255),w,b
  9216  002282  A4D8               	btfss	status,2,c
  9217  002284  D004               	goto	l6605
  9218                           
  9219                           ; BSR set to: 0
  9220  002286  0E00               	movlw	0
  9221  002288  6F7D               	movwf	(_dtoa$1757+1)& (0+255),b
  9222  00228A  0E2B               	movlw	43
  9223  00228C  D003               	goto	L16
  9224  00228E                     l6605:
  9225                           
  9226                           ; BSR set to: 0
  9227  00228E  0E00               	movlw	0
  9228  002290  6F7D               	movwf	(_dtoa$1757+1)& (0+255),b
  9229  002292  0E2D               	movlw	45
  9230  002294                     L16:
  9231  002294  6F7C               	movwf	_dtoa$1757& (0+255),b
  9232                           
  9233                           ; BSR set to: 0
  9234  002296  0E0B               	movlw	low _dbuf
  9235  002298  258C               	addwf	dtoa@i& (0+255),w,b
  9236  00229A  6ED9               	movwf	fsr2l,c
  9237  00229C  0E01               	movlw	high _dbuf
  9238  00229E  218D               	addwfc	(dtoa@i+1)& (0+255),w,b
  9239  0022A0  6EDA               	movwf	fsr2h,c
  9240  0022A2  0060  F1F3  FFDF   	movff	_dtoa$1757,indf2
  9241  0022A8                     l6609:
  9242                           
  9243                           ; BSR set to: 0
  9244                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 314:     return pad(fp, &dbuf[i], w);
  9245  0022A8  0060  F1A8  F060   	movff	dtoa@fp,pad@fp
  9246  0022AE  0060  F1AC  F061   	movff	dtoa@fp+1,pad@fp+1
  9247  0022B4  0E0B               	movlw	low _dbuf
  9248  0022B6  258C               	addwf	dtoa@i& (0+255),w,b
  9249  0022B8  6F62               	movwf	pad@buf& (0+255),b
  9250  0022BA  0E01               	movlw	high _dbuf
  9251  0022BC  218D               	addwfc	(dtoa@i+1)& (0+255),w,b
  9252  0022BE  6F63               	movwf	(pad@buf+1)& (0+255),b
  9253  0022C0  0060  F200  F064   	movff	dtoa@w,pad@p
  9254  0022C6  0060  F204  F065   	movff	dtoa@w+1,pad@p+1
  9255  0022CC  ECE9  F018         	call	_pad	;wreg free
  9256  0022D0  0060  F180  F06A   	movff	?_pad,?_dtoa
  9257  0022D6  0060  F184  F06B   	movff	?_pad+1,?_dtoa+1
  9258  0022DC  0012               	return		;funcret
  9259  0022DE                     __end_of_dtoa:
  9260                           	opt callstack 0
  9261                           
  9262 ;; *************** function _pad *****************
  9263 ;; Defined at:
  9264 ;;		line 72 in file "D:\MPLAB\pic\sources\c99\common\doprnt.c"
  9265 ;; Parameters:    Size  Location     Type
  9266 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  9267 ;;		 -> sprintf@f(6), 
  9268 ;;  buf             2    2[BANK0 ] PTR unsigned char 
  9269 ;;		 -> dbuf(80), 
  9270 ;;  p               2    4[BANK0 ] int 
  9271 ;; Auto vars:     Size  Location     Type
  9272 ;;  w               2    8[BANK0 ] int 
  9273 ;;  i               2    6[BANK0 ] int 
  9274 ;; Return value:  Size  Location     Type
  9275 ;;                  2    0[BANK0 ] int 
  9276 ;; Registers used:
  9277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9278 ;; Tracked objects:
  9279 ;;		On entry : 0/0
  9280 ;;		On exit  : 0/0
  9281 ;;		Unchanged: 0/0
  9282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9283 ;;      Params:         0       6       0       0       0       0       0       0       0
  9284 ;;      Locals:         0       4       0       0       0       0       0       0       0
  9285 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9286 ;;      Totals:         1      10       0       0       0       0       0       0       0
  9287 ;;Total ram usage:       11 bytes
  9288 ;; Hardware stack levels used:    1
  9289 ;; Hardware stack levels required when called:    6
  9290 ;; This function calls:
  9291 ;;		_fputc
  9292 ;;		_fputs
  9293 ;;		_strlen
  9294 ;; This function is called by:
  9295 ;;		_dtoa
  9296 ;;		_efgtoa
  9297 ;; This function uses a non-reentrant model
  9298 ;;
  9299                           
  9300                           	psect	text22
  9301  0031D2                     __ptext22:
  9302                           	opt callstack 0
  9303  0031D2                     _pad:
  9304                           	opt callstack 20
  9305                           
  9306                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 72: static int pad(FILE *fp, char *buf, int p
      +                          );D:\MPLAB\pic\sources\c99\common\doprnt.c: 73: {;D:\MPLAB\pic\sources\c99\common\doprnt
      +                          .c: 74:     int i, w;;D:\MPLAB\pic\sources\c99\common\doprnt.c: 77:     if (flags & (1 <
      +                          < 0)) {
  9307                           
  9308                           ;incstack = 0
  9309  0031D2  A035               	btfss	_flags,0,c
  9310  0031D4  D00E               	goto	l5919
  9311                           
  9312                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 78:         fputs((const char *)buf, fp);
  9313  0031D6  0060  F188  F025   	movff	pad@buf,fputs@s
  9314  0031DC  0060  F18C  F026   	movff	pad@buf+1,fputs@s+1
  9315  0031E2  0060  F180  F027   	movff	pad@fp,fputs@fp
  9316  0031E8  0060  F184  F028   	movff	pad@fp+1,fputs@fp+1
  9317  0031EE  ECA6  F01D         	call	_fputs	;wreg free
  9318  0031F2                     l5919:
  9319                           
  9320                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ? 0 : p;
  9321  0031F2  0100               	movlb	0	; () banked
  9322  0031F4  BF65               	btfsc	(pad@p+1)& (0+255),7,b
  9323  0031F6  D007               	goto	l5923
  9324                           
  9325                           ; BSR set to: 0
  9326  0031F8  0060  F190  F068   	movff	pad@p,pad@w
  9327  0031FE  0060  F194  F069   	movff	pad@p+1,pad@w+1
  9328  003204  D004               	goto	l413
  9329  003206                     l5923:
  9330                           
  9331                           ; BSR set to: 0
  9332  003206  0E00               	movlw	0
  9333  003208  6F69               	movwf	(pad@w+1)& (0+255),b
  9334  00320A  0E00               	movlw	0
  9335  00320C  6F68               	movwf	pad@w& (0+255),b
  9336  00320E                     l413:
  9337                           
  9338                           ; BSR set to: 0
  9339                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  9340  00320E  0E00               	movlw	0
  9341  003210  6F67               	movwf	(pad@i+1)& (0+255),b
  9342  003212  0E00               	movlw	0
  9343  003214  6F66               	movwf	pad@i& (0+255),b
  9344                           
  9345                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 84:     while (i < w) {
  9346  003216  D00F               	goto	l5929
  9347  003218                     l5925:
  9348                           
  9349                           ; BSR set to: 0
  9350                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 85:         fputc(' ', fp);
  9351  003218  0E00               	movlw	0
  9352  00321A  6E1D               	movwf	fputc@c+1,c
  9353  00321C  0E20               	movlw	32
  9354  00321E  6E1C               	movwf	fputc@c,c
  9355  003220  0060  F180  F01E   	movff	pad@fp,fputc@fp
  9356  003226  0060  F184  F01F   	movff	pad@fp+1,fputc@fp+1
  9357  00322C  EC45  F019         	call	_fputc	;wreg free
  9358                           
  9359                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 86:         ++i;
  9360  003230  0100               	movlb	0	; () banked
  9361  003232  4B66               	infsnz	pad@i& (0+255),f,b
  9362  003234  2B67               	incf	(pad@i+1)& (0+255),f,b
  9363  003236                     l5929:
  9364                           
  9365                           ; BSR set to: 0
  9366                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 84:     while (i < w) {
  9367  003236  5168               	movf	pad@w& (0+255),w,b
  9368  003238  5D66               	subwf	pad@i& (0+255),w,b
  9369  00323A  5167               	movf	(pad@i+1)& (0+255),w,b
  9370  00323C  0A80               	xorlw	128
  9371  00323E  6E2C               	movwf	??_pad& (0+255),c
  9372  003240  5169               	movf	(pad@w+1)& (0+255),w,b
  9373  003242  0A80               	xorlw	128
  9374  003244  582C               	subwfb	??_pad& (0+255),w,c
  9375  003246  A0D8               	btfss	status,0,c
  9376  003248  D7E7               	goto	l5925
  9377                           
  9378                           ; BSR set to: 0
  9379                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 90:     if (!(flags & (1 << 0))) {
  9380  00324A  B035               	btfsc	_flags,0,c
  9381  00324C  D00E               	goto	l5933
  9382                           
  9383                           ; BSR set to: 0
  9384                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 91:         fputs((const char *)buf, fp);
  9385  00324E  0060  F188  F025   	movff	pad@buf,fputs@s
  9386  003254  0060  F18C  F026   	movff	pad@buf+1,fputs@s+1
  9387  00325A  0060  F180  F027   	movff	pad@fp,fputs@fp
  9388  003260  0060  F184  F028   	movff	pad@fp+1,fputs@fp+1
  9389  003266  ECA6  F01D         	call	_fputs	;wreg free
  9390  00326A                     l5933:
  9391                           
  9392                           ;D:\MPLAB\pic\sources\c99\common\doprnt.c: 94:     return strlen(buf) + w;
  9393  00326A  0060  F188  F01C   	movff	pad@buf,strlen@s
  9394  003270  0060  F18C  F01D   	movff	pad@buf+1,strlen@s+1
  9395  003276  EC30  F01E         	call	_strlen	;wreg free
  9396  00327A  0100               	movlb	0	; () banked
  9397  00327C  5168               	movf	pad@w& (0+255),w,b
  9398  00327E  241C               	addwf	?_strlen,w,c
  9399  003280  6F60               	movwf	?_pad& (0+255),b
  9400  003282  5169               	movf	(pad@w+1)& (0+255),w,b
  9401  003284  201D               	addwfc	?_strlen+1,w,c
  9402  003286  6F61               	movwf	(?_pad+1)& (0+255),b
  9403                           
  9404                           ; BSR set to: 0
  9405  003288  0012               	return		;funcret
  9406  00328A                     __end_of_pad:
  9407                           	opt callstack 0
  9408                           
  9409 ;; *************** function _strlen *****************
  9410 ;; Defined at:
  9411 ;;		line 12 in file "D:\MPLAB\pic\sources\c99\common\strlen.c"
  9412 ;; Parameters:    Size  Location     Type
  9413 ;;  s               2   27[COMRAM] PTR const unsigned char 
  9414 ;;		 -> dbuf(80), 
  9415 ;; Auto vars:     Size  Location     Type
  9416 ;;  a               2   29[COMRAM] PTR const unsigned char 
  9417 ;;		 -> dbuf(80), 
  9418 ;; Return value:  Size  Location     Type
  9419 ;;                  2   27[COMRAM] unsigned int 
  9420 ;; Registers used:
  9421 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9422 ;; Tracked objects:
  9423 ;;		On entry : 0/0
  9424 ;;		On exit  : 0/0
  9425 ;;		Unchanged: 0/0
  9426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9427 ;;      Params:         2       0       0       0       0       0       0       0       0
  9428 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9429 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9430 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9431 ;;Total ram usage:        4 bytes
  9432 ;; Hardware stack levels used:    1
  9433 ;; Hardware stack levels required when called:    3
  9434 ;; This function calls:
  9435 ;;		Nothing
  9436 ;; This function is called by:
  9437 ;;		_pad
  9438 ;; This function uses a non-reentrant model
  9439 ;;
  9440                           
  9441                           	psect	text23
  9442  003C60                     __ptext23:
  9443                           	opt callstack 0
  9444  003C60                     _strlen:
  9445                           	opt callstack 22
  9446                           
  9447                           ; BSR set to: 0
  9448                           ;incstack = 0
  9449  003C60  0060  F070  F01E   	movff	strlen@s,strlen@a
  9450  003C66  0060  F074  F01F   	movff	strlen@s+1,strlen@a+1
  9451  003C6C  D002               	goto	l5703
  9452  003C6E                     l5701:
  9453  003C6E  4A1C               	infsnz	strlen@s,f,c
  9454  003C70  2A1D               	incf	strlen@s+1,f,c
  9455  003C72                     l5703:
  9456  003C72  0060  F073  FFD9   	movff	strlen@s,fsr2l
  9457  003C78  0060  F077  FFDA   	movff	strlen@s+1,fsr2h
  9458  003C7E  50DF               	movf	indf2,w,c
  9459  003C80  A4D8               	btfss	status,2,c
  9460  003C82  D7F5               	goto	l5701
  9461  003C84  501E               	movf	strlen@a,w,c
  9462  003C86  5C1C               	subwf	strlen@s,w,c
  9463  003C88  6E1C               	movwf	?_strlen,c
  9464  003C8A  501F               	movf	strlen@a+1,w,c
  9465  003C8C  581D               	subwfb	strlen@s+1,w,c
  9466  003C8E  6E1D               	movwf	?_strlen+1,c
  9467  003C90  0012               	return		;funcret
  9468  003C92                     __end_of_strlen:
  9469                           	opt callstack 0
  9470                           
  9471 ;; *************** function _fputs *****************
  9472 ;; Defined at:
  9473 ;;		line 8 in file "D:\MPLAB\pic\sources\c99\common\nf_fputs.c"
  9474 ;; Parameters:    Size  Location     Type
  9475 ;;  s               2   36[COMRAM] PTR const unsigned char 
  9476 ;;		 -> dbuf(80), 
  9477 ;;  fp              2   38[COMRAM] PTR struct _IO_FILE
  9478 ;;		 -> sprintf@f(6), 
  9479 ;; Auto vars:     Size  Location     Type
  9480 ;;  i               2   41[COMRAM] int 
  9481 ;;  c               1   40[COMRAM] unsigned char 
  9482 ;; Return value:  Size  Location     Type
  9483 ;;                  2   36[COMRAM] int 
  9484 ;; Registers used:
  9485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9486 ;; Tracked objects:
  9487 ;;		On entry : 0/0
  9488 ;;		On exit  : 0/0
  9489 ;;		Unchanged: 0/0
  9490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9491 ;;      Params:         4       0       0       0       0       0       0       0       0
  9492 ;;      Locals:         3       0       0       0       0       0       0       0       0
  9493 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9494 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9495 ;;Total ram usage:        7 bytes
  9496 ;; Hardware stack levels used:    1
  9497 ;; Hardware stack levels required when called:    5
  9498 ;; This function calls:
  9499 ;;		_fputc
  9500 ;; This function is called by:
  9501 ;;		_pad
  9502 ;; This function uses a non-reentrant model
  9503 ;;
  9504                           
  9505                           	psect	text24
  9506  003B4C                     __ptext24:
  9507                           	opt callstack 0
  9508  003B4C                     _fputs:
  9509                           	opt callstack 20
  9510                           
  9511                           ;incstack = 0
  9512  003B4C  0E00               	movlw	0
  9513  003B4E  6E2B               	movwf	fputs@i+1,c
  9514  003B50  0E00               	movlw	0
  9515  003B52  6E2A               	movwf	fputs@i,c
  9516  003B54  D00E               	goto	l5697
  9517  003B56                     l5693:
  9518  003B56  0060  F0A4  F01C   	movff	fputs@c,fputc@c
  9519  003B5C  6A1D               	clrf	fputc@c+1,c
  9520  003B5E  0060  F09C  F01E   	movff	fputs@fp,fputc@fp
  9521  003B64  0060  F0A0  F01F   	movff	fputs@fp+1,fputc@fp+1
  9522  003B6A  EC45  F019         	call	_fputc	;wreg free
  9523  003B6E  4A2A               	infsnz	fputs@i,f,c
  9524  003B70  2A2B               	incf	fputs@i+1,f,c
  9525  003B72                     l5697:
  9526  003B72  502A               	movf	fputs@i,w,c
  9527  003B74  2425               	addwf	fputs@s,w,c
  9528  003B76  6ED9               	movwf	fsr2l,c
  9529  003B78  502B               	movf	fputs@i+1,w,c
  9530  003B7A  2026               	addwfc	fputs@s+1,w,c
  9531  003B7C  6EDA               	movwf	fsr2h,c
  9532  003B7E  50DF               	movf	indf2,w,c
  9533  003B80  6E29               	movwf	fputs@c,c
  9534  003B82  5029               	movf	fputs@c,w,c
  9535  003B84  B4D8               	btfsc	status,2,c
  9536  003B86  0012               	return	
  9537  003B88  D7E6               	goto	l5693
  9538  003B8A                     __end_of_fputs:
  9539                           	opt callstack 0
  9540                           
  9541 ;; *************** function _fputc *****************
  9542 ;; Defined at:
  9543 ;;		line 8 in file "D:\MPLAB\pic\sources\c99\common\nf_fputc.c"
  9544 ;; Parameters:    Size  Location     Type
  9545 ;;  c               2   27[COMRAM] int 
  9546 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  9547 ;;		 -> sprintf@f(6), 
  9548 ;; Auto vars:     Size  Location     Type
  9549 ;;		None
  9550 ;; Return value:  Size  Location     Type
  9551 ;;                  2   27[COMRAM] int 
  9552 ;; Registers used:
  9553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9554 ;; Tracked objects:
  9555 ;;		On entry : 0/0
  9556 ;;		On exit  : 0/0
  9557 ;;		Unchanged: 0/0
  9558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9559 ;;      Params:         4       0       0       0       0       0       0       0       0
  9560 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9561 ;;      Temps:          5       0       0       0       0       0       0       0       0
  9562 ;;      Totals:         9       0       0       0       0       0       0       0       0
  9563 ;;Total ram usage:        9 bytes
  9564 ;; Hardware stack levels used:    1
  9565 ;; Hardware stack levels required when called:    4
  9566 ;; This function calls:
  9567 ;;		_putch
  9568 ;; This function is called by:
  9569 ;;		_pad
  9570 ;;		_vfpfcnvrt
  9571 ;;		_fputs
  9572 ;; This function uses a non-reentrant model
  9573 ;;
  9574                           
  9575                           	psect	text25
  9576  00328A                     __ptext25:
  9577                           	opt callstack 0
  9578  00328A                     _fputc:
  9579                           	opt callstack 23
  9580                           
  9581                           ;incstack = 0
  9582  00328A  501E               	movf	fputc@fp,w,c
  9583  00328C  101F               	iorwf	fputc@fp+1,w,c
  9584  00328E  B4D8               	btfsc	status,2,c
  9585  003290  D004               	goto	u6270
  9586  003292  501E               	movf	fputc@fp,w,c
  9587  003294  101F               	iorwf	fputc@fp+1,w,c
  9588  003296  A4D8               	btfss	status,2,c
  9589  003298  D004               	goto	l5683
  9590  00329A                     u6270:
  9591  00329A  501C               	movf	fputc@c,w,c
  9592  00329C  ECBC  F01E         	call	_putch
  9593  0032A0  0012               	return	
  9594  0032A2                     l5683:
  9595  0032A2  EE20 F004          	lfsr	2,4
  9596  0032A6  501E               	movf	fputc@fp,w,c
  9597  0032A8  26D9               	addwf	fsr2l,f,c
  9598  0032AA  501F               	movf	fputc@fp+1,w,c
  9599  0032AC  22DA               	addwfc	fsr2h,f,c
  9600  0032AE  50DE               	movf	postinc2,w,c
  9601  0032B0  10DE               	iorwf	postinc2,w,c
  9602  0032B2  B4D8               	btfsc	status,2,c
  9603  0032B4  D016               	goto	u6290
  9604  0032B6  EE20 F004          	lfsr	2,4
  9605  0032BA  501E               	movf	fputc@fp,w,c
  9606  0032BC  26D9               	addwf	fsr2l,f,c
  9607  0032BE  501F               	movf	fputc@fp+1,w,c
  9608  0032C0  22DA               	addwfc	fsr2h,f,c
  9609  0032C2  EE10 F002          	lfsr	1,2
  9610  0032C6  501E               	movf	fputc@fp,w,c
  9611  0032C8  26E1               	addwf	fsr1l,f,c
  9612  0032CA  501F               	movf	fputc@fp+1,w,c
  9613  0032CC  22E2               	addwfc	fsr1h,f,c
  9614  0032CE  50DE               	movf	postinc2,w,c
  9615  0032D0  5CE6               	subwf	postinc1,w,c
  9616  0032D2  50E6               	movf	postinc1,w,c
  9617  0032D4  0A80               	xorlw	128
  9618  0032D6  6E24               	movwf	(??_fputc+4)& (0+255),c
  9619  0032D8  50DE               	movf	postinc2,w,c
  9620  0032DA  0A80               	xorlw	128
  9621  0032DC  5824               	subwfb	(??_fputc+4)& (0+255),w,c
  9622  0032DE  B0D8               	btfsc	status,0,c
  9623  0032E0  0012               	return	
  9624  0032E2                     u6290:
  9625  0032E2  EE20 F002          	lfsr	2,2
  9626  0032E6  501E               	movf	fputc@fp,w,c
  9627  0032E8  26D9               	addwf	fsr2l,f,c
  9628  0032EA  501F               	movf	fputc@fp+1,w,c
  9629  0032EC  22DA               	addwfc	fsr2h,f,c
  9630  0032EE  006F FF78  F020    	movff	postinc2,??_fputc
  9631  0032F4  006F FF74  F021    	movff	postdec2,??_fputc+1
  9632  0032FA  0060  F07B  FFD9   	movff	fputc@fp,fsr2l
  9633  003300  0060  F07F  FFDA   	movff	fputc@fp+1,fsr2h
  9634  003306  006F FF78  F022    	movff	postinc2,??_fputc+2
  9635  00330C  006F FF74  F023    	movff	postdec2,??_fputc+3
  9636  003312  5020               	movf	??_fputc,w,c
  9637  003314  2422               	addwf	??_fputc+2,w,c
  9638  003316  6ED9               	movwf	fsr2l,c
  9639  003318  5021               	movf	??_fputc+1,w,c
  9640  00331A  2023               	addwfc	??_fputc+3,w,c
  9641  00331C  6EDA               	movwf	fsr2h,c
  9642  00331E  0060  F073  FFDF   	movff	fputc@c,indf2
  9643  003324  EE20 F002          	lfsr	2,2
  9644  003328  501E               	movf	fputc@fp,w,c
  9645  00332A  26D9               	addwf	fsr2l,f,c
  9646  00332C  501F               	movf	fputc@fp+1,w,c
  9647  00332E  22DA               	addwfc	fsr2h,f,c
  9648  003330  2ADE               	incf	postinc2,f,c
  9649  003332  0E00               	movlw	0
  9650  003334  22DD               	addwfc	postdec2,f,c
  9651  003336  0012               	return		;funcret
  9652  003338                     __end_of_fputc:
  9653                           	opt callstack 0
  9654                           
  9655 ;; *************** function _putch *****************
  9656 ;; Defined at:
  9657 ;;		line 7 in file "D:\MPLAB\pic\sources\c99\common\putch.c"
  9658 ;; Parameters:    Size  Location     Type
  9659 ;;  c               1    wreg     unsigned char 
  9660 ;; Auto vars:     Size  Location     Type
  9661 ;;  c               1    0[COMRAM] unsigned char 
  9662 ;; Return value:  Size  Location     Type
  9663 ;;                  1    wreg      void 
  9664 ;; Registers used:
  9665 ;;		wreg
  9666 ;; Tracked objects:
  9667 ;;		On entry : 0/0
  9668 ;;		On exit  : 0/0
  9669 ;;		Unchanged: 0/0
  9670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9671 ;;      Params:         0       0       0       0       0       0       0       0       0
  9672 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9673 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9674 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9675 ;;Total ram usage:        0 bytes
  9676 ;; Hardware stack levels used:    1
  9677 ;; Hardware stack levels required when called:    3
  9678 ;; This function calls:
  9679 ;;		Nothing
  9680 ;; This function is called by:
  9681 ;;		_fputc
  9682 ;; This function uses a non-reentrant model
  9683 ;;
  9684                           
  9685                           	psect	text26
  9686  003D78                     __ptext26:
  9687                           	opt callstack 0
  9688  003D78                     _putch:
  9689                           	opt callstack 23
  9690                           
  9691                           ;incstack = 0
  9692  003D78  0012               	return		;funcret
  9693  003D7A                     __end_of_putch:
  9694                           	opt callstack 0
  9695                           
  9696 ;; *************** function _abs *****************
  9697 ;; Defined at:
  9698 ;;		line 1 in file "D:\MPLAB\pic\sources\c99\common\abs.c"
  9699 ;; Parameters:    Size  Location     Type
  9700 ;;  a               2    2[BANK0 ] int 
  9701 ;; Auto vars:     Size  Location     Type
  9702 ;;		None
  9703 ;; Return value:  Size  Location     Type
  9704 ;;                  2    2[BANK0 ] int 
  9705 ;; Registers used:
  9706 ;;		wreg, status,2, status,0
  9707 ;; Tracked objects:
  9708 ;;		On entry : 0/0
  9709 ;;		On exit  : 0/0
  9710 ;;		Unchanged: 0/0
  9711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9712 ;;      Params:         0       2       0       0       0       0       0       0       0
  9713 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9714 ;;      Temps:          0       2       0       0       0       0       0       0       0
  9715 ;;      Totals:         0       4       0       0       0       0       0       0       0
  9716 ;;Total ram usage:        4 bytes
  9717 ;; Hardware stack levels used:    1
  9718 ;; Hardware stack levels required when called:    3
  9719 ;; This function calls:
  9720 ;;		Nothing
  9721 ;; This function is called by:
  9722 ;;		_dtoa
  9723 ;; This function uses a non-reentrant model
  9724 ;;
  9725                           
  9726                           	psect	text27
  9727  003B0C                     __ptext27:
  9728                           	opt callstack 0
  9729  003B0C                     _abs:
  9730                           	opt callstack 23
  9731                           
  9732                           ;incstack = 0
  9733  003B0C  0100               	movlb	0	; () banked
  9734  003B0E  BF63               	btfsc	(abs@a+1)& (0+255),7,b
  9735  003B10  D005               	goto	u6770
  9736  003B12  5163               	movf	(abs@a+1)& (0+255),w,b
  9737  003B14  E114               	bnz	l1268
  9738  003B16  0562               	decf	abs@a& (0+255),w,b
  9739  003B18  B0D8               	btfsc	status,0,c
  9740  003B1A  D011               	goto	l1268
  9741  003B1C                     u6770:
  9742                           
  9743                           ; BSR set to: 0
  9744  003B1C  0060  F188  F064   	movff	abs@a,??_abs
  9745  003B22  0060  F18C  F065   	movff	abs@a+1,??_abs+1
  9746  003B28  1F64               	comf	??_abs& (0+255),f,b
  9747  003B2A  1F65               	comf	(??_abs+1)& (0+255),f,b
  9748  003B2C  4B64               	infsnz	??_abs& (0+255),f,b
  9749  003B2E  2B65               	incf	(??_abs+1)& (0+255),f,b
  9750  003B30  0060  F190  F062   	movff	??_abs,?_abs
  9751  003B36  0060  F194  F063   	movff	??_abs+1,?_abs+1
  9752  003B3C  0012               	return	
  9753  003B3E                     l1268:
  9754                           
  9755                           ; BSR set to: 0
  9756  003B3E  0060  F188  F062   	movff	abs@a,?_abs
  9757  003B44  0060  F18C  F063   	movff	abs@a+1,?_abs+1
  9758                           
  9759                           ; BSR set to: 0
  9760  003B4A  0012               	return		;funcret
  9761  003B4C                     __end_of_abs:
  9762                           	opt callstack 0
  9763                           
  9764 ;; *************** function ___aomod *****************
  9765 ;; Defined at:
  9766 ;;		line 9 in file "D:\MPLAB\pic\sources\c99\common\aomod.c"
  9767 ;; Parameters:    Size  Location     Type
  9768 ;;  dividend        8   27[COMRAM] long long 
  9769 ;;  divisor         8   35[COMRAM] long long 
  9770 ;; Auto vars:     Size  Location     Type
  9771 ;;  sign            1    1[BANK0 ] unsigned char 
  9772 ;;  counter         1    0[BANK0 ] unsigned char 
  9773 ;; Return value:  Size  Location     Type
  9774 ;;                  8   27[COMRAM] long long 
  9775 ;; Registers used:
  9776 ;;		wreg, status,2, status,0
  9777 ;; Tracked objects:
  9778 ;;		On entry : 0/0
  9779 ;;		On exit  : 0/0
  9780 ;;		Unchanged: 0/0
  9781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9782 ;;      Params:        16       0       0       0       0       0       0       0       0
  9783 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9784 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9785 ;;      Totals:        16       2       0       0       0       0       0       0       0
  9786 ;;Total ram usage:       18 bytes
  9787 ;; Hardware stack levels used:    1
  9788 ;; Hardware stack levels required when called:    3
  9789 ;; This function calls:
  9790 ;;		Nothing
  9791 ;; This function is called by:
  9792 ;;		_dtoa
  9793 ;; This function uses a non-reentrant model
  9794 ;;
  9795                           
  9796                           	psect	text28
  9797  002BB4                     __ptext28:
  9798                           	opt callstack 0
  9799  002BB4                     ___aomod:
  9800                           	opt callstack 23
  9801                           
  9802                           ; BSR set to: 0
  9803                           ;incstack = 0
  9804  002BB4  0E00               	movlw	0
  9805  002BB6  0100               	movlb	0	; () banked
  9806  002BB8  6F61               	movwf	___aomod@sign& (0+255),b
  9807                           
  9808                           ; BSR set to: 0
  9809  002BBA  AE23               	btfss	___aomod@dividend+7,7,c
  9810  002BBC  D012               	goto	l6067
  9811                           
  9812                           ; BSR set to: 0
  9813  002BBE  1E23               	comf	___aomod@dividend+7,f,c
  9814  002BC0  1E22               	comf	___aomod@dividend+6,f,c
  9815  002BC2  1E21               	comf	___aomod@dividend+5,f,c
  9816  002BC4  1E20               	comf	___aomod@dividend+4,f,c
  9817  002BC6  1E1F               	comf	___aomod@dividend+3,f,c
  9818  002BC8  1E1E               	comf	___aomod@dividend+2,f,c
  9819  002BCA  1E1D               	comf	___aomod@dividend+1,f,c
  9820  002BCC  6C1C               	negf	___aomod@dividend,c
  9821  002BCE  0E00               	movlw	0
  9822  002BD0  221D               	addwfc	___aomod@dividend+1,f,c
  9823  002BD2  221E               	addwfc	___aomod@dividend+2,f,c
  9824  002BD4  221F               	addwfc	___aomod@dividend+3,f,c
  9825  002BD6  2220               	addwfc	___aomod@dividend+4,f,c
  9826  002BD8  2221               	addwfc	___aomod@dividend+5,f,c
  9827  002BDA  2222               	addwfc	___aomod@dividend+6,f,c
  9828  002BDC  2223               	addwfc	___aomod@dividend+7,f,c
  9829                           
  9830                           ; BSR set to: 0
  9831  002BDE  0E01               	movlw	1
  9832  002BE0  6F61               	movwf	___aomod@sign& (0+255),b
  9833  002BE2                     l6067:
  9834                           
  9835                           ; BSR set to: 0
  9836  002BE2  AE2B               	btfss	___aomod@divisor+7,7,c
  9837  002BE4  D010               	goto	l6071
  9838                           
  9839                           ; BSR set to: 0
  9840  002BE6  1E2B               	comf	___aomod@divisor+7,f,c
  9841  002BE8  1E2A               	comf	___aomod@divisor+6,f,c
  9842  002BEA  1E29               	comf	___aomod@divisor+5,f,c
  9843  002BEC  1E28               	comf	___aomod@divisor+4,f,c
  9844  002BEE  1E27               	comf	___aomod@divisor+3,f,c
  9845  002BF0  1E26               	comf	___aomod@divisor+2,f,c
  9846  002BF2  1E25               	comf	___aomod@divisor+1,f,c
  9847  002BF4  6C24               	negf	___aomod@divisor,c
  9848  002BF6  0E00               	movlw	0
  9849  002BF8  2225               	addwfc	___aomod@divisor+1,f,c
  9850  002BFA  2226               	addwfc	___aomod@divisor+2,f,c
  9851  002BFC  2227               	addwfc	___aomod@divisor+3,f,c
  9852  002BFE  2228               	addwfc	___aomod@divisor+4,f,c
  9853  002C00  2229               	addwfc	___aomod@divisor+5,f,c
  9854  002C02  222A               	addwfc	___aomod@divisor+6,f,c
  9855  002C04  222B               	addwfc	___aomod@divisor+7,f,c
  9856  002C06                     l6071:
  9857                           
  9858                           ; BSR set to: 0
  9859  002C06  5024               	movf	___aomod@divisor,w,c
  9860  002C08  1025               	iorwf	___aomod@divisor+1,w,c
  9861  002C0A  1026               	iorwf	___aomod@divisor+2,w,c
  9862  002C0C  1027               	iorwf	___aomod@divisor+3,w,c
  9863  002C0E  1028               	iorwf	___aomod@divisor+4,w,c
  9864  002C10  1029               	iorwf	___aomod@divisor+5,w,c
  9865  002C12  102A               	iorwf	___aomod@divisor+6,w,c
  9866  002C14  102B               	iorwf	___aomod@divisor+7,w,c
  9867  002C16  B4D8               	btfsc	status,2,c
  9868  002C18  D03C               	goto	l6087
  9869                           
  9870                           ; BSR set to: 0
  9871  002C1A  0E01               	movlw	1
  9872  002C1C  6F60               	movwf	___aomod@counter& (0+255),b
  9873  002C1E  D00A               	goto	l6077
  9874  002C20                     l6075:
  9875                           
  9876                           ; BSR set to: 0
  9877  002C20  90D8               	bcf	status,0,c
  9878  002C22  3624               	rlcf	___aomod@divisor,f,c
  9879  002C24  3625               	rlcf	___aomod@divisor+1,f,c
  9880  002C26  3626               	rlcf	___aomod@divisor+2,f,c
  9881  002C28  3627               	rlcf	___aomod@divisor+3,f,c
  9882  002C2A  3628               	rlcf	___aomod@divisor+4,f,c
  9883  002C2C  3629               	rlcf	___aomod@divisor+5,f,c
  9884  002C2E  362A               	rlcf	___aomod@divisor+6,f,c
  9885  002C30  362B               	rlcf	___aomod@divisor+7,f,c
  9886  002C32  2B60               	incf	___aomod@counter& (0+255),f,b
  9887  002C34                     l6077:
  9888                           
  9889                           ; BSR set to: 0
  9890  002C34  AE2B               	btfss	___aomod@divisor+7,7,c
  9891  002C36  D7F4               	goto	l6075
  9892  002C38                     u7120:
  9893                           
  9894                           ; BSR set to: 0
  9895  002C38  5024               	movf	___aomod@divisor,w,c
  9896  002C3A  5C1C               	subwf	___aomod@dividend,w,c
  9897  002C3C  5025               	movf	___aomod@divisor+1,w,c
  9898  002C3E  581D               	subwfb	___aomod@dividend+1,w,c
  9899  002C40  5026               	movf	___aomod@divisor+2,w,c
  9900  002C42  581E               	subwfb	___aomod@dividend+2,w,c
  9901  002C44  5027               	movf	___aomod@divisor+3,w,c
  9902  002C46  581F               	subwfb	___aomod@dividend+3,w,c
  9903  002C48  5028               	movf	___aomod@divisor+4,w,c
  9904  002C4A  5820               	subwfb	___aomod@dividend+4,w,c
  9905  002C4C  5029               	movf	___aomod@divisor+5,w,c
  9906  002C4E  5821               	subwfb	___aomod@dividend+5,w,c
  9907  002C50  502A               	movf	___aomod@divisor+6,w,c
  9908  002C52  5822               	subwfb	___aomod@dividend+6,w,c
  9909  002C54  502B               	movf	___aomod@divisor+7,w,c
  9910  002C56  5823               	subwfb	___aomod@dividend+7,w,c
  9911  002C58  A0D8               	btfss	status,0,c
  9912  002C5A  D010               	goto	l6083
  9913                           
  9914                           ; BSR set to: 0
  9915  002C5C  5024               	movf	___aomod@divisor,w,c
  9916  002C5E  5E1C               	subwf	___aomod@dividend,f,c
  9917  002C60  5025               	movf	___aomod@divisor+1,w,c
  9918  002C62  5A1D               	subwfb	___aomod@dividend+1,f,c
  9919  002C64  5026               	movf	___aomod@divisor+2,w,c
  9920  002C66  5A1E               	subwfb	___aomod@dividend+2,f,c
  9921  002C68  5027               	movf	___aomod@divisor+3,w,c
  9922  002C6A  5A1F               	subwfb	___aomod@dividend+3,f,c
  9923  002C6C  5028               	movf	___aomod@divisor+4,w,c
  9924  002C6E  5A20               	subwfb	___aomod@dividend+4,f,c
  9925  002C70  5029               	movf	___aomod@divisor+5,w,c
  9926  002C72  5A21               	subwfb	___aomod@dividend+5,f,c
  9927  002C74  502A               	movf	___aomod@divisor+6,w,c
  9928  002C76  5A22               	subwfb	___aomod@dividend+6,f,c
  9929  002C78  502B               	movf	___aomod@divisor+7,w,c
  9930  002C7A  5A23               	subwfb	___aomod@dividend+7,f,c
  9931  002C7C                     l6083:
  9932                           
  9933                           ; BSR set to: 0
  9934  002C7C  90D8               	bcf	status,0,c
  9935  002C7E  322B               	rrcf	___aomod@divisor+7,f,c
  9936  002C80  322A               	rrcf	___aomod@divisor+6,f,c
  9937  002C82  3229               	rrcf	___aomod@divisor+5,f,c
  9938  002C84  3228               	rrcf	___aomod@divisor+4,f,c
  9939  002C86  3227               	rrcf	___aomod@divisor+3,f,c
  9940  002C88  3226               	rrcf	___aomod@divisor+2,f,c
  9941  002C8A  3225               	rrcf	___aomod@divisor+1,f,c
  9942  002C8C  3224               	rrcf	___aomod@divisor,f,c
  9943                           
  9944                           ; BSR set to: 0
  9945  002C8E  2F60               	decfsz	___aomod@counter& (0+255),f,b
  9946  002C90  D7D3               	goto	u7120
  9947  002C92                     l6087:
  9948                           
  9949                           ; BSR set to: 0
  9950  002C92  5161               	movf	___aomod@sign& (0+255),w,b
  9951  002C94  B4D8               	btfsc	status,2,c
  9952  002C96  D010               	goto	l6091
  9953                           
  9954                           ; BSR set to: 0
  9955  002C98  1E23               	comf	___aomod@dividend+7,f,c
  9956  002C9A  1E22               	comf	___aomod@dividend+6,f,c
  9957  002C9C  1E21               	comf	___aomod@dividend+5,f,c
  9958  002C9E  1E20               	comf	___aomod@dividend+4,f,c
  9959  002CA0  1E1F               	comf	___aomod@dividend+3,f,c
  9960  002CA2  1E1E               	comf	___aomod@dividend+2,f,c
  9961  002CA4  1E1D               	comf	___aomod@dividend+1,f,c
  9962  002CA6  6C1C               	negf	___aomod@dividend,c
  9963  002CA8  0E00               	movlw	0
  9964  002CAA  221D               	addwfc	___aomod@dividend+1,f,c
  9965  002CAC  221E               	addwfc	___aomod@dividend+2,f,c
  9966  002CAE  221F               	addwfc	___aomod@dividend+3,f,c
  9967  002CB0  2220               	addwfc	___aomod@dividend+4,f,c
  9968  002CB2  2221               	addwfc	___aomod@dividend+5,f,c
  9969  002CB4  2222               	addwfc	___aomod@dividend+6,f,c
  9970  002CB6  2223               	addwfc	___aomod@dividend+7,f,c
  9971  002CB8                     l6091:
  9972                           
  9973                           ; BSR set to: 0
  9974  002CB8  0060  F070  F01C   	movff	___aomod@dividend,?___aomod
  9975  002CBE  0060  F074  F01D   	movff	___aomod@dividend+1,?___aomod+1
  9976  002CC4  0060  F078  F01E   	movff	___aomod@dividend+2,?___aomod+2
  9977  002CCA  0060  F07C  F01F   	movff	___aomod@dividend+3,?___aomod+3
  9978  002CD0  0060  F080  F020   	movff	___aomod@dividend+4,?___aomod+4
  9979  002CD6  0060  F084  F021   	movff	___aomod@dividend+5,?___aomod+5
  9980  002CDC  0060  F088  F022   	movff	___aomod@dividend+6,?___aomod+6
  9981  002CE2  0060  F08C  F023   	movff	___aomod@dividend+7,?___aomod+7
  9982                           
  9983                           ; BSR set to: 0
  9984  002CE8  0012               	return		;funcret
  9985  002CEA                     __end_of___aomod:
  9986                           	opt callstack 0
  9987                           
  9988 ;; *************** function ___aodiv *****************
  9989 ;; Defined at:
  9990 ;;		line 9 in file "D:\MPLAB\pic\sources\c99\common\aodiv.c"
  9991 ;; Parameters:    Size  Location     Type
  9992 ;;  dividend        8   27[COMRAM] long long 
  9993 ;;  divisor         8   35[COMRAM] long long 
  9994 ;; Auto vars:     Size  Location     Type
  9995 ;;  quotient        8    2[BANK0 ] long long 
  9996 ;;  sign            1    1[BANK0 ] unsigned char 
  9997 ;;  counter         1    0[BANK0 ] unsigned char 
  9998 ;; Return value:  Size  Location     Type
  9999 ;;                  8   27[COMRAM] long long 
 10000 ;; Registers used:
 10001 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10002 ;; Tracked objects:
 10003 ;;		On entry : 0/0
 10004 ;;		On exit  : 0/0
 10005 ;;		Unchanged: 0/0
 10006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10007 ;;      Params:        16       0       0       0       0       0       0       0       0
 10008 ;;      Locals:         0      10       0       0       0       0       0       0       0
 10009 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10010 ;;      Totals:        16      10       0       0       0       0       0       0       0
 10011 ;;Total ram usage:       26 bytes
 10012 ;; Hardware stack levels used:    1
 10013 ;; Hardware stack levels required when called:    3
 10014 ;; This function calls:
 10015 ;;		Nothing
 10016 ;; This function is called by:
 10017 ;;		_dtoa
 10018 ;; This function uses a non-reentrant model
 10019 ;;
 10020                           
 10021                           	psect	text29
 10022  002A5A                     __ptext29:
 10023                           	opt callstack 0
 10024  002A5A                     ___aodiv:
 10025                           	opt callstack 23
 10026                           
 10027                           ; BSR set to: 0
 10028                           ;incstack = 0
 10029  002A5A  0E00               	movlw	0
 10030  002A5C  0100               	movlb	0	; () banked
 10031  002A5E  6F61               	movwf	___aodiv@sign& (0+255),b
 10032                           
 10033                           ; BSR set to: 0
 10034  002A60  AE2B               	btfss	___aodiv@divisor+7,7,c
 10035  002A62  D012               	goto	l6023
 10036                           
 10037                           ; BSR set to: 0
 10038  002A64  1E2B               	comf	___aodiv@divisor+7,f,c
 10039  002A66  1E2A               	comf	___aodiv@divisor+6,f,c
 10040  002A68  1E29               	comf	___aodiv@divisor+5,f,c
 10041  002A6A  1E28               	comf	___aodiv@divisor+4,f,c
 10042  002A6C  1E27               	comf	___aodiv@divisor+3,f,c
 10043  002A6E  1E26               	comf	___aodiv@divisor+2,f,c
 10044  002A70  1E25               	comf	___aodiv@divisor+1,f,c
 10045  002A72  6C24               	negf	___aodiv@divisor,c
 10046  002A74  0E00               	movlw	0
 10047  002A76  2225               	addwfc	___aodiv@divisor+1,f,c
 10048  002A78  2226               	addwfc	___aodiv@divisor+2,f,c
 10049  002A7A  2227               	addwfc	___aodiv@divisor+3,f,c
 10050  002A7C  2228               	addwfc	___aodiv@divisor+4,f,c
 10051  002A7E  2229               	addwfc	___aodiv@divisor+5,f,c
 10052  002A80  222A               	addwfc	___aodiv@divisor+6,f,c
 10053  002A82  222B               	addwfc	___aodiv@divisor+7,f,c
 10054                           
 10055                           ; BSR set to: 0
 10056  002A84  0E01               	movlw	1
 10057  002A86  6F61               	movwf	___aodiv@sign& (0+255),b
 10058  002A88                     l6023:
 10059                           
 10060                           ; BSR set to: 0
 10061  002A88  AE23               	btfss	___aodiv@dividend+7,7,c
 10062  002A8A  D012               	goto	l6029
 10063                           
 10064                           ; BSR set to: 0
 10065  002A8C  1E23               	comf	___aodiv@dividend+7,f,c
 10066  002A8E  1E22               	comf	___aodiv@dividend+6,f,c
 10067  002A90  1E21               	comf	___aodiv@dividend+5,f,c
 10068  002A92  1E20               	comf	___aodiv@dividend+4,f,c
 10069  002A94  1E1F               	comf	___aodiv@dividend+3,f,c
 10070  002A96  1E1E               	comf	___aodiv@dividend+2,f,c
 10071  002A98  1E1D               	comf	___aodiv@dividend+1,f,c
 10072  002A9A  6C1C               	negf	___aodiv@dividend,c
 10073  002A9C  0E00               	movlw	0
 10074  002A9E  221D               	addwfc	___aodiv@dividend+1,f,c
 10075  002AA0  221E               	addwfc	___aodiv@dividend+2,f,c
 10076  002AA2  221F               	addwfc	___aodiv@dividend+3,f,c
 10077  002AA4  2220               	addwfc	___aodiv@dividend+4,f,c
 10078  002AA6  2221               	addwfc	___aodiv@dividend+5,f,c
 10079  002AA8  2222               	addwfc	___aodiv@dividend+6,f,c
 10080  002AAA  2223               	addwfc	___aodiv@dividend+7,f,c
 10081                           
 10082                           ; BSR set to: 0
 10083  002AAC  0E01               	movlw	1
 10084  002AAE  1B61               	xorwf	___aodiv@sign& (0+255),f,b
 10085  002AB0                     l6029:
 10086                           
 10087                           ; BSR set to: 0
 10088  002AB0  EE20  F062         	lfsr	2,___aodiv@quotient
 10089  002AB4  0E07               	movlw	7
 10090  002AB6                     u7041:
 10091  002AB6  6ADE               	clrf	postinc2,c
 10092  002AB8  06E8               	decf	wreg,f,c
 10093  002ABA  E2FD               	bc	u7041
 10094                           
 10095                           ; BSR set to: 0
 10096  002ABC  5024               	movf	___aodiv@divisor,w,c
 10097  002ABE  1025               	iorwf	___aodiv@divisor+1,w,c
 10098  002AC0  1026               	iorwf	___aodiv@divisor+2,w,c
 10099  002AC2  1027               	iorwf	___aodiv@divisor+3,w,c
 10100  002AC4  1028               	iorwf	___aodiv@divisor+4,w,c
 10101  002AC6  1029               	iorwf	___aodiv@divisor+5,w,c
 10102  002AC8  102A               	iorwf	___aodiv@divisor+6,w,c
 10103  002ACA  102B               	iorwf	___aodiv@divisor+7,w,c
 10104  002ACC  B4D8               	btfsc	status,2,c
 10105  002ACE  D046               	goto	l6051
 10106                           
 10107                           ; BSR set to: 0
 10108  002AD0  0E01               	movlw	1
 10109  002AD2  6F60               	movwf	___aodiv@counter& (0+255),b
 10110  002AD4  D00A               	goto	l6037
 10111  002AD6                     l6035:
 10112                           
 10113                           ; BSR set to: 0
 10114  002AD6  90D8               	bcf	status,0,c
 10115  002AD8  3624               	rlcf	___aodiv@divisor,f,c
 10116  002ADA  3625               	rlcf	___aodiv@divisor+1,f,c
 10117  002ADC  3626               	rlcf	___aodiv@divisor+2,f,c
 10118  002ADE  3627               	rlcf	___aodiv@divisor+3,f,c
 10119  002AE0  3628               	rlcf	___aodiv@divisor+4,f,c
 10120  002AE2  3629               	rlcf	___aodiv@divisor+5,f,c
 10121  002AE4  362A               	rlcf	___aodiv@divisor+6,f,c
 10122  002AE6  362B               	rlcf	___aodiv@divisor+7,f,c
 10123  002AE8  2B60               	incf	___aodiv@counter& (0+255),f,b
 10124  002AEA                     l6037:
 10125                           
 10126                           ; BSR set to: 0
 10127  002AEA  AE2B               	btfss	___aodiv@divisor+7,7,c
 10128  002AEC  D7F4               	goto	l6035
 10129  002AEE                     u7060:
 10130                           
 10131                           ; BSR set to: 0
 10132  002AEE  90D8               	bcf	status,0,c
 10133  002AF0  3762               	rlcf	___aodiv@quotient& (0+255),f,b
 10134  002AF2  3763               	rlcf	(___aodiv@quotient+1)& (0+255),f,b
 10135  002AF4  3764               	rlcf	(___aodiv@quotient+2)& (0+255),f,b
 10136  002AF6  3765               	rlcf	(___aodiv@quotient+3)& (0+255),f,b
 10137  002AF8  3766               	rlcf	(___aodiv@quotient+4)& (0+255),f,b
 10138  002AFA  3767               	rlcf	(___aodiv@quotient+5)& (0+255),f,b
 10139  002AFC  3768               	rlcf	(___aodiv@quotient+6)& (0+255),f,b
 10140  002AFE  3769               	rlcf	(___aodiv@quotient+7)& (0+255),f,b
 10141                           
 10142                           ; BSR set to: 0
 10143  002B00  5024               	movf	___aodiv@divisor,w,c
 10144  002B02  5C1C               	subwf	___aodiv@dividend,w,c
 10145  002B04  5025               	movf	___aodiv@divisor+1,w,c
 10146  002B06  581D               	subwfb	___aodiv@dividend+1,w,c
 10147  002B08  5026               	movf	___aodiv@divisor+2,w,c
 10148  002B0A  581E               	subwfb	___aodiv@dividend+2,w,c
 10149  002B0C  5027               	movf	___aodiv@divisor+3,w,c
 10150  002B0E  581F               	subwfb	___aodiv@dividend+3,w,c
 10151  002B10  5028               	movf	___aodiv@divisor+4,w,c
 10152  002B12  5820               	subwfb	___aodiv@dividend+4,w,c
 10153  002B14  5029               	movf	___aodiv@divisor+5,w,c
 10154  002B16  5821               	subwfb	___aodiv@dividend+5,w,c
 10155  002B18  502A               	movf	___aodiv@divisor+6,w,c
 10156  002B1A  5822               	subwfb	___aodiv@dividend+6,w,c
 10157  002B1C  502B               	movf	___aodiv@divisor+7,w,c
 10158  002B1E  5823               	subwfb	___aodiv@dividend+7,w,c
 10159  002B20  A0D8               	btfss	status,0,c
 10160  002B22  D011               	goto	l6047
 10161                           
 10162                           ; BSR set to: 0
 10163  002B24  5024               	movf	___aodiv@divisor,w,c
 10164  002B26  5E1C               	subwf	___aodiv@dividend,f,c
 10165  002B28  5025               	movf	___aodiv@divisor+1,w,c
 10166  002B2A  5A1D               	subwfb	___aodiv@dividend+1,f,c
 10167  002B2C  5026               	movf	___aodiv@divisor+2,w,c
 10168  002B2E  5A1E               	subwfb	___aodiv@dividend+2,f,c
 10169  002B30  5027               	movf	___aodiv@divisor+3,w,c
 10170  002B32  5A1F               	subwfb	___aodiv@dividend+3,f,c
 10171  002B34  5028               	movf	___aodiv@divisor+4,w,c
 10172  002B36  5A20               	subwfb	___aodiv@dividend+4,f,c
 10173  002B38  5029               	movf	___aodiv@divisor+5,w,c
 10174  002B3A  5A21               	subwfb	___aodiv@dividend+5,f,c
 10175  002B3C  502A               	movf	___aodiv@divisor+6,w,c
 10176  002B3E  5A22               	subwfb	___aodiv@dividend+6,f,c
 10177  002B40  502B               	movf	___aodiv@divisor+7,w,c
 10178  002B42  5A23               	subwfb	___aodiv@dividend+7,f,c
 10179                           
 10180                           ; BSR set to: 0
 10181  002B44  8162               	bsf	___aodiv@quotient& (0+255),0,b
 10182  002B46                     l6047:
 10183                           
 10184                           ; BSR set to: 0
 10185  002B46  90D8               	bcf	status,0,c
 10186  002B48  322B               	rrcf	___aodiv@divisor+7,f,c
 10187  002B4A  322A               	rrcf	___aodiv@divisor+6,f,c
 10188  002B4C  3229               	rrcf	___aodiv@divisor+5,f,c
 10189  002B4E  3228               	rrcf	___aodiv@divisor+4,f,c
 10190  002B50  3227               	rrcf	___aodiv@divisor+3,f,c
 10191  002B52  3226               	rrcf	___aodiv@divisor+2,f,c
 10192  002B54  3225               	rrcf	___aodiv@divisor+1,f,c
 10193  002B56  3224               	rrcf	___aodiv@divisor,f,c
 10194                           
 10195                           ; BSR set to: 0
 10196  002B58  2F60               	decfsz	___aodiv@counter& (0+255),f,b
 10197  002B5A  D7C9               	goto	u7060
 10198  002B5C                     l6051:
 10199                           
 10200                           ; BSR set to: 0
 10201  002B5C  5161               	movf	___aodiv@sign& (0+255),w,b
 10202  002B5E  B4D8               	btfsc	status,2,c
 10203  002B60  D010               	goto	l6055
 10204                           
 10205                           ; BSR set to: 0
 10206  002B62  1F69               	comf	(___aodiv@quotient+7)& (0+255),f,b
 10207  002B64  1F68               	comf	(___aodiv@quotient+6)& (0+255),f,b
 10208  002B66  1F67               	comf	(___aodiv@quotient+5)& (0+255),f,b
 10209  002B68  1F66               	comf	(___aodiv@quotient+4)& (0+255),f,b
 10210  002B6A  1F65               	comf	(___aodiv@quotient+3)& (0+255),f,b
 10211  002B6C  1F64               	comf	(___aodiv@quotient+2)& (0+255),f,b
 10212  002B6E  1F63               	comf	(___aodiv@quotient+1)& (0+255),f,b
 10213  002B70  6D62               	negf	___aodiv@quotient& (0+255),b
 10214  002B72  0E00               	movlw	0
 10215  002B74  2363               	addwfc	(___aodiv@quotient+1)& (0+255),f,b
 10216  002B76  2364               	addwfc	(___aodiv@quotient+2)& (0+255),f,b
 10217  002B78  2365               	addwfc	(___aodiv@quotient+3)& (0+255),f,b
 10218  002B7A  2366               	addwfc	(___aodiv@quotient+4)& (0+255),f,b
 10219  002B7C  2367               	addwfc	(___aodiv@quotient+5)& (0+255),f,b
 10220  002B7E  2368               	addwfc	(___aodiv@quotient+6)& (0+255),f,b
 10221  002B80  2369               	addwfc	(___aodiv@quotient+7)& (0+255),f,b
 10222  002B82                     l6055:
 10223                           
 10224                           ; BSR set to: 0
 10225  002B82  0060  F188  F01C   	movff	___aodiv@quotient,?___aodiv
 10226  002B88  0060  F18C  F01D   	movff	___aodiv@quotient+1,?___aodiv+1
 10227  002B8E  0060  F190  F01E   	movff	___aodiv@quotient+2,?___aodiv+2
 10228  002B94  0060  F194  F01F   	movff	___aodiv@quotient+3,?___aodiv+3
 10229  002B9A  0060  F198  F020   	movff	___aodiv@quotient+4,?___aodiv+4
 10230  002BA0  0060  F19C  F021   	movff	___aodiv@quotient+5,?___aodiv+5
 10231  002BA6  0060  F1A0  F022   	movff	___aodiv@quotient+6,?___aodiv+6
 10232  002BAC  0060  F1A4  F023   	movff	___aodiv@quotient+7,?___aodiv+7
 10233                           
 10234                           ; BSR set to: 0
 10235  002BB2  0012               	return		;funcret
 10236  002BB4                     __end_of___aodiv:
 10237                           	opt callstack 0
 10238                           
 10239 ;; *************** function _atoi *****************
 10240 ;; Defined at:
 10241 ;;		line 4 in file "D:\MPLAB\pic\sources\c99\common\atoi.c"
 10242 ;; Parameters:    Size  Location     Type
 10243 ;;  s               2   34[COMRAM] PTR const unsigned char 
 10244 ;;		 -> STR_26(4), STR_22(6), STR_17(4), STR_15(4), 
 10245 ;; Auto vars:     Size  Location     Type
 10246 ;;  n               2    7[BANK0 ] int 
 10247 ;;  neg             2    0[BANK0 ] int 
 10248 ;; Return value:  Size  Location     Type
 10249 ;;                  2   34[COMRAM] int 
 10250 ;; Registers used:
 10251 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10252 ;; Tracked objects:
 10253 ;;		On entry : 0/0
 10254 ;;		On exit  : 0/0
 10255 ;;		Unchanged: 0/0
 10256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10257 ;;      Params:         2       0       0       0       0       0       0       0       0
 10258 ;;      Locals:         0       9       0       0       0       0       0       0       0
 10259 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10260 ;;      Totals:         6       9       0       0       0       0       0       0       0
 10261 ;;Total ram usage:       15 bytes
 10262 ;; Hardware stack levels used:    1
 10263 ;; Hardware stack levels required when called:    4
 10264 ;; This function calls:
 10265 ;;		___wmul
 10266 ;;		_isdigit
 10267 ;;		_isspace
 10268 ;; This function is called by:
 10269 ;;		_vfpfcnvrt
 10270 ;; This function uses a non-reentrant model
 10271 ;;
 10272                           
 10273                           	psect	text30
 10274  002788                     __ptext30:
 10275                           	opt callstack 0
 10276  002788                     _atoi:
 10277                           	opt callstack 23
 10278                           
 10279                           ; BSR set to: 0
 10280                           ;incstack = 0
 10281  002788  0E00               	movlw	0
 10282  00278A  0100               	movlb	0	; () banked
 10283  00278C  6F68               	movwf	(atoi@n+1)& (0+255),b
 10284  00278E  0E00               	movlw	0
 10285  002790  6F67               	movwf	atoi@n& (0+255),b
 10286  002792  0E00               	movlw	0
 10287  002794  6F61               	movwf	(atoi@neg+1)& (0+255),b
 10288  002796  0E00               	movlw	0
 10289  002798  6F60               	movwf	atoi@neg& (0+255),b
 10290  00279A  D002               	goto	l6915
 10291  00279C                     l6913:
 10292                           
 10293                           ; BSR set to: 0
 10294  00279C  4A23               	infsnz	atoi@s,f,c
 10295  00279E  2A24               	incf	atoi@s+1,f,c
 10296  0027A0                     l6915:
 10297                           
 10298                           ; BSR set to: 0
 10299  0027A0  0E01               	movlw	1
 10300  0027A2  6F66               	movwf	_atoi$2286& (0+255),b
 10301                           
 10302                           ; BSR set to: 0
 10303  0027A4  0060  F08F  FFF6   	movff	atoi@s,tblptrl
 10304  0027AA  0060  F093  FFF7   	movff	atoi@s+1,tblptrh
 10305  0027B0                     	if	0	;tblptru may be non-zero
 10306  0027B0                     	endif
 10307  0027B0                     	if	0	;tblptru may be non-zero
 10308  0027B0                     	endif
 10309  0027B0  0008               	tblrd		*
 10310  0027B2  50F5               	movf	tablat,w,c
 10311  0027B4  0A20               	xorlw	32
 10312  0027B6  B4D8               	btfsc	status,2,c
 10313  0027B8  D01A               	goto	l6923
 10314                           
 10315                           ; BSR set to: 0
 10316  0027BA  0EF7               	movlw	247
 10317  0027BC  6E25               	movwf	??_atoi& (0+255),c
 10318  0027BE  0EFF               	movlw	255
 10319  0027C0  6E26               	movwf	(??_atoi+1)& (0+255),c
 10320  0027C2  0060  F08F  FFF6   	movff	atoi@s,tblptrl
 10321  0027C8  0060  F093  FFF7   	movff	atoi@s+1,tblptrh
 10322  0027CE                     	if	0	;tblptru may be non-zero
 10323  0027CE                     	endif
 10324  0027CE                     	if	0	;tblptru may be non-zero
 10325  0027CE                     	endif
 10326  0027CE  0008               	tblrd		*
 10327  0027D0  50F5               	movf	tablat,w,c
 10328  0027D2  6E27               	movwf	(??_atoi+2)& (0+255),c
 10329  0027D4  6A28               	clrf	(??_atoi+3)& (0+255),c
 10330  0027D6  5025               	movf	??_atoi,w,c
 10331  0027D8  2627               	addwf	??_atoi+2,f,c
 10332  0027DA  5026               	movf	??_atoi+1,w,c
 10333  0027DC  2228               	addwfc	??_atoi+3,f,c
 10334  0027DE  5028               	movf	??_atoi+3,w,c
 10335  0027E0  E104               	bnz	u8550
 10336  0027E2  0E05               	movlw	5
 10337  0027E4  5C27               	subwf	??_atoi+2,w,c
 10338  0027E6  A0D8               	btfss	status,0,c
 10339  0027E8  D002               	goto	l6923
 10340  0027EA                     u8550:
 10341                           
 10342                           ; BSR set to: 0
 10343  0027EA  0E00               	movlw	0
 10344  0027EC  6F66               	movwf	_atoi$2286& (0+255),b
 10345  0027EE                     l6923:
 10346                           
 10347                           ; BSR set to: 0
 10348  0027EE  0060  F198  F062   	movff	_atoi$2286,_atoi$2285
 10349  0027F4  6B63               	clrf	(_atoi$2285+1)& (0+255),b
 10350                           
 10351                           ; BSR set to: 0
 10352  0027F6  5162               	movf	_atoi$2285& (0+255),w,b
 10353  0027F8  1163               	iorwf	(_atoi$2285+1)& (0+255),w,b
 10354  0027FA  B4D8               	btfsc	status,2,c
 10355  0027FC  D008               	goto	l6933
 10356  0027FE  D7CE               	goto	l6913
 10357  002800                     l6929:
 10358                           
 10359                           ; BSR set to: 0
 10360  002800  0E00               	movlw	0
 10361  002802  6F61               	movwf	(atoi@neg+1)& (0+255),b
 10362  002804  0E01               	movlw	1
 10363  002806  6F60               	movwf	atoi@neg& (0+255),b
 10364  002808                     l6931:
 10365                           
 10366                           ; BSR set to: 0
 10367  002808  4A23               	infsnz	atoi@s,f,c
 10368  00280A  2A24               	incf	atoi@s+1,f,c
 10369  00280C  D035               	goto	l6939
 10370  00280E                     l6933:
 10371                           
 10372                           ; BSR set to: 0
 10373  00280E  0060  F08F  FFF6   	movff	atoi@s,tblptrl
 10374  002814  0060  F093  FFF7   	movff	atoi@s+1,tblptrh
 10375  00281A                     	if	0	;tblptru may be non-zero
 10376  00281A                     	endif
 10377  00281A                     	if	0	;tblptru may be non-zero
 10378  00281A                     	endif
 10379  00281A  0008               	tblrd		*
 10380  00281C  50F5               	movf	tablat,w,c
 10381  00281E  6E25               	movwf	??_atoi& (0+255),c
 10382  002820  6A26               	clrf	(??_atoi+1)& (0+255),c
 10383                           
 10384                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10385                           ; Switch size 1, requested type "simple"
 10386                           ; Number of cases is 1, Range of values is 0 to 0
 10387                           ; switch strategies available:
 10388                           ; Name         Instructions Cycles
 10389                           ; simple_byte            4     3 (average)
 10390                           ;	Chosen strategy is simple_byte
 10391  002822  5026               	movf	??_atoi+1,w,c
 10392  002824  0A00               	xorlw	0	; case 0
 10393  002826  A4D8               	btfss	status,2,c
 10394  002828  D027               	goto	l6939
 10395                           
 10396                           ; BSR set to: 0
 10397                           ; Switch size 1, requested type "simple"
 10398                           ; Number of cases is 2, Range of values is 43 to 45
 10399                           ; switch strategies available:
 10400                           ; Name         Instructions Cycles
 10401                           ; simple_byte            7     4 (average)
 10402                           ;	Chosen strategy is simple_byte
 10403  00282A  5025               	movf	??_atoi,w,c
 10404  00282C  0A2B               	xorlw	43	; case 43
 10405  00282E  B4D8               	btfsc	status,2,c
 10406  002830  D7EB               	goto	l6931
 10407  002832  0A06               	xorlw	6	; case 45
 10408  002834  B4D8               	btfsc	status,2,c
 10409  002836  D7E4               	goto	l6929
 10410  002838  D01F               	goto	l6939
 10411  00283A                     l6935:
 10412                           
 10413                           ; BSR set to: 0
 10414  00283A  0060  F19C  F01C   	movff	atoi@n,___wmul@multiplier
 10415  002840  0060  F1A0  F01D   	movff	atoi@n+1,___wmul@multiplier+1
 10416  002846  0E00               	movlw	0
 10417  002848  6E1F               	movwf	___wmul@multiplicand+1,c
 10418  00284A  0E0A               	movlw	10
 10419  00284C  6E1E               	movwf	___wmul@multiplicand,c
 10420  00284E  EC62  F01E         	call	___wmul	;wreg free
 10421  002852  0060  F08F  FFF6   	movff	atoi@s,tblptrl
 10422  002858  0060  F093  FFF7   	movff	atoi@s+1,tblptrh
 10423  00285E                     	if	0	;tblptru may be non-zero
 10424  00285E                     	endif
 10425  00285E                     	if	0	;tblptru may be non-zero
 10426  00285E                     	endif
 10427  00285E  0008               	tblrd		*
 10428  002860  50F5               	movf	tablat,w,c
 10429  002862  5E1C               	subwf	?___wmul,f,c
 10430  002864  0E00               	movlw	0
 10431  002866  5A1D               	subwfb	?___wmul+1,f,c
 10432  002868  0E30               	movlw	48
 10433  00286A  241C               	addwf	?___wmul,w,c
 10434  00286C  0100               	movlb	0	; () banked
 10435  00286E  6F67               	movwf	atoi@n& (0+255),b
 10436  002870  0E00               	movlw	0
 10437  002872  201D               	addwfc	?___wmul+1,w,c
 10438  002874  6F68               	movwf	(atoi@n+1)& (0+255),b
 10439  002876  D7C8               	goto	l6931
 10440  002878                     l6939:
 10441                           
 10442                           ; BSR set to: 0
 10443  002878  0ED0               	movlw	208
 10444  00287A  6E25               	movwf	??_atoi& (0+255),c
 10445  00287C  0EFF               	movlw	255
 10446  00287E  6E26               	movwf	(??_atoi+1)& (0+255),c
 10447  002880  0060  F08F  FFF6   	movff	atoi@s,tblptrl
 10448  002886  0060  F093  FFF7   	movff	atoi@s+1,tblptrh
 10449  00288C                     	if	0	;tblptru may be non-zero
 10450  00288C                     	endif
 10451  00288C                     	if	0	;tblptru may be non-zero
 10452  00288C                     	endif
 10453  00288C  0008               	tblrd		*
 10454  00288E  50F5               	movf	tablat,w,c
 10455  002890  6E27               	movwf	(??_atoi+2)& (0+255),c
 10456  002892  6A28               	clrf	(??_atoi+3)& (0+255),c
 10457  002894  5025               	movf	??_atoi,w,c
 10458  002896  2627               	addwf	??_atoi+2,f,c
 10459  002898  5026               	movf	??_atoi+1,w,c
 10460  00289A  2228               	addwfc	??_atoi+3,f,c
 10461  00289C  5028               	movf	??_atoi+3,w,c
 10462  00289E  E106               	bnz	u8570
 10463  0028A0  0E0A               	movlw	10
 10464  0028A2  5C27               	subwf	??_atoi+2,w,c
 10465  0028A4  B0D8               	btfsc	status,0,c
 10466  0028A6  D002               	goto	u8570
 10467  0028A8  0E01               	movlw	1
 10468  0028AA  D001               	goto	u8580
 10469  0028AC                     u8570:
 10470  0028AC  0E00               	movlw	0
 10471  0028AE                     u8580:
 10472  0028AE  6F64               	movwf	_atoi$2287& (0+255),b
 10473  0028B0  6B65               	clrf	(_atoi$2287+1)& (0+255),b
 10474                           
 10475                           ; BSR set to: 0
 10476  0028B2  5164               	movf	_atoi$2287& (0+255),w,b
 10477  0028B4  1165               	iorwf	(_atoi$2287+1)& (0+255),w,b
 10478  0028B6  A4D8               	btfss	status,2,c
 10479  0028B8  D7C0               	goto	l6935
 10480                           
 10481                           ; BSR set to: 0
 10482  0028BA  5160               	movf	atoi@neg& (0+255),w,b
 10483  0028BC  1161               	iorwf	(atoi@neg+1)& (0+255),w,b
 10484  0028BE  A4D8               	btfss	status,2,c
 10485  0028C0  D011               	goto	l1299
 10486                           
 10487                           ; BSR set to: 0
 10488  0028C2  0060  F19C  F025   	movff	atoi@n,??_atoi
 10489  0028C8  0060  F1A0  F026   	movff	atoi@n+1,??_atoi+1
 10490  0028CE  1E25               	comf	??_atoi,f,c
 10491  0028D0  1E26               	comf	??_atoi+1,f,c
 10492  0028D2  4A25               	infsnz	??_atoi,f,c
 10493  0028D4  2A26               	incf	??_atoi+1,f,c
 10494  0028D6  0060  F094  F023   	movff	??_atoi,?_atoi
 10495  0028DC  0060  F098  F024   	movff	??_atoi+1,?_atoi+1
 10496  0028E2  0012               	return	
 10497  0028E4                     l1299:
 10498                           
 10499                           ; BSR set to: 0
 10500  0028E4  0060  F19C  F023   	movff	atoi@n,?_atoi
 10501  0028EA  0060  F1A0  F024   	movff	atoi@n+1,?_atoi+1
 10502                           
 10503                           ; BSR set to: 0
 10504  0028F0  0012               	return		;funcret
 10505  0028F2                     __end_of_atoi:
 10506                           	opt callstack 0
 10507                           
 10508 ;; *************** function _isspace *****************
 10509 ;; Defined at:
 10510 ;;		line 5 in file "D:\MPLAB\pic\sources\c99\common\isspace.c"
 10511 ;; Parameters:    Size  Location     Type
 10512 ;;  c               2   27[COMRAM] int 
 10513 ;; Auto vars:     Size  Location     Type
 10514 ;;		None
 10515 ;; Return value:  Size  Location     Type
 10516 ;;                  2   27[COMRAM] int 
 10517 ;; Registers used:
 10518 ;;		wreg, status,2, status,0
 10519 ;; Tracked objects:
 10520 ;;		On entry : 0/0
 10521 ;;		On exit  : 0/0
 10522 ;;		Unchanged: 0/0
 10523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10524 ;;      Params:         2       0       0       0       0       0       0       0       0
 10525 ;;      Locals:         1       0       0       0       0       0       0       0       0
 10526 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10527 ;;      Totals:         7       0       0       0       0       0       0       0       0
 10528 ;;Total ram usage:        7 bytes
 10529 ;; Hardware stack levels used:    1
 10530 ;; Hardware stack levels required when called:    3
 10531 ;; This function calls:
 10532 ;;		Nothing
 10533 ;; This function is called by:
 10534 ;;		_atoi
 10535 ;; This function uses a non-reentrant model
 10536 ;;
 10537                           
 10538                           	psect	text31
 10539  003AC8                     __ptext31:
 10540                           	opt callstack 0
 10541  003AC8                     _isspace:
 10542                           	opt callstack 23
 10543                           
 10544                           ; BSR set to: 0
 10545                           ;incstack = 0
 10546  003AC8  0E01               	movlw	1
 10547  003ACA  6E22               	movwf	_isspace$2316,c
 10548  003ACC  0E20               	movlw	32
 10549  003ACE  181C               	xorwf	isspace@c,w,c
 10550  003AD0  101D               	iorwf	isspace@c+1,w,c
 10551  003AD2  B4D8               	btfsc	status,2,c
 10552  003AD4  D016               	goto	l6547
 10553  003AD6  0EF7               	movlw	247
 10554  003AD8  6E1E               	movwf	??_isspace& (0+255),c
 10555  003ADA  0EFF               	movlw	255
 10556  003ADC  6E1F               	movwf	(??_isspace+1)& (0+255),c
 10557  003ADE  0060  F070  F020   	movff	isspace@c,??_isspace+2
 10558  003AE4  0060  F074  F021   	movff	isspace@c+1,??_isspace+3
 10559  003AEA  501E               	movf	??_isspace,w,c
 10560  003AEC  2620               	addwf	??_isspace+2,f,c
 10561  003AEE  501F               	movf	??_isspace+1,w,c
 10562  003AF0  2221               	addwfc	??_isspace+3,f,c
 10563  003AF2  5021               	movf	??_isspace+3,w,c
 10564  003AF4  E104               	bnz	u7860
 10565  003AF6  0E05               	movlw	5
 10566  003AF8  5C20               	subwf	??_isspace+2,w,c
 10567  003AFA  A0D8               	btfss	status,0,c
 10568  003AFC  D002               	goto	l6547
 10569  003AFE                     u7860:
 10570  003AFE  0E00               	movlw	0
 10571  003B00  6E22               	movwf	_isspace$2316,c
 10572  003B02                     l6547:
 10573  003B02  0060  F088  F01C   	movff	_isspace$2316,?_isspace
 10574  003B08  6A1D               	clrf	?_isspace+1,c
 10575  003B0A  0012               	return		;funcret
 10576  003B0C                     __end_of_isspace:
 10577                           	opt callstack 0
 10578                           
 10579 ;; *************** function _isdigit *****************
 10580 ;; Defined at:
 10581 ;;		line 5 in file "D:\MPLAB\pic\sources\c99\common\isdigit.c"
 10582 ;; Parameters:    Size  Location     Type
 10583 ;;  c               2   27[COMRAM] int 
 10584 ;; Auto vars:     Size  Location     Type
 10585 ;;		None
 10586 ;; Return value:  Size  Location     Type
 10587 ;;                  2   27[COMRAM] int 
 10588 ;; Registers used:
 10589 ;;		wreg, status,2, status,0
 10590 ;; Tracked objects:
 10591 ;;		On entry : 0/0
 10592 ;;		On exit  : 0/0
 10593 ;;		Unchanged: 0/0
 10594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10595 ;;      Params:         2       0       0       0       0       0       0       0       0
 10596 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10597 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10598 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10599 ;;Total ram usage:        6 bytes
 10600 ;; Hardware stack levels used:    1
 10601 ;; Hardware stack levels required when called:    3
 10602 ;; This function calls:
 10603 ;;		Nothing
 10604 ;; This function is called by:
 10605 ;;		_vfpfcnvrt
 10606 ;;		_atoi
 10607 ;; This function uses a non-reentrant model
 10608 ;;
 10609                           
 10610                           	psect	text32
 10611  003C2C                     __ptext32:
 10612                           	opt callstack 0
 10613  003C2C                     _isdigit:
 10614                           	opt callstack 24
 10615                           
 10616                           ;incstack = 0
 10617  003C2C  0ED0               	movlw	208
 10618  003C2E  6E1E               	movwf	??_isdigit& (0+255),c
 10619  003C30  0EFF               	movlw	255
 10620  003C32  6E1F               	movwf	(??_isdigit+1)& (0+255),c
 10621  003C34  0060  F070  F020   	movff	isdigit@c,??_isdigit+2
 10622  003C3A  0060  F074  F021   	movff	isdigit@c+1,??_isdigit+3
 10623  003C40  501E               	movf	??_isdigit,w,c
 10624  003C42  2620               	addwf	??_isdigit+2,f,c
 10625  003C44  501F               	movf	??_isdigit+1,w,c
 10626  003C46  2221               	addwfc	??_isdigit+3,f,c
 10627  003C48  5021               	movf	??_isdigit+3,w,c
 10628  003C4A  E106               	bnz	u7000
 10629  003C4C  0E0A               	movlw	10
 10630  003C4E  5C20               	subwf	??_isdigit+2,w,c
 10631  003C50  B0D8               	btfsc	status,0,c
 10632  003C52  D002               	goto	u7000
 10633  003C54  0E01               	movlw	1
 10634  003C56  D001               	goto	u7010
 10635  003C58                     u7000:
 10636  003C58  0E00               	movlw	0
 10637  003C5A                     u7010:
 10638  003C5A  6E1C               	movwf	?_isdigit,c
 10639  003C5C  6A1D               	clrf	?_isdigit+1,c
 10640  003C5E  0012               	return		;funcret
 10641  003C60                     __end_of_isdigit:
 10642                           	opt callstack 0
 10643                           
 10644 ;; *************** function ___wmul *****************
 10645 ;; Defined at:
 10646 ;;		line 15 in file "D:\MPLAB\pic\sources\c99\common\Umul16.c"
 10647 ;; Parameters:    Size  Location     Type
 10648 ;;  multiplier      2   27[COMRAM] unsigned int 
 10649 ;;  multiplicand    2   29[COMRAM] unsigned int 
 10650 ;; Auto vars:     Size  Location     Type
 10651 ;;  product         2   31[COMRAM] unsigned int 
 10652 ;; Return value:  Size  Location     Type
 10653 ;;                  2   27[COMRAM] unsigned int 
 10654 ;; Registers used:
 10655 ;;		wreg, status,2, status,0, prodl, prodh
 10656 ;; Tracked objects:
 10657 ;;		On entry : 0/0
 10658 ;;		On exit  : 0/0
 10659 ;;		Unchanged: 0/0
 10660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10661 ;;      Params:         4       0       0       0       0       0       0       0       0
 10662 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10663 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10664 ;;      Totals:         6       0       0       0       0       0       0       0       0
 10665 ;;Total ram usage:        6 bytes
 10666 ;; Hardware stack levels used:    1
 10667 ;; Hardware stack levels required when called:    3
 10668 ;; This function calls:
 10669 ;;		Nothing
 10670 ;; This function is called by:
 10671 ;;		_main
 10672 ;;		_atoi
 10673 ;; This function uses a non-reentrant model
 10674 ;;
 10675                           
 10676                           	psect	text33
 10677  003CC4                     __ptext33:
 10678                           	opt callstack 0
 10679  003CC4                     ___wmul:
 10680                           	opt callstack 23
 10681                           
 10682                           ;incstack = 0
 10683  003CC4  501C               	movf	___wmul@multiplier,w,c
 10684  003CC6  021E               	mulwf	___wmul@multiplicand,c
 10685  003CC8  006F FFCC  F020    	movff	prodl,___wmul@product
 10686  003CCE  006F FFD0  F021    	movff	prodh,___wmul@product+1
 10687  003CD4  501C               	movf	___wmul@multiplier,w,c
 10688  003CD6  021F               	mulwf	___wmul@multiplicand+1,c
 10689  003CD8  50F3               	movf	prodl,w,c
 10690  003CDA  2621               	addwf	___wmul@product+1,f,c
 10691  003CDC  501D               	movf	___wmul@multiplier+1,w,c
 10692  003CDE  021E               	mulwf	___wmul@multiplicand,c
 10693  003CE0  50F3               	movf	prodl,w,c
 10694  003CE2  2621               	addwf	___wmul@product+1,f,c
 10695  003CE4  0060  F080  F01C   	movff	___wmul@product,?___wmul
 10696  003CEA  0060  F084  F01D   	movff	___wmul@product+1,?___wmul+1
 10697  003CF0  0012               	return		;funcret
 10698  003CF2                     __end_of___wmul:
 10699                           	opt callstack 0
 10700                           
 10701 ;; *************** function _initCAN *****************
 10702 ;; Defined at:
 10703 ;;		line 682 in file "MainCode.c"
 10704 ;; Parameters:    Size  Location     Type
 10705 ;;		None
 10706 ;; Auto vars:     Size  Location     Type
 10707 ;;		None
 10708 ;; Return value:  Size  Location     Type
 10709 ;;                  1    wreg      void 
 10710 ;; Registers used:
 10711 ;;		wreg, status,2, status,0
 10712 ;; Tracked objects:
 10713 ;;		On entry : 0/0
 10714 ;;		On exit  : 0/0
 10715 ;;		Unchanged: 0/0
 10716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10717 ;;      Params:         0       0       0       0       0       0       0       0       0
 10718 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10719 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10720 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10721 ;;Total ram usage:        0 bytes
 10722 ;; Hardware stack levels used:    1
 10723 ;; Hardware stack levels required when called:    3
 10724 ;; This function calls:
 10725 ;;		Nothing
 10726 ;; This function is called by:
 10727 ;;		_main
 10728 ;; This function uses a non-reentrant model
 10729 ;;
 10730                           
 10731                           	psect	text34
 10732  003898                     __ptext34:
 10733                           	opt callstack 0
 10734  003898                     _initCAN:
 10735                           	opt callstack 27
 10736                           
 10737                           ;MainCode.c: 687:     RB2PPS = 0b110011;
 10738                           
 10739                           ;incstack = 0
 10740  003898  0E33               	movlw	51
 10741  00389A  013A               	movlb	58	; () banked
 10742  00389C  6F0A               	movwf	10,b	;volatile
 10743                           
 10744                           ; BSR set to: 58
 10745                           ;MainCode.c: 689:     TRISBbits.TRISB2 = 0;
 10746  00389E  94C3               	bcf	16323,2,c	;volatile
 10747                           
 10748                           ; BSR set to: 58
 10749                           ;MainCode.c: 690:     TRISBbits.TRISB3 = 1;
 10750  0038A0  86C3               	bsf	16323,3,c	;volatile
 10751                           
 10752                           ; BSR set to: 58
 10753                           ;MainCode.c: 692:     ANSELBbits.ANSELB2 = 0;
 10754  0038A2  9550               	bcf	80,2,b	;volatile
 10755                           
 10756                           ; BSR set to: 58
 10757                           ;MainCode.c: 693:     ANSELBbits.ANSELB3 = 0;
 10758  0038A4  9750               	bcf	80,3,b	;volatile
 10759                           
 10760                           ; BSR set to: 58
 10761                           ;MainCode.c: 695:     CANCONbits.REQOP2 = 1;
 10762  0038A6  8E8F               	bsf	16271,7,c	;volatile
 10763                           
 10764                           ; BSR set to: 58
 10765                           ;MainCode.c: 696:     CANCONbits.REQOP1 = 0;
 10766  0038A8  9C8F               	bcf	16271,6,c	;volatile
 10767                           
 10768                           ; BSR set to: 58
 10769                           ;MainCode.c: 697:     CANCONbits.REQOP0 = 0;
 10770  0038AA  9A8F               	bcf	16271,5,c	;volatile
 10771  0038AC                     l5077:
 10772  0038AC  388E               	swapf	16270,w,c	;volatile
 10773  0038AE  32E8               	rrcf	wreg,f,c
 10774  0038B0  0B07               	andlw	7
 10775  0038B2  0A04               	xorlw	4
 10776  0038B4  A4D8               	btfss	status,2,c
 10777  0038B6  D7FA               	goto	l5077
 10778                           
 10779                           ;MainCode.c: 701:     BRGCON1bits.BRP = 0b011111;
 10780  0038B8  0137               	movlb	55	; () banked
 10781  0038BA  5103               	movf	3,w,b	;volatile
 10782  0038BC  0BC0               	andlw	-64
 10783  0038BE  091F               	iorlw	31
 10784  0038C0  6F03               	movwf	3,b	;volatile
 10785                           
 10786                           ;MainCode.c: 703:     RXF0SIDH = 0;
 10787  0038C2  0E00               	movlw	0
 10788  0038C4  6FA0               	movwf	160,b	;volatile
 10789                           
 10790                           ;MainCode.c: 704:     RXF0SIDLbits.SID = 2;
 10791  0038C6  51A1               	movf	161,w,b	;volatile
 10792  0038C8  0B1F               	andlw	-225
 10793  0038CA  0940               	iorlw	64
 10794  0038CC  6FA1               	movwf	161,b	;volatile
 10795                           
 10796                           ; BSR set to: 55
 10797                           ;MainCode.c: 705:     RXF0SIDLbits.EXIDEN = 0;
 10798  0038CE  97A1               	bcf	161,3,b	;volatile
 10799                           
 10800                           ; BSR set to: 55
 10801                           ;MainCode.c: 706:     RXM0SIDH = 255;
 10802  0038D0  69B8               	setf	184,b	;volatile
 10803                           
 10804                           ;MainCode.c: 707:     RXM0SIDLbits.SID = 0b111;
 10805  0038D2  0EE0               	movlw	224
 10806  0038D4  13B9               	iorwf	185,f,b	;volatile
 10807                           
 10808                           ; BSR set to: 55
 10809                           ;MainCode.c: 708:     RXB0CONbits.RXM1 = 0;
 10810  0038D6  9C80               	bcf	16256,6,c	;volatile
 10811                           
 10812                           ; BSR set to: 55
 10813                           ;MainCode.c: 709:     RXB0CONbits.RXM0 = 1;
 10814  0038D8  8A80               	bsf	16256,5,c	;volatile
 10815                           
 10816                           ; BSR set to: 55
 10817                           ;MainCode.c: 710:     RXB0CONbits.FILHIT0 = 0;
 10818  0038DA  9080               	bcf	16256,0,c	;volatile
 10819                           
 10820                           ; BSR set to: 55
 10821                           ;MainCode.c: 712:     RXF1SIDH = 255;
 10822  0038DC  69A4               	setf	164,b	;volatile
 10823                           
 10824                           ;MainCode.c: 713:     RXF1SIDLbits.SID = 0b111;
 10825  0038DE  0EE0               	movlw	224
 10826  0038E0  13A5               	iorwf	165,f,b	;volatile
 10827                           
 10828                           ; BSR set to: 55
 10829                           ;MainCode.c: 714:     RXF1SIDLbits.EXIDEN = 0;
 10830  0038E2  97A5               	bcf	165,3,b	;volatile
 10831                           
 10832                           ; BSR set to: 55
 10833                           ;MainCode.c: 715:     RXM1SIDH = 255;
 10834  0038E4  69BC               	setf	188,b	;volatile
 10835                           
 10836                           ;MainCode.c: 716:     RXM1SIDLbits.SID = 0b111;
 10837  0038E6  0EE0               	movlw	224
 10838  0038E8  13BD               	iorwf	189,f,b	;volatile
 10839                           
 10840                           ; BSR set to: 55
 10841                           ;MainCode.c: 717:     RXB1CONbits.RXM1 = 0;
 10842  0038EA  9DF0               	bcf	240,6,b	;volatile
 10843                           
 10844                           ; BSR set to: 55
 10845                           ;MainCode.c: 718:     RXB1CONbits.RXM0 = 1;
 10846  0038EC  8BF0               	bsf	240,5,b	;volatile
 10847                           
 10848                           ; BSR set to: 55
 10849                           ;MainCode.c: 719:     RXB1CONbits.FILHIT0 = 0;
 10850  0038EE  91F0               	bcf	240,0,b	;volatile
 10851                           
 10852                           ;MainCode.c: 721:     CANCONbits.REQOP = 0b000;
 10853  0038F0  0E1F               	movlw	-225
 10854  0038F2  168F               	andwf	16271,f,c	;volatile
 10855  0038F4                     l5103:
 10856  0038F4  388E               	swapf	16270,w,c	;volatile
 10857  0038F6  32E8               	rrcf	wreg,f,c
 10858  0038F8  0B07               	andlw	7
 10859  0038FA  0900               	iorlw	0
 10860  0038FC  B4D8               	btfsc	status,2,c
 10861  0038FE  0012               	return	
 10862  003900  D7F9               	goto	l5103
 10863  003902                     __end_of_initCAN:
 10864                           	opt callstack 0
 10865                           
 10866 ;; *************** function _initBuzzer *****************
 10867 ;; Defined at:
 10868 ;;		line 762 in file "MainCode.c"
 10869 ;; Parameters:    Size  Location     Type
 10870 ;;		None
 10871 ;; Auto vars:     Size  Location     Type
 10872 ;;		None
 10873 ;; Return value:  Size  Location     Type
 10874 ;;                  1    wreg      void 
 10875 ;; Registers used:
 10876 ;;		wreg, status,2
 10877 ;; Tracked objects:
 10878 ;;		On entry : 0/0
 10879 ;;		On exit  : 0/0
 10880 ;;		Unchanged: 0/0
 10881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10882 ;;      Params:         0       0       0       0       0       0       0       0       0
 10883 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10884 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10885 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10886 ;;Total ram usage:        0 bytes
 10887 ;; Hardware stack levels used:    1
 10888 ;; Hardware stack levels required when called:    3
 10889 ;; This function calls:
 10890 ;;		Nothing
 10891 ;; This function is called by:
 10892 ;;		_main
 10893 ;; This function uses a non-reentrant model
 10894 ;;
 10895                           
 10896                           	psect	text35
 10897  003C92                     __ptext35:
 10898                           	opt callstack 0
 10899  003C92                     _initBuzzer:
 10900                           	opt callstack 27
 10901                           
 10902                           ;MainCode.c: 764:     ANSELBbits.ANSELB1 = 0;
 10903                           
 10904                           ;incstack = 0
 10905  003C92  013A               	movlb	58	; () banked
 10906  003C94  9350               	bcf	80,1,b	;volatile
 10907                           
 10908                           ;MainCode.c: 765:     TRISBbits.TRISB1 = 0;
 10909  003C96  92C3               	bcf	16323,1,c	;volatile
 10910                           
 10911                           ;MainCode.c: 766:     PORTBbits.RB1 = 1;
 10912  003C98  82CB               	bsf	16331,1,c	;volatile
 10913                           
 10914                           ;MainCode.c: 767:     T0CON0bits.EN = 1;
 10915  003C9A  8EB8               	bsf	16312,7,c	;volatile
 10916                           
 10917                           ;MainCode.c: 768:     T0CON0bits.MD16 = 0;
 10918  003C9C  98B8               	bcf	16312,4,c	;volatile
 10919                           
 10920                           ; BSR set to: 58
 10921                           ;MainCode.c: 769:     T0CON0bits.OUTPS = 0;
 10922  003C9E  0EF0               	movlw	-16
 10923  003CA0  16B8               	andwf	16312,f,c	;volatile
 10924                           
 10925                           ;MainCode.c: 770:     T0CON1bits.CS = 0b101;
 10926  003CA2  50B9               	movf	16313,w,c	;volatile
 10927  003CA4  0B1F               	andlw	-225
 10928  003CA6  09A0               	iorlw	160
 10929  003CA8  6EB9               	movwf	16313,c	;volatile
 10930                           
 10931                           ; BSR set to: 58
 10932                           ;MainCode.c: 771:     T0CON1bits.ASYNC = 1;
 10933  003CAA  88B9               	bsf	16313,4,c	;volatile
 10934                           
 10935                           ;MainCode.c: 772:     T0CON1bits.CKPS = 0b1001;
 10936  003CAC  50B9               	movf	16313,w,c	;volatile
 10937  003CAE  0BF0               	andlw	-16
 10938  003CB0  0909               	iorlw	9
 10939  003CB2  6EB9               	movwf	16313,c	;volatile
 10940                           
 10941                           ;MainCode.c: 773:     TMR0L = 0;
 10942  003CB4  0E00               	movlw	0
 10943  003CB6  6EB6               	movwf	16310,c	;volatile
 10944                           
 10945                           ;MainCode.c: 774:     TMR0H = 50;
 10946  003CB8  0E32               	movlw	50
 10947  003CBA  6EB7               	movwf	16311,c	;volatile
 10948                           
 10949                           ; BSR set to: 58
 10950                           ;MainCode.c: 775:     PIE3bits.TMR0IE = 1;
 10951  003CBC  0139               	movlb	57	; () banked
 10952  003CBE  8F93               	bsf	147,7,b	;volatile
 10953                           
 10954                           ; BSR set to: 57
 10955                           ;MainCode.c: 776:     PIR3bits.TMR0IF = 0;
 10956  003CC0  9FA3               	bcf	163,7,b	;volatile
 10957                           
 10958                           ; BSR set to: 57
 10959  003CC2  0012               	return		;funcret
 10960  003CC4                     __end_of_initBuzzer:
 10961                           	opt callstack 0
 10962                           
 10963 ;; *************** function _MenuYesNo *****************
 10964 ;; Defined at:
 10965 ;;		line 612 in file "MainCode.c"
 10966 ;; Parameters:    Size  Location     Type
 10967 ;;		None
 10968 ;; Auto vars:     Size  Location     Type
 10969 ;;  str            20    0        unsigned char [20]
 10970 ;;  value           2    0        unsigned int 
 10971 ;; Return value:  Size  Location     Type
 10972 ;;                  1    wreg      void 
 10973 ;; Registers used:
 10974 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10975 ;; Tracked objects:
 10976 ;;		On entry : 0/0
 10977 ;;		On exit  : 0/0
 10978 ;;		Unchanged: 0/0
 10979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10980 ;;      Params:         0       0       0       0       0       0       0       0       0
 10981 ;;      Locals:         2       0       0       0       0       0       0       0       0
 10982 ;;      Temps:          2       0       0       0       0       0       0       0       0
 10983 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10984 ;;Total ram usage:        4 bytes
 10985 ;; Hardware stack levels used:    1
 10986 ;; Hardware stack levels required when called:    6
 10987 ;; This function calls:
 10988 ;;		_Lcd_Set_Cursor
 10989 ;;		_Lcd_Write_String
 10990 ;; This function is called by:
 10991 ;;		_main
 10992 ;; This function uses a non-reentrant model
 10993 ;;
 10994                           
 10995                           	psect	text36
 10996  003474                     __ptext36:
 10997                           	opt callstack 0
 10998  003474                     _MenuYesNo:
 10999                           	opt callstack 24
 11000                           
 11001                           ; BSR set to: 57
 11002                           ;incstack = 0
 11003  003474  D03A               	goto	l5169
 11004  003476                     l5151:
 11005  003476  0E02               	movlw	2
 11006  003478  6E1F               	movwf	Lcd_Set_Cursor@b,c
 11007  00347A  0E03               	movlw	3
 11008  00347C  EC9C  F019         	call	_Lcd_Set_Cursor
 11009  003480  0ED7               	movlw	low STR_29
 11010  003482  6E22               	movwf	Lcd_Write_String@a,c
 11011  003484  0E7F               	movlw	high STR_29
 11012  003486  6E23               	movwf	Lcd_Write_String@a+1,c
 11013  003488  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
 11014  00348C  0E02               	movlw	2
 11015  00348E  6E1F               	movwf	Lcd_Set_Cursor@b,c
 11016  003490  0E04               	movlw	4
 11017  003492  EC9C  F019         	call	_Lcd_Set_Cursor
 11018  003496  0EDD               	movlw	low STR_30
 11019  003498  6E22               	movwf	Lcd_Write_String@a,c
 11020  00349A  0E7F               	movlw	high STR_30
 11021  00349C  6E23               	movwf	Lcd_Write_String@a+1,c
 11022  00349E  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
 11023  0034A2  0012               	return	
 11024  0034A4                     l5157:
 11025  0034A4  0E02               	movlw	2
 11026  0034A6  6E1F               	movwf	Lcd_Set_Cursor@b,c
 11027  0034A8  0E03               	movlw	3
 11028  0034AA  EC9C  F019         	call	_Lcd_Set_Cursor
 11029  0034AE  0EBF               	movlw	low STR_31
 11030  0034B0  6E22               	movwf	Lcd_Write_String@a,c
 11031  0034B2  0E7F               	movlw	high STR_31
 11032  0034B4  6E23               	movwf	Lcd_Write_String@a+1,c
 11033  0034B6  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
 11034  0034BA  0E02               	movlw	2
 11035  0034BC  6E1F               	movwf	Lcd_Set_Cursor@b,c
 11036  0034BE  0E04               	movlw	4
 11037  0034C0  EC9C  F019         	call	_Lcd_Set_Cursor
 11038  0034C4  0EE2               	movlw	low STR_32
 11039  0034C6  6E22               	movwf	Lcd_Write_String@a,c
 11040  0034C8  0E7F               	movlw	high STR_32
 11041  0034CA  6E23               	movwf	Lcd_Write_String@a+1,c
 11042  0034CC  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
 11043  0034D0  0012               	return	
 11044  0034D2                     l5163:
 11045  0034D2  0E01               	movlw	1
 11046  0034D4  6E1F               	movwf	Lcd_Set_Cursor@b,c
 11047  0034D6  0E03               	movlw	3
 11048  0034D8  EC9C  F019         	call	_Lcd_Set_Cursor
 11049  0034DC  0ED1               	movlw	low STR_33
 11050  0034DE  6E22               	movwf	Lcd_Write_String@a,c
 11051  0034E0  0E7F               	movlw	high STR_33
 11052  0034E2  6E23               	movwf	Lcd_Write_String@a+1,c
 11053  0034E4  EC9C  F01B         	call	_Lcd_Write_String	;wreg free
 11054  0034E8  0012               	return	
 11055  0034EA                     l5169:
 11056  0034EA  0060  F420  F028   	movff	_tick_count,??_MenuYesNo
 11057  0034F0  0060  F424  F029   	movff	_tick_count+1,??_MenuYesNo+1
 11058                           
 11059                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11060                           ; Switch size 1, requested type "simple"
 11061                           ; Number of cases is 1, Range of values is 0 to 0
 11062                           ; switch strategies available:
 11063                           ; Name         Instructions Cycles
 11064                           ; simple_byte            4     3 (average)
 11065                           ;	Chosen strategy is simple_byte
 11066  0034F6  5029               	movf	??_MenuYesNo+1,w,c
 11067  0034F8  0A00               	xorlw	0	; case 0
 11068  0034FA  A4D8               	btfss	status,2,c
 11069  0034FC  D7EA               	goto	l5163
 11070                           
 11071                           ; Switch size 1, requested type "simple"
 11072                           ; Number of cases is 2, Range of values is 0 to 1
 11073                           ; switch strategies available:
 11074                           ; Name         Instructions Cycles
 11075                           ; simple_byte            7     4 (average)
 11076                           ;	Chosen strategy is simple_byte
 11077  0034FE  5028               	movf	??_MenuYesNo,w,c
 11078  003500  0A00               	xorlw	0	; case 0
 11079  003502  B4D8               	btfsc	status,2,c
 11080  003504  D7B8               	goto	l5151
 11081  003506  0A01               	xorlw	1	; case 1
 11082  003508  B4D8               	btfsc	status,2,c
 11083  00350A  D7CC               	goto	l5157
 11084  00350C  D7E2               	goto	l5163
 11085  00350E                     __end_of_MenuYesNo:
 11086                           	opt callstack 0
 11087                           
 11088 ;; *************** function _Lcd_Write_String *****************
 11089 ;; Defined at:
 11090 ;;		line 596 in file "MainCode.c"
 11091 ;; Parameters:    Size  Location     Type
 11092 ;;  a               2   33[COMRAM] PTR unsigned char 
 11093 ;;		 -> STR_33(6), STR_32(5), STR_31(6), STR_30(5), 
 11094 ;;		 -> STR_29(6), STR_28(19), STR_27(20), STR_25(14), 
 11095 ;;		 -> STR_24(6), STR_23(15), charging_state_lut(140), main@str_1452(8), 
 11096 ;;		 -> STR_21(10), STR_20(15), STR_19(17), STR_18(19), 
 11097 ;;		 -> STR_16(20), master_state_lut(360), STR_14(14), STR_13(6), 
 11098 ;;		 -> STR_12(12), STR_11(15), STR_10(20), STR_9(11), 
 11099 ;;		 -> STR_8(16), STR_7(17), STR_6(6), STR_5(19), 
 11100 ;;		 -> STR_4(15), STR_3(16), STR_2(18), STR_1(21), 
 11101 ;; Auto vars:     Size  Location     Type
 11102 ;;  i               2   37[COMRAM] int 
 11103 ;; Return value:  Size  Location     Type
 11104 ;;                  1    wreg      void 
 11105 ;; Registers used:
 11106 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11107 ;; Tracked objects:
 11108 ;;		On entry : 0/0
 11109 ;;		On exit  : 0/0
 11110 ;;		Unchanged: 0/0
 11111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11112 ;;      Params:         2       0       0       0       0       0       0       0       0
 11113 ;;      Locals:         2       0       0       0       0       0       0       0       0
 11114 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11115 ;;      Totals:         6       0       0       0       0       0       0       0       0
 11116 ;;Total ram usage:        6 bytes
 11117 ;; Hardware stack levels used:    1
 11118 ;; Hardware stack levels required when called:    5
 11119 ;; This function calls:
 11120 ;;		_Lcd_Write_Char
 11121 ;; This function is called by:
 11122 ;;		_main
 11123 ;;		_MenuYesNo
 11124 ;; This function uses a non-reentrant model
 11125 ;;
 11126                           
 11127                           	psect	text37
 11128  003738                     __ptext37:
 11129                           	opt callstack 0
 11130  003738                     _Lcd_Write_String:
 11131                           	opt callstack 24
 11132                           
 11133                           ;incstack = 0
 11134  003738  0E00               	movlw	0
 11135  00373A  6E27               	movwf	Lcd_Write_String@i+1,c
 11136  00373C  0E00               	movlw	0
 11137  00373E  6E26               	movwf	Lcd_Write_String@i,c
 11138  003740  D01E               	goto	l5051
 11139  003742                     l5047:
 11140  003742  5026               	movf	Lcd_Write_String@i,w,c
 11141  003744  2422               	addwf	Lcd_Write_String@a,w,c
 11142  003746  6E24               	movwf	??_Lcd_Write_String& (0+255),c
 11143  003748  5027               	movf	Lcd_Write_String@i+1,w,c
 11144  00374A  2023               	addwfc	Lcd_Write_String@a+1,w,c
 11145  00374C  6E25               	movwf	(??_Lcd_Write_String+1)& (0+255),c
 11146  00374E  0060  F093  FFF6   	movff	??_Lcd_Write_String,tblptrl
 11147  003754  0060  F097  FFF7   	movff	??_Lcd_Write_String+1,tblptrh
 11148  00375A  6AF8               	clrf	tblptru,c
 11149  00375C  0E07               	movlw	(high __ramtop+-1)
 11150  00375E  64F7               	cpfsgt	tblptrh,c
 11151  003760  D003               	bra	u5847
 11152  003762  0008               	tblrd		*
 11153  003764  50F5               	movf	tablat,w,c
 11154  003766  D007               	bra	u5840
 11155  003768                     u5847:
 11156  003768  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11157  00376E  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11158  003774  50E7               	movf	indf1,w,c
 11159  003776                     u5840:
 11160  003776  ECC5  F01D         	call	_Lcd_Write_Char
 11161  00377A  4A26               	infsnz	Lcd_Write_String@i,f,c
 11162  00377C  2A27               	incf	Lcd_Write_String@i+1,f,c
 11163  00377E                     l5051:
 11164  00377E  5026               	movf	Lcd_Write_String@i,w,c
 11165  003780  2422               	addwf	Lcd_Write_String@a,w,c
 11166  003782  6E24               	movwf	??_Lcd_Write_String& (0+255),c
 11167  003784  5027               	movf	Lcd_Write_String@i+1,w,c
 11168  003786  2023               	addwfc	Lcd_Write_String@a+1,w,c
 11169  003788  6E25               	movwf	(??_Lcd_Write_String+1)& (0+255),c
 11170  00378A  0060  F093  FFF6   	movff	??_Lcd_Write_String,tblptrl
 11171  003790  0060  F097  FFF7   	movff	??_Lcd_Write_String+1,tblptrh
 11172  003796  6AF8               	clrf	tblptru,c
 11173  003798  0E07               	movlw	(high __ramtop+-1)
 11174  00379A  64F7               	cpfsgt	tblptrh,c
 11175  00379C  D003               	bra	u5857
 11176  00379E  0008               	tblrd		*
 11177  0037A0  50F5               	movf	tablat,w,c
 11178  0037A2  D007               	bra	u5850
 11179  0037A4                     u5857:
 11180  0037A4  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11181  0037AA  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11182  0037B0  50E7               	movf	indf1,w,c
 11183  0037B2                     u5850:
 11184  0037B2  0900               	iorlw	0
 11185  0037B4  B4D8               	btfsc	status,2,c
 11186  0037B6  0012               	return	
 11187  0037B8  D7C4               	goto	l5047
 11188  0037BA                     __end_of_Lcd_Write_String:
 11189                           	opt callstack 0
 11190                           
 11191 ;; *************** function _Lcd_Write_Char *****************
 11192 ;; Defined at:
 11193 ;;		line 581 in file "MainCode.c"
 11194 ;; Parameters:    Size  Location     Type
 11195 ;;  a               1    wreg     unsigned char 
 11196 ;; Auto vars:     Size  Location     Type
 11197 ;;  a               1   30[COMRAM] unsigned char 
 11198 ;;  y               1   29[COMRAM] unsigned char 
 11199 ;;  temp            1   28[COMRAM] unsigned char 
 11200 ;; Return value:  Size  Location     Type
 11201 ;;                  1    wreg      void 
 11202 ;; Registers used:
 11203 ;;		wreg, status,2, status,0, cstack
 11204 ;; Tracked objects:
 11205 ;;		On entry : 0/0
 11206 ;;		On exit  : 0/0
 11207 ;;		Unchanged: 0/0
 11208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11209 ;;      Params:         0       0       0       0       0       0       0       0       0
 11210 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11211 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11212 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11213 ;;Total ram usage:        3 bytes
 11214 ;; Hardware stack levels used:    1
 11215 ;; Hardware stack levels required when called:    4
 11216 ;; This function calls:
 11217 ;;		_Lcd_Port
 11218 ;; This function is called by:
 11219 ;;		_Lcd_Write_String
 11220 ;; This function uses a non-reentrant model
 11221 ;;
 11222                           
 11223                           	psect	text38
 11224  003B8A                     __ptext38:
 11225                           	opt callstack 0
 11226  003B8A                     _Lcd_Write_Char:
 11227                           	opt callstack 24
 11228                           
 11229                           ;incstack = 0
 11230                           ;Lcd_Write_Char@a stored from wreg
 11231  003B8A  6E1F               	movwf	Lcd_Write_Char@a,c
 11232  003B8C  501F               	movf	Lcd_Write_Char@a,w,c
 11233  003B8E  0B0F               	andlw	15
 11234  003B90  6E1D               	movwf	Lcd_Write_Char@temp,c
 11235  003B92  501F               	movf	Lcd_Write_Char@a,w,c
 11236  003B94  0BF0               	andlw	240
 11237  003B96  6E1E               	movwf	Lcd_Write_Char@y,c
 11238  003B98  80CC               	bsf	16332,0,c	;volatile
 11239  003B9A  381E               	swapf	Lcd_Write_Char@y,w,c
 11240  003B9C  0B0F               	andlw	15
 11241  003B9E  EC79  F01E         	call	_Lcd_Port
 11242  003BA2  82CC               	bsf	16332,1,c	;volatile
 11243  003BA4  0ED5               	movlw	213
 11244  003BA6                     u9207:
 11245  003BA6  2EE8               	decfsz	wreg,f,c
 11246  003BA8  D7FE               	bra	u9207
 11247  003BAA  F000               	nop	
 11248  003BAC  92CC               	bcf	16332,1,c	;volatile
 11249  003BAE  501D               	movf	Lcd_Write_Char@temp,w,c
 11250  003BB0  EC79  F01E         	call	_Lcd_Port
 11251  003BB4  82CC               	bsf	16332,1,c	;volatile
 11252  003BB6  0ED5               	movlw	213
 11253  003BB8                     u9217:
 11254  003BB8  2EE8               	decfsz	wreg,f,c
 11255  003BBA  D7FE               	bra	u9217
 11256  003BBC  F000               	nop	
 11257  003BBE  92CC               	bcf	16332,1,c	;volatile
 11258  003BC0  0012               	return		;funcret
 11259  003BC2                     __end_of_Lcd_Write_Char:
 11260                           	opt callstack 0
 11261                           
 11262 ;; *************** function _Lcd_Set_Cursor *****************
 11263 ;; Defined at:
 11264 ;;		line 528 in file "MainCode.c"
 11265 ;; Parameters:    Size  Location     Type
 11266 ;;  a               1    wreg     unsigned char 
 11267 ;;  b               1   30[COMRAM] unsigned char 
 11268 ;; Auto vars:     Size  Location     Type
 11269 ;;  a               1   31[COMRAM] unsigned char 
 11270 ;;  temp            1   34[COMRAM] unsigned char 
 11271 ;;  y               1   33[COMRAM] unsigned char 
 11272 ;;  z               1   32[COMRAM] unsigned char 
 11273 ;; Return value:  Size  Location     Type
 11274 ;;                  1    wreg      void 
 11275 ;; Registers used:
 11276 ;;		wreg, status,2, status,0, cstack
 11277 ;; Tracked objects:
 11278 ;;		On entry : 0/0
 11279 ;;		On exit  : 0/0
 11280 ;;		Unchanged: 0/0
 11281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11282 ;;      Params:         1       0       0       0       0       0       0       0       0
 11283 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11284 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11285 ;;      Totals:         5       0       0       0       0       0       0       0       0
 11286 ;;Total ram usage:        5 bytes
 11287 ;; Hardware stack levels used:    1
 11288 ;; Hardware stack levels required when called:    5
 11289 ;; This function calls:
 11290 ;;		_Lcd_Cmd
 11291 ;; This function is called by:
 11292 ;;		_main
 11293 ;;		_MenuYesNo
 11294 ;; This function uses a non-reentrant model
 11295 ;;
 11296                           
 11297                           	psect	text39
 11298  003338                     __ptext39:
 11299                           	opt callstack 0
 11300  003338                     _Lcd_Set_Cursor:
 11301                           	opt callstack 24
 11302                           
 11303                           ;incstack = 0
 11304                           ;Lcd_Set_Cursor@a stored from wreg
 11305  003338  6E20               	movwf	Lcd_Set_Cursor@a,c
 11306                           
 11307                           ;MainCode.c: 529:     PORTCbits.RC1 = 1;;MainCode.c: 530:     _delay((unsigned long)((40
      +                          )*(64000000/4000000.0)));
 11308  00333A  0420               	decf	Lcd_Set_Cursor@a,w,c
 11309  00333C  A4D8               	btfss	status,2,c
 11310  00333E  D010               	goto	l5021
 11311                           
 11312                           ;MainCode.c: 531:     PORTCbits.RC1 = 0;
 11313  003340  501F               	movf	Lcd_Set_Cursor@b,w,c
 11314  003342  0F7F               	addlw	127
 11315  003344  6E23               	movwf	Lcd_Set_Cursor@temp,c
 11316                           
 11317                           ;MainCode.c: 532:     Lcd_Port(temp);
 11318  003346  3823               	swapf	Lcd_Set_Cursor@temp,w,c
 11319  003348  0B0F               	andlw	15
 11320  00334A  6E21               	movwf	Lcd_Set_Cursor@z,c
 11321                           
 11322                           ;MainCode.c: 533:     PORTCbits.RC1 = 1;
 11323  00334C  5023               	movf	Lcd_Set_Cursor@temp,w,c
 11324  00334E  0B0F               	andlw	15
 11325  003350  6E22               	movwf	Lcd_Set_Cursor@y,c
 11326                           
 11327                           ;MainCode.c: 534:     _delay((unsigned long)((40)*(64000000/4000000.0)));
 11328  003352  5021               	movf	Lcd_Set_Cursor@z,w,c
 11329  003354  EC8F  F01E         	call	_Lcd_Cmd
 11330                           
 11331                           ;MainCode.c: 535:     PORTCbits.RC1 = 0;
 11332  003358  5022               	movf	Lcd_Set_Cursor@y,w,c
 11333  00335A  EC8F  F01E         	call	_Lcd_Cmd
 11334                           
 11335                           ;MainCode.c: 536: }
 11336  00335E  0012               	return	
 11337  003360                     l5021:
 11338  003360  0E02               	movlw	2
 11339  003362  1820               	xorwf	Lcd_Set_Cursor@a,w,c
 11340  003364  A4D8               	btfss	status,2,c
 11341  003366  D010               	goto	l5029
 11342                           
 11343                           ;MainCode.c: 537: 
 11344  003368  501F               	movf	Lcd_Set_Cursor@b,w,c
 11345  00336A  0FBF               	addlw	191
 11346  00336C  6E23               	movwf	Lcd_Set_Cursor@temp,c
 11347                           
 11348                           ;MainCode.c: 538: void Lcd_Write_String(char *a) {
 11349  00336E  3823               	swapf	Lcd_Set_Cursor@temp,w,c
 11350  003370  0B0F               	andlw	15
 11351  003372  6E21               	movwf	Lcd_Set_Cursor@z,c
 11352                           
 11353                           ;MainCode.c: 539:     int i;
 11354  003374  5023               	movf	Lcd_Set_Cursor@temp,w,c
 11355  003376  0B0F               	andlw	15
 11356  003378  6E22               	movwf	Lcd_Set_Cursor@y,c
 11357                           
 11358                           ;MainCode.c: 540:     for (i = 0; a[i] != '\0'; i++)
 11359  00337A  5021               	movf	Lcd_Set_Cursor@z,w,c
 11360  00337C  EC8F  F01E         	call	_Lcd_Cmd
 11361                           
 11362                           ;MainCode.c: 541:         Lcd_Write_Char(a[i]);
 11363  003380  5022               	movf	Lcd_Set_Cursor@y,w,c
 11364  003382  EC8F  F01E         	call	_Lcd_Cmd
 11365                           
 11366                           ;MainCode.c: 542: }
 11367  003386  0012               	return	
 11368  003388                     l5029:
 11369  003388  0E03               	movlw	3
 11370  00338A  1820               	xorwf	Lcd_Set_Cursor@a,w,c
 11371  00338C  A4D8               	btfss	status,2,c
 11372  00338E  D010               	goto	l5037
 11373                           
 11374                           ;MainCode.c: 543: 
 11375  003390  501F               	movf	Lcd_Set_Cursor@b,w,c
 11376  003392  0F93               	addlw	147
 11377  003394  6E23               	movwf	Lcd_Set_Cursor@temp,c
 11378                           
 11379                           ;MainCode.c: 544: void Lcd_Shift_Right() {
 11380  003396  3823               	swapf	Lcd_Set_Cursor@temp,w,c
 11381  003398  0B0F               	andlw	15
 11382  00339A  6E21               	movwf	Lcd_Set_Cursor@z,c
 11383                           
 11384                           ;MainCode.c: 545:     Lcd_Cmd(0x01);
 11385  00339C  5023               	movf	Lcd_Set_Cursor@temp,w,c
 11386  00339E  0B0F               	andlw	15
 11387  0033A0  6E22               	movwf	Lcd_Set_Cursor@y,c
 11388                           
 11389                           ;MainCode.c: 546:     Lcd_Cmd(0x0C);
 11390  0033A2  5021               	movf	Lcd_Set_Cursor@z,w,c
 11391  0033A4  EC8F  F01E         	call	_Lcd_Cmd
 11392                           
 11393                           ;MainCode.c: 547: }
 11394  0033A8  5022               	movf	Lcd_Set_Cursor@y,w,c
 11395  0033AA  EC8F  F01E         	call	_Lcd_Cmd
 11396                           
 11397                           ;MainCode.c: 548: 
 11398  0033AE  0012               	return	
 11399  0033B0                     l5037:
 11400  0033B0  0E04               	movlw	4
 11401  0033B2  1820               	xorwf	Lcd_Set_Cursor@a,w,c
 11402  0033B4  A4D8               	btfss	status,2,c
 11403  0033B6  0012               	return	
 11404                           
 11405                           ;MainCode.c: 549: void Lcd_Shift_Left() {
 11406  0033B8  501F               	movf	Lcd_Set_Cursor@b,w,c
 11407  0033BA  0FD3               	addlw	211
 11408  0033BC  6E23               	movwf	Lcd_Set_Cursor@temp,c
 11409                           
 11410                           ;MainCode.c: 550:     Lcd_Cmd(0x01);
 11411  0033BE  3823               	swapf	Lcd_Set_Cursor@temp,w,c
 11412  0033C0  0B0F               	andlw	15
 11413  0033C2  6E21               	movwf	Lcd_Set_Cursor@z,c
 11414                           
 11415                           ;MainCode.c: 551:     Lcd_Cmd(0x08);
 11416  0033C4  5023               	movf	Lcd_Set_Cursor@temp,w,c
 11417  0033C6  0B0F               	andlw	15
 11418  0033C8  6E22               	movwf	Lcd_Set_Cursor@y,c
 11419                           
 11420                           ;MainCode.c: 552: }
 11421  0033CA  5021               	movf	Lcd_Set_Cursor@z,w,c
 11422  0033CC  EC8F  F01E         	call	_Lcd_Cmd
 11423                           
 11424                           ;MainCode.c: 553: 
 11425  0033D0  5022               	movf	Lcd_Set_Cursor@y,w,c
 11426  0033D2  EC8F  F01E         	call	_Lcd_Cmd
 11427  0033D6  0012               	return	
 11428  0033D8                     __end_of_Lcd_Set_Cursor:
 11429                           	opt callstack 0
 11430                           
 11431 ;; *************** function _Lcd_Init *****************
 11432 ;; Defined at:
 11433 ;;		line 557 in file "MainCode.c"
 11434 ;; Parameters:    Size  Location     Type
 11435 ;;		None
 11436 ;; Auto vars:     Size  Location     Type
 11437 ;;		None
 11438 ;; Return value:  Size  Location     Type
 11439 ;;                  1    wreg      void 
 11440 ;; Registers used:
 11441 ;;		wreg, status,2, cstack
 11442 ;; Tracked objects:
 11443 ;;		On entry : 0/0
 11444 ;;		On exit  : 0/0
 11445 ;;		Unchanged: 0/0
 11446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11447 ;;      Params:         0       0       0       0       0       0       0       0       0
 11448 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11449 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11450 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11451 ;;Total ram usage:        2 bytes
 11452 ;; Hardware stack levels used:    1
 11453 ;; Hardware stack levels required when called:    5
 11454 ;; This function calls:
 11455 ;;		_Lcd_Cmd
 11456 ;;		_Lcd_Port
 11457 ;; This function is called by:
 11458 ;;		_main
 11459 ;; This function uses a non-reentrant model
 11460 ;;
 11461                           
 11462                           	psect	text40
 11463  00359A                     __ptext40:
 11464                           	opt callstack 0
 11465  00359A                     _Lcd_Init:
 11466                           	opt callstack 25
 11467                           
 11468                           ;MainCode.c: 558:     switch (tick_count) {
 11469                           
 11470                           ;incstack = 0
 11471  00359A  0E00               	movlw	0
 11472  00359C  6EC4               	movwf	16324,c	;volatile
 11473                           
 11474                           ;MainCode.c: 559:         case 0:
 11475  00359E  90C3               	bcf	16323,0,c	;volatile
 11476                           
 11477                           ;MainCode.c: 560:             Lcd_Set_Cursor(3, 2);
 11478  0035A0  013A               	movlb	58	; () banked
 11479  0035A2  9150               	bcf	80,0,b	;volatile
 11480                           
 11481                           ; BSR set to: 58
 11482                           ;MainCode.c: 561:             Lcd_Write_String("|Yes|");
 11483  0035A4  80CB               	bsf	16331,0,c	;volatile
 11484                           
 11485                           ;MainCode.c: 562:             Lcd_Set_Cursor(4, 2);
 11486  0035A6  0E00               	movlw	0
 11487  0035A8  6F60               	movwf	96,b	;volatile
 11488                           
 11489                           ; BSR set to: 58
 11490                           ;MainCode.c: 563:             Lcd_Write_String(" No ");
 11491  0035AA  0E00               	movlw	0
 11492  0035AC  EC79  F01E         	call	_Lcd_Port
 11493                           
 11494                           ;MainCode.c: 565:         case 1:
 11495  0035B0  0E02               	movlw	2
 11496  0035B2  6E20               	movwf	(??_Lcd_Init+1)& (0+255),c
 11497  0035B4  0EA0               	movlw	160
 11498  0035B6  6E1F               	movwf	??_Lcd_Init& (0+255),c
 11499  0035B8  0E92               	movlw	146
 11500  0035BA                     u9227:
 11501  0035BA  2EE8               	decfsz	wreg,f,c
 11502  0035BC  D7FE               	bra	u9227
 11503  0035BE  2E1F               	decfsz	??_Lcd_Init& (0+255),f,c
 11504  0035C0  D7FC               	bra	u9227
 11505  0035C2  2E20               	decfsz	(??_Lcd_Init+1)& (0+255),f,c
 11506  0035C4  D7FA               	bra	u9227
 11507  0035C6  D000               	nop2	
 11508                           
 11509                           ;MainCode.c: 566:             Lcd_Set_Cursor(3, 2);
 11510  0035C8  0E03               	movlw	3
 11511  0035CA  EC8F  F01E         	call	_Lcd_Cmd
 11512                           
 11513                           ;MainCode.c: 567:             Lcd_Write_String(" Yes ");
 11514  0035CE  0E68               	movlw	104
 11515  0035D0  6E1F               	movwf	??_Lcd_Init& (0+255),c
 11516  0035D2  0EE4               	movlw	228
 11517  0035D4                     u9237:
 11518  0035D4  2EE8               	decfsz	wreg,f,c
 11519  0035D6  D7FE               	bra	u9237
 11520  0035D8  2E1F               	decfsz	??_Lcd_Init& (0+255),f,c
 11521  0035DA  D7FC               	bra	u9237
 11522  0035DC  D000               	nop2	
 11523                           
 11524                           ;MainCode.c: 568:             Lcd_Set_Cursor(4, 2);
 11525  0035DE  0E03               	movlw	3
 11526  0035E0  EC8F  F01E         	call	_Lcd_Cmd
 11527                           
 11528                           ;MainCode.c: 569:             Lcd_Write_String("|No|");
 11529  0035E4  0EE5               	movlw	229
 11530  0035E6  6E1F               	movwf	??_Lcd_Init& (0+255),c
 11531  0035E8  0E91               	movlw	145
 11532  0035EA                     u9247:
 11533  0035EA  2EE8               	decfsz	wreg,f,c
 11534  0035EC  D7FE               	bra	u9247
 11535  0035EE  2E1F               	decfsz	??_Lcd_Init& (0+255),f,c
 11536  0035F0  D7FC               	bra	u9247
 11537  0035F2  F000               	nop	
 11538                           
 11539                           ;MainCode.c: 570:             break;
 11540  0035F4  0E03               	movlw	3
 11541  0035F6  EC8F  F01E         	call	_Lcd_Cmd
 11542                           
 11543                           ;MainCode.c: 571:         default:
 11544  0035FA  0E02               	movlw	2
 11545  0035FC  EC8F  F01E         	call	_Lcd_Cmd
 11546                           
 11547                           ;MainCode.c: 572:             Lcd_Set_Cursor(3, 1);
 11548  003600  0E02               	movlw	2
 11549  003602  EC8F  F01E         	call	_Lcd_Cmd
 11550                           
 11551                           ;MainCode.c: 573:             Lcd_Write_String("Error");
 11552  003606  0E08               	movlw	8
 11553  003608  EC8F  F01E         	call	_Lcd_Cmd
 11554                           
 11555                           ;MainCode.c: 574:             break;
 11556  00360C  0E00               	movlw	0
 11557  00360E  EC8F  F01E         	call	_Lcd_Cmd
 11558                           
 11559                           ;MainCode.c: 575:     }
 11560  003612  0E0C               	movlw	12
 11561  003614  EC8F  F01E         	call	_Lcd_Cmd
 11562                           
 11563                           ;MainCode.c: 576: }
 11564  003618  0E00               	movlw	0
 11565  00361A  EC8F  F01E         	call	_Lcd_Cmd
 11566  00361E  0E06               	movlw	6
 11567  003620  EC8F  F01E         	call	_Lcd_Cmd
 11568  003624  0012               	return		;funcret
 11569  003626                     __end_of_Lcd_Init:
 11570                           	opt callstack 0
 11571                           
 11572 ;; *************** function _Lcd_Clear *****************
 11573 ;; Defined at:
 11574 ;;		line 523 in file "MainCode.c"
 11575 ;; Parameters:    Size  Location     Type
 11576 ;;		None
 11577 ;; Auto vars:     Size  Location     Type
 11578 ;;		None
 11579 ;; Return value:  Size  Location     Type
 11580 ;;                  1    wreg      void 
 11581 ;; Registers used:
 11582 ;;		wreg, status,2, cstack
 11583 ;; Tracked objects:
 11584 ;;		On entry : 0/0
 11585 ;;		On exit  : 0/0
 11586 ;;		Unchanged: 0/0
 11587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11588 ;;      Params:         0       0       0       0       0       0       0       0       0
 11589 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11590 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11591 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11592 ;;Total ram usage:        0 bytes
 11593 ;; Hardware stack levels used:    1
 11594 ;; Hardware stack levels required when called:    5
 11595 ;; This function calls:
 11596 ;;		_Lcd_Cmd
 11597 ;; This function is called by:
 11598 ;;		_main
 11599 ;; This function uses a non-reentrant model
 11600 ;;
 11601                           
 11602                           	psect	text41
 11603  003D3E                     __ptext41:
 11604                           	opt callstack 0
 11605  003D3E                     _Lcd_Clear:
 11606                           	opt callstack 25
 11607                           
 11608                           ;MainCode.c: 524:     char temp, y;
 11609                           
 11610                           ;incstack = 0
 11611  003D3E  0E00               	movlw	0
 11612  003D40  EC8F  F01E         	call	_Lcd_Cmd
 11613                           
 11614                           ;MainCode.c: 525:     temp = a & 0x0F;
 11615  003D44  0E01               	movlw	1
 11616  003D46  EC8F  F01E         	call	_Lcd_Cmd
 11617  003D4A  0012               	return		;funcret
 11618  003D4C                     __end_of_Lcd_Clear:
 11619                           	opt callstack 0
 11620                           
 11621 ;; *************** function _Lcd_Cmd *****************
 11622 ;; Defined at:
 11623 ;;		line 515 in file "MainCode.c"
 11624 ;; Parameters:    Size  Location     Type
 11625 ;;  a               1    wreg     unsigned char 
 11626 ;; Auto vars:     Size  Location     Type
 11627 ;;  a               1   29[COMRAM] unsigned char 
 11628 ;; Return value:  Size  Location     Type
 11629 ;;                  1    wreg      void 
 11630 ;; Registers used:
 11631 ;;		wreg, status,2, cstack
 11632 ;; Tracked objects:
 11633 ;;		On entry : 0/0
 11634 ;;		On exit  : 0/0
 11635 ;;		Unchanged: 0/0
 11636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11637 ;;      Params:         0       0       0       0       0       0       0       0       0
 11638 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11639 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11640 ;;      Totals:         2       0       0       0       0       0       0       0       0
 11641 ;;Total ram usage:        2 bytes
 11642 ;; Hardware stack levels used:    1
 11643 ;; Hardware stack levels required when called:    4
 11644 ;; This function calls:
 11645 ;;		_Lcd_Port
 11646 ;; This function is called by:
 11647 ;;		_Lcd_Clear
 11648 ;;		_Lcd_Set_Cursor
 11649 ;;		_Lcd_Init
 11650 ;;		_Lcd_Shift_Right
 11651 ;;		_Lcd_Shift_Left
 11652 ;; This function uses a non-reentrant model
 11653 ;;
 11654                           
 11655                           	psect	text42
 11656  003D1E                     __ptext42:
 11657                           	opt callstack 0
 11658  003D1E                     _Lcd_Cmd:
 11659                           	opt callstack 24
 11660                           
 11661                           ;incstack = 0
 11662                           ;Lcd_Cmd@a stored from wreg
 11663  003D1E  6E1E               	movwf	Lcd_Cmd@a,c
 11664                           
 11665                           ;MainCode.c: 516:     Lcd_Cmd(0x00);
 11666  003D20  90CC               	bcf	16332,0,c	;volatile
 11667                           
 11668                           ;MainCode.c: 517:     Lcd_Cmd(0x0C);
 11669  003D22  501E               	movf	Lcd_Cmd@a,w,c
 11670  003D24  EC79  F01E         	call	_Lcd_Port
 11671                           
 11672                           ;MainCode.c: 518:     Lcd_Cmd(0x00);
 11673  003D28  82CC               	bsf	16332,1,c	;volatile
 11674                           
 11675                           ;MainCode.c: 519:     Lcd_Cmd(0x06);
 11676  003D2A  0E54               	movlw	84
 11677  003D2C  6E1D               	movwf	??_Lcd_Cmd& (0+255),c
 11678  003D2E  0E1C               	movlw	28
 11679  003D30                     u9257:
 11680  003D30  2EE8               	decfsz	wreg,f,c
 11681  003D32  D7FE               	bra	u9257
 11682  003D34  2E1D               	decfsz	??_Lcd_Cmd& (0+255),f,c
 11683  003D36  D7FC               	bra	u9257
 11684  003D38  D000               	nop2	
 11685                           
 11686                           ;MainCode.c: 520: 
 11687  003D3A  92CC               	bcf	16332,1,c	;volatile
 11688  003D3C  0012               	return		;funcret
 11689  003D3E                     __end_of_Lcd_Cmd:
 11690                           	opt callstack 0
 11691                           
 11692 ;; *************** function _Lcd_Port *****************
 11693 ;; Defined at:
 11694 ;;		line 493 in file "MainCode.c"
 11695 ;; Parameters:    Size  Location     Type
 11696 ;;  a               1    wreg     unsigned char 
 11697 ;; Auto vars:     Size  Location     Type
 11698 ;;  a               1   27[COMRAM] unsigned char 
 11699 ;; Return value:  Size  Location     Type
 11700 ;;                  1    wreg      void 
 11701 ;; Registers used:
 11702 ;;		wreg
 11703 ;; Tracked objects:
 11704 ;;		On entry : 0/0
 11705 ;;		On exit  : 0/0
 11706 ;;		Unchanged: 0/0
 11707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11708 ;;      Params:         0       0       0       0       0       0       0       0       0
 11709 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11710 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11711 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11712 ;;Total ram usage:        1 bytes
 11713 ;; Hardware stack levels used:    1
 11714 ;; Hardware stack levels required when called:    3
 11715 ;; This function calls:
 11716 ;;		Nothing
 11717 ;; This function is called by:
 11718 ;;		_Lcd_Cmd
 11719 ;;		_Lcd_Init
 11720 ;;		_Lcd_Write_Char
 11721 ;; This function uses a non-reentrant model
 11722 ;;
 11723                           
 11724                           	psect	text43
 11725  003CF2                     __ptext43:
 11726                           	opt callstack 0
 11727  003CF2                     _Lcd_Port:
 11728                           	opt callstack 24
 11729                           
 11730                           ;incstack = 0
 11731                           ;Lcd_Port@a stored from wreg
 11732  003CF2  6E1C               	movwf	Lcd_Port@a,c
 11733                           
 11734                           ;MainCode.c: 494:         Lcd_Cmd(z);
 11735  003CF4  A01C               	btfss	Lcd_Port@a,0,c
 11736  003CF6  D002               	goto	l290
 11737                           
 11738                           ;MainCode.c: 495:         Lcd_Cmd(y);
 11739  003CF8  84CC               	bsf	16332,2,c	;volatile
 11740  003CFA  D001               	goto	l4431
 11741  003CFC                     l290:
 11742                           
 11743                           ;MainCode.c: 497: }
 11744  003CFC  94CC               	bcf	16332,2,c	;volatile
 11745  003CFE                     l4431:
 11746                           
 11747                           ;MainCode.c: 499: void Lcd_Init(void) {
 11748  003CFE  A21C               	btfss	Lcd_Port@a,1,c
 11749  003D00  D002               	goto	l292
 11750                           
 11751                           ;MainCode.c: 500:     TRISC = 0x00;
 11752  003D02  8ACC               	bsf	16332,5,c	;volatile
 11753  003D04  D001               	goto	l4435
 11754  003D06                     l292:
 11755                           
 11756                           ;MainCode.c: 502:     ANSELBbits.ANSELB0 = 0;
 11757  003D06  9ACC               	bcf	16332,5,c	;volatile
 11758  003D08                     l4435:
 11759                           
 11760                           ;MainCode.c: 504:     ANSELC = 0x00;
 11761  003D08  A41C               	btfss	Lcd_Port@a,2,c
 11762  003D0A  D002               	goto	l294
 11763                           
 11764                           ;MainCode.c: 505:     Lcd_Port(0x00);
 11765  003D0C  8CCC               	bsf	16332,6,c	;volatile
 11766  003D0E  D001               	goto	l4439
 11767  003D10                     l294:
 11768                           
 11769                           ;MainCode.c: 507:     _delay((unsigned long)((20)*(64000000/4000.0)));
 11770  003D10  9CCC               	bcf	16332,6,c	;volatile
 11771  003D12                     l4439:
 11772                           
 11773                           ;MainCode.c: 509:     _delay((unsigned long)((5)*(64000000/4000.0)));
 11774  003D12  A61C               	btfss	Lcd_Port@a,3,c
 11775  003D14  D002               	goto	l296
 11776                           
 11777                           ;MainCode.c: 510:     Lcd_Cmd(0x03);
 11778  003D16  8ECC               	bsf	16332,7,c	;volatile
 11779  003D18  0012               	return	
 11780  003D1A                     l296:
 11781                           
 11782                           ;MainCode.c: 512:     Lcd_Cmd(0x03);
 11783  003D1A  9ECC               	bcf	16332,7,c	;volatile
 11784  003D1C  0012               	return		;funcret
 11785  003D1E                     __end_of_Lcd_Port:
 11786                           	opt callstack 0
 11787                           
 11788 ;; *************** function _buzzerInt *****************
 11789 ;; Defined at:
 11790 ;;		line 434 in file "MainCode.c"
 11791 ;; Parameters:    Size  Location     Type
 11792 ;;		None
 11793 ;; Auto vars:     Size  Location     Type
 11794 ;;		None
 11795 ;; Return value:  Size  Location     Type
 11796 ;;                  1    wreg      void 
 11797 ;; Registers used:
 11798 ;;		None
 11799 ;; Tracked objects:
 11800 ;;		On entry : 0/0
 11801 ;;		On exit  : 0/0
 11802 ;;		Unchanged: 0/0
 11803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11804 ;;      Params:         0       0       0       0       0       0       0       0       0
 11805 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11806 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11807 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11808 ;;Total ram usage:        0 bytes
 11809 ;; Hardware stack levels used:    1
 11810 ;; Hardware stack levels required when called:    2
 11811 ;; This function calls:
 11812 ;;		Nothing
 11813 ;; This function is called by:
 11814 ;;		Interrupt level 1
 11815 ;; This function uses a non-reentrant model
 11816 ;;
 11817                           
 11818                           	psect	text44
 11819  003D5C                     __ptext44:
 11820                           	opt callstack 0
 11821  003D5C                     _buzzerInt:
 11822                           	opt callstack 20
 11823                           
 11824                           ;MainCode.c: 435: void Lcd_Port(char a) {
 11825                           
 11826                           ;incstack = 0
 11827  003D5C  92CB               	bcf	16331,1,c	;volatile
 11828                           
 11829                           ;MainCode.c: 436:     if (a & 1)
 11830  003D5E  9EB8               	bcf	16312,7,c	;volatile
 11831                           
 11832                           ;MainCode.c: 437:         PORTCbits.RC2 = 1;
 11833  003D60  0139               	movlb	57	; () banked
 11834  003D62  9FA3               	bcf	163,7,b	;volatile
 11835                           
 11836                           ; BSR set to: 57
 11837  003D64  0011               	retfie		f
 11838  003D66                     __end_of_buzzerInt:
 11839                           	opt callstack 0
 11840                           
 11841 ;; *************** function _encInt *****************
 11842 ;; Defined at:
 11843 ;;		line 440 in file "MainCode.c"
 11844 ;; Parameters:    Size  Location     Type
 11845 ;;		None
 11846 ;; Auto vars:     Size  Location     Type
 11847 ;;		None
 11848 ;; Return value:  Size  Location     Type
 11849 ;;                  1    wreg      void 
 11850 ;; Registers used:
 11851 ;;		wreg, status,2, status,0, cstack
 11852 ;; Tracked objects:
 11853 ;;		On entry : 0/0
 11854 ;;		On exit  : 0/0
 11855 ;;		Unchanged: 0/0
 11856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11857 ;;      Params:         0       0       0       0       0       0       0       0       0
 11858 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11859 ;;      Temps:          1       0       0       0       0       0       0       0       0
 11860 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11861 ;;Total ram usage:        1 bytes
 11862 ;; Hardware stack levels used:    1
 11863 ;; Hardware stack levels required when called:    1
 11864 ;; This function calls:
 11865 ;;		_playBuzzer
 11866 ;; This function is called by:
 11867 ;;		Interrupt level 2
 11868 ;; This function uses a non-reentrant model
 11869 ;;
 11870                           
 11871                           	psect	text45
 11872  003A80                     __ptext45:
 11873                           	opt callstack 0
 11874  003A80                     _encInt:
 11875                           	opt callstack 20
 11876                           
 11877                           ;MainCode.c: 441:     if (a & 2)
 11878                           
 11879                           ; BSR set to: 57
 11880                           ;incstack = 0
 11881  003A80  A0CA               	btfss	16330,0,c	;volatile
 11882  003A82  D011               	goto	i2l5553
 11883                           
 11884                           ;MainCode.c: 442:         PORTCbits.RC5 = 1;
 11885  003A84  0101               	movlb	1	; () banked
 11886  003A86  5108               	movf	_tick_count& (0+255),w,b
 11887  003A88  5C37               	subwf	_min_tick_count,w,c
 11888  003A8A  5038               	movf	_min_tick_count+1,w,c
 11889  003A8C  0A80               	xorlw	128
 11890  003A8E  6E01               	movwf	??_encInt& (0+255),c
 11891  003A90  5109               	movf	(_tick_count+1)& (0+255),w,b
 11892  003A92  0A80               	xorlw	128
 11893  003A94  5801               	subwfb	??_encInt& (0+255),w,c
 11894  003A96  B0D8               	btfsc	status,0,c
 11895  003A98  D014               	goto	i2l5559
 11896                           
 11897                           ; BSR set to: 1
 11898                           ;MainCode.c: 443:     else
 11899  003A9A  0708               	decf	_tick_count& (0+255),f,b
 11900  003A9C  A0D8               	btfss	status,0,c
 11901  003A9E  0709               	decf	(_tick_count+1)& (0+255),f,b
 11902  003AA0                     i2l5551:
 11903                           
 11904                           ; BSR set to: 1
 11905                           ;MainCode.c: 444:         PORTCbits.RC5 = 0;
 11906  003AA0  ECB3  F01E         	call	_playBuzzer	;wreg free
 11907  003AA4  D00E               	goto	i2l5559
 11908  003AA6                     i2l5553:
 11909                           
 11910                           ;MainCode.c: 447:         PORTCbits.RC6 = 1;
 11911  003AA6  5043               	movf	_max_tick_count,w,c
 11912  003AA8  0101               	movlb	1	; () banked
 11913  003AAA  5D08               	subwf	_tick_count& (0+255),w,b
 11914  003AAC  5109               	movf	(_tick_count+1)& (0+255),w,b
 11915  003AAE  0A80               	xorlw	128
 11916  003AB0  6E01               	movwf	??_encInt& (0+255),c
 11917  003AB2  5044               	movf	_max_tick_count+1,w,c
 11918  003AB4  0A80               	xorlw	128
 11919  003AB6  5801               	subwfb	??_encInt& (0+255),w,c
 11920  003AB8  B0D8               	btfsc	status,0,c
 11921  003ABA  D003               	goto	i2l5559
 11922                           
 11923                           ; BSR set to: 1
 11924                           ;MainCode.c: 448:     else
 11925  003ABC  4B08               	infsnz	_tick_count& (0+255),f,b
 11926  003ABE  2B09               	incf	(_tick_count+1)& (0+255),f,b
 11927  003AC0  D7EF               	goto	i2l5551
 11928  003AC2                     i2l5559:
 11929                           
 11930                           ;MainCode.c: 452:         PORTCbits.RC7 = 1;
 11931  003AC2  0139               	movlb	57	; () banked
 11932  003AC4  91A1               	bcf	161,0,b	;volatile
 11933                           
 11934                           ; BSR set to: 57
 11935  003AC6  0011               	retfie		f
 11936  003AC8                     __end_of_encInt:
 11937                           	opt callstack 0
 11938                           
 11939 ;; *************** function _playBuzzer *****************
 11940 ;; Defined at:
 11941 ;;		line 779 in file "MainCode.c"
 11942 ;; Parameters:    Size  Location     Type
 11943 ;;		None
 11944 ;; Auto vars:     Size  Location     Type
 11945 ;;		None
 11946 ;; Return value:  Size  Location     Type
 11947 ;;                  1    wreg      void 
 11948 ;; Registers used:
 11949 ;;		wreg, status,2
 11950 ;; Tracked objects:
 11951 ;;		On entry : 0/0
 11952 ;;		On exit  : 0/0
 11953 ;;		Unchanged: 0/0
 11954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11955 ;;      Params:         0       0       0       0       0       0       0       0       0
 11956 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11957 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11958 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11959 ;;Total ram usage:        0 bytes
 11960 ;; Hardware stack levels used:    1
 11961 ;; This function calls:
 11962 ;;		Nothing
 11963 ;; This function is called by:
 11964 ;;		_encInt
 11965 ;; This function uses a non-reentrant model
 11966 ;;
 11967                           
 11968                           	psect	text46
 11969  003D66                     __ptext46:
 11970                           	opt callstack 0
 11971  003D66                     _playBuzzer:
 11972                           	opt callstack 20
 11973                           
 11974                           ;MainCode.c: 780:     PORTBbits.RB1 = 1;
 11975                           
 11976                           ; BSR set to: 57
 11977                           ;incstack = 0
 11978  003D66  82CB               	bsf	16331,1,c	;volatile
 11979                           
 11980                           ;MainCode.c: 781:     T0CON0bits.EN = 1;
 11981  003D68  8EB8               	bsf	16312,7,c	;volatile
 11982                           
 11983                           ;MainCode.c: 782:     TMR0L = 0;
 11984  003D6A  0E00               	movlw	0
 11985  003D6C  6EB6               	movwf	16310,c	;volatile
 11986  003D6E  0012               	return		;funcret
 11987  003D70                     __end_of_playBuzzer:
 11988                           	opt callstack 0
 11989                           
 11990 ;; *************** function _adcInt *****************
 11991 ;; Defined at:
 11992 ;;		line 455 in file "MainCode.c"
 11993 ;; Parameters:    Size  Location     Type
 11994 ;;		None
 11995 ;; Auto vars:     Size  Location     Type
 11996 ;;		None
 11997 ;; Return value:  Size  Location     Type
 11998 ;;                  1    wreg      void 
 11999 ;; Registers used:
 12000 ;;		None
 12001 ;; Tracked objects:
 12002 ;;		On entry : 0/0
 12003 ;;		On exit  : 0/0
 12004 ;;		Unchanged: 0/0
 12005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12006 ;;      Params:         0       0       0       0       0       0       0       0       0
 12007 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12008 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12009 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12010 ;;Total ram usage:        0 bytes
 12011 ;; Hardware stack levels used:    1
 12012 ;; This function calls:
 12013 ;;		Nothing
 12014 ;; This function is called by:
 12015 ;;		Interrupt level 2
 12016 ;; This function uses a non-reentrant model
 12017 ;;
 12018                           
 12019                           	psect	text47
 12020  003D7C                     __ptext47:
 12021                           	opt callstack 0
 12022  003D7C                     _adcInt:
 12023                           	opt callstack 21
 12024                           
 12025                           ;incstack = 0
 12026  003D7C  0011               	retfie		f
 12027  003D7E                     __end_of_adcInt:
 12028                           	opt callstack 0
 12029                           
 12030 ;; *************** function _canRecInt2 *****************
 12031 ;; Defined at:
 12032 ;;		line 461 in file "MainCode.c"
 12033 ;; Parameters:    Size  Location     Type
 12034 ;;		None
 12035 ;; Auto vars:     Size  Location     Type
 12036 ;;  message        16   11[COMRAM] int [8]
 12037 ;; Return value:  Size  Location     Type
 12038 ;;                  1    wreg      void 
 12039 ;; Registers used:
 12040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12041 ;; Tracked objects:
 12042 ;;		On entry : 0/0
 12043 ;;		On exit  : 0/0
 12044 ;;		Unchanged: 0/0
 12045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12046 ;;      Params:         0       0       0       0       0       0       0       0       0
 12047 ;;      Locals:        16       0       0       0       0       0       0       0       0
 12048 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12049 ;;      Totals:        18       0       0       0       0       0       0       0       0
 12050 ;;Total ram usage:       18 bytes
 12051 ;; Hardware stack levels used:    1
 12052 ;; Hardware stack levels required when called:    1
 12053 ;; This function calls:
 12054 ;;		_sendCANmessage
 12055 ;; This function is called by:
 12056 ;;		Interrupt level 2
 12057 ;; This function uses a non-reentrant model
 12058 ;;
 12059                           
 12060                           	psect	text48
 12061  0033D8                     __ptext48:
 12062                           	opt callstack 0
 12063  0033D8                     _canRecInt2:
 12064                           	opt callstack 20
 12065                           
 12066                           ;MainCode.c: 462:     PORTCbits.RC1 = 0;
 12067                           
 12068                           ;incstack = 0
 12069  0033D8  BE80               	btfsc	16256,7,c	;volatile
 12070  0033DA  D031               	goto	i2l5573
 12071  0033DC  D048               	goto	i2l274
 12072  0033DE                     i2l276:
 12073                           
 12074                           ;MainCode.c: 466:     Lcd_Cmd(0);
 12075  0033DE  0060  F104  F00C   	movff	_status,canRecInt2@message
 12076  0033E4  0060  F108  F00D   	movff	_status+1,canRecInt2@message+1
 12077                           
 12078                           ;MainCode.c: 467:     Lcd_Cmd(1);
 12079  0033EA  0E00               	movlw	0
 12080  0033EC  6E03               	movwf	sendCANmessage@id+1,c
 12081  0033EE  0E00               	movlw	0
 12082  0033F0  6E02               	movwf	sendCANmessage@id,c
 12083  0033F2  0E0C               	movlw	low canRecInt2@message
 12084  0033F4  6E04               	movwf	sendCANmessage@message,c
 12085  0033F6  0E00               	movlw	high canRecInt2@message
 12086  0033F8  6E05               	movwf	sendCANmessage@message+1,c
 12087  0033FA  0E00               	movlw	0
 12088  0033FC  6E07               	movwf	sendCANmessage@length+1,c
 12089  0033FE  0E01               	movlw	1
 12090  003400  6E06               	movwf	sendCANmessage@length,c
 12091  003402  ECEB  F016         	call	_sendCANmessage	;wreg free
 12092                           
 12093                           ;MainCode.c: 468: }
 12094  003406  D032               	goto	i2l277
 12095  003408                     i2l278:
 12096                           
 12097                           ;MainCode.c: 470: void Lcd_Set_Cursor(char a, char b) {
 12098  003408  006F FE1C  F106    	movff	16263,_feedback	;volatile
 12099  00340E  0101               	movlb	1	; () banked
 12100  003410  6B07               	clrf	(_feedback+1)& (0+255),b
 12101                           
 12102                           ;MainCode.c: 471:     char temp, z, y;
 12103  003412  D02C               	goto	i2l277
 12104  003414                     i2l5567:
 12105                           
 12106                           ;MainCode.c: 473:         temp = 0x80 + b - 1;
 12107  003414  0E00               	movlw	0
 12108  003416  0101               	movlb	1	; () banked
 12109  003418  6FAC               	movwf	(_enter_state+1)& (0+255),b
 12110  00341A  0E01               	movlw	1
 12111  00341C  6FAB               	movwf	_enter_state& (0+255),b
 12112                           
 12113                           ; BSR set to: 1
 12114                           ;MainCode.c: 474:         z = temp >> 4;
 12115  00341E  006F FE1C  F10A    	movff	16263,_state	;volatile
 12116                           
 12117                           ;MainCode.c: 475:         y = temp & 0x0F;
 12118  003424  D023               	goto	i2l277
 12119  003426                     i2l280:
 12120                           
 12121                           ;MainCode.c: 477:         Lcd_Cmd(y);
 12122  003426  006F FE1C  F104    	movff	16263,_master_state	;volatile
 12123  00342C  0101               	movlb	1	; () banked
 12124  00342E  6B05               	clrf	(_master_state+1)& (0+255),b
 12125                           
 12126                           ;MainCode.c: 478:     } else if (a == 2) {
 12127  003430  D01D               	goto	i2l277
 12128  003432                     i2l281:
 12129                           
 12130                           ;MainCode.c: 480:         z = temp >> 4;
 12131  003432  006F FE1C  F1A9    	movff	16263,_charging_state	;volatile
 12132  003438  0101               	movlb	1	; () banked
 12133  00343A  6BAA               	clrf	(_charging_state+1)& (0+255),b
 12134                           
 12135                           ;MainCode.c: 481:         y = temp & 0x0F;
 12136  00343C  D017               	goto	i2l277
 12137  00343E                     i2l5573:
 12138  00343E  5086               	movf	16262,w,c	;volatile
 12139  003440  6E0A               	movwf	??_canRecInt2& (0+255),c
 12140  003442  6A0B               	clrf	(??_canRecInt2+1)& (0+255),c
 12141                           
 12142                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12143                           ; Switch size 1, requested type "simple"
 12144                           ; Number of cases is 1, Range of values is 0 to 0
 12145                           ; switch strategies available:
 12146                           ; Name         Instructions Cycles
 12147                           ; simple_byte            4     3 (average)
 12148                           ;	Chosen strategy is simple_byte
 12149  003444  500B               	movf	??_canRecInt2+1,w,c
 12150  003446  0A00               	xorlw	0	; case 0
 12151  003448  A4D8               	btfss	status,2,c
 12152  00344A  D010               	goto	i2l277
 12153                           
 12154                           ; Switch size 1, requested type "simple"
 12155                           ; Number of cases is 5, Range of values is 0 to 4
 12156                           ; switch strategies available:
 12157                           ; Name         Instructions Cycles
 12158                           ; simple_byte           16     9 (average)
 12159                           ;	Chosen strategy is simple_byte
 12160  00344C  500A               	movf	??_canRecInt2,w,c
 12161  00344E  0A00               	xorlw	0	; case 0
 12162  003450  B4D8               	btfsc	status,2,c
 12163  003452  D7C5               	goto	i2l276
 12164  003454  0A01               	xorlw	1	; case 1
 12165  003456  B4D8               	btfsc	status,2,c
 12166  003458  D7D7               	goto	i2l278
 12167  00345A  0A03               	xorlw	3	; case 2
 12168  00345C  B4D8               	btfsc	status,2,c
 12169  00345E  D7DA               	goto	i2l5567
 12170  003460  0A01               	xorlw	1	; case 3
 12171  003462  B4D8               	btfsc	status,2,c
 12172  003464  D7E0               	goto	i2l280
 12173  003466  0A07               	xorlw	7	; case 4
 12174  003468  B4D8               	btfsc	status,2,c
 12175  00346A  D7E3               	goto	i2l281
 12176  00346C                     i2l277:
 12177                           
 12178                           ;MainCode.c: 483:         Lcd_Cmd(y);
 12179  00346C  9E80               	bcf	16256,7,c	;volatile
 12180  00346E                     i2l274:
 12181                           
 12182                           ;MainCode.c: 485:         temp = 0x94 + b - 1;
 12183  00346E  0139               	movlb	57	; () banked
 12184  003470  91A5               	bcf	165,0,b	;volatile
 12185                           
 12186                           ; BSR set to: 57
 12187  003472  0011               	retfie		f
 12188  003474                     __end_of_canRecInt2:
 12189                           	opt callstack 0
 12190                           
 12191 ;; *************** function _sendCANmessage *****************
 12192 ;; Defined at:
 12193 ;;		line 727 in file "MainCode.c"
 12194 ;; Parameters:    Size  Location     Type
 12195 ;;  id              2    1[COMRAM] int 
 12196 ;;  message         2    3[COMRAM] PTR int 
 12197 ;;		 -> canRecInt2@message(16), 
 12198 ;;  length          2    5[COMRAM] int 
 12199 ;; Auto vars:     Size  Location     Type
 12200 ;;		None
 12201 ;; Return value:  Size  Location     Type
 12202 ;;                  1    wreg      void 
 12203 ;; Registers used:
 12204 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12205 ;; Tracked objects:
 12206 ;;		On entry : 0/0
 12207 ;;		On exit  : 0/0
 12208 ;;		Unchanged: 0/0
 12209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12210 ;;      Params:         6       0       0       0       0       0       0       0       0
 12211 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12212 ;;      Temps:          2       0       0       0       0       0       0       0       0
 12213 ;;      Totals:         8       0       0       0       0       0       0       0       0
 12214 ;;Total ram usage:        8 bytes
 12215 ;; Hardware stack levels used:    1
 12216 ;; This function calls:
 12217 ;;		Nothing
 12218 ;; This function is called by:
 12219 ;;		_canRecInt2
 12220 ;; This function uses a non-reentrant model
 12221 ;;
 12222                           
 12223                           	psect	text49
 12224  002DD6                     __ptext49:
 12225                           	opt callstack 0
 12226  002DD6                     _sendCANmessage:
 12227                           	opt callstack 20
 12228                           
 12229                           ;MainCode.c: 728:     TXB0CONbits.TXREQ = 0;
 12230                           
 12231                           ; BSR set to: 57
 12232                           ;incstack = 0
 12233  002DD6  0137               	movlb	55	; () banked
 12234  002DD8  97E0               	bcf	224,3,b	;volatile
 12235                           
 12236                           ; BSR set to: 55
 12237                           ;MainCode.c: 730:     CANCONbits.WIN = 0b000;
 12238  002DDA  0EF1               	movlw	-15
 12239  002DDC  168F               	andwf	16271,f,c	;volatile
 12240                           
 12241                           ;MainCode.c: 732:     TXB0CONbits.TXPRI = 0b11;
 12242  002DDE  0E03               	movlw	3
 12243  002DE0  13E0               	iorwf	224,f,b	;volatile
 12244                           
 12245                           ; BSR set to: 55
 12246                           ;MainCode.c: 734:     TXB0D0 = message[0];
 12247  002DE2  0060  F013  FFD9   	movff	sendCANmessage@message,fsr2l
 12248  002DE8  0060  F017  FFDA   	movff	sendCANmessage@message+1,fsr2h
 12249  002DEE  50DF               	movf	indf2,w,c
 12250  002DF0  6FE6               	movwf	230,b	;volatile
 12251                           
 12252                           ; BSR set to: 55
 12253                           ;MainCode.c: 735:     TXB0D1 = message[1];
 12254  002DF2  EE20 F002          	lfsr	2,2
 12255  002DF6  5004               	movf	sendCANmessage@message,w,c
 12256  002DF8  26D9               	addwf	fsr2l,f,c
 12257  002DFA  5005               	movf	sendCANmessage@message+1,w,c
 12258  002DFC  22DA               	addwfc	fsr2h,f,c
 12259  002DFE  50DF               	movf	indf2,w,c
 12260  002E00  6FE7               	movwf	231,b	;volatile
 12261                           
 12262                           ; BSR set to: 55
 12263                           ;MainCode.c: 736:     TXB0D2 = message[2];
 12264  002E02  EE20 F004          	lfsr	2,4
 12265  002E06  5004               	movf	sendCANmessage@message,w,c
 12266  002E08  26D9               	addwf	fsr2l,f,c
 12267  002E0A  5005               	movf	sendCANmessage@message+1,w,c
 12268  002E0C  22DA               	addwfc	fsr2h,f,c
 12269  002E0E  50DF               	movf	indf2,w,c
 12270  002E10  6FE8               	movwf	232,b	;volatile
 12271                           
 12272                           ; BSR set to: 55
 12273                           ;MainCode.c: 737:     TXB0D3 = message[3];
 12274  002E12  EE20 F006          	lfsr	2,6
 12275  002E16  5004               	movf	sendCANmessage@message,w,c
 12276  002E18  26D9               	addwf	fsr2l,f,c
 12277  002E1A  5005               	movf	sendCANmessage@message+1,w,c
 12278  002E1C  22DA               	addwfc	fsr2h,f,c
 12279  002E1E  50DF               	movf	indf2,w,c
 12280  002E20  6FE9               	movwf	233,b	;volatile
 12281                           
 12282                           ; BSR set to: 55
 12283                           ;MainCode.c: 738:     TXB0D4 = message[4];
 12284  002E22  EE20 F008          	lfsr	2,8
 12285  002E26  5004               	movf	sendCANmessage@message,w,c
 12286  002E28  26D9               	addwf	fsr2l,f,c
 12287  002E2A  5005               	movf	sendCANmessage@message+1,w,c
 12288  002E2C  22DA               	addwfc	fsr2h,f,c
 12289  002E2E  50DF               	movf	indf2,w,c
 12290  002E30  6FEA               	movwf	234,b	;volatile
 12291                           
 12292                           ; BSR set to: 55
 12293                           ;MainCode.c: 739:     TXB0D5 = message[5];
 12294  002E32  EE20 F00A          	lfsr	2,10
 12295  002E36  5004               	movf	sendCANmessage@message,w,c
 12296  002E38  26D9               	addwf	fsr2l,f,c
 12297  002E3A  5005               	movf	sendCANmessage@message+1,w,c
 12298  002E3C  22DA               	addwfc	fsr2h,f,c
 12299  002E3E  50DF               	movf	indf2,w,c
 12300  002E40  6FEB               	movwf	235,b	;volatile
 12301                           
 12302                           ; BSR set to: 55
 12303                           ;MainCode.c: 740:     TXB0D6 = message[6];
 12304  002E42  EE20 F00C          	lfsr	2,12
 12305  002E46  5004               	movf	sendCANmessage@message,w,c
 12306  002E48  26D9               	addwf	fsr2l,f,c
 12307  002E4A  5005               	movf	sendCANmessage@message+1,w,c
 12308  002E4C  22DA               	addwfc	fsr2h,f,c
 12309  002E4E  50DF               	movf	indf2,w,c
 12310  002E50  6FEC               	movwf	236,b	;volatile
 12311                           
 12312                           ; BSR set to: 55
 12313                           ;MainCode.c: 741:     TXB0D7 = message[7];
 12314  002E52  EE20 F00E          	lfsr	2,14
 12315  002E56  5004               	movf	sendCANmessage@message,w,c
 12316  002E58  26D9               	addwf	fsr2l,f,c
 12317  002E5A  5005               	movf	sendCANmessage@message+1,w,c
 12318  002E5C  22DA               	addwfc	fsr2h,f,c
 12319  002E5E  50DF               	movf	indf2,w,c
 12320  002E60  6FED               	movwf	237,b	;volatile
 12321                           
 12322                           ;MainCode.c: 743:     TXB0SIDLbits.SID = id;
 12323  002E62  0060  F008  F008   	movff	sendCANmessage@id,??_sendCANmessage
 12324  002E68  3A08               	swapf	??_sendCANmessage,f,c
 12325  002E6A  4608               	rlncf	??_sendCANmessage,f,c
 12326  002E6C  51E2               	movf	226,w,b	;volatile
 12327  002E6E  1808               	xorwf	??_sendCANmessage,w,c
 12328  002E70  0B1F               	andlw	-225
 12329  002E72  1808               	xorwf	??_sendCANmessage,w,c
 12330  002E74  6FE2               	movwf	226,b	;volatile
 12331                           
 12332                           ;MainCode.c: 744:     TXB0SIDH = id >> 3;
 12333  002E76  0060  F008  F008   	movff	sendCANmessage@id,??_sendCANmessage
 12334  002E7C  0060  F00C  F009   	movff	sendCANmessage@id+1,??_sendCANmessage+1
 12335  002E82  3409               	rlcf	??_sendCANmessage+1,w,c
 12336  002E84  3209               	rrcf	??_sendCANmessage+1,f,c
 12337  002E86  3208               	rrcf	??_sendCANmessage,f,c
 12338  002E88  3409               	rlcf	??_sendCANmessage+1,w,c
 12339  002E8A  3209               	rrcf	??_sendCANmessage+1,f,c
 12340  002E8C  3208               	rrcf	??_sendCANmessage,f,c
 12341  002E8E  3409               	rlcf	??_sendCANmessage+1,w,c
 12342  002E90  3209               	rrcf	??_sendCANmessage+1,f,c
 12343  002E92  3208               	rrcf	??_sendCANmessage,f,c
 12344  002E94  5008               	movf	??_sendCANmessage,w,c
 12345  002E96  6FE1               	movwf	225,b	;volatile
 12346                           
 12347                           ;MainCode.c: 746:     TXB0DLCbits.DLC = length;
 12348  002E98  51E5               	movf	229,w,b	;volatile
 12349  002E9A  1806               	xorwf	sendCANmessage@length,w,c
 12350  002E9C  0BF0               	andlw	-16
 12351  002E9E  1806               	xorwf	sendCANmessage@length,w,c
 12352  002EA0  6FE5               	movwf	229,b	;volatile
 12353                           
 12354                           ; BSR set to: 55
 12355                           ;MainCode.c: 747:     TXB0DLCbits.TXRTR = 0;
 12356  002EA2  9DE5               	bcf	229,6,b	;volatile
 12357                           
 12358                           ; BSR set to: 55
 12359                           ;MainCode.c: 749:     TXB0CONbits.TXREQ = 1;
 12360  002EA4  87E0               	bsf	224,3,b	;volatile
 12361  002EA6                     i2l352:
 12362                           
 12363                           ; BSR set to: 55
 12364  002EA6  B7E0               	btfsc	224,3,b	;volatile
 12365  002EA8  0012               	return	
 12366  002EAA  D7FD               	goto	i2l352
 12367  002EAC                     __end_of_sendCANmessage:
 12368                           	opt callstack 0
 12369                           
 12370 ;; *************** function _canRecInt *****************
 12371 ;; Defined at:
 12372 ;;		line 488 in file "MainCode.c"
 12373 ;; Parameters:    Size  Location     Type
 12374 ;;		None
 12375 ;; Auto vars:     Size  Location     Type
 12376 ;;		None
 12377 ;; Return value:  Size  Location     Type
 12378 ;;                  1    wreg      void 
 12379 ;; Registers used:
 12380 ;;		wreg, status,2
 12381 ;; Tracked objects:
 12382 ;;		On entry : 0/0
 12383 ;;		On exit  : 0/0
 12384 ;;		Unchanged: 0/0
 12385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12386 ;;      Params:         0       0       0       0       0       0       0       0       0
 12387 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12388 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12389 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12390 ;;Total ram usage:        0 bytes
 12391 ;; Hardware stack levels used:    1
 12392 ;; This function calls:
 12393 ;;		Nothing
 12394 ;; This function is called by:
 12395 ;;		Interrupt level 2
 12396 ;; This function uses a non-reentrant model
 12397 ;;
 12398                           
 12399                           	psect	text50
 12400  003D4C                     __ptext50:
 12401                           	opt callstack 0
 12402  003D4C                     _canRecInt:
 12403                           	opt callstack 21
 12404                           
 12405                           ;MainCode.c: 489:         Lcd_Cmd(y);
 12406                           
 12407                           ; BSR set to: 55
 12408                           ;incstack = 0
 12409  003D4C  0E00               	movlw	0
 12410  003D4E  0101               	movlb	1	; () banked
 12411  003D50  6F09               	movwf	(_tick_count+1)& (0+255),b
 12412  003D52  6908               	setf	_tick_count& (0+255),b
 12413                           
 12414                           ; BSR set to: 1
 12415                           ;MainCode.c: 490:     } else if (a == 4) {
 12416  003D54  0139               	movlb	57	; () banked
 12417  003D56  93A5               	bcf	165,1,b	;volatile
 12418                           
 12419                           ; BSR set to: 57
 12420  003D58  0011               	retfie		f
 12421  003D5A                     __end_of_canRecInt:
 12422                           	opt callstack 0
 12423                           
 12424                           ;
 12425                           ; Interrupt Vector Table @ 0x8
 12426                           ;
 12427                           
 12428                           	psect	ivt0x8
 12429  000008                     __pivt0x8:
 12430                           	opt callstack 0
 12431  000008                     ivt0x8_base:
 12432                           	opt callstack 0
 12433                           
 12434                           ; Vector 0 : SWINT
 12435  000008  0029               	dw	ivt0x8_undefint shr (0+2)
 12436                           
 12437                           ; Vector 1 : HLVD
 12438  00000A  0029               	dw	ivt0x8_undefint shr (0+2)
 12439                           
 12440                           ; Vector 2 : OSF
 12441  00000C  0029               	dw	ivt0x8_undefint shr (0+2)
 12442                           
 12443                           ; Vector 3 : CSW
 12444  00000E  0029               	dw	ivt0x8_undefint shr (0+2)
 12445                           
 12446                           ; Vector 4 : NVM
 12447  000010  0029               	dw	ivt0x8_undefint shr (0+2)
 12448                           
 12449                           ; Vector 5 : SCAN
 12450  000012  0029               	dw	ivt0x8_undefint shr (0+2)
 12451                           
 12452                           ; Vector 6 : CRC
 12453  000014  0029               	dw	ivt0x8_undefint shr (0+2)
 12454                           
 12455                           ; Vector 7 : IOC
 12456  000016  0029               	dw	ivt0x8_undefint shr (0+2)
 12457                           
 12458                           ; Vector 8 : INT0
 12459  000018  0EA0               	dw	_encInt shr (0+2)
 12460                           
 12461                           ; Vector 9 : ZCD
 12462  00001A  0029               	dw	ivt0x8_undefint shr (0+2)
 12463                           
 12464                           ; Vector 10 : AD
 12465  00001C  0F5F               	dw	_adcInt shr (0+2)
 12466                           
 12467                           ; Vector 11 : ADT
 12468  00001E  0029               	dw	ivt0x8_undefint shr (0+2)
 12469                           
 12470                           ; Vector 12 : CMP1
 12471  000020  0029               	dw	ivt0x8_undefint shr (0+2)
 12472                           
 12473                           ; Vector 13 : SMT1
 12474  000022  0029               	dw	ivt0x8_undefint shr (0+2)
 12475                           
 12476                           ; Vector 14 : SMT1PRA
 12477  000024  0029               	dw	ivt0x8_undefint shr (0+2)
 12478                           
 12479                           ; Vector 15 : SMT1PWA
 12480  000026  0029               	dw	ivt0x8_undefint shr (0+2)
 12481                           
 12482                           ; Vector 16 : DMA1SCNT
 12483  000028  0029               	dw	ivt0x8_undefint shr (0+2)
 12484                           
 12485                           ; Vector 17 : DMA1DCNT
 12486  00002A  0029               	dw	ivt0x8_undefint shr (0+2)
 12487                           
 12488                           ; Vector 18 : DMA1OR
 12489  00002C  0029               	dw	ivt0x8_undefint shr (0+2)
 12490                           
 12491                           ; Vector 19 : DMA1A
 12492  00002E  0029               	dw	ivt0x8_undefint shr (0+2)
 12493                           
 12494                           ; Vector 20 : SPI1RX
 12495  000030  0029               	dw	ivt0x8_undefint shr (0+2)
 12496                           
 12497                           ; Vector 21 : SPI1TX
 12498  000032  0029               	dw	ivt0x8_undefint shr (0+2)
 12499                           
 12500                           ; Vector 22 : SPI1
 12501  000034  0029               	dw	ivt0x8_undefint shr (0+2)
 12502                           
 12503                           ; Vector 23 : I2C1RX
 12504  000036  0029               	dw	ivt0x8_undefint shr (0+2)
 12505                           
 12506                           ; Vector 24 : I2C1TX
 12507  000038  0029               	dw	ivt0x8_undefint shr (0+2)
 12508                           
 12509                           ; Vector 25 : I2C1
 12510  00003A  0029               	dw	ivt0x8_undefint shr (0+2)
 12511                           
 12512                           ; Vector 26 : I2C1E
 12513  00003C  0029               	dw	ivt0x8_undefint shr (0+2)
 12514                           
 12515                           ; Vector 27 : U1RX
 12516  00003E  0029               	dw	ivt0x8_undefint shr (0+2)
 12517                           
 12518                           ; Vector 28 : U1TX
 12519  000040  0029               	dw	ivt0x8_undefint shr (0+2)
 12520                           
 12521                           ; Vector 29 : U1E
 12522  000042  0029               	dw	ivt0x8_undefint shr (0+2)
 12523                           
 12524                           ; Vector 30 : U1
 12525  000044  0029               	dw	ivt0x8_undefint shr (0+2)
 12526                           
 12527                           ; Vector 31 : TMR0
 12528  000046  0F57               	dw	_buzzerInt shr (0+2)
 12529                           
 12530                           ; Vector 32 : TMR1
 12531  000048  0029               	dw	ivt0x8_undefint shr (0+2)
 12532                           
 12533                           ; Vector 33 : TMR1G
 12534  00004A  0029               	dw	ivt0x8_undefint shr (0+2)
 12535                           
 12536                           ; Vector 34 : TMR2
 12537  00004C  0029               	dw	ivt0x8_undefint shr (0+2)
 12538                           
 12539                           ; Vector 35 : CCP1
 12540  00004E  0029               	dw	ivt0x8_undefint shr (0+2)
 12541                           
 12542                           ; Vector 36 : NCO1
 12543  000050  0029               	dw	ivt0x8_undefint shr (0+2)
 12544                           
 12545                           ; Vector 37 : CWG1
 12546  000052  0029               	dw	ivt0x8_undefint shr (0+2)
 12547                           
 12548                           ; Vector 38 : CLC1
 12549  000054  0029               	dw	ivt0x8_undefint shr (0+2)
 12550                           
 12551                           ; Vector 39 : INT1
 12552  000056  0029               	dw	ivt0x8_undefint shr (0+2)
 12553                           
 12554                           ; Vector 40 : RXB0IF
 12555  000058  0CF6               	dw	_canRecInt2 shr (0+2)
 12556                           
 12557                           ; Vector 41 : RXB1IF
 12558  00005A  0F53               	dw	_canRecInt shr (0+2)
 12559                           
 12560                           ; Vector 42 : TXB0IF
 12561  00005C  0029               	dw	ivt0x8_undefint shr (0+2)
 12562                           
 12563                           ; Vector 43 : TXB1IF
 12564  00005E  0029               	dw	ivt0x8_undefint shr (0+2)
 12565                           
 12566                           ; Vector 44 : TXB2IF
 12567  000060  0029               	dw	ivt0x8_undefint shr (0+2)
 12568                           
 12569                           ; Vector 45 : ERRIF
 12570  000062  0029               	dw	ivt0x8_undefint shr (0+2)
 12571                           
 12572                           ; Vector 46 : WAKIF
 12573  000064  0029               	dw	ivt0x8_undefint shr (0+2)
 12574                           
 12575                           ; Vector 47 : IRXIF
 12576  000066  0029               	dw	ivt0x8_undefint shr (0+2)
 12577                           
 12578                           ; Vector 48 : CMP2
 12579  000068  0029               	dw	ivt0x8_undefint shr (0+2)
 12580                           
 12581                           ; Vector 49 : SMT2
 12582  00006A  0029               	dw	ivt0x8_undefint shr (0+2)
 12583                           
 12584                           ; Vector 50 : SMT2PRA
 12585  00006C  0029               	dw	ivt0x8_undefint shr (0+2)
 12586                           
 12587                           ; Vector 51 : SMT2PWA
 12588  00006E  0029               	dw	ivt0x8_undefint shr (0+2)
 12589                           
 12590                           ; Vector 52 : DMA2SCNT
 12591  000070  0029               	dw	ivt0x8_undefint shr (0+2)
 12592                           
 12593                           ; Vector 53 : DMA2DCNT
 12594  000072  0029               	dw	ivt0x8_undefint shr (0+2)
 12595                           
 12596                           ; Vector 54 : DMA2OR
 12597  000074  0029               	dw	ivt0x8_undefint shr (0+2)
 12598                           
 12599                           ; Vector 55 : DMA2A
 12600  000076  0029               	dw	ivt0x8_undefint shr (0+2)
 12601                           
 12602                           ; Vector 56 : I2C2RX
 12603  000078  0029               	dw	ivt0x8_undefint shr (0+2)
 12604                           
 12605                           ; Vector 57 : I2C2TX
 12606  00007A  0029               	dw	ivt0x8_undefint shr (0+2)
 12607                           
 12608                           ; Vector 58 : I2C2
 12609  00007C  0029               	dw	ivt0x8_undefint shr (0+2)
 12610                           
 12611                           ; Vector 59 : I2C2E
 12612  00007E  0029               	dw	ivt0x8_undefint shr (0+2)
 12613                           
 12614                           ; Vector 60 : U2RX
 12615  000080  0029               	dw	ivt0x8_undefint shr (0+2)
 12616                           
 12617                           ; Vector 61 : U2TX
 12618  000082  0029               	dw	ivt0x8_undefint shr (0+2)
 12619                           
 12620                           ; Vector 62 : U2E
 12621  000084  0029               	dw	ivt0x8_undefint shr (0+2)
 12622                           
 12623                           ; Vector 63 : U2
 12624  000086  0029               	dw	ivt0x8_undefint shr (0+2)
 12625                           
 12626                           ; Vector 64 : TMR3
 12627  000088  0029               	dw	ivt0x8_undefint shr (0+2)
 12628                           
 12629                           ; Vector 65 : TMR3G
 12630  00008A  0029               	dw	ivt0x8_undefint shr (0+2)
 12631                           
 12632                           ; Vector 66 : TMR4
 12633  00008C  0029               	dw	ivt0x8_undefint shr (0+2)
 12634                           
 12635                           ; Vector 67 : CCP2
 12636  00008E  0029               	dw	ivt0x8_undefint shr (0+2)
 12637                           
 12638                           ; Vector 68 : CWG2
 12639  000090  0029               	dw	ivt0x8_undefint shr (0+2)
 12640                           
 12641                           ; Vector 69 : CLC2
 12642  000092  0029               	dw	ivt0x8_undefint shr (0+2)
 12643                           
 12644                           ; Vector 70 : INT2
 12645  000094  0029               	dw	ivt0x8_undefint shr (0+2)
 12646                           
 12647                           ; Vector 71 : TMR5
 12648  000096  0029               	dw	ivt0x8_undefint shr (0+2)
 12649                           
 12650                           ; Vector 72 : TMR5G
 12651  000098  0029               	dw	ivt0x8_undefint shr (0+2)
 12652                           
 12653                           ; Vector 73 : TMR6
 12654  00009A  0029               	dw	ivt0x8_undefint shr (0+2)
 12655                           
 12656                           ; Vector 74 : CCP3
 12657  00009C  0029               	dw	ivt0x8_undefint shr (0+2)
 12658                           
 12659                           ; Vector 75 : CWG3
 12660  00009E  0029               	dw	ivt0x8_undefint shr (0+2)
 12661                           
 12662                           ; Vector 76 : CLC3
 12663  0000A0  0029               	dw	ivt0x8_undefint shr (0+2)
 12664                           
 12665                           ; Vector 77 : CCP4
 12666  0000A2  0029               	dw	ivt0x8_undefint shr (0+2)
 12667                           
 12668                           ; Vector 78 : CLC4
 12669  0000A4  0029               	dw	ivt0x8_undefint shr (0+2)
 12670  0000A6                     ivt0x8_undefint:
 12671                           	opt callstack 0
 12672  0000A6  00FF               	reset	
 12673                           
 12674                           	psect	rparam
 12675  0000                     tosu	equ	0x3FFF
 12676                           tosh	equ	0x3FFE
 12677                           tosl	equ	0x3FFD
 12678                           stkptr	equ	0x3FFC
 12679                           pclatu	equ	0x3FFB
 12680                           pclath	equ	0x3FFA
 12681                           pcl	equ	0x3FF9
 12682                           tblptru	equ	0x3FF8
 12683                           tblptrh	equ	0x3FF7
 12684                           tblptrl	equ	0x3FF6
 12685                           tablat	equ	0x3FF5
 12686                           prodh	equ	0x3FF4
 12687                           prodl	equ	0x3FF3
 12688                           indf0	equ	0x3FEF
 12689                           postinc0	equ	0x3FEE
 12690                           postdec0	equ	0x3FED
 12691                           preinc0	equ	0x3FEC
 12692                           plusw0	equ	0x3FEB
 12693                           fsr0h	equ	0x3FEA
 12694                           fsr0l	equ	0x3FE9
 12695                           wreg	equ	0x3FE8
 12696                           indf1	equ	0x3FE7
 12697                           postinc1	equ	0x3FE6
 12698                           postdec1	equ	0x3FE5
 12699                           preinc1	equ	0x3FE4
 12700                           plusw1	equ	0x3FE3
 12701                           fsr1h	equ	0x3FE2
 12702                           fsr1l	equ	0x3FE1
 12703                           bsr	equ	0x3FE0
 12704                           indf2	equ	0x3FDF
 12705                           postinc2	equ	0x3FDE
 12706                           postdec2	equ	0x3FDD
 12707                           preinc2	equ	0x3FDC
 12708                           plusw2	equ	0x3FDB
 12709                           fsr2h	equ	0x3FDA
 12710                           fsr2l	equ	0x3FD9
 12711                           status	equ	0x3FD8


Data Sizes:
    Strings     357
    Constant    0
    Data        508
    BSS         117
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      68
    BANK0           160    147     153
    BANK1           256     78     173
    BANK2           256      0     140
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_39(CODE[4]), STR_38(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_39(CODE[4]), STR_38(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_26(CODE[4]), STR_22(CODE[6]), STR_17(CODE[4]), STR_15(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@str_1457(BANK1[20]), main@str_1452(BANK1[8]), main@str_1446(BANK1[20]), main@str(BANK1[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@str_1457(BANK1[20]), main@str_1452(BANK1[8]), main@str_1446(BANK1[20]), main@str(BANK1[20]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    S2329_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@str_1457(BANK1[20]), main@str_1452(BANK1[8]), main@str_1446(BANK1[20]), main@str(BANK1[20]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> main@str_1457(BANK1[20]), main@str_1452(BANK1[8]), main@str_1446(BANK1[20]), main@str(BANK1[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_26(CODE[4]), STR_22(CODE[6]), STR_17(CODE[4]), STR_15(CODE[4]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_26(CODE[4]), STR_22(CODE[6]), STR_17(CODE[4]), STR_15(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_26(CODE[4]), STR_22(CODE[6]), STR_17(CODE[4]), STR_15(CODE[4]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sendCANmessage@message	PTR int  size(2) Largest target is 16
		 -> canRecInt2@message(COMRAM[16]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 360
		 -> STR_33(CODE[6]), STR_32(CODE[5]), STR_31(CODE[6]), STR_30(CODE[5]), 
		 -> STR_29(CODE[6]), STR_28(CODE[19]), STR_27(CODE[20]), STR_25(CODE[14]), 
		 -> STR_24(CODE[6]), STR_23(CODE[15]), charging_state_lut(BANK2[140]), main@str_1452(BANK1[8]), 
		 -> STR_21(CODE[10]), STR_20(CODE[15]), STR_19(CODE[17]), STR_18(CODE[19]), 
		 -> STR_16(CODE[20]), master_state_lut(BIGRAM[360]), STR_14(CODE[14]), STR_13(CODE[6]), 
		 -> STR_12(CODE[12]), STR_11(CODE[15]), STR_10(CODE[20]), STR_9(CODE[11]), 
		 -> STR_8(CODE[16]), STR_7(CODE[17]), STR_6(CODE[6]), STR_5(CODE[19]), 
		 -> STR_4(CODE[15]), STR_3(CODE[16]), STR_2(CODE[18]), STR_1(CODE[21]), 


Critical Paths under _main in COMRAM

    _efgtoa->_pad
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _MenuYesNo->_Lcd_Write_String
    _Lcd_Write_String->___wmul
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _buzzerInt in COMRAM

    None.

Critical Paths under _encInt in COMRAM

    None.

Critical Paths under _adcInt in COMRAM

    None.

Critical Paths under _canRecInt2 in COMRAM

    _canRecInt2->_sendCANmessage

Critical Paths under _canRecInt in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->___aodiv
    _dtoa->_pad
    _abs->___aomod

Critical Paths under _buzzerInt in BANK0

    None.

Critical Paths under _encInt in BANK0

    None.

Critical Paths under _adcInt in BANK0

    None.

Critical Paths under _canRecInt2 in BANK0

    None.

Critical Paths under _canRecInt in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _buzzerInt in BANK1

    None.

Critical Paths under _encInt in BANK1

    None.

Critical Paths under _adcInt in BANK1

    None.

Critical Paths under _canRecInt2 in BANK1

    None.

Critical Paths under _canRecInt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _buzzerInt in BANK2

    None.

Critical Paths under _encInt in BANK2

    None.

Critical Paths under _adcInt in BANK2

    None.

Critical Paths under _canRecInt2 in BANK2

    None.

Critical Paths under _canRecInt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _buzzerInt in BANK3

    None.

Critical Paths under _encInt in BANK3

    None.

Critical Paths under _adcInt in BANK3

    None.

Critical Paths under _canRecInt2 in BANK3

    None.

Critical Paths under _canRecInt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _buzzerInt in BANK4

    None.

Critical Paths under _encInt in BANK4

    None.

Critical Paths under _adcInt in BANK4

    None.

Critical Paths under _canRecInt2 in BANK4

    None.

Critical Paths under _canRecInt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _buzzerInt in BANK5

    None.

Critical Paths under _encInt in BANK5

    None.

Critical Paths under _adcInt in BANK5

    None.

Critical Paths under _canRecInt2 in BANK5

    None.

Critical Paths under _canRecInt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _buzzerInt in BANK6

    None.

Critical Paths under _encInt in BANK6

    None.

Critical Paths under _adcInt in BANK6

    None.

Critical Paths under _canRecInt2 in BANK6

    None.

Critical Paths under _canRecInt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _buzzerInt in BANK7

    None.

Critical Paths under _encInt in BANK7

    None.

Critical Paths under _adcInt in BANK7

    None.

Critical Paths under _canRecInt2 in BANK7

    None.

Critical Paths under _canRecInt in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                70    70      0   58849
                                            145 BANK0      2     2      0
                                             10 BANK1     68    68      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                          _MenuYesNo
                             ___wmul
                         _initBuzzer
                            _initCAN
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   45411
                                            137 BANK0      8     0      8
                                              0 BANK1     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   44355
                                            129 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           50    44      6   43792
                                             97 BANK0     32    26      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                             27 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   29137
                                             29 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1142
                                             33 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                             27 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                             27 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             39 COMRAM     4     0      4
                                             13 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                             27 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     517
                                             27 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4007
                                             13 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3442
                                             27 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                             27 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3233
                                             27 COMRAM    12     4      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     806
                                             39 COMRAM     4     4      0
                                             13 BANK0      8     0      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                             27 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2723
                                             27 COMRAM    12     4      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                             27 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                             27 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6493
                                             10 BANK0     36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4227
                                             43 COMRAM     1     1      0
                                              0 BANK0     10     4      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             27 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             36 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                             27 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                              2 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             27 COMRAM    16     0     16
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             27 COMRAM    16     0     16
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    2335
                                             34 COMRAM     6     4      2
                                              0 BANK0      9     9      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             27 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     371
                                             27 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1052
                                             27 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _initCAN                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initBuzzer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MenuYesNo                                           24    24      0    5935
                                             39 COMRAM     4     4      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     6     4      2    2776
                                             33 COMRAM     6     4      2
                     _Lcd_Write_Char
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       3     3      0     178
                                             28 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1    3158
                                             30 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                             30 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     2      0     110
                                             28 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                             27 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _buzzerInt                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _encInt                                              1     1      0       0
                                              0 COMRAM     1     1      0
                         _playBuzzer
 ---------------------------------------------------------------------------------
 (11) _playBuzzer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _adcInt                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _canRecInt2                                         18    18      0     501
                                              9 COMRAM    18    18      0
                     _sendCANmessage
 ---------------------------------------------------------------------------------
 (11) _sendCANmessage                                      8     2      6     470
                                              1 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _canRecInt                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
     ___wmul (ARG)
   _MenuYesNo
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
       ___wmul (ARG)
   ___wmul
   _initBuzzer
   _initCAN
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 _buzzerInt (ROOT)

 _encInt (ROOT)
   _playBuzzer

 _adcInt (ROOT)

 _canRecInt2 (ROOT)
   _sendCANmessage

 _canRecInt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0     168      20       17.6%
EEDATA             400      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      8C       9       54.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     4E      AD       7       67.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     93      99       5       95.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      44       1       71.6%
BITSFR_9             0      0       0     200        0.0%
SFR_9                0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     216       3        0.0%
DATA                 0      0     37E      21        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Aug 16 12:56:17 2020

              ___fldiv@aexp 006C                ___fldiv@bexp 006B                ___fldiv@sign 0064  
               __CFG_CP$OFF 000000                ___awdiv@sign 0021         ___wmul@multiplicand 001E  
               __CFG_LVP$ON 000000                         l202 14B4                         l211 1530  
                       l220 15AC                         l223 1702                         l208 152A  
                       l241 18B0                         l233 170E                         l217 15A6  
                       l236 17CA                         l228 16EE                         l413 320E  
                       l245 18B6                         l183 136C                         l424 20B0  
                       l176 18EA                         l193 13E8                         l177 12F6  
                       l290 3CFC                         l426 20BC                         l506 082E  
                       l187 1372                         l292 3D06                         l196 13EE  
                       l294 3D10                         l296 3D1A                         l480 047C  
                       l847 2F42                         _abs 3B0C                         _pad 31D2  
              ___awmod@sign 0021                         wreg 003FE8                ___flmul@aexp 0061  
              ___flmul@bexp 0066                ___flmul@sign 0060                ___flmul@temp 006B  
              ___flmul@prod 0067               __CFG_BBEN$OFF 000000                __CFG_ZCD$OFF 000000  
              ___fltol@exp1 0025                        l1111 1E48                        l1112 1E26  
                      ?_abs 0062                        l1213 1CA6                        l1205 1C10  
                      l1206 1C0C                        l1127 1F1A                        l1311 26D8  
                      l1136 1F82                        l1137 1F7E                        l1166 2464  
                      l1177 24D2                        l1178 24CE                        l1268 3B3E  
                      l1196 19B2                        l1391 3A70                        l1299 28E4  
                      l5021 3360                        l5103 38F4                        l6001 276E  
                      l5051 377E                        l5037 33B0                        l5029 3388  
                      l4431 3CFE                        l5047 3742                        l5151 3476  
                      l6023 2A88                        l6111 2310                        l4435 3D08  
                      l5163 34D2                        l6035 2AD6                        l6051 2B5C  
                      l6131 2350                        l6107 230C                        l7011 0E02  
                      l5157 34A4                        l5077 38AC                        l6037 2AEA  
                      l6029 2AB0                        l6213 254A                        l7013 0E2C  
                      ?_pad 0060                        l4439 3D12                        l6055 2B82  
                      l6047 2B46                        l6071 2C06                        l6223 2582  
                      l6127 234C                        l7031 0F40                        l7015 0E3E  
                      l5169 34EA                        l6401 3712                        l6225 2584  
                      l6217 2574                        l6209 2526                        l6153 23BA  
                      l6145 23A2                        l6321 1BD6                        l7041 102E  
                      l6091 2CB8                        l6083 2C7C                        l6075 2C20  
                      l6067 2BE2                        l6171 243C                        l6163 2414  
                      l6139 2384                        l6315 1BB8                        l6077 2C34  
                      l5701 3C6E                        l6405 371C                        l6421 37CE  
                      l6341 1C64                        l6245 195E                        l6501 2F9C  
                      l7053 10E8                        l6087 2C92                        l5703 3C72  
                      l6431 37F0                        l6183 247A                        l6263 199E  
                      l6247 1962                        l6409 372A                        l6441 3812  
                      l6425 37DA                        l6177 2462                        l6345 1C82  
                      l6273 19D0                        l6265 19A2                        l6249 1972  
                      l6521 2FFE                        l7049 10AC                        l7233 143A  
                      l7217 13DC                        l7209 13C6                        l5803 1E34  
                      l7075 1232                        l6605 228E                        l6445 3820  
                      l6437 3808                        l6429 37E8                        l6189 2498  
                      l6461 36AC                        l6453 365A                        l6357 1CC6  
                      l5805 1E38                        l5725 1D10                        l6517 2FEE  
                      l7069 11E6                        l7085 125C                        l7317 160E  
                      l7237 1458                        l6391 36F2                        l6383 36D4  
                      l5903 2006                        l6535 302E                        l6527 3006  
                      l6711 048A                        l6623 010E                        l7079 123E  
                      l6609 22A8                        l6377 36C4                        l6457 368E  
                      l6473 2F16                        l5905 2008                        l5761 1D7C  
                      l5753 1D5C                        l5729 1D14                        l6529 3012  
                      l7097 3846                        l7337 1694                        l7273 151E  
                      l7265 1508                        l7193 1360                        l7185 134A  
                      l6547 3B02                        l5683 32A2                        l5923 3206  
                      l6571 20DA                        l6483 2F7A                        l6491 3BDE  
                      l5827 1E8E                        l5819 1E6C                        l6707 0464  
                      l6635 0140                        l6643 0158                        l7099 3874  
                      l7371 175A                        l5693 3B56                        l5933 326A  
                      l5925 3218                        l6557 2094                        l6389 36EA  
                      l6477 2F2C                        l6469 2EE2                        l5829 1E92  
                      l5837 1EA4                        l5749 1D58                        l6725 04DC  
                      l6717 0490                        l6653 01CC                        l6661 0222  
                      l5919 31F2                        l6575 20EA                        l5855 1F3E  
                      l5871 1F5E                        l5847 1F0A                        l5791 1DD6  
                      l6743 0526                        l6727 04E0                        l6671 0296  
                      l6655 01E4                        l6913 279C                        l5697 3B72  
                      l5929 3236                        l6585 2228                        l5865 1F54  
                      l5953 2D84                        l6809 0926                        l6817 0946  
                      l6825 096A                        l6833 0A3A                        l6753 0570  
                      l6761 06CA                        l6737 0502                        l6657 01EE  
                      l7297 159A                        l7289 1584                        l6931 2808  
                      l6923 27EE                        l6915 27A0                        l5891 1FD8  
                      l6747 0536                        l6691 03AE                        l6933 280E  
                      l5949 2D7A                        l5965 391A                        l6861 0ACA  
                      l6845 0A7C                        l6685 02FC                        l6935 283A  
                      l5959 2DCC                        l5983 2626                        l6863 0AD4  
                      l6783 0826                        l6775 07AA                        l6695 03FA  
                      l6679 02B0                        l7399 182C                        l6929 2800  
                      l5993 26FA                        l6873 0B36                        l6785 0848  
                      l6689 0346                        l6961 3142                        l6939 2878  
                      l5899 1FFE                        l6883 0B62                        l6963 3150  
                      l5997 2740                        l6797 08F6                        l6991 0CCC  
                      l6993 0CF6                        l6899 0BC4                        l6995 0D08  
                      STR_1 7E99                        STR_2 7F0F                        STR_3 7F53  
                      STR_4 7F63                        STR_5 7EFC                        STR_6 7FC5  
                      STR_7 7F21                        STR_8 7F43                        STR_9 7FAA  
                      u7000 3C58                        u7010 3C5A                        u7120 2C38  
                      u8000 2278                        u6320 3C24                        u7041 2AB6  
                      u6330 3C26                        u7060 2AEE                        u6270 329A  
                      u7310 24C8                        u6430 1DFA                        u8110 026E  
                      u6440 1E0A                        u8120 0270                        u8040 0130  
                      u6290 32E2                        u6610 1F62                        u6450 1E0C  
                      u7500 1C06                        u8220 04A8                        u7350 2534  
                      u6630 1F78                        u8070 01A4                        u9110 16F2  
                      u5840 3776                        u7600 36F6                        u7360 2558  
                      u6480 1E50                        u8160 0434                        u8080 01A6  
                      u9120 16F6                        u5850 37B2                        u7450 19BE  
                      u8330 079A                        u7540 1C72                        u7460 1B72  
                      u6900 25EC                        u8260 04FE                        u7710 36A8  
                      u7550 1C90                        u6830 2DC4                        u6910 260C  
                      u8510 0BAE                        u8430 0A5E                        u8190 0472  
                      u9207 3BA6                        u5847 3768                        u6840 2DC6  
                      u8520 0BB0                        u9217 3BB8                        u5857 37A4  
                      u7465 1B68                        u6825 2DA6                        u6905 25E2  
                      u6770 3B1C                        u6690 1FE4                        u6850 395E  
                      u9227 35BA                        u7660 37F4                        u6780 2D40  
                      u8700 0D4C                        u9237 35D4                        u8550 27EA  
                      u7910 20A6                        u7830 3018                        u6950 26B8  
                      u6870 3A56                        u8710 0D58                        u9247 35EA  
                      u6935 2640                        u6936 2646                        u6880 3A58  
                      u8800 0F84                        u9257 3D30                        u6785 2D36  
                      u6937 2654                        u6857 3950                        u8570 28AC  
                      u7930 20D4                        u6970 2720                        u8490 0B4C  
                      u8650 31A6                        u6955 26AE                        u7860 3AFE  
                      u8580 28AE                        u7940 2238                        u7780 2F8A  
                      u8740 0E80                        u9197 14A4                        u7870 2066  
                      u7790 2FC2                        u8830 1182                        u8750 0E82  
                      u6975 2716                        u7960 225A                        u7880 2068  
                      u8840 1184                        u8760 0E8E                        u7961 2258  
                      u7970 2268                        u8690 0D4A                        u7795 2FB8  
                      u7980 226C               __CFG_FCMEN$ON 000000                        abs@a 0062  
         ?_Lcd_Write_String 0022                        _dbuf 010B                        _atoi 2788  
                      _main 12A0                        _dtoa 202C                        _prec 0033  
                      _nout 00F7                        pad@i 0066                        pad@p 0064  
                      fsr1h 003FE2                        fsr2h 003FDA                        indf1 003FE7  
                      indf2 003FDF                        fsr1l 003FE1                        pad@w 0068  
                      fsr2l 003FD9               ___fpclassifyf 2CEA                        prodh 003FF4  
                      prodl 003FF3                        start 00A8          ??_Lcd_Write_String 0024  
           ___fldiv@new_exp 0065             __end_of_Lcd_Cmd 3D3E                _tolower$2401 0028  
             __CFG_CSWEN$ON 000000                ___param_bank 000000                       ??_abs 0064  
                     ??_pad 002C               ___fltol@sign1 0024             __end_of___aodiv 2BB4  
                     ?_atoi 0023             __end_of___fladd 202C                       ?_main 0001  
                     ?_dtoa 006A             __end_of___aomod 2CEA             __end_of___fldiv 258C  
           __end_of___awdiv 3738             __end_of___flneg 3BF8                       STR_10 7EAE  
                     STR_11 7F63                       STR_12 7F9E                       STR_20 7F81  
                     STR_13 7FC5                       STR_21 7FB5                       STR_30 7FDD  
                     STR_22 7FCB                       STR_14 7F90                       STR_15 7FF7  
                     STR_31 7FBF                       STR_23 7F72                       STR_24 7FC5  
                     STR_32 7FE2                       STR_16 7EC2                       STR_25 7F90  
                     STR_17 7FF7                       STR_33 7FD1               __CFG_WDTE$OFF 000000  
                     STR_26 7FF7                       STR_42 7FFB                       STR_34 7FE7  
                     STR_18 7EE9                       STR_27 7EC2                       STR_35 7FEF  
                     STR_19 7F32                       STR_44 7FFB                       STR_28 7ED6  
           __end_of___awmod 382E                       STR_29 7FD7                       STR_38 7FEB  
                     STR_39 7FF3             __end_of___flmul 1CE4             __end_of___flsub 3A2A  
           __end_of___fltol 3048             ___awdiv@divisor 001E              __CFG_DEBUG$OFF 000000  
                     i2l352 2EA6                       i2l280 3426                       i2l281 3432  
                     i2l274 346E                       i2l276 33DE                       i2l277 346C  
                     i2l278 3408             ___awdiv@counter 0020                vfpfcnvrt@fmt 00C3  
                     _TMR0H 003FB7                       _TMR1H 003FB1                       _TMR0L 003FB6  
                     _TMR1L 003FB0     __size_of_Lcd_Set_Cursor 00A0                       _TRISC 003FC4  
             __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000               __CFG_WRTD$OFF 000000  
           __end_of_initCAN 3902                       _flags 0035                       _fputc 328A  
                     _fputs 3B4C             __end_of_isdigit 3C60          __CFG_MCLRE$EXTMCLR 000000  
                     atoi@n 0067                       pad@fp 0060                main@str_1452 01A1  
                     atoi@s 0023                main@str_1446 0179                main@str_1457 018D  
                     _width 0031                       _state 010A                       _putch 3D78  
                     dtoa@d 006C                       dtoa@i 008C                       dtoa@n 0084  
                     dtoa@p 007E                       dtoa@s 0082                       dtoa@w 0080  
           __end_of_isspace 3B0C             __end_of_isupper 3C2C                       tablat 003FF5  
      sendCANmessage@length 0006                       status 003FD8             __end_of_sprintf 39CA  
            ?___fpclassifyf 001C             __end_of_tolower 3A7E             __end_of_strncmp 31D2  
          __end_of_Lcd_Init 3626            __end_of_Lcd_Port 3D1E             __initialization 3048  
              __end_of_atoi 28F2                __end_of_main 1930                __end_of_dtoa 22DE  
            __CFG_SAFEN$OFF 000000                      ??_atoi 0025                      ??_main 00F1  
                    ??_dtoa 0074              __CFG_PR1WAY$ON 000000          __size_of_Lcd_Clear 000E  
             __activetblptr 000002              _charging_state 01A9              __CFG_MVECEN$ON 000000  
          ??_sendCANmessage 0008                      ?_fputc 001C                      ?_fputs 0025  
                    _ADRESH 003EF0                      _ADRESL 003EEF            ___awdiv@dividend 001C  
                    ?_putch 0001                      _ANSELC 003A60                      _RB2PPS 003A0A  
            __CFG_WDTCCS$SC 000000                      i2l5551 3AA0                      i2l5553 3AA6  
                    i2l5573 343E                      i2l5567 3414                      i2l5559 3AC2  
                    _RXB0D0 003F86                      _RXB0D1 003F87                   ??_Lcd_Cmd 001D  
                    _TXB0D0 0037E6                      _TXB0D1 0037E7                      _TXB0D2 0037E8  
                    _TXB0D3 0037E9                      _TXB0D4 0037EA                      _TXB0D5 0037EB  
                    _TXB0D6 0037EC                      _TXB0D7 0037ED     __size_of_Lcd_Write_Char 0038  
        __size_of_MenuYesNo 009A              __CFG_XINST$OFF 000000                vfprintf@cfmt 00E7  
                    ___flge 2EAC                      ___fleq 3626                      _adcInt 3D7C  
                 ??___aodiv 002C                   ??___fladd 0024                   ??___aomod 002C  
                    ___wmul 3CC4                   ??___fldiv 0024                   ??___awdiv 0020  
                 ??___flneg 0020              __CFG_STVREN$ON 000000                   ??___awmod 0020  
                 ??___flmul 0024                   ??___flsub 002C                   ??___fltol 0020  
                    _encInt 3A80                      _efgtoa 00AC                      _floorf 258C  
                    clear_0 30DA                      clear_1 30F4            ___awdiv@quotient 0022  
           ___awmod@divisor 001E             ___awmod@counter 0020                      pad@buf 0062  
                    _status 0041                      dtoa@fp 006A                      _strcpy 3902  
                    _strlen 3C60                   ??_initCAN 001C                __pdataBIGRAM 028C  
                    fputc@c 001C                      fputs@c 0029                      fputs@i 002A  
              __pdataCOMRAM 0041                      fputs@s 0025                   ??_isdigit 001E  
           ___fpclassifyf@e 0024             ___fpclassifyf@u 0026             ___fpclassifyf@x 001C  
              __mediumconst 7E98                   ??_isspace 001E       sendCANmessage@message 0004  
                    tblptrh 003FF7                   ??_isupper 001E                      tblptrl 003FF6  
                    tblptru 003FF8                      putch@c 0001            __end_of_vfprintf 3898  
                 ??_sprintf 002D                   ??_tolower 0024                   ??_strncmp 0022  
           Lcd_Set_Cursor@a 0020             Lcd_Set_Cursor@b 001F             Lcd_Set_Cursor@y 0022  
           Lcd_Set_Cursor@z 0021                  ___flge@ff1 006D             ??___fpclassifyf 0020  
                ___flge@ff2 0071                  ___fleq@ff1 001C                  ___fleq@ff2 0020  
                __accesstop 0060     __end_of__initialization 3106                  ___flneg@f1 001C  
         __end_of_Lcd_Clear 3D4C               ___rparam_used 000001          __size_of_canRecInt 000E  
                ___fltol@f1 001C              __pcstackCOMRAM 0001                __pidataBANK1 3D74  
              __pidataBANK2 350E              ivt0x8_undefint 00A6               __end_of_fputc 3338  
             __end_of_fputs 3B8A                  _canRecInt2 33D8               __end_of_putch 3D7A  
              _ADCvalueLow0 003D                _ADCvalueLow1 0039              _Lcd_Set_Cursor 3338  
         __end_of_MenuYesNo 350E                   ?_Lcd_Init 0001                   ?_Lcd_Port 0001  
                   ??_fputc 0020                     ??_fputs 0029             __CFG_IVT1WAY$ON 000000  
                   ??_putch 001C                  __pbssBANK0 00F3                  __pbssBANK1 0100  
                   IVTBASEH 003FD6                     IVTBASEL 003FD5                     IVTBASEU 003FD7  
        __size_of_buzzerInt 000A                     ?___flge 006D                     ?___fleq 001C  
                   ?_adcInt 0001                     ?___wmul 001C             __CFG_PPS1WAY$ON 000000  
                   ?_encInt 0001                     ?_efgtoa 007D                     ?_floorf 0028  
 __size_of_Lcd_Write_String 0082      __end_of_Lcd_Set_Cursor 33D8                     ?_strcpy 001C  
                   ?_strlen 001C                     _INT0PPS 003AC0         __CFG_PWRTS$PWRT_OFF 000000  
         __end_of_canRecInt 3D5A                     _OSCCON1 0039D9          __size_of_vfpfcnvrt 069C  
                ??_Lcd_Init 001F                  ??_Lcd_Port 001C              _Lcd_Write_Char 3B8A  
                   _Lcd_Cmd 3D1E                   _ADPCHbits 003EF1                     __Hparam 0000  
                   __Lparam 0000  __CFG_RSTOSC$HFINTOSC_64MHZ 000000                  _initBuzzer 3C92  
           __size_of___flge 00D2             __size_of___fleq 008A             __size_of_adcInt 0002  
                   ___aodiv 2A5A                     ___fladd 1CE4                     ___aomod 2BB4  
                   ___fldiv 22DE                     ___awdiv 36B0                     ___flneg 3BC2  
                   ___awmod 37BA                     ___flmul 1930                     ___flsub 39CA  
                   ___fltol 2F7E             __size_of___wmul 002E             __size_of_encInt 0048  
                 ?_vfprintf 00E1             __size_of_efgtoa 0B58                 ?_canRecInt2 0001  
           __size_of_floorf 01FC                     __pcinit 3048                     __ramtop 0800  
           ?_Lcd_Set_Cursor 001F                     __ptext0 12A0                     __ptext1 3968  
                   __ptext2 382E                     __ptext3 0C04                     __ptext4 3110  
                   __ptext5 00AC                     __ptext6 3A2A                     __ptext7 3BF8  
                   __ptext8 3902                     __ptext9 258C                   _T1CLKbits 003FB5  
                   _initCAN 3898             __CFG_WRTAPP$OFF 000000             __size_of_strcpy 0066  
           __size_of_strlen 0032                   _T1CONbits 003FB2                __size_of_abs 0040  
              __size_of_pad 00B8                     _isdigit 3C2C            ___awmod@dividend 001C  
                   _isspace 3AC8             __CFG_WRTSAF$OFF 000000                     _isupper 3BF8  
                   efgtoa@c 0083                     efgtoa@d 00A1                     efgtoa@e 00B9  
                   efgtoa@f 007F                     efgtoa@g 00B5                     efgtoa@h 00AB  
                   efgtoa@i 00B3                     efgtoa@l 00AF                     efgtoa@m 009D  
                   efgtoa@n 00BB                     efgtoa@p 00A5                     efgtoa@t 0099  
                   efgtoa@u 00BD                     efgtoa@w 00A8           __end_of_buzzerInt 3D66  
                   atoi@neg 0060                     _sprintf 3968                     _tolower 3A2A  
                   main@str 0165      __end_of_Lcd_Write_Char 3BC2                     _strncmp 3110  
                _playBuzzer 3D66        end_of_initialization 3106                     floorf@e 0077  
                   floorf@m 0073                     floorf@u 0079                     floorf@x 0028  
                   fputc@fp 001E               __Lmediumconst 7E98                     fputs@fp 0027  
                _tick_count 0108           __end_of_vfpfcnvrt 12A0                  efgtoa@mode 00AA  
                efgtoa@sign 00A3                     postdec1 003FE5                     postdec2 003FDD  
                   postinc0 003FEE                     postinc1 003FE6                     postinc2 003FDE  
                 Lcd_Port@a 001C                  ??_vfprintf 002D       __CFG_WDTCPS$WDTCPS_31 000000  
                   strcpy@d 0024                     strlen@a 001E                     strcpy@s 0022  
                   strlen@s 001C                   _PORTAbits 003FCA                   _PORTBbits 003FCB  
                 _PORTCbits 003FCC                 ___fladd@grs 002B                   _TRISAbits 003FC2  
                 _TRISBbits 003FC3                 ___fldiv@grs 0067                 ___fldiv@rem 0060  
          sendCANmessage@id 0002             ?_Lcd_Write_Char 0001           Lcd_Write_String@a 0022  
         Lcd_Write_String@i 0026         __size_of_canRecInt2 009C                 ___flmul@grs 0062  
                 _Lcd_Clear 3D3E                 ?_initBuzzer 0001              __end_of___flge 2F7E  
            __end_of___fleq 36B0              __end_of_adcInt 3D7E               __pidataBIGRAM 28F2  
               vfpfcnvrt@ap 00C5                 vfpfcnvrt@ct 00DD                 vfpfcnvrt@fp 00C1  
               vfpfcnvrt@ll 00CB              __end_of___wmul 3CF2            _Lcd_Write_String 3738  
            __end_of_encInt 3AC8               __pidataCOMRAM 3D70              __end_of_efgtoa 0C04  
            __end_of_floorf 2788          _charging_state_lut 0200                  floorf@F524 00F3  
            __end_of_strcpy 3968              __end_of_strlen 3C92         start_initialization 3048  
             _ADCvalueHigh0 003F               _ADCvalueHigh1 003B                 __end_of_abs 3B4C  
               __end_of_pad 328A                   _MenuYesNo 3474                 ?_playBuzzer 0001  
                ivt0x8_base 0008           __size_of_Lcd_Init 008C                 _CANSTATbits 003F8E  
         __size_of_Lcd_Port 002C              _max_tick_count 0043       __end_of___fpclassifyf 2DD6  
   __size_of_sendCANmessage 00D6            __CFG_LPBOREN$OFF 000000                 vfprintf@fmt 00E3  
                ?_Lcd_Clear 0001                    ??___flge 0028                    ??___fleq 0024  
                  ??_adcInt 0002                    ??___wmul 0020                    ??_encInt 0001  
                  ??_efgtoa 0084                 __pdataBANK1 01A9                 __pdataBANK2 0200  
                  ??_floorf 006D             Lcd_Write_Char@a 001F             Lcd_Write_Char@y 001E  
                  ??_strcpy 0020                    ??_strlen 001E                   ___fladd@a 0020  
                 ___fladd@b 001C                   ___fldiv@a 0020                   ___fldiv@b 001C  
                 ___flmul@a 0020                   ___flmul@b 001C                 __pbssCOMRAM 002D  
                 ___flsub@a 0071                   ___flsub@b 006D               __pcstackBANK0 0060  
             __pcstackBANK1 015B            ___aodiv@dividend 001C                 _BRGCON1bits 003703  
                ?_MenuYesNo 0001                   _canRecInt 3D4C            _charging_voltage 0100  
       __size_of_initBuzzer 0032                    ?_Lcd_Cmd 0001                   _atoi$2285 0062  
                 _atoi$2286 0066                   _atoi$2287 0064           canRecInt2@message 000C  
               _efgtoa$1781 008D                 _efgtoa$1790 0093                 _efgtoa$1782 008F  
               _efgtoa$1791 0095                 _efgtoa$1792 0097                 _efgtoa$1786 0091  
                 _dtoa$1757 007C            ??_Lcd_Set_Cursor 0020               __pmediumconst 7E98  
                  ?___aodiv 001C                    ?___fladd 001C                _master_state 0104  
                  ?___aomod 001C                    ?___fldiv 001C                    ?___awdiv 001C  
                  ?___flneg 001C            ___aodiv@quotient 0062                    ?___awmod 001C  
                  ?___flmul 001C                    ?___flsub 006D                    ?___fltol 001C  
              ??_canRecInt2 000A         __size_of_playBuzzer 000A           __size_of_vfprintf 006A  
                  ?_initCAN 0001      __CFG_BBSIZE$BBSIZE_512 000000                    ?_isdigit 001C  
                  ?_isspace 001C                    ?_isupper 001C                  ?_canRecInt 0001  
                  ?_sprintf 00E9                    ?_tolower 0022              __size_of_fputc 00AE  
            __size_of_fputs 003E                    ?_strncmp 001C              __size_of_putch 0002  
                 _buzzerInt 3D5C              ___wmul@product 0020          __end_of_canRecInt2 3474  
                  _PIE1bits 003991                    _PIE3bits 003993                    _PIE5bits 003995  
       __CFG_BORV$VBOR_2P45 000000                    Lcd_Cmd@a 001E                    _PIR1bits 0039A1  
                  _PIR3bits 0039A3                    _PIR5bits 0039A5                 ??_Lcd_Clear 001F  
                  _RXF0SIDH 0037A0                    _RXF1SIDH 0037A4                    _TXB0SIDH 0037E1  
                  _RXM0SIDH 0037B8                    _RXM1SIDH 0037BC                   _vfpfcnvrt 0C04  
                _ADCON0bits 003EF8           ___wmul@multiplier 001C            ??_Lcd_Write_Char 001D  
          _master_state_lut 028C                _isspace$2316 0022                    _Lcd_Init 359A  
                  _Lcd_Port 3CF2                 ??_MenuYesNo 0028                  vfpfcnvrt@c 00E0  
                vfpfcnvrt@f 00D9                 _INTCON0bits 003FD2                   copy_data0 305C  
                 copy_data1 3082                   copy_data2 30A4                   copy_data3 30C6  
                _CANCONbits 003F8F                  ?_buzzerInt 0001    __end_of_Lcd_Write_String 37BA  
            _min_tick_count 0037            __size_of_Lcd_Cmd 0020                 _enter_state 01AB  
            _sendCANmessage 2DD6                    __Hrparam 0000                  vfprintf@ap 00E5  
                  __Lrparam 0000                  vfprintf@fp 00E1          __CFG_BOREN$SBORDIS 000000  
              ??_initBuzzer 001C            __size_of___aodiv 015A            __size_of___fladd 0348  
          __size_of___aomod 0136            __size_of___fldiv 02AE            __size_of___awdiv 0088  
          __size_of___flneg 0036            __size_of___awmod 0074            __size_of___flmul 03B4  
          __size_of___flsub 0060            __size_of___fltol 00CA                  ?_vfpfcnvrt 00C1  
           ___aodiv@divisor 0024             ___aodiv@counter 0060                  _ANSELAbits 003A40  
                _ANSELBbits 003A50          ___fpclassifyf@F463 002D                  sprintf@fmt 00EB  
          __size_of_initCAN 006A                  _T0CON0bits 003FB8                  _T0CON1bits 003FB9  
              _RXF0SIDLbits 0037A1                    _feedback 0106            __size_of_isdigit 0034  
                  __pivt0x8 0008                _RXF1SIDLbits 0037A5            __size_of_isspace 0044  
                  __ptext10 2CEA                    __ptext11 2F7E                    __ptext20 36B0  
                  __ptext12 39CA                    __ptext21 202C                    __ptext13 1CE4  
                  __ptext30 2788                    __ptext22 31D2                    __ptext14 3BC2  
                  __ptext31 3AC8                    __ptext23 3C60                    __ptext15 1930  
                  __ptext40 359A                    __ptext32 3C2C                    __ptext24 3B4C  
                  __ptext16 2EAC                    __ptext41 3D3E                    __ptext33 3CC4  
                  __ptext25 328A                    __ptext17 3626                    __ptext50 3D4C  
                  __ptext42 3D1E                    __ptext34 3898                    __ptext26 3D78  
                  __ptext18 22DE                    __ptext43 3CF2                    __ptext35 3C92  
                  __ptext27 3B0C                    __ptext19 37BA                    __ptext44 3D5C  
                  __ptext36 3474                    __ptext28 2BB4                    __ptext45 3A80  
                  __ptext37 3738                    __ptext29 2A5A                    __ptext46 3D66  
                  __ptext38 3B8A                    __ptext47 3D7C                    __ptext39 3338  
                  __ptext48 33D8                    __ptext49 2DD6            __size_of_isupper 0034  
               ??_canRecInt 001C                ??_playBuzzer 0001            __size_of_sprintf 0062  
          __size_of_tolower 0054          __end_of_initBuzzer 3CC4                  strcpy@dest 001C  
          __size_of_strncmp 00C2      __end_of_sendCANmessage 2EAC               __size_of_atoi 016A  
             __size_of_main 0690               __size_of_dtoa 02B2        __CFG_WDTCWS$WDTCWS_7 000000  
              _TXB0SIDLbits 0037E2                    efgtoa@fp 007D                    efgtoa@ne 009F  
                  efgtoa@pp 009B                    efgtoa@ou 0089                    _vfprintf 382E  
        __end_of_playBuzzer 3D70            ___aomod@dividend 001C                _RXM0SIDLbits 0037B9  
               _RXB0CONbits 003F80                 _RXB1CONbits 0037F0              _vfpfcnvrt$1812 00D7  
            _vfpfcnvrt$1806 00D3              _vfpfcnvrt$1807 00D5                _RXM1SIDLbits 0037BD  
                  isdigit@c 001C          Lcd_Write_Char@temp 001D                    intlevel1 0000  
                  intlevel2 0000                   sprintf@ap 015D                 ??_buzzerInt 001C  
                  isspace@c 001C             ?_sendCANmessage 0002                 _TXB0DLCbits 0037E5  
         __CFG_CLKOUTEN$OFF 000000                 _TXB0CONbits 0037E0                   strcpy@src 001E  
                  isupper@c 001C                   strncmp@_l 001C                   strncmp@_r 001E  
               efgtoa@nmode 00A7             ___aomod@divisor 0024                 ??_vfpfcnvrt 00C7  
           ___aomod@counter 0060          Lcd_Set_Cursor@temp 0023                    sprintf@f 015F  
                  tolower@c 0022                    sprintf@s 00E9      __size_of___fpclassifyf 00EC  
                  strncmp@l 0023                    strncmp@n 0020                    strncmp@r 0025  
             ___fladd@signs 0028                ___aodiv@sign 0061                ___fladd@aexp 0029  
              ___fladd@bexp 002A                ___aomod@sign 0061  
