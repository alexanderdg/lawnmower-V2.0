

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat May 23 17:20:33 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F25K83
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=4,class=CODE,delta=1
    28                           	psect	text20,global,reloc=4,class=CODE,delta=1
    29                           	psect	text21,global,reloc=2,class=CODE,delta=1
    30                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33  0000                     
    34                           ; Version 2.05
    35                           ; Generated 20/12/2018 GMT
    36                           ; 
    37                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F25K83 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     _TXB0DLCbits	set	14309
    69  0000                     _TXB0SIDH	set	14305
    70  0000                     _TXB0SIDLbits	set	14306
    71  0000                     _TXB0D7	set	14317
    72  0000                     _TXB0D6	set	14316
    73  0000                     _TXB0D5	set	14315
    74  0000                     _TXB0D4	set	14314
    75  0000                     _TXB0D3	set	14313
    76  0000                     _TXB0D2	set	14312
    77  0000                     _TXB0D1	set	14311
    78  0000                     _TXB0D0	set	14310
    79  0000                     _TXB0CONbits	set	14304
    80  0000                     _RXB1CONbits	set	14320
    81  0000                     _RXM1SIDLbits	set	14269
    82  0000                     _RXM1SIDH	set	14268
    83  0000                     _RXF1SIDLbits	set	14245
    84  0000                     _RXF1SIDH	set	14244
    85  0000                     _RXM0SIDLbits	set	14265
    86  0000                     _RXM0SIDH	set	14264
    87  0000                     _RXF0SIDLbits	set	14241
    88  0000                     _RXF0SIDH	set	14240
    89  0000                     _BRGCON1bits	set	14083
    90  0000                     _PIR5bits	set	14757
    91  0000                     _PIE5bits	set	14741
    92  0000                     _OSCCON1	set	14809
    93  0000                     _RB2PPS	set	14858
    94  0000                     _ANSELBbits	set	14928
    95  0000                     _ANSELAbits	set	14912
    96  0000                     _I2C1SCLPPSbits	set	15075
    97  0000                     _I2C1SDAPPSbits	set	15076
    98  0000                     _RC4PPS	set	14868
    99  0000                     _RC3PPS	set	14867
   100  0000                     _PPSLOCKbits	set	15039
   101  0000                     _PPSLOCK	set	15039
   102  0000                     _RC4I2C	set	14955
   103  0000                     _SLRCONCbits	set	14947
   104  0000                     _RC3I2C	set	14954
   105  0000                     _ODCONCbits	set	14946
   106  0000                     _ANSELCbits	set	14944
   107  0000                     _I2C1ERRbits	set	15734
   108  0000                     _I2C1ERR	set	15734
   109  0000                     _I2C1PIR	set	15737
   110  0000                     _I2C1CLK	set	15739
   111  0000                     _I2C1CON2	set	15733
   112  0000                     _I2C1CON1	set	15732
   113  0000                     _I2C1CON0	set	15731
   114  0000                     _I2C1PIRbits	set	15737
   115  0000                     _I2C1RXB	set	15722
   116  0000                     _I2C1STAT1bits	set	15736
   117  0000                     _I2C1CON0bits	set	15731
   118  0000                     _I2C1CNT	set	15724
   119  0000                     _I2C1STAT0bits	set	15735
   120  0000                     _I2C1TXB	set	15723
   121  0000                     _I2C1ADB1	set	15726
   122  0000                     _ADRESL	set	16111
   123  0000                     _ADRESH	set	16112
   124  0000                     _ADPCHbits	set	16113
   125  0000                     _ADREFbits	set	16125
   126  0000                     _ADCLKbits	set	16127
   127  0000                     _ADCON0bits	set	16120
   128  0000                     _CANSTATbits	set	16270
   129  0000                     _CANCONbits	set	16271
   130  0000                     _PORTBbits	set	16331
   131  0000                     _TRISBbits	set	16323
   132  0000                     _TRISAbits	set	16322
   133  0000                     _TMR1L	set	16304
   134  0000                     _TMR1H	set	16305
   135  0000                     _T1CONbits	set	16306
   136  0000                     _T1CLK	set	16309
   137  0000                     _TRISCbits	set	16324
   138  0000                     _LATCbits	set	16316
   139  0000                     _RXB0D0	set	16262
   140  0000                     _RXB0CONbits	set	16256
   141  0000                     _PORTAbits	set	16330
   142  0000                     _PORTCbits	set	16332
   143  0000                     _INTCON0bits	set	16338
   144  0000                     _GIE	set	130711
   145                           
   146                           ; #config settings
   147  0000                     
   148                           	psect	cinit
   149  000BE8                     __pcinit:
   150                           	opt callstack 0
   151  000BE8                     start_initialization:
   152                           	opt callstack 0
   153  000BE8                     __initialization:
   154                           	opt callstack 0
   155                           
   156                           ; Clear objects allocated to COMRAM (24 bytes)
   157  000BE8  EE00  F027         	lfsr	0,__pbssCOMRAM
   158  000BEC  0E18               	movlw	24
   159  000BEE                     clear_0:
   160  000BEE  6AEE               	clrf	postinc0,c
   161  000BF0  06E8               	decf	wreg,f,c
   162  000BF2  E1FD               	bnz	clear_0
   163                           
   164                           ;
   165                           ; Setup IVTBASE
   166                           ;
   167  000BF4  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   168  000BF6  6ED5               	movwf	213,c
   169  000BF8  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   170  000BFA  6ED6               	movwf	214,c
   171  000BFC  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   172  000BFE  6ED7               	movwf	215,c
   173  000C00                     end_of_initialization:
   174                           	opt callstack 0
   175  000C00                     __end_of__initialization:
   176                           	opt callstack 0
   177  000C00  0E00               	movlw	low (__Lmediumconst shr (0+16))
   178  000C02  6EF8               	movwf	tblptru,c
   179  000C04  0100               	movlb	0
   180  000C06  EF56  F000         	goto	_main	;jump to C main() function
   181                           
   182                           	psect	bssCOMRAM
   183  000027                     __pbssCOMRAM:
   184                           	opt callstack 0
   185  000027                     _sign_perimeter:
   186                           	opt callstack 0
   187  000027                     	ds	2
   188  000029                     _perimeter:
   189                           	opt callstack 0
   190  000029                     	ds	2
   191  00002B                     _distance5:
   192                           	opt callstack 0
   193  00002B                     	ds	2
   194  00002D                     _distance4:
   195                           	opt callstack 0
   196  00002D                     	ds	2
   197  00002F                     _distance3:
   198                           	opt callstack 0
   199  00002F                     	ds	2
   200  000031                     _distance2:
   201                           	opt callstack 0
   202  000031                     	ds	2
   203  000033                     _distance1:
   204                           	opt callstack 0
   205  000033                     	ds	2
   206  000035                     _ADCvalueLow1:
   207                           	opt callstack 0
   208  000035                     	ds	2
   209  000037                     _ADCvalueHigh1:
   210                           	opt callstack 0
   211  000037                     	ds	2
   212  000039                     _ADCvalueLow0:
   213                           	opt callstack 0
   214  000039                     	ds	2
   215  00003B                     _ADCvalueHigh0:
   216                           	opt callstack 0
   217  00003B                     	ds	2
   218  00003D                     _con_perimeter:
   219                           	opt callstack 0
   220  00003D                     	ds	2
   221                           
   222                           	psect	cstackCOMRAM
   223  000001                     __pcstackCOMRAM:
   224                           	opt callstack 0
   225  000001                     sendCANmessage@id:
   226                           	opt callstack 0
   227                           
   228                           ; 2 bytes @ 0x0
   229  000001                     	ds	2
   230  000003                     sendCANmessage@message:
   231                           	opt callstack 0
   232                           
   233                           ; 2 bytes @ 0x2
   234  000003                     	ds	2
   235  000005                     sendCANmessage@length:
   236                           	opt callstack 0
   237                           
   238                           ; 2 bytes @ 0x4
   239  000005                     	ds	2
   240  000007                     ??_sendCANmessage:
   241                           
   242                           ; 1 bytes @ 0x6
   243  000007                     	ds	2
   244  000009                     ??_canRecInt:
   245                           
   246                           ; 1 bytes @ 0x8
   247  000009                     	ds	2
   248  00000B                     canRecInt@message:
   249                           	opt callstack 0
   250                           
   251                           ; 16 bytes @ 0xA
   252  00000B                     	ds	16
   253  00001B                     ?_waitForSensor1:
   254                           	opt callstack 0
   255  00001B                     ?_getDistance1:
   256                           	opt callstack 0
   257  00001B                     ?_waitForSensor2:
   258                           	opt callstack 0
   259  00001B                     ?_getDistance2:
   260                           	opt callstack 0
   261  00001B                     ?_waitForSensor3:
   262                           	opt callstack 0
   263  00001B                     ?_getDistance3:
   264                           	opt callstack 0
   265  00001B                     ?_waitForSensor4:
   266                           	opt callstack 0
   267  00001B                     ?_getDistance4:
   268                           	opt callstack 0
   269  00001B                     ?_waitForSensor5:
   270                           	opt callstack 0
   271  00001B                     ?_getDistance5:
   272                           	opt callstack 0
   273  00001B                     ?_readADC:
   274                           	opt callstack 0
   275  00001B                     ?_readI2C:
   276                           	opt callstack 0
   277  00001B                     readI2C@conOK:
   278                           	opt callstack 0
   279  00001B                     initI2C@state:
   280                           	opt callstack 0
   281  00001B                     readADC@ch:
   282                           	opt callstack 0
   283  00001B                     wait2US@i:
   284                           	opt callstack 0
   285  00001B                     wait10US@i:
   286                           	opt callstack 0
   287                           
   288                           ; 4 bytes @ 0x1A
   289  00001B                     	ds	2
   290  00001D                     ??_waitForSensor1:
   291  00001D                     ??_getDistance1:
   292  00001D                     ??_waitForSensor2:
   293  00001D                     ??_getDistance2:
   294  00001D                     ??_waitForSensor3:
   295  00001D                     ??_getDistance3:
   296  00001D                     ??_waitForSensor4:
   297  00001D                     ??_getDistance4:
   298  00001D                     ??_waitForSensor5:
   299  00001D                     ??_getDistance5:
   300  00001D                     ??_readADC:
   301  00001D                     readI2C@reg:
   302                           	opt callstack 0
   303                           
   304                           ; 1 bytes @ 0x1C
   305  00001D                     	ds	1
   306  00001E                     readI2C@data:
   307                           	opt callstack 0
   308                           
   309                           ; 1 bytes @ 0x1D
   310  00001E                     	ds	1
   311  00001F                     readI2C@counter:
   312                           	opt callstack 0
   313  00001F                     waitForSensor1@i:
   314                           	opt callstack 0
   315  00001F                     waitForSensor2@i:
   316                           	opt callstack 0
   317  00001F                     waitForSensor3@i:
   318                           	opt callstack 0
   319  00001F                     waitForSensor4@i:
   320                           	opt callstack 0
   321  00001F                     waitForSensor5@i:
   322                           	opt callstack 0
   323  00001F                     getDistance1@ticks:
   324                           	opt callstack 0
   325  00001F                     getDistance2@ticks:
   326                           	opt callstack 0
   327  00001F                     getDistance3@ticks:
   328                           	opt callstack 0
   329  00001F                     getDistance4@ticks:
   330                           	opt callstack 0
   331  00001F                     getDistance5@ticks:
   332                           	opt callstack 0
   333                           
   334                           ; 2 bytes @ 0x1E
   335  00001F                     	ds	2
   336  000021                     ??_main:
   337                           
   338                           ; 1 bytes @ 0x20
   339  000021                     	ds	2
   340  000023                     main@temp0:
   341                           	opt callstack 0
   342                           
   343                           ; 2 bytes @ 0x22
   344  000023                     	ds	2
   345  000025                     main@temp1:
   346                           	opt callstack 0
   347                           
   348                           ; 2 bytes @ 0x24
   349  000025                     	ds	2
   350                           
   351 ;;
   352 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   353 ;;
   354 ;; *************** function _main *****************
   355 ;; Defined at:
   356 ;;		line 100 in file "MainCode.c"
   357 ;; Parameters:    Size  Location     Type
   358 ;;		None
   359 ;; Auto vars:     Size  Location     Type
   360 ;;  temp1           2   36[COMRAM] int 
   361 ;;  temp0           2   34[COMRAM] int 
   362 ;; Return value:  Size  Location     Type
   363 ;;                  2  222[None  ] int 
   364 ;; Registers used:
   365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   366 ;; Tracked objects:
   367 ;;		On entry : 0/0
   368 ;;		On exit  : 0/0
   369 ;;		Unchanged: 0/0
   370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   371 ;;      Params:         0       0       0       0       0       0       0       0       0
   372 ;;      Locals:         4       0       0       0       0       0       0       0       0
   373 ;;      Temps:          2       0       0       0       0       0       0       0       0
   374 ;;      Totals:         6       0       0       0       0       0       0       0       0
   375 ;;Total ram usage:        6 bytes
   376 ;; Hardware stack levels required when called:    3
   377 ;; This function calls:
   378 ;;		_getDistance1
   379 ;;		_getDistance2
   380 ;;		_getDistance3
   381 ;;		_getDistance4
   382 ;;		_getDistance5
   383 ;;		_initADC
   384 ;;		_initCAN
   385 ;;		_initHCSR04
   386 ;;		_initI2C
   387 ;;		_readADC
   388 ;;		_readI2C
   389 ;;		_wait10US
   390 ;;		_wait2US
   391 ;;		_waitForSensor1
   392 ;;		_waitForSensor2
   393 ;;		_waitForSensor3
   394 ;;		_waitForSensor4
   395 ;;		_waitForSensor5
   396 ;; This function is called by:
   397 ;;		Startup code after reset
   398 ;; This function uses a non-reentrant model
   399 ;;
   400                           
   401                           	psect	text0
   402  0000AC                     __ptext0:
   403                           	opt callstack 0
   404  0000AC                     _main:
   405                           	opt callstack 28
   406                           
   407                           ;MainCode.c: 102:             distance4 = getDistance4();
   408                           
   409                           ;incstack = 0
   410  0000AC  0E60               	movlw	96
   411  0000AE  0139               	movlb	57	; () banked
   412  0000B0  6FD9               	movwf	217,b	;volatile
   413                           
   414                           ; BSR set to: 57
   415                           ;MainCode.c: 103:         } else distance4 = -1;
   416  0000B2  EC31  F003         	call	_initCAN	;wreg free
   417                           
   418                           ;MainCode.c: 105: 
   419  0000B6  ECDD  F005         	call	_initADC	;wreg free
   420                           
   421                           ;MainCode.c: 106:         PORTAbits.RA2 = 0;
   422  0000BA  EC64  F005         	call	_initHCSR04	;wreg free
   423                           
   424                           ;MainCode.c: 107:         wait2US();
   425  0000BE  ECEF  F002         	call	_initI2C	;wreg free
   426                           
   427                           ;MainCode.c: 109:         wait10US();
   428  0000C2  8CD2               	bsf	16338,6,c	;volatile
   429                           
   430                           ;MainCode.c: 111:         if (waitForSensor5() == 1) {
   431  0000C4  9AD2               	bcf	16338,5,c	;volatile
   432                           
   433                           ;MainCode.c: 113:         } else distance5 = -1;
   434  0000C6  0139               	movlb	57	; () banked
   435  0000C8  8195               	bsf	149,0,b	;volatile
   436                           
   437                           ; BSR set to: 57
   438                           ;MainCode.c: 114:         wait10US();
   439  0000CA  8395               	bsf	149,1,b	;volatile
   440                           
   441                           ; BSR set to: 57
   442                           ;MainCode.c: 115: 
   443  0000CC  8ED2               	bsf	16338,7,c	;volatile
   444  0000CE                     l1977:
   445                           
   446                           ;MainCode.c: 122:         perimeter = readI2C(0x09, &con_perimeter);
   447  0000CE  92CC               	bcf	16332,1,c	;volatile
   448                           
   449                           ;MainCode.c: 123:         sign_perimeter = readI2C(0x0A, &con_perimeter);
   450  0000D0  ECA7  F005         	call	_wait2US	;wreg free
   451                           
   452                           ;MainCode.c: 124: 
   453  0000D4  82CC               	bsf	16332,1,c	;volatile
   454                           
   455                           ;MainCode.c: 125:     }
   456  0000D6  ECC2  F005         	call	_wait10US	;wreg free
   457                           
   458                           ;MainCode.c: 126:     return 0;
   459  0000DA  92CC               	bcf	16332,1,c	;volatile
   460                           
   461                           ;MainCode.c: 127: }
   462  0000DC  EC32  F004         	call	_waitForSensor1	;wreg free
   463  0000E0  041B               	decf	?_waitForSensor1,w,c
   464  0000E2  101C               	iorwf	?_waitForSensor1+1,w,c
   465  0000E4  A4D8               	btfss	status,2,c
   466  0000E6  D009               	goto	l224
   467                           
   468                           ;MainCode.c: 128: 
   469  0000E8  EC31  F005         	call	_getDistance1	;wreg free
   470  0000EC  0060  F06C  F033   	movff	?_getDistance1,_distance1
   471  0000F2  0060  F070  F034   	movff	?_getDistance1+1,_distance1+1
   472                           
   473                           ;MainCode.c: 129: void __attribute__((picinterrupt(("irq(AD), high_priority")))) adcInt(
      +                          void) {
   474  0000F8  D002               	goto	l1991
   475  0000FA                     l224:
   476  0000FA  6833               	setf	_distance1,c
   477  0000FC  6834               	setf	_distance1+1,c
   478  0000FE                     l1991:
   479                           
   480                           ;MainCode.c: 130: 
   481  0000FE  ECC2  F005         	call	_wait10US	;wreg free
   482                           
   483                           ;MainCode.c: 133: }
   484  000102  94CC               	bcf	16332,2,c	;volatile
   485                           
   486                           ;MainCode.c: 134: 
   487  000104  ECA7  F005         	call	_wait2US	;wreg free
   488                           
   489                           ;MainCode.c: 135: void __attribute__((picinterrupt(("irq(RXB0IF), high_priority")))) can
      +                          RecInt(void) {
   490  000108  84CC               	bsf	16332,2,c	;volatile
   491                           
   492                           ;MainCode.c: 136: 
   493  00010A  ECC2  F005         	call	_wait10US	;wreg free
   494                           
   495                           ;MainCode.c: 137:     if (RXB0CONbits.RXFUL == 1) {
   496  00010E  94CC               	bcf	16332,2,c	;volatile
   497                           
   498                           ;MainCode.c: 138: 
   499  000110  ECFF  F003         	call	_waitForSensor2	;wreg free
   500  000114  041B               	decf	?_waitForSensor2,w,c
   501  000116  101C               	iorwf	?_waitForSensor2+1,w,c
   502  000118  A4D8               	btfss	status,2,c
   503  00011A  D009               	goto	l226
   504                           
   505                           ;MainCode.c: 139: 
   506  00011C  ECFE  F004         	call	_getDistance2	;wreg free
   507  000120  0060  F06C  F031   	movff	?_getDistance2,_distance2
   508  000126  0060  F070  F032   	movff	?_getDistance2+1,_distance2+1
   509                           
   510                           ;MainCode.c: 140:         int message[8];
   511  00012C  D002               	goto	l2001
   512  00012E                     l226:
   513  00012E  6831               	setf	_distance2,c
   514  000130  6832               	setf	_distance2+1,c
   515  000132                     l2001:
   516                           
   517                           ;MainCode.c: 141:         switch (RXB0D0) {
   518  000132  ECC2  F005         	call	_wait10US	;wreg free
   519                           
   520                           ;MainCode.c: 143: 
   521  000136  9ECC               	bcf	16332,7,c	;volatile
   522                           
   523                           ;MainCode.c: 144:             case 0:
   524  000138  ECA7  F005         	call	_wait2US	;wreg free
   525                           
   526                           ;MainCode.c: 145:                 message[0] = 1;
   527  00013C  8ECC               	bsf	16332,7,c	;volatile
   528                           
   529                           ;MainCode.c: 146:                 sendCANmessage(0, message, 1);
   530  00013E  ECC2  F005         	call	_wait10US	;wreg free
   531                           
   532                           ;MainCode.c: 147:                 break;
   533  000142  9ECC               	bcf	16332,7,c	;volatile
   534                           
   535                           ;MainCode.c: 148:             case 1:
   536  000144  ECCC  F003         	call	_waitForSensor3	;wreg free
   537  000148  041B               	decf	?_waitForSensor3,w,c
   538  00014A  101C               	iorwf	?_waitForSensor3+1,w,c
   539  00014C  A4D8               	btfss	status,2,c
   540  00014E  D009               	goto	l228
   541                           
   542                           ;MainCode.c: 149:                 message[0] = ADCvalueHigh0;
   543  000150  ECCB  F004         	call	_getDistance3	;wreg free
   544  000154  0060  F06C  F02F   	movff	?_getDistance3,_distance3
   545  00015A  0060  F070  F030   	movff	?_getDistance3+1,_distance3+1
   546                           
   547                           ;MainCode.c: 150:                 message[1] = ADCvalueLow0;
   548  000160  D002               	goto	l2011
   549  000162                     l228:
   550  000162  682F               	setf	_distance3,c
   551  000164  6830               	setf	_distance3+1,c
   552  000166                     l2011:
   553                           
   554                           ;MainCode.c: 151:                 sendCANmessage(0, message, 2);
   555  000166  ECC2  F005         	call	_wait10US	;wreg free
   556                           
   557                           ;MainCode.c: 153:             case 2:
   558  00016A  92CA               	bcf	16330,1,c	;volatile
   559                           
   560                           ;MainCode.c: 154:                 message[0] = ADCvalueHigh1;
   561  00016C  ECA7  F005         	call	_wait2US	;wreg free
   562                           
   563                           ;MainCode.c: 155:                 message[1] = ADCvalueLow1;
   564  000170  82CA               	bsf	16330,1,c	;volatile
   565                           
   566                           ;MainCode.c: 156:                 sendCANmessage(0, message, 2);
   567  000172  ECC2  F005         	call	_wait10US	;wreg free
   568                           
   569                           ;MainCode.c: 157:                 break;
   570  000176  92CA               	bcf	16330,1,c	;volatile
   571                           
   572                           ;MainCode.c: 158:             case 3:
   573  000178  EC99  F003         	call	_waitForSensor4	;wreg free
   574  00017C  041B               	decf	?_waitForSensor4,w,c
   575  00017E  101C               	iorwf	?_waitForSensor4+1,w,c
   576  000180  A4D8               	btfss	status,2,c
   577  000182  D009               	goto	l230
   578                           
   579                           ;MainCode.c: 159:                 message[0] = distance1 >> 8 & 0xFF;
   580  000184  EC98  F004         	call	_getDistance4	;wreg free
   581  000188  0060  F06C  F02D   	movff	?_getDistance4,_distance4
   582  00018E  0060  F070  F02E   	movff	?_getDistance4+1,_distance4+1
   583                           
   584                           ;MainCode.c: 160:                 message[1] = distance1 & 0xFF;
   585  000194  D002               	goto	l2021
   586  000196                     l230:
   587  000196  682D               	setf	_distance4,c
   588  000198  682E               	setf	_distance4+1,c
   589  00019A                     l2021:
   590                           
   591                           ;MainCode.c: 161:                 sendCANmessage(0, message, 2);
   592  00019A  ECC2  F005         	call	_wait10US	;wreg free
   593                           
   594                           ;MainCode.c: 163:             case 4:
   595  00019E  94CA               	bcf	16330,2,c	;volatile
   596                           
   597                           ;MainCode.c: 164:                 message[0] = distance2 >> 8 & 0xFF;
   598  0001A0  ECA7  F005         	call	_wait2US	;wreg free
   599                           
   600                           ;MainCode.c: 165:                 message[1] = distance2 & 0xFF;
   601  0001A4  84CA               	bsf	16330,2,c	;volatile
   602                           
   603                           ;MainCode.c: 166:                 sendCANmessage(0, message, 2);
   604  0001A6  ECC2  F005         	call	_wait10US	;wreg free
   605                           
   606                           ;MainCode.c: 167:                 break;
   607  0001AA  94CA               	bcf	16330,2,c	;volatile
   608                           
   609                           ;MainCode.c: 168:             case 5:
   610  0001AC  EC66  F003         	call	_waitForSensor5	;wreg free
   611  0001B0  041B               	decf	?_waitForSensor5,w,c
   612  0001B2  101C               	iorwf	?_waitForSensor5+1,w,c
   613  0001B4  A4D8               	btfss	status,2,c
   614  0001B6  D009               	goto	l232
   615                           
   616                           ;MainCode.c: 169:                 message[0] = distance3 >> 8 & 0xFF;
   617  0001B8  EC65  F004         	call	_getDistance5	;wreg free
   618  0001BC  0060  F06C  F02B   	movff	?_getDistance5,_distance5
   619  0001C2  0060  F070  F02C   	movff	?_getDistance5+1,_distance5+1
   620                           
   621                           ;MainCode.c: 170:                 message[1] = distance3 & 0xFF;
   622  0001C8  D002               	goto	l2031
   623  0001CA                     l232:
   624  0001CA  682B               	setf	_distance5,c
   625  0001CC  682C               	setf	_distance5+1,c
   626  0001CE                     l2031:
   627                           
   628                           ;MainCode.c: 171:                 sendCANmessage(0, message, 2);
   629  0001CE  ECC2  F005         	call	_wait10US	;wreg free
   630                           
   631                           ;MainCode.c: 173:             case 6:
   632  0001D2  0E00               	movlw	0
   633  0001D4  6E1C               	movwf	readADC@ch+1,c
   634  0001D6  0E00               	movlw	0
   635  0001D8  6E1B               	movwf	readADC@ch,c
   636  0001DA  EC87  F005         	call	_readADC	;wreg free
   637  0001DE  0060  F06C  F023   	movff	?_readADC,main@temp0
   638  0001E4  0060  F070  F024   	movff	?_readADC+1,main@temp0+1
   639                           
   640                           ;MainCode.c: 174:                 message[0] = distance4 >> 8 & 0xFF;
   641  0001EA  0E00               	movlw	0
   642  0001EC  6E1C               	movwf	readADC@ch+1,c
   643  0001EE  0E01               	movlw	1
   644  0001F0  6E1B               	movwf	readADC@ch,c
   645  0001F2  EC87  F005         	call	_readADC	;wreg free
   646  0001F6  0060  F06C  F025   	movff	?_readADC,main@temp1
   647  0001FC  0060  F070  F026   	movff	?_readADC+1,main@temp1+1
   648                           
   649                           ;MainCode.c: 175:                 message[1] = distance4 & 0xFF;
   650  000202  0060  F090  F021   	movff	main@temp0+1,??_main
   651  000208  6A22               	clrf	(??_main+1)& (0+255),c
   652  00020A  BE21               	btfsc	??_main& (0+255),7,c
   653  00020C  6822               	setf	(??_main+1)& (0+255),c
   654  00020E  5021               	movf	??_main,w,c
   655  000210  6E3B               	movwf	_ADCvalueHigh0,c
   656  000212  6A3C               	clrf	_ADCvalueHigh0+1,c
   657                           
   658                           ;MainCode.c: 176:                 sendCANmessage(0, message, 2);
   659  000214  5023               	movf	main@temp0,w,c
   660  000216  6E39               	movwf	_ADCvalueLow0,c
   661  000218  6A3A               	clrf	_ADCvalueLow0+1,c
   662                           
   663                           ;MainCode.c: 177:                 break;
   664  00021A  0060  F098  F021   	movff	main@temp1+1,??_main
   665  000220  6A22               	clrf	(??_main+1)& (0+255),c
   666  000222  BE21               	btfsc	??_main& (0+255),7,c
   667  000224  6822               	setf	(??_main+1)& (0+255),c
   668  000226  5021               	movf	??_main,w,c
   669  000228  6E37               	movwf	_ADCvalueHigh1,c
   670  00022A  6A38               	clrf	_ADCvalueHigh1+1,c
   671                           
   672                           ;MainCode.c: 178:             case 7:
   673  00022C  5025               	movf	main@temp1,w,c
   674  00022E  6E35               	movwf	_ADCvalueLow1,c
   675  000230  6A36               	clrf	_ADCvalueLow1+1,c
   676                           
   677                           ;MainCode.c: 179:                 message[0] = distance5 >> 8 & 0xFF;
   678  000232  0E3D               	movlw	low _con_perimeter
   679  000234  6E1B               	movwf	readI2C@conOK,c
   680  000236  0E00               	movlw	high _con_perimeter
   681  000238  6E1C               	movwf	readI2C@conOK+1,c
   682  00023A  0E09               	movlw	9
   683  00023C  ECF3  F001         	call	_readI2C
   684  000240  0060  F06C  F029   	movff	?_readI2C,_perimeter
   685  000246  0060  F070  F02A   	movff	?_readI2C+1,_perimeter+1
   686                           
   687                           ;MainCode.c: 180:                 message[1] = distance5 & 0xFF;
   688  00024C  0E3D               	movlw	low _con_perimeter
   689  00024E  6E1B               	movwf	readI2C@conOK,c
   690  000250  0E00               	movlw	high _con_perimeter
   691  000252  6E1C               	movwf	readI2C@conOK+1,c
   692  000254  0E0A               	movlw	10
   693  000256  ECF3  F001         	call	_readI2C
   694  00025A  0060  F06C  F027   	movff	?_readI2C,_sign_perimeter
   695  000260  0060  F070  F028   	movff	?_readI2C+1,_sign_perimeter+1
   696  000266  D733               	goto	l1977
   697  000268                     __end_of_main:
   698                           	opt callstack 0
   699                           
   700 ;; *************** function _waitForSensor5 *****************
   701 ;; Defined at:
   702 ;;		line 506 in file "MainCode.c"
   703 ;; Parameters:    Size  Location     Type
   704 ;;		None
   705 ;; Auto vars:     Size  Location     Type
   706 ;;  i               2   30[COMRAM] int 
   707 ;; Return value:  Size  Location     Type
   708 ;;                  2   26[COMRAM] int 
   709 ;; Registers used:
   710 ;;		wreg, status,2, status,0
   711 ;; Tracked objects:
   712 ;;		On entry : 0/0
   713 ;;		On exit  : 0/0
   714 ;;		Unchanged: 0/0
   715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   716 ;;      Params:         2       0       0       0       0       0       0       0       0
   717 ;;      Locals:         2       0       0       0       0       0       0       0       0
   718 ;;      Temps:          2       0       0       0       0       0       0       0       0
   719 ;;      Totals:         6       0       0       0       0       0       0       0       0
   720 ;;Total ram usage:        6 bytes
   721 ;; Hardware stack levels used:    1
   722 ;; Hardware stack levels required when called:    2
   723 ;; This function calls:
   724 ;;		Nothing
   725 ;; This function is called by:
   726 ;;		_main
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           	psect	text1
   731  0006CC                     __ptext1:
   732                           	opt callstack 0
   733  0006CC                     _waitForSensor5:
   734                           	opt callstack 28
   735                           
   736                           ;MainCode.c: 507:     int i = 0;
   737                           
   738                           ;incstack = 0
   739  0006CC  0E00               	movlw	0
   740  0006CE  6E20               	movwf	waitForSensor5@i+1,c
   741  0006D0  0E00               	movlw	0
   742  0006D2  6E1F               	movwf	waitForSensor5@i,c
   743                           
   744                           ;MainCode.c: 508:     TMR1H = 0;
   745  0006D4  0E00               	movlw	0
   746  0006D6  6EB1               	movwf	16305,c	;volatile
   747                           
   748                           ;MainCode.c: 509:     TMR1L = 0;
   749  0006D8  0E00               	movlw	0
   750  0006DA  6EB0               	movwf	16304,c	;volatile
   751                           
   752                           ;MainCode.c: 510:     T1CONbits.TMR1ON = 1;
   753  0006DC  80B2               	bsf	16306,0,c	;volatile
   754                           
   755                           ;MainCode.c: 511:     while (!PORTAbits.RA4 && (i < 10000))
   756  0006DE  D00D               	goto	l1823
   757  0006E0                     l1821:
   758                           
   759                           ;MainCode.c: 512:         i = (TMR1H << 8) | TMR1L;
   760  0006E0  50B0               	movf	16304,w,c	;volatile
   761  0006E2  006F FEC4  F01D    	movff	16305,??_waitForSensor5	;volatile
   762  0006E8  6A1E               	clrf	(??_waitForSensor5+1)& (0+255),c
   763  0006EA  0060  F074  F01E   	movff	??_waitForSensor5,??_waitForSensor5+1
   764  0006F0  6A1D               	clrf	??_waitForSensor5,c
   765  0006F2  101D               	iorwf	??_waitForSensor5,w,c
   766  0006F4  6E1F               	movwf	waitForSensor5@i,c
   767  0006F6  501E               	movf	??_waitForSensor5+1,w,c
   768  0006F8  6E20               	movwf	waitForSensor5@i+1,c
   769  0006FA                     l1823:
   770                           
   771                           ;MainCode.c: 511:     while (!PORTAbits.RA4 && (i < 10000))
   772  0006FA  B8CA               	btfsc	16330,4,c	;volatile
   773  0006FC  D008               	goto	u840
   774  0006FE  BE20               	btfsc	waitForSensor5@i+1,7,c
   775  000700  D7EF               	goto	l1821
   776  000702  0E10               	movlw	16
   777  000704  5C1F               	subwf	waitForSensor5@i,w,c
   778  000706  0E27               	movlw	39
   779  000708  5820               	subwfb	waitForSensor5@i+1,w,c
   780  00070A  A0D8               	btfss	status,0,c
   781  00070C  D7E9               	goto	l1821
   782  00070E                     u840:
   783                           
   784                           ;MainCode.c: 513:     if (i >= 10000)
   785  00070E  BE20               	btfsc	waitForSensor5@i+1,7,c
   786  000710  D00B               	goto	l1835
   787  000712  0E10               	movlw	16
   788  000714  5C1F               	subwf	waitForSensor5@i,w,c
   789  000716  0E27               	movlw	39
   790  000718  5820               	subwfb	waitForSensor5@i+1,w,c
   791  00071A  A0D8               	btfss	status,0,c
   792  00071C  D005               	goto	l1835
   793                           
   794                           ;MainCode.c: 514:         return 0;
   795  00071E  0E00               	movlw	0
   796  000720  6E1C               	movwf	?_waitForSensor5+1,c
   797  000722  0E00               	movlw	0
   798  000724  6E1B               	movwf	?_waitForSensor5,c
   799  000726  0012               	return	
   800  000728                     l1835:
   801                           
   802                           ;MainCode.c: 516:         return 1;
   803  000728  0E00               	movlw	0
   804  00072A  6E1C               	movwf	?_waitForSensor5+1,c
   805  00072C  0E01               	movlw	1
   806  00072E  6E1B               	movwf	?_waitForSensor5,c
   807  000730  0012               	return		;funcret
   808  000732                     __end_of_waitForSensor5:
   809                           	opt callstack 0
   810                           
   811 ;; *************** function _waitForSensor4 *****************
   812 ;; Defined at:
   813 ;;		line 493 in file "MainCode.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;		None
   816 ;; Auto vars:     Size  Location     Type
   817 ;;  i               2   30[COMRAM] int 
   818 ;; Return value:  Size  Location     Type
   819 ;;                  2   26[COMRAM] int 
   820 ;; Registers used:
   821 ;;		wreg, status,2, status,0
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   827 ;;      Params:         2       0       0       0       0       0       0       0       0
   828 ;;      Locals:         2       0       0       0       0       0       0       0       0
   829 ;;      Temps:          2       0       0       0       0       0       0       0       0
   830 ;;      Totals:         6       0       0       0       0       0       0       0       0
   831 ;;Total ram usage:        6 bytes
   832 ;; Hardware stack levels used:    1
   833 ;; Hardware stack levels required when called:    2
   834 ;; This function calls:
   835 ;;		Nothing
   836 ;; This function is called by:
   837 ;;		_main
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           	psect	text2
   842  000732                     __ptext2:
   843                           	opt callstack 0
   844  000732                     _waitForSensor4:
   845                           	opt callstack 28
   846                           
   847                           ;MainCode.c: 494:     int i = 0;
   848                           
   849                           ;incstack = 0
   850  000732  0E00               	movlw	0
   851  000734  6E20               	movwf	waitForSensor4@i+1,c
   852  000736  0E00               	movlw	0
   853  000738  6E1F               	movwf	waitForSensor4@i,c
   854                           
   855                           ;MainCode.c: 495:     TMR1H = 0;
   856  00073A  0E00               	movlw	0
   857  00073C  6EB1               	movwf	16305,c	;volatile
   858                           
   859                           ;MainCode.c: 496:     TMR1L = 0;
   860  00073E  0E00               	movlw	0
   861  000740  6EB0               	movwf	16304,c	;volatile
   862                           
   863                           ;MainCode.c: 497:     T1CONbits.TMR1ON = 1;
   864  000742  80B2               	bsf	16306,0,c	;volatile
   865                           
   866                           ;MainCode.c: 498:     while (!PORTBbits.RB4 && (i < 10000))
   867  000744  D00D               	goto	l1787
   868  000746                     l1785:
   869                           
   870                           ;MainCode.c: 499:         i = (TMR1H << 8) | TMR1L;
   871  000746  50B0               	movf	16304,w,c	;volatile
   872  000748  006F FEC4  F01D    	movff	16305,??_waitForSensor4	;volatile
   873  00074E  6A1E               	clrf	(??_waitForSensor4+1)& (0+255),c
   874  000750  0060  F074  F01E   	movff	??_waitForSensor4,??_waitForSensor4+1
   875  000756  6A1D               	clrf	??_waitForSensor4,c
   876  000758  101D               	iorwf	??_waitForSensor4,w,c
   877  00075A  6E1F               	movwf	waitForSensor4@i,c
   878  00075C  501E               	movf	??_waitForSensor4+1,w,c
   879  00075E  6E20               	movwf	waitForSensor4@i+1,c
   880  000760                     l1787:
   881                           
   882                           ;MainCode.c: 498:     while (!PORTBbits.RB4 && (i < 10000))
   883  000760  B8CB               	btfsc	16331,4,c	;volatile
   884  000762  D008               	goto	u780
   885  000764  BE20               	btfsc	waitForSensor4@i+1,7,c
   886  000766  D7EF               	goto	l1785
   887  000768  0E10               	movlw	16
   888  00076A  5C1F               	subwf	waitForSensor4@i,w,c
   889  00076C  0E27               	movlw	39
   890  00076E  5820               	subwfb	waitForSensor4@i+1,w,c
   891  000770  A0D8               	btfss	status,0,c
   892  000772  D7E9               	goto	l1785
   893  000774                     u780:
   894                           
   895                           ;MainCode.c: 500:     if (i >= 10000)
   896  000774  BE20               	btfsc	waitForSensor4@i+1,7,c
   897  000776  D00B               	goto	l1799
   898  000778  0E10               	movlw	16
   899  00077A  5C1F               	subwf	waitForSensor4@i,w,c
   900  00077C  0E27               	movlw	39
   901  00077E  5820               	subwfb	waitForSensor4@i+1,w,c
   902  000780  A0D8               	btfss	status,0,c
   903  000782  D005               	goto	l1799
   904                           
   905                           ;MainCode.c: 501:         return 0;
   906  000784  0E00               	movlw	0
   907  000786  6E1C               	movwf	?_waitForSensor4+1,c
   908  000788  0E00               	movlw	0
   909  00078A  6E1B               	movwf	?_waitForSensor4,c
   910  00078C  0012               	return	
   911  00078E                     l1799:
   912                           
   913                           ;MainCode.c: 503:         return 1;
   914  00078E  0E00               	movlw	0
   915  000790  6E1C               	movwf	?_waitForSensor4+1,c
   916  000792  0E01               	movlw	1
   917  000794  6E1B               	movwf	?_waitForSensor4,c
   918  000796  0012               	return		;funcret
   919  000798                     __end_of_waitForSensor4:
   920                           	opt callstack 0
   921                           
   922 ;; *************** function _waitForSensor3 *****************
   923 ;; Defined at:
   924 ;;		line 480 in file "MainCode.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;		None
   927 ;; Auto vars:     Size  Location     Type
   928 ;;  i               2   30[COMRAM] int 
   929 ;; Return value:  Size  Location     Type
   930 ;;                  2   26[COMRAM] int 
   931 ;; Registers used:
   932 ;;		wreg, status,2, status,0
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   938 ;;      Params:         2       0       0       0       0       0       0       0       0
   939 ;;      Locals:         2       0       0       0       0       0       0       0       0
   940 ;;      Temps:          2       0       0       0       0       0       0       0       0
   941 ;;      Totals:         6       0       0       0       0       0       0       0       0
   942 ;;Total ram usage:        6 bytes
   943 ;; Hardware stack levels used:    1
   944 ;; Hardware stack levels required when called:    2
   945 ;; This function calls:
   946 ;;		Nothing
   947 ;; This function is called by:
   948 ;;		_main
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           	psect	text3
   953  000798                     __ptext3:
   954                           	opt callstack 0
   955  000798                     _waitForSensor3:
   956                           	opt callstack 28
   957                           
   958                           ;MainCode.c: 481:     int i = 0;
   959                           
   960                           ;incstack = 0
   961  000798  0E00               	movlw	0
   962  00079A  6E20               	movwf	waitForSensor3@i+1,c
   963  00079C  0E00               	movlw	0
   964  00079E  6E1F               	movwf	waitForSensor3@i,c
   965                           
   966                           ;MainCode.c: 482:     TMR1H = 0;
   967  0007A0  0E00               	movlw	0
   968  0007A2  6EB1               	movwf	16305,c	;volatile
   969                           
   970                           ;MainCode.c: 483:     TMR1L = 0;
   971  0007A4  0E00               	movlw	0
   972  0007A6  6EB0               	movwf	16304,c	;volatile
   973                           
   974                           ;MainCode.c: 484:     T1CONbits.TMR1ON = 1;
   975  0007A8  80B2               	bsf	16306,0,c	;volatile
   976                           
   977                           ;MainCode.c: 485:     while (!PORTAbits.RA5 && (i < 10000))
   978  0007AA  D00D               	goto	l1751
   979  0007AC                     l1749:
   980                           
   981                           ;MainCode.c: 486:         i = (TMR1H << 8) | TMR1L;
   982  0007AC  50B0               	movf	16304,w,c	;volatile
   983  0007AE  006F FEC4  F01D    	movff	16305,??_waitForSensor3	;volatile
   984  0007B4  6A1E               	clrf	(??_waitForSensor3+1)& (0+255),c
   985  0007B6  0060  F074  F01E   	movff	??_waitForSensor3,??_waitForSensor3+1
   986  0007BC  6A1D               	clrf	??_waitForSensor3,c
   987  0007BE  101D               	iorwf	??_waitForSensor3,w,c
   988  0007C0  6E1F               	movwf	waitForSensor3@i,c
   989  0007C2  501E               	movf	??_waitForSensor3+1,w,c
   990  0007C4  6E20               	movwf	waitForSensor3@i+1,c
   991  0007C6                     l1751:
   992                           
   993                           ;MainCode.c: 485:     while (!PORTAbits.RA5 && (i < 10000))
   994  0007C6  BACA               	btfsc	16330,5,c	;volatile
   995  0007C8  D008               	goto	u720
   996  0007CA  BE20               	btfsc	waitForSensor3@i+1,7,c
   997  0007CC  D7EF               	goto	l1749
   998  0007CE  0E10               	movlw	16
   999  0007D0  5C1F               	subwf	waitForSensor3@i,w,c
  1000  0007D2  0E27               	movlw	39
  1001  0007D4  5820               	subwfb	waitForSensor3@i+1,w,c
  1002  0007D6  A0D8               	btfss	status,0,c
  1003  0007D8  D7E9               	goto	l1749
  1004  0007DA                     u720:
  1005                           
  1006                           ;MainCode.c: 487:     if (i >= 10000)
  1007  0007DA  BE20               	btfsc	waitForSensor3@i+1,7,c
  1008  0007DC  D00B               	goto	l1763
  1009  0007DE  0E10               	movlw	16
  1010  0007E0  5C1F               	subwf	waitForSensor3@i,w,c
  1011  0007E2  0E27               	movlw	39
  1012  0007E4  5820               	subwfb	waitForSensor3@i+1,w,c
  1013  0007E6  A0D8               	btfss	status,0,c
  1014  0007E8  D005               	goto	l1763
  1015                           
  1016                           ;MainCode.c: 488:         return 0;
  1017  0007EA  0E00               	movlw	0
  1018  0007EC  6E1C               	movwf	?_waitForSensor3+1,c
  1019  0007EE  0E00               	movlw	0
  1020  0007F0  6E1B               	movwf	?_waitForSensor3,c
  1021  0007F2  0012               	return	
  1022  0007F4                     l1763:
  1023                           
  1024                           ;MainCode.c: 490:         return 1;
  1025  0007F4  0E00               	movlw	0
  1026  0007F6  6E1C               	movwf	?_waitForSensor3+1,c
  1027  0007F8  0E01               	movlw	1
  1028  0007FA  6E1B               	movwf	?_waitForSensor3,c
  1029  0007FC  0012               	return		;funcret
  1030  0007FE                     __end_of_waitForSensor3:
  1031                           	opt callstack 0
  1032                           
  1033 ;; *************** function _waitForSensor2 *****************
  1034 ;; Defined at:
  1035 ;;		line 467 in file "MainCode.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;		None
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;  i               2   30[COMRAM] int 
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  2   26[COMRAM] int 
  1042 ;; Registers used:
  1043 ;;		wreg, status,2, status,0
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1049 ;;      Params:         2       0       0       0       0       0       0       0       0
  1050 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1051 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1052 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1053 ;;Total ram usage:        6 bytes
  1054 ;; Hardware stack levels used:    1
  1055 ;; Hardware stack levels required when called:    2
  1056 ;; This function calls:
  1057 ;;		Nothing
  1058 ;; This function is called by:
  1059 ;;		_main
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           	psect	text4
  1064  0007FE                     __ptext4:
  1065                           	opt callstack 0
  1066  0007FE                     _waitForSensor2:
  1067                           	opt callstack 28
  1068                           
  1069                           ;MainCode.c: 468:     int i = 0;
  1070                           
  1071                           ;incstack = 0
  1072  0007FE  0E00               	movlw	0
  1073  000800  6E20               	movwf	waitForSensor2@i+1,c
  1074  000802  0E00               	movlw	0
  1075  000804  6E1F               	movwf	waitForSensor2@i,c
  1076                           
  1077                           ;MainCode.c: 469:     TMR1H = 0;
  1078  000806  0E00               	movlw	0
  1079  000808  6EB1               	movwf	16305,c	;volatile
  1080                           
  1081                           ;MainCode.c: 470:     TMR1L = 0;
  1082  00080A  0E00               	movlw	0
  1083  00080C  6EB0               	movwf	16304,c	;volatile
  1084                           
  1085                           ;MainCode.c: 471:     T1CONbits.TMR1ON = 1;
  1086  00080E  80B2               	bsf	16306,0,c	;volatile
  1087                           
  1088                           ;MainCode.c: 472:     while (!PORTBbits.RB0 && (i < 10000))
  1089  000810  D00D               	goto	l1715
  1090  000812                     l1713:
  1091                           
  1092                           ;MainCode.c: 473:         i = (TMR1H << 8) | TMR1L;
  1093  000812  50B0               	movf	16304,w,c	;volatile
  1094  000814  006F FEC4  F01D    	movff	16305,??_waitForSensor2	;volatile
  1095  00081A  6A1E               	clrf	(??_waitForSensor2+1)& (0+255),c
  1096  00081C  0060  F074  F01E   	movff	??_waitForSensor2,??_waitForSensor2+1
  1097  000822  6A1D               	clrf	??_waitForSensor2,c
  1098  000824  101D               	iorwf	??_waitForSensor2,w,c
  1099  000826  6E1F               	movwf	waitForSensor2@i,c
  1100  000828  501E               	movf	??_waitForSensor2+1,w,c
  1101  00082A  6E20               	movwf	waitForSensor2@i+1,c
  1102  00082C                     l1715:
  1103                           
  1104                           ;MainCode.c: 472:     while (!PORTBbits.RB0 && (i < 10000))
  1105  00082C  B0CB               	btfsc	16331,0,c	;volatile
  1106  00082E  D008               	goto	u660
  1107  000830  BE20               	btfsc	waitForSensor2@i+1,7,c
  1108  000832  D7EF               	goto	l1713
  1109  000834  0E10               	movlw	16
  1110  000836  5C1F               	subwf	waitForSensor2@i,w,c
  1111  000838  0E27               	movlw	39
  1112  00083A  5820               	subwfb	waitForSensor2@i+1,w,c
  1113  00083C  A0D8               	btfss	status,0,c
  1114  00083E  D7E9               	goto	l1713
  1115  000840                     u660:
  1116                           
  1117                           ;MainCode.c: 474:     if (i >= 10000)
  1118  000840  BE20               	btfsc	waitForSensor2@i+1,7,c
  1119  000842  D00B               	goto	l1727
  1120  000844  0E10               	movlw	16
  1121  000846  5C1F               	subwf	waitForSensor2@i,w,c
  1122  000848  0E27               	movlw	39
  1123  00084A  5820               	subwfb	waitForSensor2@i+1,w,c
  1124  00084C  A0D8               	btfss	status,0,c
  1125  00084E  D005               	goto	l1727
  1126                           
  1127                           ;MainCode.c: 475:         return 0;
  1128  000850  0E00               	movlw	0
  1129  000852  6E1C               	movwf	?_waitForSensor2+1,c
  1130  000854  0E00               	movlw	0
  1131  000856  6E1B               	movwf	?_waitForSensor2,c
  1132  000858  0012               	return	
  1133  00085A                     l1727:
  1134                           
  1135                           ;MainCode.c: 477:         return 1;
  1136  00085A  0E00               	movlw	0
  1137  00085C  6E1C               	movwf	?_waitForSensor2+1,c
  1138  00085E  0E01               	movlw	1
  1139  000860  6E1B               	movwf	?_waitForSensor2,c
  1140  000862  0012               	return		;funcret
  1141  000864                     __end_of_waitForSensor2:
  1142                           	opt callstack 0
  1143                           
  1144 ;; *************** function _waitForSensor1 *****************
  1145 ;; Defined at:
  1146 ;;		line 454 in file "MainCode.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;		None
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;  i               2   30[COMRAM] int 
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  2   26[COMRAM] int 
  1153 ;; Registers used:
  1154 ;;		wreg, status,2, status,0
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1160 ;;      Params:         2       0       0       0       0       0       0       0       0
  1161 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1162 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1163 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1164 ;;Total ram usage:        6 bytes
  1165 ;; Hardware stack levels used:    1
  1166 ;; Hardware stack levels required when called:    2
  1167 ;; This function calls:
  1168 ;;		Nothing
  1169 ;; This function is called by:
  1170 ;;		_main
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           	psect	text5
  1175  000864                     __ptext5:
  1176                           	opt callstack 0
  1177  000864                     _waitForSensor1:
  1178                           	opt callstack 28
  1179                           
  1180                           ;MainCode.c: 455:     int i = 0;
  1181                           
  1182                           ;incstack = 0
  1183  000864  0E00               	movlw	0
  1184  000866  6E20               	movwf	waitForSensor1@i+1,c
  1185  000868  0E00               	movlw	0
  1186  00086A  6E1F               	movwf	waitForSensor1@i,c
  1187                           
  1188                           ;MainCode.c: 456:     TMR1H = 0;
  1189  00086C  0E00               	movlw	0
  1190  00086E  6EB1               	movwf	16305,c	;volatile
  1191                           
  1192                           ;MainCode.c: 457:     TMR1L = 0;
  1193  000870  0E00               	movlw	0
  1194  000872  6EB0               	movwf	16304,c	;volatile
  1195                           
  1196                           ;MainCode.c: 458:     T1CONbits.TMR1ON = 1;
  1197  000874  80B2               	bsf	16306,0,c	;volatile
  1198                           
  1199                           ;MainCode.c: 459:     while (!PORTBbits.RB1 && (i < 10000))
  1200  000876  D00D               	goto	l1679
  1201  000878                     l1677:
  1202                           
  1203                           ;MainCode.c: 460:         i = (TMR1H << 8) | TMR1L;
  1204  000878  50B0               	movf	16304,w,c	;volatile
  1205  00087A  006F FEC4  F01D    	movff	16305,??_waitForSensor1	;volatile
  1206  000880  6A1E               	clrf	(??_waitForSensor1+1)& (0+255),c
  1207  000882  0060  F074  F01E   	movff	??_waitForSensor1,??_waitForSensor1+1
  1208  000888  6A1D               	clrf	??_waitForSensor1,c
  1209  00088A  101D               	iorwf	??_waitForSensor1,w,c
  1210  00088C  6E1F               	movwf	waitForSensor1@i,c
  1211  00088E  501E               	movf	??_waitForSensor1+1,w,c
  1212  000890  6E20               	movwf	waitForSensor1@i+1,c
  1213  000892                     l1679:
  1214                           
  1215                           ;MainCode.c: 459:     while (!PORTBbits.RB1 && (i < 10000))
  1216  000892  B2CB               	btfsc	16331,1,c	;volatile
  1217  000894  D008               	goto	u600
  1218  000896  BE20               	btfsc	waitForSensor1@i+1,7,c
  1219  000898  D7EF               	goto	l1677
  1220  00089A  0E10               	movlw	16
  1221  00089C  5C1F               	subwf	waitForSensor1@i,w,c
  1222  00089E  0E27               	movlw	39
  1223  0008A0  5820               	subwfb	waitForSensor1@i+1,w,c
  1224  0008A2  A0D8               	btfss	status,0,c
  1225  0008A4  D7E9               	goto	l1677
  1226  0008A6                     u600:
  1227                           
  1228                           ;MainCode.c: 461:     if (i >= 10000)
  1229  0008A6  BE20               	btfsc	waitForSensor1@i+1,7,c
  1230  0008A8  D00B               	goto	l1691
  1231  0008AA  0E10               	movlw	16
  1232  0008AC  5C1F               	subwf	waitForSensor1@i,w,c
  1233  0008AE  0E27               	movlw	39
  1234  0008B0  5820               	subwfb	waitForSensor1@i+1,w,c
  1235  0008B2  A0D8               	btfss	status,0,c
  1236  0008B4  D005               	goto	l1691
  1237                           
  1238                           ;MainCode.c: 462:         return 0;
  1239  0008B6  0E00               	movlw	0
  1240  0008B8  6E1C               	movwf	?_waitForSensor1+1,c
  1241  0008BA  0E00               	movlw	0
  1242  0008BC  6E1B               	movwf	?_waitForSensor1,c
  1243  0008BE  0012               	return	
  1244  0008C0                     l1691:
  1245                           
  1246                           ;MainCode.c: 464:         return 1;
  1247  0008C0  0E00               	movlw	0
  1248  0008C2  6E1C               	movwf	?_waitForSensor1+1,c
  1249  0008C4  0E01               	movlw	1
  1250  0008C6  6E1B               	movwf	?_waitForSensor1,c
  1251  0008C8  0012               	return		;funcret
  1252  0008CA                     __end_of_waitForSensor1:
  1253                           	opt callstack 0
  1254                           
  1255 ;; *************** function _wait2US *****************
  1256 ;; Defined at:
  1257 ;;		line 604 in file "MainCode.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;		None
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;  i               4   26[COMRAM] long 
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1    wreg      void 
  1264 ;; Registers used:
  1265 ;;		wreg, status,2, status,0
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1271 ;;      Params:         0       0       0       0       0       0       0       0       0
  1272 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1273 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1274 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1275 ;;Total ram usage:        4 bytes
  1276 ;; Hardware stack levels used:    1
  1277 ;; Hardware stack levels required when called:    2
  1278 ;; This function calls:
  1279 ;;		Nothing
  1280 ;; This function is called by:
  1281 ;;		_main
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           	psect	text6
  1286  000B4E                     __ptext6:
  1287                           	opt callstack 0
  1288  000B4E                     _wait2US:
  1289                           	opt callstack 28
  1290                           
  1291                           ;MainCode.c: 605:     for (long i = 0; i < 2; i++) {
  1292                           
  1293                           ;incstack = 0
  1294  000B4E  0E00               	movlw	0
  1295  000B50  6E1B               	movwf	wait2US@i,c
  1296  000B52  0E00               	movlw	0
  1297  000B54  6E1C               	movwf	wait2US@i+1,c
  1298  000B56  0E00               	movlw	0
  1299  000B58  6E1D               	movwf	wait2US@i+2,c
  1300  000B5A  0E00               	movlw	0
  1301  000B5C  6E1E               	movwf	wait2US@i+3,c
  1302  000B5E                     l394:
  1303                           
  1304                           ;MainCode.c: 606:         __nop();
  1305  000B5E  F000               	nop	
  1306                           
  1307                           ;MainCode.c: 607:     }
  1308  000B60  0E01               	movlw	1
  1309  000B62  261B               	addwf	wait2US@i,f,c
  1310  000B64  0E00               	movlw	0
  1311  000B66  221C               	addwfc	wait2US@i+1,f,c
  1312  000B68  221D               	addwfc	wait2US@i+2,f,c
  1313  000B6A  221E               	addwfc	wait2US@i+3,f,c
  1314  000B6C  BE1E               	btfsc	wait2US@i+3,7,c
  1315  000B6E  D7F7               	goto	l394
  1316  000B70  501E               	movf	wait2US@i+3,w,c
  1317  000B72  101D               	iorwf	wait2US@i+2,w,c
  1318  000B74  101C               	iorwf	wait2US@i+1,w,c
  1319  000B76  E105               	bnz	u70
  1320  000B78  0E02               	movlw	2
  1321  000B7A  5C1B               	subwf	wait2US@i,w,c
  1322  000B7C  B0D8               	btfsc	status,0,c
  1323  000B7E  0012               	return	
  1324  000B80  D7EE               	goto	l394
  1325  000B82                     u70:
  1326  000B82  0012               	return		;funcret
  1327  000B84                     __end_of_wait2US:
  1328                           	opt callstack 0
  1329                           
  1330 ;; *************** function _wait10US *****************
  1331 ;; Defined at:
  1332 ;;		line 610 in file "MainCode.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;		None
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;  i               4   26[COMRAM] long 
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  1    wreg      void 
  1339 ;; Registers used:
  1340 ;;		wreg, status,2, status,0
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1346 ;;      Params:         0       0       0       0       0       0       0       0       0
  1347 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1348 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1349 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1350 ;;Total ram usage:        4 bytes
  1351 ;; Hardware stack levels used:    1
  1352 ;; Hardware stack levels required when called:    2
  1353 ;; This function calls:
  1354 ;;		Nothing
  1355 ;; This function is called by:
  1356 ;;		_main
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           	psect	text7
  1361  000B84                     __ptext7:
  1362                           	opt callstack 0
  1363  000B84                     _wait10US:
  1364                           	opt callstack 28
  1365                           
  1366                           ;MainCode.c: 611:     for (long i = 0; i < 6; i++) {
  1367                           
  1368                           ;incstack = 0
  1369  000B84  0E00               	movlw	0
  1370  000B86  6E1B               	movwf	wait10US@i,c
  1371  000B88  0E00               	movlw	0
  1372  000B8A  6E1C               	movwf	wait10US@i+1,c
  1373  000B8C  0E00               	movlw	0
  1374  000B8E  6E1D               	movwf	wait10US@i+2,c
  1375  000B90  0E00               	movlw	0
  1376  000B92  6E1E               	movwf	wait10US@i+3,c
  1377  000B94                     l399:
  1378                           
  1379                           ;MainCode.c: 612:         __nop();
  1380  000B94  F000               	nop	
  1381                           
  1382                           ;MainCode.c: 613:     }
  1383  000B96  0E01               	movlw	1
  1384  000B98  261B               	addwf	wait10US@i,f,c
  1385  000B9A  0E00               	movlw	0
  1386  000B9C  221C               	addwfc	wait10US@i+1,f,c
  1387  000B9E  221D               	addwfc	wait10US@i+2,f,c
  1388  000BA0  221E               	addwfc	wait10US@i+3,f,c
  1389  000BA2  BE1E               	btfsc	wait10US@i+3,7,c
  1390  000BA4  D7F7               	goto	l399
  1391  000BA6  501E               	movf	wait10US@i+3,w,c
  1392  000BA8  101D               	iorwf	wait10US@i+2,w,c
  1393  000BAA  101C               	iorwf	wait10US@i+1,w,c
  1394  000BAC  E105               	bnz	u80
  1395  000BAE  0E06               	movlw	6
  1396  000BB0  5C1B               	subwf	wait10US@i,w,c
  1397  000BB2  B0D8               	btfsc	status,0,c
  1398  000BB4  0012               	return	
  1399  000BB6  D7EE               	goto	l399
  1400  000BB8                     u80:
  1401  000BB8  0012               	return		;funcret
  1402  000BBA                     __end_of_wait10US:
  1403                           	opt callstack 0
  1404                           
  1405 ;; *************** function _readI2C *****************
  1406 ;; Defined at:
  1407 ;;		line 276 in file "MainCode.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;  reg             1    wreg     unsigned char 
  1410 ;;  conOK           2   26[COMRAM] PTR int 
  1411 ;;		 -> con_perimeter(2), 
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;  reg             1   28[COMRAM] unsigned char 
  1414 ;;  counter         2   30[COMRAM] int 
  1415 ;;  data            1   29[COMRAM] unsigned char 
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  2   26[COMRAM] int 
  1418 ;; Registers used:
  1419 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1425 ;;      Params:         2       0       0       0       0       0       0       0       0
  1426 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1427 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1428 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1429 ;;Total ram usage:        6 bytes
  1430 ;; Hardware stack levels used:    1
  1431 ;; Hardware stack levels required when called:    2
  1432 ;; This function calls:
  1433 ;;		Nothing
  1434 ;; This function is called by:
  1435 ;;		_main
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           	psect	text8
  1440  0003E6                     __ptext8:
  1441                           	opt callstack 0
  1442  0003E6                     _readI2C:
  1443                           	opt callstack 28
  1444                           
  1445                           ;incstack = 0
  1446                           ;readI2C@reg stored from wreg
  1447  0003E6  6E1D               	movwf	readI2C@reg,c
  1448                           
  1449                           ;MainCode.c: 292:     unsigned char data;;MainCode.c: 293:     * conOK = 1;
  1450  0003E8  0060  F06F  FFD9   	movff	readI2C@conOK,fsr2l
  1451  0003EE  0060  F073  FFDA   	movff	readI2C@conOK+1,fsr2h
  1452  0003F4  0E01               	movlw	1
  1453  0003F6  6EDE               	movwf	postinc2,c
  1454  0003F8  0E00               	movlw	0
  1455  0003FA  6EDD               	movwf	postdec2,c
  1456                           
  1457                           ;MainCode.c: 294:     I2C1ADB1 = 0X10;
  1458  0003FC  0E10               	movlw	16
  1459  0003FE  013D               	movlb	61	; () banked
  1460  000400  6F6E               	movwf	110,b	;volatile
  1461                           
  1462                           ; BSR set to: 61
  1463                           ;MainCode.c: 295:     I2C1TXB = reg;
  1464  000402  0060  F077  FD6B   	movff	readI2C@reg,15723	;volatile
  1465  000408                     l261:
  1466                           
  1467                           ; BSR set to: 61
  1468  000408  AF77               	btfss	119,7,b	;volatile
  1469  00040A  D7FE               	goto	l261
  1470                           
  1471                           ; BSR set to: 61
  1472                           ;MainCode.c: 297:     I2C1CNT = 1;
  1473  00040C  0E01               	movlw	1
  1474  00040E  6F6C               	movwf	108,b	;volatile
  1475                           
  1476                           ; BSR set to: 61
  1477                           ;MainCode.c: 298:     I2C1CON0bits.RSEN = 1;
  1478  000410  8D73               	bsf	115,6,b	;volatile
  1479                           
  1480                           ; BSR set to: 61
  1481                           ;MainCode.c: 299:     I2C1CON0bits.S = 1;
  1482  000412  8B73               	bsf	115,5,b	;volatile
  1483                           
  1484                           ;MainCode.c: 300:     int counter = 0;
  1485  000414  0E00               	movlw	0
  1486  000416  6E20               	movwf	readI2C@counter+1,c
  1487  000418  0E00               	movlw	0
  1488  00041A  6E1F               	movwf	readI2C@counter,c
  1489                           
  1490                           ;MainCode.c: 301:     while (!I2C1CON0bits.MDR && counter < 25000) {
  1491  00041C  D002               	goto	l1881
  1492  00041E                     l1879:
  1493                           
  1494                           ; BSR set to: 61
  1495                           ;MainCode.c: 302:         counter++;
  1496  00041E  4A1F               	infsnz	readI2C@counter,f,c
  1497  000420  2A20               	incf	readI2C@counter+1,f,c
  1498  000422                     l1881:
  1499                           
  1500                           ; BSR set to: 61
  1501                           ;MainCode.c: 301:     while (!I2C1CON0bits.MDR && counter < 25000) {
  1502  000422  B773               	btfsc	115,3,b	;volatile
  1503  000424  D008               	goto	u940
  1504                           
  1505                           ; BSR set to: 61
  1506  000426  BE20               	btfsc	readI2C@counter+1,7,c
  1507  000428  D7FA               	goto	l1879
  1508  00042A  0EA8               	movlw	168
  1509  00042C  5C1F               	subwf	readI2C@counter,w,c
  1510  00042E  0E61               	movlw	97
  1511  000430  5820               	subwfb	readI2C@counter+1,w,c
  1512  000432  A0D8               	btfss	status,0,c
  1513  000434  D7F4               	goto	l1879
  1514  000436                     u940:
  1515                           
  1516                           ; BSR set to: 61
  1517                           ;MainCode.c: 304:     if (counter >= 25000) *conOK = 0;
  1518  000436  BE20               	btfsc	readI2C@counter+1,7,c
  1519  000438  D010               	goto	l1889
  1520  00043A  0EA8               	movlw	168
  1521  00043C  5C1F               	subwf	readI2C@counter,w,c
  1522  00043E  0E61               	movlw	97
  1523  000440  5820               	subwfb	readI2C@counter+1,w,c
  1524  000442  A0D8               	btfss	status,0,c
  1525  000444  D00A               	goto	l1889
  1526                           
  1527                           ; BSR set to: 61
  1528  000446  0060  F06F  FFD9   	movff	readI2C@conOK,fsr2l
  1529  00044C  0060  F073  FFDA   	movff	readI2C@conOK+1,fsr2h
  1530  000452  0E00               	movlw	0
  1531  000454  6EDE               	movwf	postinc2,c
  1532  000456  0E00               	movlw	0
  1533  000458  6EDD               	movwf	postdec2,c
  1534  00045A                     l1889:
  1535                           
  1536                           ; BSR set to: 61
  1537                           ;MainCode.c: 308:     I2C1ADB1 = (0x11);
  1538  00045A  0E11               	movlw	17
  1539  00045C  6F6E               	movwf	110,b	;volatile
  1540                           
  1541                           ; BSR set to: 61
  1542                           ;MainCode.c: 309:     I2C1CNT = 1;
  1543  00045E  0E01               	movlw	1
  1544  000460  6F6C               	movwf	108,b	;volatile
  1545                           
  1546                           ; BSR set to: 61
  1547                           ;MainCode.c: 310:     I2C1CON0bits.S = 1;
  1548  000462  8B73               	bsf	115,5,b	;volatile
  1549                           
  1550                           ; BSR set to: 61
  1551                           ;MainCode.c: 311:     I2C1CON0bits.RSEN = 0;
  1552  000464  9D73               	bcf	115,6,b	;volatile
  1553                           
  1554                           ; BSR set to: 61
  1555                           ;MainCode.c: 312:     counter = 0;
  1556  000466  0E00               	movlw	0
  1557  000468  6E20               	movwf	readI2C@counter+1,c
  1558  00046A  0E00               	movlw	0
  1559  00046C  6E1F               	movwf	readI2C@counter,c
  1560                           
  1561                           ;MainCode.c: 313:     while (!I2C1STAT1bits.RXBF && counter < 25000) {
  1562  00046E  D002               	goto	l1901
  1563  000470                     l1899:
  1564                           
  1565                           ; BSR set to: 61
  1566                           ;MainCode.c: 314:         counter++;
  1567  000470  4A1F               	infsnz	readI2C@counter,f,c
  1568  000472  2A20               	incf	readI2C@counter+1,f,c
  1569  000474                     l1901:
  1570                           
  1571                           ; BSR set to: 61
  1572                           ;MainCode.c: 313:     while (!I2C1STAT1bits.RXBF && counter < 25000) {
  1573  000474  B178               	btfsc	120,0,b	;volatile
  1574  000476  D008               	goto	u970
  1575                           
  1576                           ; BSR set to: 61
  1577  000478  BE20               	btfsc	readI2C@counter+1,7,c
  1578  00047A  D7FA               	goto	l1899
  1579  00047C  0EA8               	movlw	168
  1580  00047E  5C1F               	subwf	readI2C@counter,w,c
  1581  000480  0E61               	movlw	97
  1582  000482  5820               	subwfb	readI2C@counter+1,w,c
  1583  000484  A0D8               	btfss	status,0,c
  1584  000486  D7F4               	goto	l1899
  1585  000488                     u970:
  1586                           
  1587                           ; BSR set to: 61
  1588                           ;MainCode.c: 316:     if (counter >= 25000) *conOK = 0;
  1589  000488  BE20               	btfsc	readI2C@counter+1,7,c
  1590  00048A  D010               	goto	l1909
  1591  00048C  0EA8               	movlw	168
  1592  00048E  5C1F               	subwf	readI2C@counter,w,c
  1593  000490  0E61               	movlw	97
  1594  000492  5820               	subwfb	readI2C@counter+1,w,c
  1595  000494  A0D8               	btfss	status,0,c
  1596  000496  D00A               	goto	l1909
  1597                           
  1598                           ; BSR set to: 61
  1599  000498  0060  F06F  FFD9   	movff	readI2C@conOK,fsr2l
  1600  00049E  0060  F073  FFDA   	movff	readI2C@conOK+1,fsr2h
  1601  0004A4  0E00               	movlw	0
  1602  0004A6  6EDE               	movwf	postinc2,c
  1603  0004A8  0E00               	movlw	0
  1604  0004AA  6EDD               	movwf	postdec2,c
  1605  0004AC                     l1909:
  1606                           
  1607                           ; BSR set to: 61
  1608                           ;MainCode.c: 320:     data = I2C1RXB;
  1609  0004AC  006F F5A8  F01E    	movff	15722,readI2C@data	;volatile
  1610                           
  1611                           ; BSR set to: 61
  1612                           ;MainCode.c: 322:     counter = 0;
  1613  0004B2  0E00               	movlw	0
  1614  0004B4  6E20               	movwf	readI2C@counter+1,c
  1615  0004B6  0E00               	movlw	0
  1616  0004B8  6E1F               	movwf	readI2C@counter,c
  1617                           
  1618                           ;MainCode.c: 323:     while (!I2C1PIRbits.PCIF && counter < 25000) {
  1619  0004BA  D002               	goto	l1915
  1620  0004BC                     l1913:
  1621                           
  1622                           ; BSR set to: 61
  1623                           ;MainCode.c: 324:         counter++;
  1624  0004BC  4A1F               	infsnz	readI2C@counter,f,c
  1625  0004BE  2A20               	incf	readI2C@counter+1,f,c
  1626  0004C0                     l1915:
  1627                           
  1628                           ; BSR set to: 61
  1629                           ;MainCode.c: 323:     while (!I2C1PIRbits.PCIF && counter < 25000) {
  1630  0004C0  B579               	btfsc	121,2,b	;volatile
  1631  0004C2  D008               	goto	u1000
  1632                           
  1633                           ; BSR set to: 61
  1634  0004C4  BE20               	btfsc	readI2C@counter+1,7,c
  1635  0004C6  D7FA               	goto	l1913
  1636  0004C8  0EA8               	movlw	168
  1637  0004CA  5C1F               	subwf	readI2C@counter,w,c
  1638  0004CC  0E61               	movlw	97
  1639  0004CE  5820               	subwfb	readI2C@counter+1,w,c
  1640  0004D0  A0D8               	btfss	status,0,c
  1641  0004D2  D7F4               	goto	l1913
  1642  0004D4                     u1000:
  1643                           
  1644                           ; BSR set to: 61
  1645                           ;MainCode.c: 326:     if (counter >= 25000) *conOK = 0;
  1646  0004D4  BE20               	btfsc	readI2C@counter+1,7,c
  1647  0004D6  D010               	goto	l1923
  1648  0004D8  0EA8               	movlw	168
  1649  0004DA  5C1F               	subwf	readI2C@counter,w,c
  1650  0004DC  0E61               	movlw	97
  1651  0004DE  5820               	subwfb	readI2C@counter+1,w,c
  1652  0004E0  A0D8               	btfss	status,0,c
  1653  0004E2  D00A               	goto	l1923
  1654                           
  1655                           ; BSR set to: 61
  1656  0004E4  0060  F06F  FFD9   	movff	readI2C@conOK,fsr2l
  1657  0004EA  0060  F073  FFDA   	movff	readI2C@conOK+1,fsr2h
  1658  0004F0  0E00               	movlw	0
  1659  0004F2  6EDE               	movwf	postinc2,c
  1660  0004F4  0E00               	movlw	0
  1661  0004F6  6EDD               	movwf	postdec2,c
  1662  0004F8                     l1923:
  1663                           
  1664                           ; BSR set to: 61
  1665                           ;MainCode.c: 329:     I2C1PIRbits.PCIF = 0;
  1666  0004F8  9579               	bcf	121,2,b	;volatile
  1667                           
  1668                           ; BSR set to: 61
  1669                           ;MainCode.c: 330:     I2C1PIRbits.SCIF = 0;
  1670  0004FA  9179               	bcf	121,0,b	;volatile
  1671                           
  1672                           ; BSR set to: 61
  1673                           ;MainCode.c: 331:     I2C1STAT1bits.CLRBF = 1;
  1674  0004FC  8578               	bsf	120,2,b	;volatile
  1675                           
  1676                           ; BSR set to: 61
  1677                           ;MainCode.c: 333:     return data;
  1678  0004FE  0060  F078  F01B   	movff	readI2C@data,?_readI2C
  1679  000504  6A1C               	clrf	?_readI2C+1,c
  1680                           
  1681                           ; BSR set to: 61
  1682  000506  0012               	return		;funcret
  1683  000508                     __end_of_readI2C:
  1684                           	opt callstack 0
  1685                           
  1686 ;; *************** function _readADC *****************
  1687 ;; Defined at:
  1688 ;;		line 688 in file "MainCode.c"
  1689 ;; Parameters:    Size  Location     Type
  1690 ;;  ch              2   26[COMRAM] int 
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;		None
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  2   26[COMRAM] int 
  1695 ;; Registers used:
  1696 ;;		wreg, status,2, status,0
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1702 ;;      Params:         2       0       0       0       0       0       0       0       0
  1703 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1704 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1705 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1706 ;;Total ram usage:        4 bytes
  1707 ;; Hardware stack levels used:    1
  1708 ;; Hardware stack levels required when called:    2
  1709 ;; This function calls:
  1710 ;;		Nothing
  1711 ;; This function is called by:
  1712 ;;		_main
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716                           	psect	text9
  1717  000B0E                     __ptext9:
  1718                           	opt callstack 0
  1719  000B0E                     _readADC:
  1720                           	opt callstack 28
  1721                           
  1722                           ;MainCode.c: 689:     if (ch == 0) ADPCHbits.ADPCH = 0b010110;
  1723                           
  1724                           ; BSR set to: 61
  1725                           ;incstack = 0
  1726  000B0E  501B               	movf	readADC@ch,w,c
  1727  000B10  101C               	iorwf	readADC@ch+1,w,c
  1728  000B12  A4D8               	btfss	status,2,c
  1729  000B14  D005               	goto	l1857
  1730  000B16  013E               	movlb	62	; () banked
  1731  000B18  51F1               	movf	241,w,b	;volatile
  1732  000B1A  0BC0               	andlw	-64
  1733  000B1C  0916               	iorlw	22
  1734  000B1E  D008               	goto	L1
  1735  000B20                     l1857:
  1736  000B20  041B               	decf	readADC@ch,w,c
  1737  000B22  101C               	iorwf	readADC@ch+1,w,c
  1738  000B24  A4D8               	btfss	status,2,c
  1739  000B26  D005               	goto	l1861
  1740  000B28  013E               	movlb	62	; () banked
  1741  000B2A  51F1               	movf	241,w,b	;volatile
  1742  000B2C  0BC0               	andlw	-64
  1743  000B2E  0915               	iorlw	21
  1744  000B30                     L1:
  1745  000B30  6FF1               	movwf	241,b	;volatile
  1746  000B32                     l1861:
  1747                           
  1748                           ;MainCode.c: 691:     ADCON0bits.GO = 1;
  1749  000B32  013E               	movlb	62	; () banked
  1750  000B34  81F8               	bsf	248,0,b	;volatile
  1751  000B36                     l422:
  1752                           
  1753                           ; BSR set to: 62
  1754  000B36  B1F8               	btfsc	248,0,b	;volatile
  1755  000B38  D7FE               	goto	l422
  1756                           
  1757                           ; BSR set to: 62
  1758                           ;MainCode.c: 693:     return (ADRESH << 8) +ADRESL;
  1759  000B3A  51F0               	movf	240,w,b	;volatile
  1760  000B3C  6E1E               	movwf	(??_readADC+1)& (0+255),c
  1761  000B3E  6A1D               	clrf	??_readADC& (0+255),c
  1762  000B40  51EF               	movf	239,w,b	;volatile
  1763  000B42  241D               	addwf	??_readADC,w,c
  1764  000B44  6E1B               	movwf	?_readADC,c
  1765  000B46  0E00               	movlw	0
  1766  000B48  201E               	addwfc	??_readADC+1,w,c
  1767  000B4A  6E1C               	movwf	?_readADC+1,c
  1768                           
  1769                           ; BSR set to: 62
  1770  000B4C  0012               	return		;funcret
  1771  000B4E                     __end_of_readADC:
  1772                           	opt callstack 0
  1773                           
  1774 ;; *************** function _initI2C *****************
  1775 ;; Defined at:
  1776 ;;		line 336 in file "MainCode.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;		None
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;  state           2   26[COMRAM] int 
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  1    wreg      void 
  1783 ;; Registers used:
  1784 ;;		wreg, status,2
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1790 ;;      Params:         0       0       0       0       0       0       0       0       0
  1791 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1792 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1793 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1794 ;;Total ram usage:        2 bytes
  1795 ;; Hardware stack levels used:    1
  1796 ;; Hardware stack levels required when called:    2
  1797 ;; This function calls:
  1798 ;;		Nothing
  1799 ;; This function is called by:
  1800 ;;		_main
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           	psect	text10
  1805  0005DE                     __ptext10:
  1806                           	opt callstack 0
  1807  0005DE                     _initI2C:
  1808                           	opt callstack 28
  1809                           
  1810                           ;MainCode.c: 337:     LATCbits.LATC3 = 0;
  1811                           
  1812                           ; BSR set to: 62
  1813                           ;incstack = 0
  1814  0005DE  96BC               	bcf	16316,3,c	;volatile
  1815                           
  1816                           ;MainCode.c: 338:     LATCbits.LATC4 = 0;
  1817  0005E0  98BC               	bcf	16316,4,c	;volatile
  1818                           
  1819                           ;MainCode.c: 339:     TRISCbits.TRISC3 = 0;
  1820  0005E2  96C4               	bcf	16324,3,c	;volatile
  1821                           
  1822                           ;MainCode.c: 340:     TRISCbits.TRISC4 = 0;
  1823  0005E4  98C4               	bcf	16324,4,c	;volatile
  1824                           
  1825                           ;MainCode.c: 341:     ANSELCbits.ANSELC3 = 0;
  1826  0005E6  013A               	movlb	58	; () banked
  1827  0005E8  9760               	bcf	96,3,b	;volatile
  1828                           
  1829                           ;MainCode.c: 342:     ANSELCbits.ANSELC4 = 0;
  1830  0005EA  9960               	bcf	96,4,b	;volatile
  1831                           
  1832                           ;MainCode.c: 343:     ODCONCbits.ODCC3 = 1;
  1833  0005EC  8762               	bsf	98,3,b	;volatile
  1834                           
  1835                           ;MainCode.c: 344:     ODCONCbits.ODCC4 = 1;
  1836  0005EE  8962               	bsf	98,4,b	;volatile
  1837                           
  1838                           ; BSR set to: 58
  1839                           ;MainCode.c: 345:     RC3I2C = 0x01;
  1840  0005F0  0E01               	movlw	1
  1841  0005F2  6F6A               	movwf	106,b	;volatile
  1842                           
  1843                           ; BSR set to: 58
  1844                           ;MainCode.c: 348:     SLRCONCbits.SLRC3 = 0;
  1845  0005F4  9763               	bcf	99,3,b	;volatile
  1846                           
  1847                           ;MainCode.c: 349:     RC4I2C = 0x01;
  1848  0005F6  0E01               	movlw	1
  1849  0005F8  6F6B               	movwf	107,b	;volatile
  1850                           
  1851                           ; BSR set to: 58
  1852                           ;MainCode.c: 350:     SLRCONCbits.SLRC4 = 0;
  1853  0005FA  9963               	bcf	99,4,b	;volatile
  1854                           
  1855                           ;MainCode.c: 353:     int state = (unsigned char) GIE;
  1856  0005FC  AED2               	btfss	16338,7,c	;volatile
  1857  0005FE  D002               	goto	u30
  1858  000600  0E01               	movlw	1
  1859  000602  D001               	goto	u40
  1860  000604                     u30:
  1861  000604  0E00               	movlw	0
  1862  000606                     u40:
  1863  000606  6E1B               	movwf	initI2C@state,c
  1864  000608  6A1C               	clrf	initI2C@state+1,c
  1865                           
  1866                           ; BSR set to: 58
  1867                           ;MainCode.c: 354:     GIE = 0;
  1868  00060A  9ED2               	bcf	16338,7,c	;volatile
  1869                           
  1870                           ;MainCode.c: 355:     PPSLOCK = 0x55;
  1871  00060C  0E55               	movlw	85
  1872  00060E  6FBF               	movwf	191,b	;volsfr
  1873                           
  1874                           ;MainCode.c: 356:     PPSLOCK = 0xAA;
  1875  000610  0EAA               	movlw	170
  1876  000612  6FBF               	movwf	191,b	;volsfr
  1877                           
  1878                           ; BSR set to: 58
  1879                           ;MainCode.c: 357:     PPSLOCKbits.PPSLOCKED = 0x00;
  1880  000614  91BF               	bcf	191,0,b	;volsfr
  1881                           
  1882                           ;MainCode.c: 358:     RC3PPS = 0x21;
  1883  000616  0E21               	movlw	33
  1884  000618  6F13               	movwf	19,b	;volatile
  1885                           
  1886                           ;MainCode.c: 359:     RC4PPS = 0x22;
  1887  00061A  0E22               	movlw	34
  1888  00061C  6F14               	movwf	20,b	;volatile
  1889                           
  1890                           ;MainCode.c: 360:     I2C1SDAPPSbits.I2C1SDAPPS = 0x14;
  1891  00061E  51E4               	movf	228,w,b	;volatile
  1892  000620  0BE0               	andlw	-32
  1893  000622  0914               	iorlw	20
  1894  000624  6FE4               	movwf	228,b	;volatile
  1895                           
  1896                           ;MainCode.c: 361:     I2C1SCLPPSbits.I2C1SCLPPS = 0x13;
  1897  000626  51E3               	movf	227,w,b	;volatile
  1898  000628  0BE0               	andlw	-32
  1899  00062A  0913               	iorlw	19
  1900  00062C  6FE3               	movwf	227,b	;volatile
  1901                           
  1902                           ;MainCode.c: 362:     PPSLOCK = 0x55;
  1903  00062E  0E55               	movlw	85
  1904  000630  6FBF               	movwf	191,b	;volsfr
  1905                           
  1906                           ;MainCode.c: 363:     PPSLOCK = 0xAA;
  1907  000632  0EAA               	movlw	170
  1908  000634  6FBF               	movwf	191,b	;volsfr
  1909                           
  1910                           ; BSR set to: 58
  1911                           ;MainCode.c: 364:     PPSLOCKbits.PPSLOCKED = 0x01;
  1912  000636  81BF               	bsf	191,0,b	;volsfr
  1913                           
  1914                           ; BSR set to: 58
  1915                           ;MainCode.c: 365:     GIE = state;
  1916  000638  A01B               	btfss	initI2C@state,0,c
  1917  00063A  D002               	goto	u50
  1918  00063C  8ED2               	bsf	16338,7,c	;volatile
  1919  00063E  D001               	goto	u65
  1920  000640                     u50:
  1921  000640  9ED2               	bcf	16338,7,c	;volatile
  1922  000642                     u65:
  1923                           
  1924                           ;MainCode.c: 366:     I2C1CON0 = 0x04;
  1925  000642  0E04               	movlw	4
  1926  000644  013D               	movlb	61	; () banked
  1927  000646  6F73               	movwf	115,b	;volatile
  1928                           
  1929                           ;MainCode.c: 367:     I2C1CON1 = 0x80;
  1930  000648  0E80               	movlw	128
  1931  00064A  6F74               	movwf	116,b	;volatile
  1932                           
  1933                           ;MainCode.c: 368:     I2C1CON2 = 0x24;
  1934  00064C  0E24               	movlw	36
  1935  00064E  6F75               	movwf	117,b	;volatile
  1936                           
  1937                           ;MainCode.c: 371:     I2C1CLK = 0x03;
  1938  000650  0E03               	movlw	3
  1939  000652  6F7B               	movwf	123,b	;volatile
  1940                           
  1941                           ;MainCode.c: 372:     I2C1PIR = 0;
  1942  000654  0E00               	movlw	0
  1943  000656  6F79               	movwf	121,b	;volatile
  1944                           
  1945                           ;MainCode.c: 373:     I2C1ERR = 0;
  1946  000658  0E00               	movlw	0
  1947  00065A  6F76               	movwf	118,b	;volatile
  1948                           
  1949                           ; BSR set to: 61
  1950                           ;MainCode.c: 374:     I2C1CON0bits.EN = 1;
  1951  00065C  8F73               	bsf	115,7,b	;volatile
  1952                           
  1953                           ; BSR set to: 61
  1954                           ;MainCode.c: 375:     I2C1ERRbits.NACKIE = 1;
  1955  00065E  8176               	bsf	118,0,b	;volatile
  1956                           
  1957                           ; BSR set to: 61
  1958  000660  0012               	return		;funcret
  1959  000662                     __end_of_initI2C:
  1960                           	opt callstack 0
  1961                           
  1962 ;; *************** function _initHCSR04 *****************
  1963 ;; Defined at:
  1964 ;;		line 417 in file "MainCode.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;		None
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;		None
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		wreg, status,2
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1978 ;;      Params:         0       0       0       0       0       0       0       0       0
  1979 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1980 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1981 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1982 ;;Total ram usage:        0 bytes
  1983 ;; Hardware stack levels used:    1
  1984 ;; Hardware stack levels required when called:    2
  1985 ;; This function calls:
  1986 ;;		Nothing
  1987 ;; This function is called by:
  1988 ;;		_main
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           	psect	text11
  1993  000AC8                     __ptext11:
  1994                           	opt callstack 0
  1995  000AC8                     _initHCSR04:
  1996                           	opt callstack 28
  1997                           
  1998                           ;MainCode.c: 418:     T1CLK = 0x01;
  1999                           
  2000                           ; BSR set to: 61
  2001                           ;incstack = 0
  2002  000AC8  0E01               	movlw	1
  2003  000ACA  6EB5               	movwf	16309,c	;volatile
  2004                           
  2005                           ;MainCode.c: 419:     T1CONbits.CKPS = 0b11;
  2006  000ACC  0E30               	movlw	48
  2007  000ACE  12B2               	iorwf	16306,f,c	;volatile
  2008                           
  2009                           ;MainCode.c: 420:     TMR1H = 0x00;
  2010  000AD0  0E00               	movlw	0
  2011  000AD2  6EB1               	movwf	16305,c	;volatile
  2012                           
  2013                           ;MainCode.c: 421:     TMR1L = 0x00;
  2014  000AD4  0E00               	movlw	0
  2015  000AD6  6EB0               	movwf	16304,c	;volatile
  2016                           
  2017                           ;MainCode.c: 423:     ANSELCbits.ANSELC1 = 0;
  2018  000AD8  013A               	movlb	58	; () banked
  2019  000ADA  9360               	bcf	96,1,b	;volatile
  2020                           
  2021                           ; BSR set to: 58
  2022                           ;MainCode.c: 424:     ANSELCbits.ANSELC2 = 0;
  2023  000ADC  9560               	bcf	96,2,b	;volatile
  2024                           
  2025                           ; BSR set to: 58
  2026                           ;MainCode.c: 425:     ANSELCbits.ANSELC7 = 0;
  2027  000ADE  9F60               	bcf	96,7,b	;volatile
  2028                           
  2029                           ; BSR set to: 58
  2030                           ;MainCode.c: 426:     ANSELAbits.ANSELA1 = 0;
  2031  000AE0  9340               	bcf	64,1,b	;volatile
  2032                           
  2033                           ; BSR set to: 58
  2034                           ;MainCode.c: 427:     ANSELAbits.ANSELA2 = 0;
  2035  000AE2  9540               	bcf	64,2,b	;volatile
  2036                           
  2037                           ; BSR set to: 58
  2038                           ;MainCode.c: 429:     ANSELBbits.ANSELB1 = 0;
  2039  000AE4  9350               	bcf	80,1,b	;volatile
  2040                           
  2041                           ; BSR set to: 58
  2042                           ;MainCode.c: 430:     ANSELBbits.ANSELB0 = 0;
  2043  000AE6  9150               	bcf	80,0,b	;volatile
  2044                           
  2045                           ; BSR set to: 58
  2046                           ;MainCode.c: 431:     ANSELAbits.ANSELA5 = 0;
  2047  000AE8  9B40               	bcf	64,5,b	;volatile
  2048                           
  2049                           ; BSR set to: 58
  2050                           ;MainCode.c: 432:     ANSELBbits.ANSELB4 = 0;
  2051  000AEA  9950               	bcf	80,4,b	;volatile
  2052                           
  2053                           ; BSR set to: 58
  2054                           ;MainCode.c: 433:     ANSELAbits.ANSELA4 = 0;
  2055  000AEC  9940               	bcf	64,4,b	;volatile
  2056                           
  2057                           ; BSR set to: 58
  2058                           ;MainCode.c: 435:     TRISCbits.TRISC1 = 0;
  2059  000AEE  92C4               	bcf	16324,1,c	;volatile
  2060                           
  2061                           ; BSR set to: 58
  2062                           ;MainCode.c: 436:     TRISCbits.TRISC2 = 0;
  2063  000AF0  94C4               	bcf	16324,2,c	;volatile
  2064                           
  2065                           ; BSR set to: 58
  2066                           ;MainCode.c: 437:     TRISCbits.TRISC7 = 0;
  2067  000AF2  9EC4               	bcf	16324,7,c	;volatile
  2068                           
  2069                           ; BSR set to: 58
  2070                           ;MainCode.c: 438:     TRISAbits.TRISA1 = 0;
  2071  000AF4  92C2               	bcf	16322,1,c	;volatile
  2072                           
  2073                           ; BSR set to: 58
  2074                           ;MainCode.c: 439:     TRISAbits.TRISA2 = 0;
  2075  000AF6  94C2               	bcf	16322,2,c	;volatile
  2076                           
  2077                           ; BSR set to: 58
  2078                           ;MainCode.c: 441:     TRISBbits.TRISB1 = 1;
  2079  000AF8  82C3               	bsf	16323,1,c	;volatile
  2080                           
  2081                           ; BSR set to: 58
  2082                           ;MainCode.c: 442:     TRISBbits.TRISB0 = 1;
  2083  000AFA  80C3               	bsf	16323,0,c	;volatile
  2084                           
  2085                           ; BSR set to: 58
  2086                           ;MainCode.c: 443:     TRISAbits.TRISA5 = 1;
  2087  000AFC  8AC2               	bsf	16322,5,c	;volatile
  2088                           
  2089                           ; BSR set to: 58
  2090                           ;MainCode.c: 444:     TRISBbits.TRISB4 = 1;
  2091  000AFE  88C3               	bsf	16323,4,c	;volatile
  2092                           
  2093                           ; BSR set to: 58
  2094                           ;MainCode.c: 445:     TRISAbits.TRISA4 = 1;
  2095  000B00  88C2               	bsf	16322,4,c	;volatile
  2096                           
  2097                           ; BSR set to: 58
  2098                           ;MainCode.c: 447:     PORTCbits.RC1 = 0;
  2099  000B02  92CC               	bcf	16332,1,c	;volatile
  2100                           
  2101                           ; BSR set to: 58
  2102                           ;MainCode.c: 448:     PORTCbits.RC2 = 0;
  2103  000B04  94CC               	bcf	16332,2,c	;volatile
  2104                           
  2105                           ; BSR set to: 58
  2106                           ;MainCode.c: 449:     PORTCbits.RC7 = 0;
  2107  000B06  9ECC               	bcf	16332,7,c	;volatile
  2108                           
  2109                           ; BSR set to: 58
  2110                           ;MainCode.c: 450:     PORTAbits.RA1 = 0;
  2111  000B08  92CA               	bcf	16330,1,c	;volatile
  2112                           
  2113                           ; BSR set to: 58
  2114                           ;MainCode.c: 451:     PORTAbits.RA2 = 0;
  2115  000B0A  94CA               	bcf	16330,2,c	;volatile
  2116                           
  2117                           ; BSR set to: 58
  2118  000B0C  0012               	return		;funcret
  2119  000B0E                     __end_of_initHCSR04:
  2120                           	opt callstack 0
  2121                           
  2122 ;; *************** function _initCAN *****************
  2123 ;; Defined at:
  2124 ;;		line 616 in file "MainCode.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;		None
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;		None
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      void 
  2131 ;; Registers used:
  2132 ;;		wreg, status,2, status,0
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2138 ;;      Params:         0       0       0       0       0       0       0       0       0
  2139 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2140 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2141 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2142 ;;Total ram usage:        0 bytes
  2143 ;; Hardware stack levels used:    1
  2144 ;; Hardware stack levels required when called:    2
  2145 ;; This function calls:
  2146 ;;		Nothing
  2147 ;; This function is called by:
  2148 ;;		_main
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	text12
  2153  000662                     __ptext12:
  2154                           	opt callstack 0
  2155  000662                     _initCAN:
  2156                           	opt callstack 28
  2157                           
  2158                           ;MainCode.c: 621:     RB2PPS = 0b110011;
  2159                           
  2160                           ; BSR set to: 58
  2161                           ;incstack = 0
  2162  000662  0E33               	movlw	51
  2163  000664  013A               	movlb	58	; () banked
  2164  000666  6F0A               	movwf	10,b	;volatile
  2165                           
  2166                           ; BSR set to: 58
  2167                           ;MainCode.c: 623:     TRISBbits.TRISB2 = 0;
  2168  000668  94C3               	bcf	16323,2,c	;volatile
  2169                           
  2170                           ; BSR set to: 58
  2171                           ;MainCode.c: 624:     TRISBbits.TRISB3 = 1;
  2172  00066A  86C3               	bsf	16323,3,c	;volatile
  2173                           
  2174                           ; BSR set to: 58
  2175                           ;MainCode.c: 626:     ANSELBbits.ANSELB2 = 0;
  2176  00066C  9550               	bcf	80,2,b	;volatile
  2177                           
  2178                           ; BSR set to: 58
  2179                           ;MainCode.c: 627:     ANSELBbits.ANSELB3 = 0;
  2180  00066E  9750               	bcf	80,3,b	;volatile
  2181                           
  2182                           ; BSR set to: 58
  2183                           ;MainCode.c: 629:     CANCONbits.REQOP2 = 1;
  2184  000670  8E8F               	bsf	16271,7,c	;volatile
  2185                           
  2186                           ; BSR set to: 58
  2187                           ;MainCode.c: 630:     CANCONbits.REQOP1 = 0;
  2188  000672  9C8F               	bcf	16271,6,c	;volatile
  2189                           
  2190                           ; BSR set to: 58
  2191                           ;MainCode.c: 631:     CANCONbits.REQOP0 = 0;
  2192  000674  9A8F               	bcf	16271,5,c	;volatile
  2193  000676                     l1117:
  2194  000676  388E               	swapf	16270,w,c	;volatile
  2195  000678  32E8               	rrcf	wreg,f,c
  2196  00067A  0B07               	andlw	7
  2197  00067C  0A04               	xorlw	4
  2198  00067E  A4D8               	btfss	status,2,c
  2199  000680  D7FA               	goto	l1117
  2200                           
  2201                           ;MainCode.c: 635:     BRGCON1bits.BRP = 0b011111;
  2202  000682  0137               	movlb	55	; () banked
  2203  000684  5103               	movf	3,w,b	;volatile
  2204  000686  0BC0               	andlw	-64
  2205  000688  091F               	iorlw	31
  2206  00068A  6F03               	movwf	3,b	;volatile
  2207                           
  2208                           ;MainCode.c: 637:     RXF0SIDH = 0;
  2209  00068C  0E00               	movlw	0
  2210  00068E  6FA0               	movwf	160,b	;volatile
  2211                           
  2212                           ;MainCode.c: 638:     RXF0SIDLbits.SID = 1;
  2213  000690  51A1               	movf	161,w,b	;volatile
  2214  000692  0B1F               	andlw	-225
  2215  000694  0920               	iorlw	32
  2216  000696  6FA1               	movwf	161,b	;volatile
  2217                           
  2218                           ; BSR set to: 55
  2219                           ;MainCode.c: 639:     RXF0SIDLbits.EXIDEN = 0;
  2220  000698  97A1               	bcf	161,3,b	;volatile
  2221                           
  2222                           ; BSR set to: 55
  2223                           ;MainCode.c: 640:     RXM0SIDH = 255;
  2224  00069A  69B8               	setf	184,b	;volatile
  2225                           
  2226                           ;MainCode.c: 641:     RXM0SIDLbits.SID = 0b111;
  2227  00069C  0EE0               	movlw	224
  2228  00069E  13B9               	iorwf	185,f,b	;volatile
  2229                           
  2230                           ; BSR set to: 55
  2231                           ;MainCode.c: 642:     RXB0CONbits.RXM1 = 0;
  2232  0006A0  9C80               	bcf	16256,6,c	;volatile
  2233                           
  2234                           ; BSR set to: 55
  2235                           ;MainCode.c: 643:     RXB0CONbits.RXM0 = 1;
  2236  0006A2  8A80               	bsf	16256,5,c	;volatile
  2237                           
  2238                           ; BSR set to: 55
  2239                           ;MainCode.c: 644:     RXB0CONbits.FILHIT0 = 0;
  2240  0006A4  9080               	bcf	16256,0,c	;volatile
  2241                           
  2242                           ; BSR set to: 55
  2243                           ;MainCode.c: 646:     RXF1SIDH = 255;
  2244  0006A6  69A4               	setf	164,b	;volatile
  2245                           
  2246                           ;MainCode.c: 647:     RXF1SIDLbits.SID = 0b111;
  2247  0006A8  0EE0               	movlw	224
  2248  0006AA  13A5               	iorwf	165,f,b	;volatile
  2249                           
  2250                           ; BSR set to: 55
  2251                           ;MainCode.c: 648:     RXF1SIDLbits.EXIDEN = 0;
  2252  0006AC  97A5               	bcf	165,3,b	;volatile
  2253                           
  2254                           ; BSR set to: 55
  2255                           ;MainCode.c: 649:     RXM1SIDH = 255;
  2256  0006AE  69BC               	setf	188,b	;volatile
  2257                           
  2258                           ;MainCode.c: 650:     RXM1SIDLbits.SID = 0b111;
  2259  0006B0  0EE0               	movlw	224
  2260  0006B2  13BD               	iorwf	189,f,b	;volatile
  2261                           
  2262                           ; BSR set to: 55
  2263                           ;MainCode.c: 651:     RXB1CONbits.RXM1 = 0;
  2264  0006B4  9DF0               	bcf	240,6,b	;volatile
  2265                           
  2266                           ; BSR set to: 55
  2267                           ;MainCode.c: 652:     RXB1CONbits.RXM0 = 1;
  2268  0006B6  8BF0               	bsf	240,5,b	;volatile
  2269                           
  2270                           ; BSR set to: 55
  2271                           ;MainCode.c: 653:     RXB1CONbits.FILHIT0 = 0;
  2272  0006B8  91F0               	bcf	240,0,b	;volatile
  2273                           
  2274                           ;MainCode.c: 655:     CANCONbits.REQOP = 0b000;
  2275  0006BA  0E1F               	movlw	-225
  2276  0006BC  168F               	andwf	16271,f,c	;volatile
  2277  0006BE                     l1143:
  2278  0006BE  388E               	swapf	16270,w,c	;volatile
  2279  0006C0  32E8               	rrcf	wreg,f,c
  2280  0006C2  0B07               	andlw	7
  2281  0006C4  0900               	iorlw	0
  2282  0006C6  B4D8               	btfsc	status,2,c
  2283  0006C8  0012               	return	
  2284  0006CA  D7F9               	goto	l1143
  2285  0006CC                     __end_of_initCAN:
  2286                           	opt callstack 0
  2287                           
  2288 ;; *************** function _initADC *****************
  2289 ;; Defined at:
  2290 ;;		line 378 in file "MainCode.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;		None
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;		None
  2295 ;; Return value:  Size  Location     Type
  2296 ;;                  1    wreg      void 
  2297 ;; Registers used:
  2298 ;;		wreg, status,2
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2304 ;;      Params:         0       0       0       0       0       0       0       0       0
  2305 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2306 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2307 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2308 ;;Total ram usage:        0 bytes
  2309 ;; Hardware stack levels used:    1
  2310 ;; Hardware stack levels required when called:    2
  2311 ;; This function calls:
  2312 ;;		Nothing
  2313 ;; This function is called by:
  2314 ;;		_main
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           	psect	text13
  2319  000BBA                     __ptext13:
  2320                           	opt callstack 0
  2321  000BBA                     _initADC:
  2322                           	opt callstack 28
  2323                           
  2324                           ;MainCode.c: 380:     TRISCbits.TRISC6 = 1;
  2325                           
  2326                           ;incstack = 0
  2327  000BBA  8CC4               	bsf	16324,6,c	;volatile
  2328                           
  2329                           ;MainCode.c: 381:     TRISCbits.TRISC5 = 1;
  2330  000BBC  8AC4               	bsf	16324,5,c	;volatile
  2331                           
  2332                           ;MainCode.c: 382:     ANSELCbits.ANSELC6 = 1;
  2333  000BBE  013A               	movlb	58	; () banked
  2334  000BC0  8D60               	bsf	96,6,b	;volatile
  2335                           
  2336                           ;MainCode.c: 383:     ANSELCbits.ANSELC5 = 1;
  2337  000BC2  8B60               	bsf	96,5,b	;volatile
  2338                           
  2339                           ;MainCode.c: 385:     ADCON0bits.ON = 1;
  2340  000BC4  013E               	movlb	62	; () banked
  2341  000BC6  8FF8               	bsf	248,7,b	;volatile
  2342                           
  2343                           ; BSR set to: 62
  2344                           ;MainCode.c: 386:     ADCLKbits.CS = 0b011100;
  2345  000BC8  51FF               	movf	255,w,b	;volatile
  2346  000BCA  0BC0               	andlw	-64
  2347  000BCC  091C               	iorlw	28
  2348  000BCE  6FFF               	movwf	255,b	;volatile
  2349                           
  2350                           ;MainCode.c: 388:     ADCON0bits.FM = 0;
  2351  000BD0  0EF3               	movlw	-13
  2352  000BD2  17F8               	andwf	248,f,b	;volatile
  2353                           
  2354                           ;MainCode.c: 390:     ADREFbits.NREF = 0;
  2355  000BD4  0E0F               	movlw	-241
  2356  000BD6  17FD               	andwf	253,f,b	;volatile
  2357                           
  2358                           ;MainCode.c: 391:     ADREFbits.PREF = 00;
  2359  000BD8  0EF0               	movlw	-16
  2360  000BDA  17FD               	andwf	253,f,b	;volatile
  2361                           
  2362                           ;MainCode.c: 393:     ADPCHbits.ADPCH = 0b010110;
  2363  000BDC  51F1               	movf	241,w,b	;volatile
  2364  000BDE  0BC0               	andlw	-64
  2365  000BE0  0916               	iorlw	22
  2366  000BE2  6FF1               	movwf	241,b	;volatile
  2367                           
  2368                           ; BSR set to: 62
  2369                           ;MainCode.c: 395:     ADCON0bits.ON = 1;
  2370  000BE4  8FF8               	bsf	248,7,b	;volatile
  2371                           
  2372                           ; BSR set to: 62
  2373  000BE6  0012               	return		;funcret
  2374  000BE8                     __end_of_initADC:
  2375                           	opt callstack 0
  2376                           
  2377 ;; *************** function _getDistance5 *****************
  2378 ;; Defined at:
  2379 ;;		line 587 in file "MainCode.c"
  2380 ;; Parameters:    Size  Location     Type
  2381 ;;		None
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;  ticks           2   30[COMRAM] int 
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  2   26[COMRAM] int 
  2386 ;; Registers used:
  2387 ;;		wreg, status,2, status,0
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2393 ;;      Params:         2       0       0       0       0       0       0       0       0
  2394 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2395 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2396 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2397 ;;Total ram usage:        6 bytes
  2398 ;; Hardware stack levels used:    1
  2399 ;; Hardware stack levels required when called:    2
  2400 ;; This function calls:
  2401 ;;		Nothing
  2402 ;; This function is called by:
  2403 ;;		_main
  2404 ;; This function uses a non-reentrant model
  2405 ;;
  2406                           
  2407                           	psect	text14
  2408  0008CA                     __ptext14:
  2409                           	opt callstack 0
  2410  0008CA                     _getDistance5:
  2411                           	opt callstack 28
  2412                           
  2413                           ;MainCode.c: 588:     int ticks = 0;
  2414                           
  2415                           ; BSR set to: 62
  2416                           ;incstack = 0
  2417  0008CA  0E00               	movlw	0
  2418  0008CC  6E20               	movwf	getDistance5@ticks+1,c
  2419  0008CE  0E00               	movlw	0
  2420  0008D0  6E1F               	movwf	getDistance5@ticks,c
  2421                           
  2422                           ;MainCode.c: 589:     TMR1H = 0;
  2423  0008D2  0E00               	movlw	0
  2424  0008D4  6EB1               	movwf	16305,c	;volatile
  2425                           
  2426                           ;MainCode.c: 590:     TMR1L = 0;
  2427  0008D6  0E00               	movlw	0
  2428  0008D8  6EB0               	movwf	16304,c	;volatile
  2429                           
  2430                           ;MainCode.c: 592:     while (PORTAbits.RA4 && (ticks < 15000))
  2431  0008DA  D00D               	goto	l1843
  2432  0008DC                     l1841:
  2433                           
  2434                           ;MainCode.c: 593:         ticks = (TMR1H << 8) | TMR1L;
  2435  0008DC  50B0               	movf	16304,w,c	;volatile
  2436  0008DE  006F FEC4  F01D    	movff	16305,??_getDistance5	;volatile
  2437  0008E4  6A1E               	clrf	(??_getDistance5+1)& (0+255),c
  2438  0008E6  0060  F074  F01E   	movff	??_getDistance5,??_getDistance5+1
  2439  0008EC  6A1D               	clrf	??_getDistance5,c
  2440  0008EE  101D               	iorwf	??_getDistance5,w,c
  2441  0008F0  6E1F               	movwf	getDistance5@ticks,c
  2442  0008F2  501E               	movf	??_getDistance5+1,w,c
  2443  0008F4  6E20               	movwf	getDistance5@ticks+1,c
  2444  0008F6                     l1843:
  2445                           
  2446                           ;MainCode.c: 592:     while (PORTAbits.RA4 && (ticks < 15000))
  2447  0008F6  A8CA               	btfss	16330,4,c	;volatile
  2448  0008F8  D008               	goto	u870
  2449  0008FA  BE20               	btfsc	getDistance5@ticks+1,7,c
  2450  0008FC  D7EF               	goto	l1841
  2451  0008FE  0E98               	movlw	152
  2452  000900  5C1F               	subwf	getDistance5@ticks,w,c
  2453  000902  0E3A               	movlw	58
  2454  000904  5820               	subwfb	getDistance5@ticks+1,w,c
  2455  000906  A0D8               	btfss	status,0,c
  2456  000908  D7E9               	goto	l1841
  2457  00090A                     u870:
  2458                           
  2459                           ;MainCode.c: 595:     T1CONbits.TMR1ON = 0;
  2460  00090A  90B2               	bcf	16306,0,c	;volatile
  2461                           
  2462                           ;MainCode.c: 597:     if (ticks >= 15000)
  2463  00090C  BE20               	btfsc	getDistance5@ticks+1,7,c
  2464  00090E  D009               	goto	l389
  2465  000910  0E98               	movlw	152
  2466  000912  5C1F               	subwf	getDistance5@ticks,w,c
  2467  000914  0E3A               	movlw	58
  2468  000916  5820               	subwfb	getDistance5@ticks+1,w,c
  2469  000918  A0D8               	btfss	status,0,c
  2470  00091A  D003               	goto	l389
  2471                           
  2472                           ;MainCode.c: 598:         return -1;
  2473  00091C  681B               	setf	?_getDistance5,c
  2474  00091E  681C               	setf	?_getDistance5+1,c
  2475  000920  0012               	return	
  2476  000922                     l389:
  2477                           
  2478                           ;MainCode.c: 601:         return ticks;
  2479  000922  0060  F07C  F01B   	movff	getDistance5@ticks,?_getDistance5
  2480  000928  0060  F080  F01C   	movff	getDistance5@ticks+1,?_getDistance5+1
  2481  00092E  0012               	return		;funcret
  2482  000930                     __end_of_getDistance5:
  2483                           	opt callstack 0
  2484                           
  2485 ;; *************** function _getDistance4 *****************
  2486 ;; Defined at:
  2487 ;;		line 570 in file "MainCode.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;		None
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;  ticks           2   30[COMRAM] int 
  2492 ;; Return value:  Size  Location     Type
  2493 ;;                  2   26[COMRAM] int 
  2494 ;; Registers used:
  2495 ;;		wreg, status,2, status,0
  2496 ;; Tracked objects:
  2497 ;;		On entry : 0/0
  2498 ;;		On exit  : 0/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2501 ;;      Params:         2       0       0       0       0       0       0       0       0
  2502 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2503 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2504 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2505 ;;Total ram usage:        6 bytes
  2506 ;; Hardware stack levels used:    1
  2507 ;; Hardware stack levels required when called:    2
  2508 ;; This function calls:
  2509 ;;		Nothing
  2510 ;; This function is called by:
  2511 ;;		_main
  2512 ;; This function uses a non-reentrant model
  2513 ;;
  2514                           
  2515                           	psect	text15
  2516  000930                     __ptext15:
  2517                           	opt callstack 0
  2518  000930                     _getDistance4:
  2519                           	opt callstack 28
  2520                           
  2521                           ;MainCode.c: 571:     int ticks = 0;
  2522                           
  2523                           ;incstack = 0
  2524  000930  0E00               	movlw	0
  2525  000932  6E20               	movwf	getDistance4@ticks+1,c
  2526  000934  0E00               	movlw	0
  2527  000936  6E1F               	movwf	getDistance4@ticks,c
  2528                           
  2529                           ;MainCode.c: 572:     TMR1H = 0;
  2530  000938  0E00               	movlw	0
  2531  00093A  6EB1               	movwf	16305,c	;volatile
  2532                           
  2533                           ;MainCode.c: 573:     TMR1L = 0;
  2534  00093C  0E00               	movlw	0
  2535  00093E  6EB0               	movwf	16304,c	;volatile
  2536                           
  2537                           ;MainCode.c: 575:     while (PORTBbits.RB4 && (ticks < 15000))
  2538  000940  D00D               	goto	l1807
  2539  000942                     l1805:
  2540                           
  2541                           ;MainCode.c: 576:         ticks = (TMR1H << 8) | TMR1L;
  2542  000942  50B0               	movf	16304,w,c	;volatile
  2543  000944  006F FEC4  F01D    	movff	16305,??_getDistance4	;volatile
  2544  00094A  6A1E               	clrf	(??_getDistance4+1)& (0+255),c
  2545  00094C  0060  F074  F01E   	movff	??_getDistance4,??_getDistance4+1
  2546  000952  6A1D               	clrf	??_getDistance4,c
  2547  000954  101D               	iorwf	??_getDistance4,w,c
  2548  000956  6E1F               	movwf	getDistance4@ticks,c
  2549  000958  501E               	movf	??_getDistance4+1,w,c
  2550  00095A  6E20               	movwf	getDistance4@ticks+1,c
  2551  00095C                     l1807:
  2552                           
  2553                           ;MainCode.c: 575:     while (PORTBbits.RB4 && (ticks < 15000))
  2554  00095C  A8CB               	btfss	16331,4,c	;volatile
  2555  00095E  D008               	goto	u810
  2556  000960  BE20               	btfsc	getDistance4@ticks+1,7,c
  2557  000962  D7EF               	goto	l1805
  2558  000964  0E98               	movlw	152
  2559  000966  5C1F               	subwf	getDistance4@ticks,w,c
  2560  000968  0E3A               	movlw	58
  2561  00096A  5820               	subwfb	getDistance4@ticks+1,w,c
  2562  00096C  A0D8               	btfss	status,0,c
  2563  00096E  D7E9               	goto	l1805
  2564  000970                     u810:
  2565                           
  2566                           ;MainCode.c: 578:     T1CONbits.TMR1ON = 0;
  2567  000970  90B2               	bcf	16306,0,c	;volatile
  2568                           
  2569                           ;MainCode.c: 580:     if (ticks >= 15000)
  2570  000972  BE20               	btfsc	getDistance4@ticks+1,7,c
  2571  000974  D009               	goto	l379
  2572  000976  0E98               	movlw	152
  2573  000978  5C1F               	subwf	getDistance4@ticks,w,c
  2574  00097A  0E3A               	movlw	58
  2575  00097C  5820               	subwfb	getDistance4@ticks+1,w,c
  2576  00097E  A0D8               	btfss	status,0,c
  2577  000980  D003               	goto	l379
  2578                           
  2579                           ;MainCode.c: 581:         return -1;
  2580  000982  681B               	setf	?_getDistance4,c
  2581  000984  681C               	setf	?_getDistance4+1,c
  2582  000986  0012               	return	
  2583  000988                     l379:
  2584                           
  2585                           ;MainCode.c: 584:         return ticks;
  2586  000988  0060  F07C  F01B   	movff	getDistance4@ticks,?_getDistance4
  2587  00098E  0060  F080  F01C   	movff	getDistance4@ticks+1,?_getDistance4+1
  2588  000994  0012               	return		;funcret
  2589  000996                     __end_of_getDistance4:
  2590                           	opt callstack 0
  2591                           
  2592 ;; *************** function _getDistance3 *****************
  2593 ;; Defined at:
  2594 ;;		line 553 in file "MainCode.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;		None
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;  ticks           2   30[COMRAM] int 
  2599 ;; Return value:  Size  Location     Type
  2600 ;;                  2   26[COMRAM] int 
  2601 ;; Registers used:
  2602 ;;		wreg, status,2, status,0
  2603 ;; Tracked objects:
  2604 ;;		On entry : 0/0
  2605 ;;		On exit  : 0/0
  2606 ;;		Unchanged: 0/0
  2607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2608 ;;      Params:         2       0       0       0       0       0       0       0       0
  2609 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2610 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2611 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2612 ;;Total ram usage:        6 bytes
  2613 ;; Hardware stack levels used:    1
  2614 ;; Hardware stack levels required when called:    2
  2615 ;; This function calls:
  2616 ;;		Nothing
  2617 ;; This function is called by:
  2618 ;;		_main
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622                           	psect	text16
  2623  000996                     __ptext16:
  2624                           	opt callstack 0
  2625  000996                     _getDistance3:
  2626                           	opt callstack 28
  2627                           
  2628                           ;MainCode.c: 554:     int ticks = 0;
  2629                           
  2630                           ;incstack = 0
  2631  000996  0E00               	movlw	0
  2632  000998  6E20               	movwf	getDistance3@ticks+1,c
  2633  00099A  0E00               	movlw	0
  2634  00099C  6E1F               	movwf	getDistance3@ticks,c
  2635                           
  2636                           ;MainCode.c: 555:     TMR1H = 0;
  2637  00099E  0E00               	movlw	0
  2638  0009A0  6EB1               	movwf	16305,c	;volatile
  2639                           
  2640                           ;MainCode.c: 556:     TMR1L = 0;
  2641  0009A2  0E00               	movlw	0
  2642  0009A4  6EB0               	movwf	16304,c	;volatile
  2643                           
  2644                           ;MainCode.c: 558:     while (PORTAbits.RA5 && (ticks < 15000))
  2645  0009A6  D00D               	goto	l1771
  2646  0009A8                     l1769:
  2647                           
  2648                           ;MainCode.c: 559:         ticks = (TMR1H << 8) | TMR1L;
  2649  0009A8  50B0               	movf	16304,w,c	;volatile
  2650  0009AA  006F FEC4  F01D    	movff	16305,??_getDistance3	;volatile
  2651  0009B0  6A1E               	clrf	(??_getDistance3+1)& (0+255),c
  2652  0009B2  0060  F074  F01E   	movff	??_getDistance3,??_getDistance3+1
  2653  0009B8  6A1D               	clrf	??_getDistance3,c
  2654  0009BA  101D               	iorwf	??_getDistance3,w,c
  2655  0009BC  6E1F               	movwf	getDistance3@ticks,c
  2656  0009BE  501E               	movf	??_getDistance3+1,w,c
  2657  0009C0  6E20               	movwf	getDistance3@ticks+1,c
  2658  0009C2                     l1771:
  2659                           
  2660                           ;MainCode.c: 558:     while (PORTAbits.RA5 && (ticks < 15000))
  2661  0009C2  AACA               	btfss	16330,5,c	;volatile
  2662  0009C4  D008               	goto	u750
  2663  0009C6  BE20               	btfsc	getDistance3@ticks+1,7,c
  2664  0009C8  D7EF               	goto	l1769
  2665  0009CA  0E98               	movlw	152
  2666  0009CC  5C1F               	subwf	getDistance3@ticks,w,c
  2667  0009CE  0E3A               	movlw	58
  2668  0009D0  5820               	subwfb	getDistance3@ticks+1,w,c
  2669  0009D2  A0D8               	btfss	status,0,c
  2670  0009D4  D7E9               	goto	l1769
  2671  0009D6                     u750:
  2672                           
  2673                           ;MainCode.c: 561:     T1CONbits.TMR1ON = 0;
  2674  0009D6  90B2               	bcf	16306,0,c	;volatile
  2675                           
  2676                           ;MainCode.c: 563:     if (ticks >= 15000)
  2677  0009D8  BE20               	btfsc	getDistance3@ticks+1,7,c
  2678  0009DA  D009               	goto	l369
  2679  0009DC  0E98               	movlw	152
  2680  0009DE  5C1F               	subwf	getDistance3@ticks,w,c
  2681  0009E0  0E3A               	movlw	58
  2682  0009E2  5820               	subwfb	getDistance3@ticks+1,w,c
  2683  0009E4  A0D8               	btfss	status,0,c
  2684  0009E6  D003               	goto	l369
  2685                           
  2686                           ;MainCode.c: 564:         return -1;
  2687  0009E8  681B               	setf	?_getDistance3,c
  2688  0009EA  681C               	setf	?_getDistance3+1,c
  2689  0009EC  0012               	return	
  2690  0009EE                     l369:
  2691                           
  2692                           ;MainCode.c: 567:         return ticks;
  2693  0009EE  0060  F07C  F01B   	movff	getDistance3@ticks,?_getDistance3
  2694  0009F4  0060  F080  F01C   	movff	getDistance3@ticks+1,?_getDistance3+1
  2695  0009FA  0012               	return		;funcret
  2696  0009FC                     __end_of_getDistance3:
  2697                           	opt callstack 0
  2698                           
  2699 ;; *************** function _getDistance2 *****************
  2700 ;; Defined at:
  2701 ;;		line 536 in file "MainCode.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;		None
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;  ticks           2   30[COMRAM] int 
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  2   26[COMRAM] int 
  2708 ;; Registers used:
  2709 ;;		wreg, status,2, status,0
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2715 ;;      Params:         2       0       0       0       0       0       0       0       0
  2716 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2717 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2718 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2719 ;;Total ram usage:        6 bytes
  2720 ;; Hardware stack levels used:    1
  2721 ;; Hardware stack levels required when called:    2
  2722 ;; This function calls:
  2723 ;;		Nothing
  2724 ;; This function is called by:
  2725 ;;		_main
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729                           	psect	text17
  2730  0009FC                     __ptext17:
  2731                           	opt callstack 0
  2732  0009FC                     _getDistance2:
  2733                           	opt callstack 28
  2734                           
  2735                           ;MainCode.c: 537:     int ticks = 0;
  2736                           
  2737                           ;incstack = 0
  2738  0009FC  0E00               	movlw	0
  2739  0009FE  6E20               	movwf	getDistance2@ticks+1,c
  2740  000A00  0E00               	movlw	0
  2741  000A02  6E1F               	movwf	getDistance2@ticks,c
  2742                           
  2743                           ;MainCode.c: 538:     TMR1H = 0;
  2744  000A04  0E00               	movlw	0
  2745  000A06  6EB1               	movwf	16305,c	;volatile
  2746                           
  2747                           ;MainCode.c: 539:     TMR1L = 0;
  2748  000A08  0E00               	movlw	0
  2749  000A0A  6EB0               	movwf	16304,c	;volatile
  2750                           
  2751                           ;MainCode.c: 541:     while (PORTBbits.RB0 && (ticks < 15000))
  2752  000A0C  D00D               	goto	l1735
  2753  000A0E                     l1733:
  2754                           
  2755                           ;MainCode.c: 542:         ticks = (TMR1H << 8) | TMR1L;
  2756  000A0E  50B0               	movf	16304,w,c	;volatile
  2757  000A10  006F FEC4  F01D    	movff	16305,??_getDistance2	;volatile
  2758  000A16  6A1E               	clrf	(??_getDistance2+1)& (0+255),c
  2759  000A18  0060  F074  F01E   	movff	??_getDistance2,??_getDistance2+1
  2760  000A1E  6A1D               	clrf	??_getDistance2,c
  2761  000A20  101D               	iorwf	??_getDistance2,w,c
  2762  000A22  6E1F               	movwf	getDistance2@ticks,c
  2763  000A24  501E               	movf	??_getDistance2+1,w,c
  2764  000A26  6E20               	movwf	getDistance2@ticks+1,c
  2765  000A28                     l1735:
  2766                           
  2767                           ;MainCode.c: 541:     while (PORTBbits.RB0 && (ticks < 15000))
  2768  000A28  A0CB               	btfss	16331,0,c	;volatile
  2769  000A2A  D008               	goto	u690
  2770  000A2C  BE20               	btfsc	getDistance2@ticks+1,7,c
  2771  000A2E  D7EF               	goto	l1733
  2772  000A30  0E98               	movlw	152
  2773  000A32  5C1F               	subwf	getDistance2@ticks,w,c
  2774  000A34  0E3A               	movlw	58
  2775  000A36  5820               	subwfb	getDistance2@ticks+1,w,c
  2776  000A38  A0D8               	btfss	status,0,c
  2777  000A3A  D7E9               	goto	l1733
  2778  000A3C                     u690:
  2779                           
  2780                           ;MainCode.c: 544:     T1CONbits.TMR1ON = 0;
  2781  000A3C  90B2               	bcf	16306,0,c	;volatile
  2782                           
  2783                           ;MainCode.c: 546:     if (ticks >= 15000)
  2784  000A3E  BE20               	btfsc	getDistance2@ticks+1,7,c
  2785  000A40  D009               	goto	l359
  2786  000A42  0E98               	movlw	152
  2787  000A44  5C1F               	subwf	getDistance2@ticks,w,c
  2788  000A46  0E3A               	movlw	58
  2789  000A48  5820               	subwfb	getDistance2@ticks+1,w,c
  2790  000A4A  A0D8               	btfss	status,0,c
  2791  000A4C  D003               	goto	l359
  2792                           
  2793                           ;MainCode.c: 547:         return -1;
  2794  000A4E  681B               	setf	?_getDistance2,c
  2795  000A50  681C               	setf	?_getDistance2+1,c
  2796  000A52  0012               	return	
  2797  000A54                     l359:
  2798                           
  2799                           ;MainCode.c: 550:         return ticks;
  2800  000A54  0060  F07C  F01B   	movff	getDistance2@ticks,?_getDistance2
  2801  000A5A  0060  F080  F01C   	movff	getDistance2@ticks+1,?_getDistance2+1
  2802  000A60  0012               	return		;funcret
  2803  000A62                     __end_of_getDistance2:
  2804                           	opt callstack 0
  2805                           
  2806 ;; *************** function _getDistance1 *****************
  2807 ;; Defined at:
  2808 ;;		line 519 in file "MainCode.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;		None
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;  ticks           2   30[COMRAM] int 
  2813 ;; Return value:  Size  Location     Type
  2814 ;;                  2   26[COMRAM] int 
  2815 ;; Registers used:
  2816 ;;		wreg, status,2, status,0
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2822 ;;      Params:         2       0       0       0       0       0       0       0       0
  2823 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2824 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2825 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2826 ;;Total ram usage:        6 bytes
  2827 ;; Hardware stack levels used:    1
  2828 ;; Hardware stack levels required when called:    2
  2829 ;; This function calls:
  2830 ;;		Nothing
  2831 ;; This function is called by:
  2832 ;;		_main
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836                           	psect	text18
  2837  000A62                     __ptext18:
  2838                           	opt callstack 0
  2839  000A62                     _getDistance1:
  2840                           	opt callstack 28
  2841                           
  2842                           ;MainCode.c: 520:     int ticks = 0;
  2843                           
  2844                           ;incstack = 0
  2845  000A62  0E00               	movlw	0
  2846  000A64  6E20               	movwf	getDistance1@ticks+1,c
  2847  000A66  0E00               	movlw	0
  2848  000A68  6E1F               	movwf	getDistance1@ticks,c
  2849                           
  2850                           ;MainCode.c: 521:     TMR1H = 0;
  2851  000A6A  0E00               	movlw	0
  2852  000A6C  6EB1               	movwf	16305,c	;volatile
  2853                           
  2854                           ;MainCode.c: 522:     TMR1L = 0;
  2855  000A6E  0E00               	movlw	0
  2856  000A70  6EB0               	movwf	16304,c	;volatile
  2857                           
  2858                           ;MainCode.c: 524:     while (PORTBbits.RB1 && (ticks < 15000))
  2859  000A72  D00D               	goto	l1699
  2860  000A74                     l1697:
  2861                           
  2862                           ;MainCode.c: 525:         ticks = (TMR1H << 8) | TMR1L;
  2863  000A74  50B0               	movf	16304,w,c	;volatile
  2864  000A76  006F FEC4  F01D    	movff	16305,??_getDistance1	;volatile
  2865  000A7C  6A1E               	clrf	(??_getDistance1+1)& (0+255),c
  2866  000A7E  0060  F074  F01E   	movff	??_getDistance1,??_getDistance1+1
  2867  000A84  6A1D               	clrf	??_getDistance1,c
  2868  000A86  101D               	iorwf	??_getDistance1,w,c
  2869  000A88  6E1F               	movwf	getDistance1@ticks,c
  2870  000A8A  501E               	movf	??_getDistance1+1,w,c
  2871  000A8C  6E20               	movwf	getDistance1@ticks+1,c
  2872  000A8E                     l1699:
  2873                           
  2874                           ;MainCode.c: 524:     while (PORTBbits.RB1 && (ticks < 15000))
  2875  000A8E  A2CB               	btfss	16331,1,c	;volatile
  2876  000A90  D008               	goto	u630
  2877  000A92  BE20               	btfsc	getDistance1@ticks+1,7,c
  2878  000A94  D7EF               	goto	l1697
  2879  000A96  0E98               	movlw	152
  2880  000A98  5C1F               	subwf	getDistance1@ticks,w,c
  2881  000A9A  0E3A               	movlw	58
  2882  000A9C  5820               	subwfb	getDistance1@ticks+1,w,c
  2883  000A9E  A0D8               	btfss	status,0,c
  2884  000AA0  D7E9               	goto	l1697
  2885  000AA2                     u630:
  2886                           
  2887                           ;MainCode.c: 527:     T1CONbits.TMR1ON = 0;
  2888  000AA2  90B2               	bcf	16306,0,c	;volatile
  2889                           
  2890                           ;MainCode.c: 529:     if (ticks >= 15000)
  2891  000AA4  BE20               	btfsc	getDistance1@ticks+1,7,c
  2892  000AA6  D009               	goto	l349
  2893  000AA8  0E98               	movlw	152
  2894  000AAA  5C1F               	subwf	getDistance1@ticks,w,c
  2895  000AAC  0E3A               	movlw	58
  2896  000AAE  5820               	subwfb	getDistance1@ticks+1,w,c
  2897  000AB0  A0D8               	btfss	status,0,c
  2898  000AB2  D003               	goto	l349
  2899                           
  2900                           ;MainCode.c: 530:         return -1;
  2901  000AB4  681B               	setf	?_getDistance1,c
  2902  000AB6  681C               	setf	?_getDistance1+1,c
  2903  000AB8  0012               	return	
  2904  000ABA                     l349:
  2905                           
  2906                           ;MainCode.c: 533:         return ticks;
  2907  000ABA  0060  F07C  F01B   	movff	getDistance1@ticks,?_getDistance1
  2908  000AC0  0060  F080  F01C   	movff	getDistance1@ticks+1,?_getDistance1+1
  2909  000AC6  0012               	return		;funcret
  2910  000AC8                     __end_of_getDistance1:
  2911                           	opt callstack 0
  2912                           
  2913 ;; *************** function _adcInt *****************
  2914 ;; Defined at:
  2915 ;;		line 186 in file "MainCode.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;		None
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;		None
  2920 ;; Return value:  Size  Location     Type
  2921 ;;                  1    wreg      void 
  2922 ;; Registers used:
  2923 ;;		None
  2924 ;; Tracked objects:
  2925 ;;		On entry : 0/0
  2926 ;;		On exit  : 0/0
  2927 ;;		Unchanged: 0/0
  2928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2929 ;;      Params:         0       0       0       0       0       0       0       0       0
  2930 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2931 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2932 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2933 ;;Total ram usage:        0 bytes
  2934 ;; Hardware stack levels used:    1
  2935 ;; This function calls:
  2936 ;;		Nothing
  2937 ;; This function is called by:
  2938 ;;		Interrupt level 2
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           	psect	text19
  2943  000C0C                     __ptext19:
  2944                           	opt callstack 0
  2945  000C0C                     _adcInt:
  2946                           	opt callstack 29
  2947                           
  2948                           ;incstack = 0
  2949  000C0C  0011               	retfie		f
  2950  000C0E                     __end_of_adcInt:
  2951                           	opt callstack 0
  2952                           
  2953 ;; *************** function _canRecInt *****************
  2954 ;; Defined at:
  2955 ;;		line 192 in file "MainCode.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;		None
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;  message        16   10[COMRAM] int [8]
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      void 
  2962 ;; Registers used:
  2963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2969 ;;      Params:         0       0       0       0       0       0       0       0       0
  2970 ;;      Locals:        16       0       0       0       0       0       0       0       0
  2971 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2972 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2973 ;;Total ram usage:       18 bytes
  2974 ;; Hardware stack levels used:    1
  2975 ;; Hardware stack levels required when called:    1
  2976 ;; This function calls:
  2977 ;;		_sendCANmessage
  2978 ;; This function is called by:
  2979 ;;		Interrupt level 2
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           	psect	text20
  2984  000268                     __ptext20:
  2985                           	opt callstack 0
  2986  000268                     _canRecInt:
  2987                           	opt callstack 28
  2988                           
  2989                           ;incstack = 0
  2990  000268  BE80               	btfsc	16256,7,c	;volatile
  2991  00026A  D096               	goto	i2l2081
  2992  00026C  D0B9               	goto	i2l246
  2993  00026E                     i2l2049:
  2994  00026E  0E00               	movlw	0
  2995  000270  6E0C               	movwf	canRecInt@message+1,c
  2996  000272  0E01               	movlw	1
  2997  000274  6E0B               	movwf	canRecInt@message,c
  2998  000276  0E00               	movlw	0
  2999  000278  6E02               	movwf	sendCANmessage@id+1,c
  3000  00027A  0E00               	movlw	0
  3001  00027C  6E01               	movwf	sendCANmessage@id,c
  3002  00027E  0E0B               	movlw	low canRecInt@message
  3003  000280  6E03               	movwf	sendCANmessage@message,c
  3004  000282  0E00               	movlw	high canRecInt@message
  3005  000284  6E04               	movwf	sendCANmessage@message+1,c
  3006  000286  0E00               	movlw	0
  3007  000288  6E06               	movwf	sendCANmessage@length+1,c
  3008  00028A  0E01               	movlw	1
  3009  00028C  6E05               	movwf	sendCANmessage@length,c
  3010  00028E  EC84  F002         	call	_sendCANmessage	;wreg free
  3011  000292  D0A5               	goto	i2l249
  3012  000294                     i2l250:
  3013  000294  0060  F0EC  F00B   	movff	_ADCvalueHigh0,canRecInt@message
  3014  00029A  0060  F0F0  F00C   	movff	_ADCvalueHigh0+1,canRecInt@message+1
  3015  0002A0  0060  F0E4  F00D   	movff	_ADCvalueLow0,canRecInt@message+2
  3016  0002A6  0060  F0E8  F00E   	movff	_ADCvalueLow0+1,canRecInt@message+3
  3017  0002AC                     i2l2053:
  3018  0002AC  0E00               	movlw	0
  3019  0002AE  6E02               	movwf	sendCANmessage@id+1,c
  3020  0002B0  0E00               	movlw	0
  3021  0002B2  6E01               	movwf	sendCANmessage@id,c
  3022  0002B4  0E0B               	movlw	low canRecInt@message
  3023  0002B6  6E03               	movwf	sendCANmessage@message,c
  3024  0002B8  0E00               	movlw	high canRecInt@message
  3025  0002BA  6E04               	movwf	sendCANmessage@message+1,c
  3026  0002BC  0E00               	movlw	0
  3027  0002BE  6E06               	movwf	sendCANmessage@length+1,c
  3028  0002C0  0E02               	movlw	2
  3029  0002C2  6E05               	movwf	sendCANmessage@length,c
  3030  0002C4  EC84  F002         	call	_sendCANmessage	;wreg free
  3031  0002C8  D08A               	goto	i2l249
  3032  0002CA                     i2l251:
  3033  0002CA  0060  F0DC  F00B   	movff	_ADCvalueHigh1,canRecInt@message
  3034  0002D0  0060  F0E0  F00C   	movff	_ADCvalueHigh1+1,canRecInt@message+1
  3035  0002D6  0060  F0D4  F00D   	movff	_ADCvalueLow1,canRecInt@message+2
  3036  0002DC  0060  F0D8  F00E   	movff	_ADCvalueLow1+1,canRecInt@message+3
  3037  0002E2  D7E4               	goto	i2l2053
  3038  0002E4                     i2l2057:
  3039  0002E4  0060  F0D0  F009   	movff	_distance1+1,??_canRecInt
  3040  0002EA  6A0A               	clrf	(??_canRecInt+1)& (0+255),c
  3041  0002EC  BE09               	btfsc	??_canRecInt& (0+255),7,c
  3042  0002EE  680A               	setf	(??_canRecInt+1)& (0+255),c
  3043  0002F0  5009               	movf	??_canRecInt,w,c
  3044  0002F2  6E0B               	movwf	canRecInt@message,c
  3045  0002F4  6A0C               	clrf	canRecInt@message+1,c
  3046  0002F6  5033               	movf	_distance1,w,c
  3047  0002F8  D02B               	goto	L5
  3048  0002FA                     i2l2061:
  3049  0002FA  0060  F0C8  F009   	movff	_distance2+1,??_canRecInt
  3050  000300  6A0A               	clrf	(??_canRecInt+1)& (0+255),c
  3051  000302  BE09               	btfsc	??_canRecInt& (0+255),7,c
  3052  000304  680A               	setf	(??_canRecInt+1)& (0+255),c
  3053  000306  5009               	movf	??_canRecInt,w,c
  3054  000308  6E0B               	movwf	canRecInt@message,c
  3055  00030A  6A0C               	clrf	canRecInt@message+1,c
  3056  00030C  5031               	movf	_distance2,w,c
  3057  00030E  D020               	goto	L5
  3058  000310                     i2l2065:
  3059  000310  0060  F0C0  F009   	movff	_distance3+1,??_canRecInt
  3060  000316  6A0A               	clrf	(??_canRecInt+1)& (0+255),c
  3061  000318  BE09               	btfsc	??_canRecInt& (0+255),7,c
  3062  00031A  680A               	setf	(??_canRecInt+1)& (0+255),c
  3063  00031C  5009               	movf	??_canRecInt,w,c
  3064  00031E  6E0B               	movwf	canRecInt@message,c
  3065  000320  6A0C               	clrf	canRecInt@message+1,c
  3066  000322  502F               	movf	_distance3,w,c
  3067  000324  D015               	goto	L5
  3068  000326                     i2l2069:
  3069  000326  0060  F0B8  F009   	movff	_distance4+1,??_canRecInt
  3070  00032C  6A0A               	clrf	(??_canRecInt+1)& (0+255),c
  3071  00032E  BE09               	btfsc	??_canRecInt& (0+255),7,c
  3072  000330  680A               	setf	(??_canRecInt+1)& (0+255),c
  3073  000332  5009               	movf	??_canRecInt,w,c
  3074  000334  6E0B               	movwf	canRecInt@message,c
  3075  000336  6A0C               	clrf	canRecInt@message+1,c
  3076  000338  502D               	movf	_distance4,w,c
  3077  00033A  D00A               	goto	L5
  3078  00033C                     i2l2073:
  3079  00033C  0060  F0B0  F009   	movff	_distance5+1,??_canRecInt
  3080  000342  6A0A               	clrf	(??_canRecInt+1)& (0+255),c
  3081  000344  BE09               	btfsc	??_canRecInt& (0+255),7,c
  3082  000346  680A               	setf	(??_canRecInt+1)& (0+255),c
  3083  000348  5009               	movf	??_canRecInt,w,c
  3084  00034A  6E0B               	movwf	canRecInt@message,c
  3085  00034C  6A0C               	clrf	canRecInt@message+1,c
  3086  00034E  502B               	movf	_distance5,w,c
  3087  000350                     L5:
  3088  000350  6E0D               	movwf	canRecInt@message+2,c
  3089  000352  6A0E               	clrf	canRecInt@message+3,c
  3090  000354  D7AB               	goto	i2l2053
  3091  000356                     i2l257:
  3092  000356  0060  F0A4  F00B   	movff	_perimeter,canRecInt@message
  3093  00035C  0060  F0A8  F00C   	movff	_perimeter+1,canRecInt@message+1
  3094  000362  0060  F09C  F00D   	movff	_sign_perimeter,canRecInt@message+2
  3095  000368  0060  F0A0  F00E   	movff	_sign_perimeter+1,canRecInt@message+3
  3096  00036E  0060  F0F4  F00F   	movff	_con_perimeter,canRecInt@message+4
  3097  000374  0060  F0F8  F010   	movff	_con_perimeter+1,canRecInt@message+5
  3098  00037A  0E00               	movlw	0
  3099  00037C  6E02               	movwf	sendCANmessage@id+1,c
  3100  00037E  0E00               	movlw	0
  3101  000380  6E01               	movwf	sendCANmessage@id,c
  3102  000382  0E0B               	movlw	low canRecInt@message
  3103  000384  6E03               	movwf	sendCANmessage@message,c
  3104  000386  0E00               	movlw	high canRecInt@message
  3105  000388  6E04               	movwf	sendCANmessage@message+1,c
  3106  00038A  0E00               	movlw	0
  3107  00038C  6E06               	movwf	sendCANmessage@length+1,c
  3108  00038E  0E03               	movlw	3
  3109  000390  6E05               	movwf	sendCANmessage@length,c
  3110  000392  EC84  F002         	call	_sendCANmessage	;wreg free
  3111  000396  D023               	goto	i2l249
  3112  000398                     i2l2081:
  3113  000398  5086               	movf	16262,w,c	;volatile
  3114  00039A  6E09               	movwf	??_canRecInt& (0+255),c
  3115  00039C  6A0A               	clrf	(??_canRecInt+1)& (0+255),c
  3116                           
  3117                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3118                           ; Switch size 1, requested type "simple"
  3119                           ; Number of cases is 1, Range of values is 0 to 0
  3120                           ; switch strategies available:
  3121                           ; Name         Instructions Cycles
  3122                           ; simple_byte            4     3 (average)
  3123                           ;	Chosen strategy is simple_byte
  3124  00039E  500A               	movf	??_canRecInt+1,w,c
  3125  0003A0  0A00               	xorlw	0	; case 0
  3126  0003A2  A4D8               	btfss	status,2,c
  3127  0003A4  D01C               	goto	i2l249
  3128                           
  3129                           ; Switch size 1, requested type "simple"
  3130                           ; Number of cases is 9, Range of values is 0 to 8
  3131                           ; switch strategies available:
  3132                           ; Name         Instructions Cycles
  3133                           ; simple_byte           28    15 (average)
  3134                           ;	Chosen strategy is simple_byte
  3135  0003A6  5009               	movf	??_canRecInt,w,c
  3136  0003A8  0A00               	xorlw	0	; case 0
  3137  0003AA  B4D8               	btfsc	status,2,c
  3138  0003AC  D760               	goto	i2l2049
  3139  0003AE  0A01               	xorlw	1	; case 1
  3140  0003B0  B4D8               	btfsc	status,2,c
  3141  0003B2  D770               	goto	i2l250
  3142  0003B4  0A03               	xorlw	3	; case 2
  3143  0003B6  B4D8               	btfsc	status,2,c
  3144  0003B8  D788               	goto	i2l251
  3145  0003BA  0A01               	xorlw	1	; case 3
  3146  0003BC  B4D8               	btfsc	status,2,c
  3147  0003BE  D792               	goto	i2l2057
  3148  0003C0  0A07               	xorlw	7	; case 4
  3149  0003C2  B4D8               	btfsc	status,2,c
  3150  0003C4  D79A               	goto	i2l2061
  3151  0003C6  0A01               	xorlw	1	; case 5
  3152  0003C8  B4D8               	btfsc	status,2,c
  3153  0003CA  D7A2               	goto	i2l2065
  3154  0003CC  0A03               	xorlw	3	; case 6
  3155  0003CE  B4D8               	btfsc	status,2,c
  3156  0003D0  D7AA               	goto	i2l2069
  3157  0003D2  0A01               	xorlw	1	; case 7
  3158  0003D4  B4D8               	btfsc	status,2,c
  3159  0003D6  D7B2               	goto	i2l2073
  3160  0003D8  0A0F               	xorlw	15	; case 8
  3161  0003DA  B4D8               	btfsc	status,2,c
  3162  0003DC  D7BC               	goto	i2l257
  3163  0003DE                     i2l249:
  3164                           
  3165                           ;MainCode.c: 270:         RXB0CONbits.RXFUL = 0;
  3166  0003DE  9E80               	bcf	16256,7,c	;volatile
  3167  0003E0                     i2l246:
  3168                           
  3169                           ;MainCode.c: 272:     PIR5bits.RXB0IF = 0;
  3170  0003E0  0139               	movlb	57	; () banked
  3171  0003E2  91A5               	bcf	165,0,b	;volatile
  3172                           
  3173                           ; BSR set to: 57
  3174                           
  3175                           ;MainCode.c: 273:     return;
  3176  0003E4  0011               	retfie		f
  3177  0003E6                     __end_of_canRecInt:
  3178                           	opt callstack 0
  3179                           
  3180 ;; *************** function _sendCANmessage *****************
  3181 ;; Defined at:
  3182 ;;		line 661 in file "MainCode.c"
  3183 ;; Parameters:    Size  Location     Type
  3184 ;;  id              2    0[COMRAM] int 
  3185 ;;  message         2    2[COMRAM] PTR int 
  3186 ;;		 -> canRecInt@message(16), 
  3187 ;;  length          2    4[COMRAM] int 
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;		None
  3190 ;; Return value:  Size  Location     Type
  3191 ;;                  1    wreg      void 
  3192 ;; Registers used:
  3193 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3199 ;;      Params:         6       0       0       0       0       0       0       0       0
  3200 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3201 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3202 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3203 ;;Total ram usage:        8 bytes
  3204 ;; Hardware stack levels used:    1
  3205 ;; This function calls:
  3206 ;;		Nothing
  3207 ;; This function is called by:
  3208 ;;		_canRecInt
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           	psect	text21
  3213  000508                     __ptext21:
  3214                           	opt callstack 0
  3215  000508                     _sendCANmessage:
  3216                           	opt callstack 28
  3217                           
  3218                           ;MainCode.c: 662:     TXB0CONbits.TXREQ = 0;
  3219                           
  3220                           ; BSR set to: 57
  3221                           ;incstack = 0
  3222  000508  0137               	movlb	55	; () banked
  3223  00050A  97E0               	bcf	224,3,b	;volatile
  3224                           
  3225                           ; BSR set to: 55
  3226                           ;MainCode.c: 664:     CANCONbits.WIN = 0b000;
  3227  00050C  0EF1               	movlw	-15
  3228  00050E  168F               	andwf	16271,f,c	;volatile
  3229                           
  3230                           ;MainCode.c: 666:     TXB0CONbits.TXPRI = 0b11;
  3231  000510  0E03               	movlw	3
  3232  000512  13E0               	iorwf	224,f,b	;volatile
  3233                           
  3234                           ; BSR set to: 55
  3235                           ;MainCode.c: 668:     TXB0D0 = message[0];
  3236  000514  0060  F00F  FFD9   	movff	sendCANmessage@message,fsr2l
  3237  00051A  0060  F013  FFDA   	movff	sendCANmessage@message+1,fsr2h
  3238  000520  50DF               	movf	indf2,w,c
  3239  000522  6FE6               	movwf	230,b	;volatile
  3240                           
  3241                           ; BSR set to: 55
  3242                           ;MainCode.c: 669:     TXB0D1 = message[1];
  3243  000524  EE20 F002          	lfsr	2,2
  3244  000528  5003               	movf	sendCANmessage@message,w,c
  3245  00052A  26D9               	addwf	fsr2l,f,c
  3246  00052C  5004               	movf	sendCANmessage@message+1,w,c
  3247  00052E  22DA               	addwfc	fsr2h,f,c
  3248  000530  50DF               	movf	indf2,w,c
  3249  000532  6FE7               	movwf	231,b	;volatile
  3250                           
  3251                           ; BSR set to: 55
  3252                           ;MainCode.c: 670:     TXB0D2 = message[2];
  3253  000534  EE20 F004          	lfsr	2,4
  3254  000538  5003               	movf	sendCANmessage@message,w,c
  3255  00053A  26D9               	addwf	fsr2l,f,c
  3256  00053C  5004               	movf	sendCANmessage@message+1,w,c
  3257  00053E  22DA               	addwfc	fsr2h,f,c
  3258  000540  50DF               	movf	indf2,w,c
  3259  000542  6FE8               	movwf	232,b	;volatile
  3260                           
  3261                           ; BSR set to: 55
  3262                           ;MainCode.c: 671:     TXB0D3 = message[3];
  3263  000544  EE20 F006          	lfsr	2,6
  3264  000548  5003               	movf	sendCANmessage@message,w,c
  3265  00054A  26D9               	addwf	fsr2l,f,c
  3266  00054C  5004               	movf	sendCANmessage@message+1,w,c
  3267  00054E  22DA               	addwfc	fsr2h,f,c
  3268  000550  50DF               	movf	indf2,w,c
  3269  000552  6FE9               	movwf	233,b	;volatile
  3270                           
  3271                           ; BSR set to: 55
  3272                           ;MainCode.c: 672:     TXB0D4 = message[4];
  3273  000554  EE20 F008          	lfsr	2,8
  3274  000558  5003               	movf	sendCANmessage@message,w,c
  3275  00055A  26D9               	addwf	fsr2l,f,c
  3276  00055C  5004               	movf	sendCANmessage@message+1,w,c
  3277  00055E  22DA               	addwfc	fsr2h,f,c
  3278  000560  50DF               	movf	indf2,w,c
  3279  000562  6FEA               	movwf	234,b	;volatile
  3280                           
  3281                           ; BSR set to: 55
  3282                           ;MainCode.c: 673:     TXB0D5 = message[5];
  3283  000564  EE20 F00A          	lfsr	2,10
  3284  000568  5003               	movf	sendCANmessage@message,w,c
  3285  00056A  26D9               	addwf	fsr2l,f,c
  3286  00056C  5004               	movf	sendCANmessage@message+1,w,c
  3287  00056E  22DA               	addwfc	fsr2h,f,c
  3288  000570  50DF               	movf	indf2,w,c
  3289  000572  6FEB               	movwf	235,b	;volatile
  3290                           
  3291                           ; BSR set to: 55
  3292                           ;MainCode.c: 674:     TXB0D6 = message[6];
  3293  000574  EE20 F00C          	lfsr	2,12
  3294  000578  5003               	movf	sendCANmessage@message,w,c
  3295  00057A  26D9               	addwf	fsr2l,f,c
  3296  00057C  5004               	movf	sendCANmessage@message+1,w,c
  3297  00057E  22DA               	addwfc	fsr2h,f,c
  3298  000580  50DF               	movf	indf2,w,c
  3299  000582  6FEC               	movwf	236,b	;volatile
  3300                           
  3301                           ; BSR set to: 55
  3302                           ;MainCode.c: 675:     TXB0D7 = message[7];
  3303  000584  EE20 F00E          	lfsr	2,14
  3304  000588  5003               	movf	sendCANmessage@message,w,c
  3305  00058A  26D9               	addwf	fsr2l,f,c
  3306  00058C  5004               	movf	sendCANmessage@message+1,w,c
  3307  00058E  22DA               	addwfc	fsr2h,f,c
  3308  000590  50DF               	movf	indf2,w,c
  3309  000592  6FED               	movwf	237,b	;volatile
  3310                           
  3311                           ;MainCode.c: 677:     TXB0SIDLbits.SID = id;
  3312  000594  0060  F004  F007   	movff	sendCANmessage@id,??_sendCANmessage
  3313  00059A  3A07               	swapf	??_sendCANmessage,f,c
  3314  00059C  4607               	rlncf	??_sendCANmessage,f,c
  3315  00059E  51E2               	movf	226,w,b	;volatile
  3316  0005A0  1807               	xorwf	??_sendCANmessage,w,c
  3317  0005A2  0B1F               	andlw	-225
  3318  0005A4  1807               	xorwf	??_sendCANmessage,w,c
  3319  0005A6  6FE2               	movwf	226,b	;volatile
  3320                           
  3321                           ;MainCode.c: 678:     TXB0SIDH = id >> 3;
  3322  0005A8  0060  F004  F007   	movff	sendCANmessage@id,??_sendCANmessage
  3323  0005AE  0060  F008  F008   	movff	sendCANmessage@id+1,??_sendCANmessage+1
  3324  0005B4  3408               	rlcf	??_sendCANmessage+1,w,c
  3325  0005B6  3208               	rrcf	??_sendCANmessage+1,f,c
  3326  0005B8  3207               	rrcf	??_sendCANmessage,f,c
  3327  0005BA  3408               	rlcf	??_sendCANmessage+1,w,c
  3328  0005BC  3208               	rrcf	??_sendCANmessage+1,f,c
  3329  0005BE  3207               	rrcf	??_sendCANmessage,f,c
  3330  0005C0  3408               	rlcf	??_sendCANmessage+1,w,c
  3331  0005C2  3208               	rrcf	??_sendCANmessage+1,f,c
  3332  0005C4  3207               	rrcf	??_sendCANmessage,f,c
  3333  0005C6  5007               	movf	??_sendCANmessage,w,c
  3334  0005C8  6FE1               	movwf	225,b	;volatile
  3335                           
  3336                           ;MainCode.c: 680:     TXB0DLCbits.DLC = length;
  3337  0005CA  51E5               	movf	229,w,b	;volatile
  3338  0005CC  1805               	xorwf	sendCANmessage@length,w,c
  3339  0005CE  0BF0               	andlw	-16
  3340  0005D0  1805               	xorwf	sendCANmessage@length,w,c
  3341  0005D2  6FE5               	movwf	229,b	;volatile
  3342                           
  3343                           ; BSR set to: 55
  3344                           ;MainCode.c: 681:     TXB0DLCbits.TXRTR = 0;
  3345  0005D4  9DE5               	bcf	229,6,b	;volatile
  3346                           
  3347                           ; BSR set to: 55
  3348                           ;MainCode.c: 683:     TXB0CONbits.TXREQ = 1;
  3349  0005D6  87E0               	bsf	224,3,b	;volatile
  3350  0005D8                     i2l413:
  3351                           
  3352                           ; BSR set to: 55
  3353  0005D8  B7E0               	btfsc	224,3,b	;volatile
  3354  0005DA  0012               	return	
  3355  0005DC  D7FD               	goto	i2l413
  3356  0005DE                     __end_of_sendCANmessage:
  3357                           	opt callstack 0
  3358                           
  3359                           ;
  3360                           ; Interrupt Vector Table @ 0x8
  3361                           ;
  3362                           
  3363                           	psect	ivt0x8
  3364  000008                     __pivt0x8:
  3365                           	opt callstack 0
  3366  000008                     ivt0x8_base:
  3367                           	opt callstack 0
  3368                           
  3369                           ; Vector 0 : SWINT
  3370  000008  0029               	dw	ivt0x8_undefint shr (0+2)
  3371                           
  3372                           ; Vector 1 : HLVD
  3373  00000A  0029               	dw	ivt0x8_undefint shr (0+2)
  3374                           
  3375                           ; Vector 2 : OSF
  3376  00000C  0029               	dw	ivt0x8_undefint shr (0+2)
  3377                           
  3378                           ; Vector 3 : CSW
  3379  00000E  0029               	dw	ivt0x8_undefint shr (0+2)
  3380                           
  3381                           ; Vector 4 : NVM
  3382  000010  0029               	dw	ivt0x8_undefint shr (0+2)
  3383                           
  3384                           ; Vector 5 : SCAN
  3385  000012  0029               	dw	ivt0x8_undefint shr (0+2)
  3386                           
  3387                           ; Vector 6 : CRC
  3388  000014  0029               	dw	ivt0x8_undefint shr (0+2)
  3389                           
  3390                           ; Vector 7 : IOC
  3391  000016  0029               	dw	ivt0x8_undefint shr (0+2)
  3392                           
  3393                           ; Vector 8 : INT0
  3394  000018  0029               	dw	ivt0x8_undefint shr (0+2)
  3395                           
  3396                           ; Vector 9 : ZCD
  3397  00001A  0029               	dw	ivt0x8_undefint shr (0+2)
  3398                           
  3399                           ; Vector 10 : AD
  3400  00001C  0303               	dw	_adcInt shr (0+2)
  3401                           
  3402                           ; Vector 11 : ADT
  3403  00001E  0029               	dw	ivt0x8_undefint shr (0+2)
  3404                           
  3405                           ; Vector 12 : CMP1
  3406  000020  0029               	dw	ivt0x8_undefint shr (0+2)
  3407                           
  3408                           ; Vector 13 : SMT1
  3409  000022  0029               	dw	ivt0x8_undefint shr (0+2)
  3410                           
  3411                           ; Vector 14 : SMT1PRA
  3412  000024  0029               	dw	ivt0x8_undefint shr (0+2)
  3413                           
  3414                           ; Vector 15 : SMT1PWA
  3415  000026  0029               	dw	ivt0x8_undefint shr (0+2)
  3416                           
  3417                           ; Vector 16 : DMA1SCNT
  3418  000028  0029               	dw	ivt0x8_undefint shr (0+2)
  3419                           
  3420                           ; Vector 17 : DMA1DCNT
  3421  00002A  0029               	dw	ivt0x8_undefint shr (0+2)
  3422                           
  3423                           ; Vector 18 : DMA1OR
  3424  00002C  0029               	dw	ivt0x8_undefint shr (0+2)
  3425                           
  3426                           ; Vector 19 : DMA1A
  3427  00002E  0029               	dw	ivt0x8_undefint shr (0+2)
  3428                           
  3429                           ; Vector 20 : SPI1RX
  3430  000030  0029               	dw	ivt0x8_undefint shr (0+2)
  3431                           
  3432                           ; Vector 21 : SPI1TX
  3433  000032  0029               	dw	ivt0x8_undefint shr (0+2)
  3434                           
  3435                           ; Vector 22 : SPI1
  3436  000034  0029               	dw	ivt0x8_undefint shr (0+2)
  3437                           
  3438                           ; Vector 23 : I2C1RX
  3439  000036  0029               	dw	ivt0x8_undefint shr (0+2)
  3440                           
  3441                           ; Vector 24 : I2C1TX
  3442  000038  0029               	dw	ivt0x8_undefint shr (0+2)
  3443                           
  3444                           ; Vector 25 : I2C1
  3445  00003A  0029               	dw	ivt0x8_undefint shr (0+2)
  3446                           
  3447                           ; Vector 26 : I2C1E
  3448  00003C  0029               	dw	ivt0x8_undefint shr (0+2)
  3449                           
  3450                           ; Vector 27 : U1RX
  3451  00003E  0029               	dw	ivt0x8_undefint shr (0+2)
  3452                           
  3453                           ; Vector 28 : U1TX
  3454  000040  0029               	dw	ivt0x8_undefint shr (0+2)
  3455                           
  3456                           ; Vector 29 : U1E
  3457  000042  0029               	dw	ivt0x8_undefint shr (0+2)
  3458                           
  3459                           ; Vector 30 : U1
  3460  000044  0029               	dw	ivt0x8_undefint shr (0+2)
  3461                           
  3462                           ; Vector 31 : TMR0
  3463  000046  0029               	dw	ivt0x8_undefint shr (0+2)
  3464                           
  3465                           ; Vector 32 : TMR1
  3466  000048  0029               	dw	ivt0x8_undefint shr (0+2)
  3467                           
  3468                           ; Vector 33 : TMR1G
  3469  00004A  0029               	dw	ivt0x8_undefint shr (0+2)
  3470                           
  3471                           ; Vector 34 : TMR2
  3472  00004C  0029               	dw	ivt0x8_undefint shr (0+2)
  3473                           
  3474                           ; Vector 35 : CCP1
  3475  00004E  0029               	dw	ivt0x8_undefint shr (0+2)
  3476                           
  3477                           ; Vector 36 : NCO1
  3478  000050  0029               	dw	ivt0x8_undefint shr (0+2)
  3479                           
  3480                           ; Vector 37 : CWG1
  3481  000052  0029               	dw	ivt0x8_undefint shr (0+2)
  3482                           
  3483                           ; Vector 38 : CLC1
  3484  000054  0029               	dw	ivt0x8_undefint shr (0+2)
  3485                           
  3486                           ; Vector 39 : INT1
  3487  000056  0029               	dw	ivt0x8_undefint shr (0+2)
  3488                           
  3489                           ; Vector 40 : RXB0IF
  3490  000058  009A               	dw	_canRecInt shr (0+2)
  3491                           
  3492                           ; Vector 41 : RXB1IF
  3493  00005A  0029               	dw	ivt0x8_undefint shr (0+2)
  3494                           
  3495                           ; Vector 42 : TXB0IF
  3496  00005C  0029               	dw	ivt0x8_undefint shr (0+2)
  3497                           
  3498                           ; Vector 43 : TXB1IF
  3499  00005E  0029               	dw	ivt0x8_undefint shr (0+2)
  3500                           
  3501                           ; Vector 44 : TXB2IF
  3502  000060  0029               	dw	ivt0x8_undefint shr (0+2)
  3503                           
  3504                           ; Vector 45 : ERRIF
  3505  000062  0029               	dw	ivt0x8_undefint shr (0+2)
  3506                           
  3507                           ; Vector 46 : WAKIF
  3508  000064  0029               	dw	ivt0x8_undefint shr (0+2)
  3509                           
  3510                           ; Vector 47 : IRXIF
  3511  000066  0029               	dw	ivt0x8_undefint shr (0+2)
  3512                           
  3513                           ; Vector 48 : CMP2
  3514  000068  0029               	dw	ivt0x8_undefint shr (0+2)
  3515                           
  3516                           ; Vector 49 : SMT2
  3517  00006A  0029               	dw	ivt0x8_undefint shr (0+2)
  3518                           
  3519                           ; Vector 50 : SMT2PRA
  3520  00006C  0029               	dw	ivt0x8_undefint shr (0+2)
  3521                           
  3522                           ; Vector 51 : SMT2PWA
  3523  00006E  0029               	dw	ivt0x8_undefint shr (0+2)
  3524                           
  3525                           ; Vector 52 : DMA2SCNT
  3526  000070  0029               	dw	ivt0x8_undefint shr (0+2)
  3527                           
  3528                           ; Vector 53 : DMA2DCNT
  3529  000072  0029               	dw	ivt0x8_undefint shr (0+2)
  3530                           
  3531                           ; Vector 54 : DMA2OR
  3532  000074  0029               	dw	ivt0x8_undefint shr (0+2)
  3533                           
  3534                           ; Vector 55 : DMA2A
  3535  000076  0029               	dw	ivt0x8_undefint shr (0+2)
  3536                           
  3537                           ; Vector 56 : I2C2RX
  3538  000078  0029               	dw	ivt0x8_undefint shr (0+2)
  3539                           
  3540                           ; Vector 57 : I2C2TX
  3541  00007A  0029               	dw	ivt0x8_undefint shr (0+2)
  3542                           
  3543                           ; Vector 58 : I2C2
  3544  00007C  0029               	dw	ivt0x8_undefint shr (0+2)
  3545                           
  3546                           ; Vector 59 : I2C2E
  3547  00007E  0029               	dw	ivt0x8_undefint shr (0+2)
  3548                           
  3549                           ; Vector 60 : U2RX
  3550  000080  0029               	dw	ivt0x8_undefint shr (0+2)
  3551                           
  3552                           ; Vector 61 : U2TX
  3553  000082  0029               	dw	ivt0x8_undefint shr (0+2)
  3554                           
  3555                           ; Vector 62 : U2E
  3556  000084  0029               	dw	ivt0x8_undefint shr (0+2)
  3557                           
  3558                           ; Vector 63 : U2
  3559  000086  0029               	dw	ivt0x8_undefint shr (0+2)
  3560                           
  3561                           ; Vector 64 : TMR3
  3562  000088  0029               	dw	ivt0x8_undefint shr (0+2)
  3563                           
  3564                           ; Vector 65 : TMR3G
  3565  00008A  0029               	dw	ivt0x8_undefint shr (0+2)
  3566                           
  3567                           ; Vector 66 : TMR4
  3568  00008C  0029               	dw	ivt0x8_undefint shr (0+2)
  3569                           
  3570                           ; Vector 67 : CCP2
  3571  00008E  0029               	dw	ivt0x8_undefint shr (0+2)
  3572                           
  3573                           ; Vector 68 : CWG2
  3574  000090  0029               	dw	ivt0x8_undefint shr (0+2)
  3575                           
  3576                           ; Vector 69 : CLC2
  3577  000092  0029               	dw	ivt0x8_undefint shr (0+2)
  3578                           
  3579                           ; Vector 70 : INT2
  3580  000094  0029               	dw	ivt0x8_undefint shr (0+2)
  3581                           
  3582                           ; Vector 71 : TMR5
  3583  000096  0029               	dw	ivt0x8_undefint shr (0+2)
  3584                           
  3585                           ; Vector 72 : TMR5G
  3586  000098  0029               	dw	ivt0x8_undefint shr (0+2)
  3587                           
  3588                           ; Vector 73 : TMR6
  3589  00009A  0029               	dw	ivt0x8_undefint shr (0+2)
  3590                           
  3591                           ; Vector 74 : CCP3
  3592  00009C  0029               	dw	ivt0x8_undefint shr (0+2)
  3593                           
  3594                           ; Vector 75 : CWG3
  3595  00009E  0029               	dw	ivt0x8_undefint shr (0+2)
  3596                           
  3597                           ; Vector 76 : CLC3
  3598  0000A0  0029               	dw	ivt0x8_undefint shr (0+2)
  3599                           
  3600                           ; Vector 77 : CCP4
  3601  0000A2  0029               	dw	ivt0x8_undefint shr (0+2)
  3602                           
  3603                           ; Vector 78 : CLC4
  3604  0000A4  0029               	dw	ivt0x8_undefint shr (0+2)
  3605  0000A6                     ivt0x8_undefint:
  3606                           	opt callstack 0
  3607  0000A6  00FF               	reset	
  3608  0000                     
  3609                           	psect	rparam
  3610  0000                     tosu	equ	0x3FFF
  3611                           tosh	equ	0x3FFE
  3612                           tosl	equ	0x3FFD
  3613                           stkptr	equ	0x3FFC
  3614                           pclatu	equ	0x3FFB
  3615                           pclath	equ	0x3FFA
  3616                           pcl	equ	0x3FF9
  3617                           tblptru	equ	0x3FF8
  3618                           tblptrh	equ	0x3FF7
  3619                           tblptrl	equ	0x3FF6
  3620                           tablat	equ	0x3FF5
  3621                           prodh	equ	0x3FF4
  3622                           prodl	equ	0x3FF3
  3623                           indf0	equ	0x3FEF
  3624                           postinc0	equ	0x3FEE
  3625                           postdec0	equ	0x3FED
  3626                           preinc0	equ	0x3FEC
  3627                           plusw0	equ	0x3FEB
  3628                           fsr0h	equ	0x3FEA
  3629                           fsr0l	equ	0x3FE9
  3630                           wreg	equ	0x3FE8
  3631                           indf1	equ	0x3FE7
  3632                           postinc1	equ	0x3FE6
  3633                           postdec1	equ	0x3FE5
  3634                           preinc1	equ	0x3FE4
  3635                           plusw1	equ	0x3FE3
  3636                           fsr1h	equ	0x3FE2
  3637                           fsr1l	equ	0x3FE1
  3638                           bsr	equ	0x3FE0
  3639                           indf2	equ	0x3FDF
  3640                           postinc2	equ	0x3FDE
  3641                           postdec2	equ	0x3FDD
  3642                           preinc2	equ	0x3FDC
  3643                           plusw2	equ	0x3FDB
  3644                           fsr2h	equ	0x3FDA
  3645                           fsr2l	equ	0x3FD9
  3646                           status	equ	0x3FD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     38      62
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sendCANmessage@message	PTR int  size(2) Largest target is 16
		 -> canRecInt@message(COMRAM[16]), 

    readI2C@conOK	PTR int  size(2) Largest target is 2
		 -> con_perimeter(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_getDistance1
    _main->_getDistance2
    _main->_getDistance3
    _main->_getDistance4
    _main->_getDistance5
    _main->_readI2C
    _main->_waitForSensor1
    _main->_waitForSensor2
    _main->_waitForSensor3
    _main->_waitForSensor4
    _main->_waitForSensor5

Critical Paths under _adcInt in COMRAM

    None.

Critical Paths under _canRecInt in COMRAM

    _canRecInt->_sendCANmessage

Critical Paths under _main in BANK0

    None.

Critical Paths under _adcInt in BANK0

    None.

Critical Paths under _canRecInt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _adcInt in BANK1

    None.

Critical Paths under _canRecInt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _adcInt in BANK2

    None.

Critical Paths under _canRecInt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _adcInt in BANK3

    None.

Critical Paths under _canRecInt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _adcInt in BANK4

    None.

Critical Paths under _canRecInt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _adcInt in BANK5

    None.

Critical Paths under _canRecInt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _adcInt in BANK6

    None.

Critical Paths under _canRecInt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _adcInt in BANK7

    None.

Critical Paths under _canRecInt in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    1354
                                             32 COMRAM     6     6      0
                       _getDistance1
                       _getDistance2
                       _getDistance3
                       _getDistance4
                       _getDistance5
                            _initADC
                            _initCAN
                         _initHCSR04
                            _initI2C
                            _readADC
                            _readI2C
                           _wait10US
                            _wait2US
                     _waitForSensor1
                     _waitForSensor2
                     _waitForSensor3
                     _waitForSensor4
                     _waitForSensor5
 ---------------------------------------------------------------------------------
 (1) _waitForSensor5                                       6     4      2      46
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _waitForSensor4                                       6     4      2      46
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _waitForSensor3                                       6     4      2      46
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _waitForSensor2                                       6     4      2      46
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _waitForSensor1                                       6     4      2      46
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _wait2US                                              4     4      0      30
                                             26 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _wait10US                                             4     4      0      30
                                             26 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _readI2C                                              6     4      2     423
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _readADC                                              4     2      2     196
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _initI2C                                              2     2      0      15
                                             26 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initHCSR04                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initCAN                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getDistance5                                         6     4      2      68
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _getDistance4                                         6     4      2      68
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _getDistance3                                         6     4      2      68
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _getDistance2                                         6     4      2      68
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _getDistance1                                         6     4      2      68
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _adcInt                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _canRecInt                                           18    18      0    2725
                                              8 COMRAM    18    18      0
                     _sendCANmessage
 ---------------------------------------------------------------------------------
 (3) _sendCANmessage                                       8     2      6    2294
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _getDistance1
   _getDistance2
   _getDistance3
   _getDistance4
   _getDistance5
   _initADC
   _initCAN
   _initHCSR04
   _initI2C
   _readADC
   _readI2C
   _wait10US
   _wait2US
   _waitForSensor1
   _waitForSensor2
   _waitForSensor3
   _waitForSensor4
   _waitForSensor5

 _adcInt (ROOT)

 _canRecInt (ROOT)
   _sendCANmessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      20        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     26      3E       1       65.3%
BITSFR_9             0      0       0     200        0.0%
SFR_9                0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3E       3        0.0%
DATA                 0      0      3E      21        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat May 23 17:20:33 2020

               __CFG_CP$OFF 000000                          u30 0604                          u40 0606  
                        u50 0640                          u70 0B82                          u80 0BB8  
                        u65 0642                 __CFG_LVP$ON 000000                         l230 0196  
                       l232 01CA                         l224 00FA                         l226 012E  
                       l228 0162                         l261 0408                         l422 0B36  
                       l349 0ABA                         l359 0A54                         l369 09EE  
                       l394 0B5E                         l379 0988                         l389 0922  
                       l399 0B94                         _GIE 01FE97                         u600 08A6  
                       u630 0AA2                         u720 07DA                         u810 0970  
                       u660 0840                         u750 09D6                         u840 070E  
                       u690 0A3C                         u940 0436                         u780 0774  
                       u870 090A                         u970 0488                         wreg 003FE8  
             __CFG_BBEN$OFF 000000                __CFG_ZCD$OFF 000000                        l2001 0132  
                      l2011 0166                        l1117 0676                        l2021 019A  
                      l1143 06BE                        l2031 01CE                        l1713 0812  
                      l1715 082C                        l1733 0A0E                        l1805 0942  
                      l1901 0474                        l1821 06E0                        l1735 0A28  
                      l1807 095C                        l1727 085A                        l1751 07C6  
                      l1823 06FA                        l1841 08DC                        l1913 04BC  
                      l1771 09C2                        l1843 08F6                        l1923 04F8  
                      l1915 04C0                        l1691 08C0                        l1763 07F4  
                      l1835 0728                        l1861 0B32                        l1909 04AC  
                      l1677 0878                        l1749 07AC                        l1679 0892  
                      l1697 0A74                        l1769 09A8                        l1857 0B20  
                      l1881 0422                        l1785 0746                        l1699 0A8E  
                      l1787 0760                        l1879 041E                        l1799 078E  
                      l1991 00FE                        l1889 045A                        l1977 00CE  
                      l1899 0470                        u1000 04D4               __CFG_FCMEN$ON 000000  
                      _main 00AC                        fsr2h 003FDA                        indf2 003FDF  
                      fsr2l 003FD9                        start 00A8               __CFG_CSWEN$ON 000000  
              ___param_bank 000000                       ?_main 0001               __CFG_WDTE$OFF 000000  
                     _T1CLK 003FB5              __CFG_DEBUG$OFF 000000                       i2l250 0294  
                     i2l251 02CA                       i2l413 05D8                       i2l246 03E0  
                     i2l257 0356                       i2l249 03DE                       _TMR1H 003FB1  
                     _TMR1L 003FB0                 readI2C@data 001E               __CFG_WRTB$OFF 000000  
             __CFG_WRTC$OFF 000000               __CFG_WRTD$OFF 000000             __end_of_initI2C 0662  
           __end_of_initADC 0BE8             __end_of_initCAN 06CC             __end_of_readI2C 0508  
           __end_of_readADC 0B4E          __CFG_MCLRE$EXTMCLR 000000             __end_of_wait2US 0B84  
      sendCANmessage@length 0005                       status 003FD8        __end_of_getDistance1 0AC8  
      __end_of_getDistance2 0A62        __end_of_getDistance3 09FC        __end_of_getDistance4 0996  
      __end_of_getDistance5 0930           getDistance1@ticks 001F           getDistance2@ticks 001F  
         getDistance3@ticks 001F           getDistance4@ticks 001F           getDistance5@ticks 001F  
           __initialization 0BE8                __end_of_main 0268              __CFG_SAFEN$OFF 000000  
                    ??_main 0021              __CFG_PR1WAY$ON 000000               __activetblptr 000002  
            __CFG_MVECEN$ON 000000            ??_sendCANmessage 0007                initI2C@state 001B  
                    _ADRESH 003EF0                      _ADRESL 003EEF                      _RC3I2C 003A6A  
                    _RC4I2C 003A6B                      _RB2PPS 003A0A                      _RC3PPS 003A13  
                    _RC4PPS 003A14                      i2l2061 02FA                      i2l2053 02AC  
                    i2l2073 033C                      i2l2065 0310                      i2l2057 02E4  
                    i2l2049 026E                      i2l2081 0398              __CFG_WDTCCS$SC 000000  
                    i2l2069 0326                      _RXB0D0 003F86                      _TXB0D0 0037E6  
                    _TXB0D1 0037E7                      _TXB0D2 0037E8                      _TXB0D3 0037E9  
                    _TXB0D4 0037EA                      _TXB0D5 0037EB                      _TXB0D6 0037EC  
                    _TXB0D7 0037ED              __CFG_XINST$OFF 000000                readI2C@conOK 001B  
                    _adcInt 0C0C              __CFG_STVREN$ON 000000                      clear_0 0BEE  
          __end_of_wait10US 0BBA                   ??_initI2C 001B                   ??_initADC 001B  
                 ??_initCAN 001B                   ??_readI2C 001D                   ??_readADC 001D  
                 ??_wait2US 001B       sendCANmessage@message 0003                      tblptru 003FF8  
   __size_of_waitForSensor1 0066     __size_of_waitForSensor2 0066     __size_of_waitForSensor3 0066  
   __size_of_waitForSensor4 0066     __size_of_waitForSensor5 0066                  __accesstop 0060  
   __end_of__initialization 0C00               ___rparam_used 000001          __size_of_canRecInt 017E  
            __pcstackCOMRAM 0001              ivt0x8_undefint 00A6                _ADCvalueLow0 0039  
              _ADCvalueLow1 0035       __size_of_getDistance1 0066       __size_of_getDistance2 0066  
     __size_of_getDistance3 0066       __size_of_getDistance4 0066       __size_of_getDistance5 0066  
           __CFG_IVT1WAY$ON 000000                     IVTBASEH 003FD6                     IVTBASEL 003FD5  
                   IVTBASEU 003FD7                     ?_adcInt 0001                     _I2C1CLK 003D7B  
                   _I2C1CNT 003D6C                     _I2C1ERR 003D76                     _I2C1PIR 003D79  
                   _I2C1RXB 003D6A                     _I2C1TXB 003D6B             __CFG_PPS1WAY$ON 000000  
              _getDistance1 0A62                _getDistance2 09FC                _getDistance3 0996  
              _getDistance4 0930                _getDistance5 08CA         __CFG_PWRTS$PWRT_OFF 000000  
         __end_of_canRecInt 03E6                     _OSCCON1 0039D9                     _PPSLOCK 003ABF  
                 _ADCLKbits 003EFF                  _initHCSR04 0AC8                   _ADPCHbits 003EF1  
                 ?_wait10US 0001                   _ADREFbits 003EFD                     __Hparam 0000  
                   __Lparam 0000  __CFG_RSTOSC$HFINTOSC_64MHZ 000000              _I2C1SDAPPSbits 003AE4  
           __size_of_adcInt 0002                     __pcinit 0BE8                     __ramtop 0800  
                   __ptext0 00AC                     __ptext1 06CC                     __ptext2 0732  
                   __ptext3 0798                     __ptext4 07FE                     __ptext5 0864  
                   __ptext6 0B4E                     __ptext7 0B84                     __ptext8 03E6  
                   __ptext9 0B0E              _I2C1SCLPPSbits 003AE3                     _initI2C 05DE  
                   _initADC 0BBA                     _initCAN 0662             __CFG_WRTAPP$OFF 000000  
                   _readI2C 03E6                     _readADC 0B0E                   _T1CONbits 003FB2  
               _I2C1ERRbits 003D76                     _wait2US 0B4E             __CFG_WRTSAF$OFF 000000  
            _waitForSensor1 0864              _waitForSensor2 07FE              _waitForSensor3 0798  
            _waitForSensor4 0732              _waitForSensor5 06CC                 _I2C1PIRbits 003D79  
      end_of_initialization 0C00               __Lmediumconst 0000                  ??_wait10US 001B  
                   postdec2 003FDD                     postinc0 003FEE                     postinc2 003FDE  
     __CFG_WDTCPS$WDTCPS_31 000000                   _PORTAbits 003FCA                   _PORTBbits 003FCB  
                 _PORTCbits 003FCC              _sign_perimeter 0027      __end_of_waitForSensor1 08CA  
    __end_of_waitForSensor2 0864      __end_of_waitForSensor3 07FE      __end_of_waitForSensor4 0798  
    __end_of_waitForSensor5 0732                   _TRISAbits 003FC2                   _TRISBbits 003FC3  
                 _TRISCbits 003FC4            sendCANmessage@id 0001                 ?_initHCSR04 0001  
            __end_of_adcInt 0C0E                  readI2C@reg 001D             ?_waitForSensor1 001B  
           ?_waitForSensor2 001B             ?_waitForSensor3 001B             ?_waitForSensor4 001B  
           ?_waitForSensor5 001B         start_initialization 0BE8               _ADCvalueHigh0 003B  
             _ADCvalueHigh1 0037                  ivt0x8_base 0008                 _CANSTATbits 003F8E  
   __size_of_sendCANmessage 00D6            __CFG_LPBOREN$OFF 000000                    ??_adcInt 0001  
       __size_of_initHCSR04 0046                 __pbssCOMRAM 0027                 _BRGCON1bits 003703  
                 _canRecInt 0268           __size_of_wait10US 0036                    _I2C1ADB1 003D6E  
                  _I2C1CON0 003D73                    _I2C1CON1 003D74                    _I2C1CON2 003D75  
                 _distance1 0033                   _distance2 0031                   _distance3 002F  
                 _distance4 002D                   _distance5 002B                    ?_initI2C 0001  
                  ?_initADC 0001                    ?_initCAN 0001                    ?_readI2C 001B  
                  ?_readADC 001B      __CFG_BBSIZE$BBSIZE_512 000000                    ?_wait2US 0001  
                ?_canRecInt 0001                    _LATCbits 003FBC                   _perimeter 0029  
                  _PIE5bits 003995         __CFG_BORV$VBOR_2P45 000000               _I2C1STAT0bits 003D77  
             _I2C1STAT1bits 003D78                    _PIR5bits 0039A5                    _RXF0SIDH 0037A0  
                  _RXF1SIDH 0037A4                    _TXB0SIDH 0037E1                    _RXM0SIDH 0037B8  
                  _RXM1SIDH 0037BC                  _ADCON0bits 003EF8                   main@temp0 0023  
                 main@temp1 0025                 _INTCON0bits 003FD2                   readADC@ch 001B  
                _CANCONbits 003F8F                ??_initHCSR04 001B              _sendCANmessage 0508  
                  __Hrparam 0000                    __Lrparam 0000          __CFG_BOREN$SBORDIS 000000  
            readI2C@counter 001F            ??_waitForSensor1 001D            ??_waitForSensor2 001D  
          ??_waitForSensor3 001D            ??_waitForSensor4 001D            ??_waitForSensor5 001D  
           waitForSensor1@i 001F             waitForSensor2@i 001F             waitForSensor3@i 001F  
           waitForSensor4@i 001F             waitForSensor5@i 001F                  _ANSELAbits 003A40  
                _ANSELBbits 003A50                  _ANSELCbits 003A60                   wait10US@i 001B  
        __end_of_initHCSR04 0B0E            __size_of_initI2C 0084            __size_of_initADC 002E  
          __size_of_initCAN 006A            __size_of_readI2C 0122            __size_of_readADC 0040  
              _RXF0SIDLbits 0037A1                _I2C1CON0bits 003D73                    __pivt0x8 0008  
              _RXF1SIDLbits 0037A5            __size_of_wait2US 0036                    __ptext10 05DE  
                  __ptext11 0AC8                    __ptext20 0268                    __ptext12 0662  
                  __ptext21 0508                    __ptext13 0BBA                    __ptext14 08CA  
                  __ptext15 0930                    __ptext16 0996                    __ptext17 09FC  
                  __ptext18 0A62                    __ptext19 0C0C                 ??_canRecInt 0009  
    __end_of_sendCANmessage 05DE               __size_of_main 01BC                    _wait10US 0B84  
      __CFG_WDTCWS$WDTCWS_7 000000                _TXB0SIDLbits 0037E2                  _ODCONCbits 003A62  
             ?_getDistance1 001B               ?_getDistance2 001B               ?_getDistance3 001B  
             ?_getDistance4 001B               ?_getDistance5 001B                _RXM0SIDLbits 0037B9  
               _RXB0CONbits 003F80                 _RXB1CONbits 0037F0                _RXM1SIDLbits 0037BD  
          canRecInt@message 000B                    intlevel2 0000               _con_perimeter 003D  
                  wait2US@i 001B             ?_sendCANmessage 0001                 _TXB0DLCbits 0037E5  
         __CFG_CLKOUTEN$OFF 000000                 _SLRCONCbits 003A63                 _TXB0CONbits 0037E0  
               _PPSLOCKbits 003ABF              ??_getDistance1 001D              ??_getDistance2 001D  
            ??_getDistance3 001D              ??_getDistance4 001D              ??_getDistance5 001D  
