

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed May 27 22:02:39 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F25K83
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=4,class=CODE,delta=1
    29                           	psect	text20,global,reloc=4,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34  0000                     
    35                           ; Version 2.05
    36                           ; Generated 20/12/2018 GMT
    37                           ; 
    38                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F25K83 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     _TXB0DLCbits	set	14309
    70  0000                     _TXB0SIDH	set	14305
    71  0000                     _TXB0SIDLbits	set	14306
    72  0000                     _TXB0D7	set	14317
    73  0000                     _TXB0D6	set	14316
    74  0000                     _TXB0D5	set	14315
    75  0000                     _TXB0D4	set	14314
    76  0000                     _TXB0D3	set	14313
    77  0000                     _TXB0D2	set	14312
    78  0000                     _TXB0D1	set	14311
    79  0000                     _TXB0D0	set	14310
    80  0000                     _TXB0CONbits	set	14304
    81  0000                     _RXB1CONbits	set	14320
    82  0000                     _RXM1SIDLbits	set	14269
    83  0000                     _RXM1SIDH	set	14268
    84  0000                     _RXF1SIDLbits	set	14245
    85  0000                     _RXF1SIDH	set	14244
    86  0000                     _RXM0SIDLbits	set	14265
    87  0000                     _RXM0SIDH	set	14264
    88  0000                     _RXF0SIDLbits	set	14241
    89  0000                     _RXF0SIDH	set	14240
    90  0000                     _BRGCON1bits	set	14083
    91  0000                     _PIR5bits	set	14757
    92  0000                     _PIE5bits	set	14741
    93  0000                     _OSCCON1	set	14809
    94  0000                     _RB2PPS	set	14858
    95  0000                     _ANSELBbits	set	14928
    96  0000                     _ANSELAbits	set	14912
    97  0000                     _I2C1SCLPPSbits	set	15075
    98  0000                     _I2C1SDAPPSbits	set	15076
    99  0000                     _RC4PPS	set	14868
   100  0000                     _RC3PPS	set	14867
   101  0000                     _PPSLOCKbits	set	15039
   102  0000                     _PPSLOCK	set	15039
   103  0000                     _RC4I2C	set	14955
   104  0000                     _SLRCONCbits	set	14947
   105  0000                     _RC3I2C	set	14954
   106  0000                     _ODCONCbits	set	14946
   107  0000                     _ANSELCbits	set	14944
   108  0000                     _I2C1PIEbits	set	15738
   109  0000                     _I2C1ERRbits	set	15734
   110  0000                     _I2C1ERR	set	15734
   111  0000                     _I2C1PIR	set	15737
   112  0000                     _I2C1CLK	set	15739
   113  0000                     _I2C1CON2	set	15733
   114  0000                     _I2C1CON1	set	15732
   115  0000                     _I2C1CON0	set	15731
   116  0000                     _I2C1PIRbits	set	15737
   117  0000                     _I2C1RXB	set	15722
   118  0000                     _I2C1CON0bits	set	15731
   119  0000                     _I2C1CNT	set	15724
   120  0000                     _I2C1STAT0bits	set	15735
   121  0000                     _I2C1TXB	set	15723
   122  0000                     _I2C1ADB1	set	15726
   123  0000                     _I2C1STAT1bits	set	15736
   124  0000                     _ADRESL	set	16111
   125  0000                     _ADRESH	set	16112
   126  0000                     _ADPCHbits	set	16113
   127  0000                     _ADREFbits	set	16125
   128  0000                     _ADCLKbits	set	16127
   129  0000                     _ADCON0bits	set	16120
   130  0000                     _CANSTATbits	set	16270
   131  0000                     _CANCONbits	set	16271
   132  0000                     _PORTBbits	set	16331
   133  0000                     _TRISBbits	set	16323
   134  0000                     _TRISAbits	set	16322
   135  0000                     _TMR1L	set	16304
   136  0000                     _TMR1H	set	16305
   137  0000                     _T1CONbits	set	16306
   138  0000                     _T1CLK	set	16309
   139  0000                     _TRISCbits	set	16324
   140  0000                     _LATCbits	set	16316
   141  0000                     _RXB0D0	set	16262
   142  0000                     _RXB0CONbits	set	16256
   143  0000                     _PORTAbits	set	16330
   144  0000                     _PORTCbits	set	16332
   145  0000                     _INTCON0bits	set	16338
   146  0000                     _GIE	set	130711
   147                           
   148                           ; #config settings
   149  0000                     
   150                           	psect	cinit
   151  000C80                     __pcinit:
   152                           	opt callstack 0
   153  000C80                     start_initialization:
   154                           	opt callstack 0
   155  000C80                     __initialization:
   156                           	opt callstack 0
   157                           
   158                           ; Clear objects allocated to COMRAM (34 bytes)
   159  000C80  EE00  F001         	lfsr	0,__pbssCOMRAM
   160  000C84  0E22               	movlw	34
   161  000C86                     clear_0:
   162  000C86  6AEE               	clrf	postinc0,c
   163  000C88  06E8               	decf	wreg,f,c
   164  000C8A  E1FD               	bnz	clear_0
   165                           
   166                           ;
   167                           ; Setup IVTBASE
   168                           ;
   169  000C8C  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   170  000C8E  6ED5               	movwf	213,c
   171  000C90  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   172  000C92  6ED6               	movwf	214,c
   173  000C94  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   174  000C96  6ED7               	movwf	215,c
   175  000C98                     end_of_initialization:
   176                           	opt callstack 0
   177  000C98                     __end_of__initialization:
   178                           	opt callstack 0
   179  000C98  0E00               	movlw	low (__Lmediumconst shr (0+16))
   180  000C9A  6EF8               	movwf	tblptru,c
   181  000C9C  0100               	movlb	0
   182  000C9E  EF56  F000         	goto	_main	;jump to C main() function
   183                           
   184                           	psect	bssCOMRAM
   185  000001                     __pbssCOMRAM:
   186                           	opt callstack 0
   187  000001                     _sign_perimeter:
   188                           	opt callstack 0
   189  000001                     	ds	2
   190  000003                     _perimeter:
   191                           	opt callstack 0
   192  000003                     	ds	2
   193  000005                     _valid_distance5:
   194                           	opt callstack 0
   195  000005                     	ds	2
   196  000007                     _valid_distance4:
   197                           	opt callstack 0
   198  000007                     	ds	2
   199  000009                     _valid_distance3:
   200                           	opt callstack 0
   201  000009                     	ds	2
   202  00000B                     _valid_distance2:
   203                           	opt callstack 0
   204  00000B                     	ds	2
   205  00000D                     _valid_distance1:
   206                           	opt callstack 0
   207  00000D                     	ds	2
   208  00000F                     _distance5:
   209                           	opt callstack 0
   210  00000F                     	ds	2
   211  000011                     _distance4:
   212                           	opt callstack 0
   213  000011                     	ds	2
   214  000013                     _distance3:
   215                           	opt callstack 0
   216  000013                     	ds	2
   217  000015                     _distance2:
   218                           	opt callstack 0
   219  000015                     	ds	2
   220  000017                     _distance1:
   221                           	opt callstack 0
   222  000017                     	ds	2
   223  000019                     _ADCvalueLow1:
   224                           	opt callstack 0
   225  000019                     	ds	2
   226  00001B                     _ADCvalueHigh1:
   227                           	opt callstack 0
   228  00001B                     	ds	2
   229  00001D                     _ADCvalueLow0:
   230                           	opt callstack 0
   231  00001D                     	ds	2
   232  00001F                     _ADCvalueHigh0:
   233                           	opt callstack 0
   234  00001F                     	ds	2
   235  000021                     _con_perimeter:
   236                           	opt callstack 0
   237  000021                     	ds	2
   238                           
   239                           	psect	cstackBANK0
   240  000060                     __pcstackBANK0:
   241                           	opt callstack 0
   242  000060                     ??_main:
   243                           
   244                           ; 1 bytes @ 0x0
   245  000060                     	ds	2
   246  000062                     main@temp0:
   247                           	opt callstack 0
   248                           
   249                           ; 2 bytes @ 0x2
   250  000062                     	ds	2
   251  000064                     main@temp1:
   252                           	opt callstack 0
   253                           
   254                           ; 2 bytes @ 0x4
   255  000064                     	ds	2
   256                           
   257                           	psect	cstackCOMRAM
   258  000023                     __pcstackCOMRAM:
   259                           	opt callstack 0
   260  000023                     sendCANmessage@id:
   261                           	opt callstack 0
   262                           
   263                           ; 2 bytes @ 0x0
   264  000023                     	ds	2
   265  000025                     sendCANmessage@message:
   266                           	opt callstack 0
   267                           
   268                           ; 2 bytes @ 0x2
   269  000025                     	ds	2
   270  000027                     sendCANmessage@length:
   271                           	opt callstack 0
   272                           
   273                           ; 2 bytes @ 0x4
   274  000027                     	ds	2
   275  000029                     ??_sendCANmessage:
   276                           
   277                           ; 1 bytes @ 0x6
   278  000029                     	ds	2
   279  00002B                     ??_canRecInt:
   280                           
   281                           ; 1 bytes @ 0x8
   282  00002B                     	ds	2
   283  00002D                     canRecInt@message:
   284                           	opt callstack 0
   285                           
   286                           ; 16 bytes @ 0xA
   287  00002D                     	ds	16
   288  00003D                     ?_waitForSensor1:
   289                           	opt callstack 0
   290  00003D                     ?_getDistance1:
   291                           	opt callstack 0
   292  00003D                     ?_waitForSensor2:
   293                           	opt callstack 0
   294  00003D                     ?_getDistance2:
   295                           	opt callstack 0
   296  00003D                     ?_waitForSensor3:
   297                           	opt callstack 0
   298  00003D                     ?_getDistance3:
   299                           	opt callstack 0
   300  00003D                     ?_waitForSensor4:
   301                           	opt callstack 0
   302  00003D                     ?_getDistance4:
   303                           	opt callstack 0
   304  00003D                     ?_waitForSensor5:
   305                           	opt callstack 0
   306  00003D                     ?_getDistance5:
   307                           	opt callstack 0
   308  00003D                     ?_readADC:
   309                           	opt callstack 0
   310  00003D                     ?_readI2C:
   311                           	opt callstack 0
   312  00003D                     readI2C@conOK:
   313                           	opt callstack 0
   314  00003D                     initI2C@state:
   315                           	opt callstack 0
   316  00003D                     readADC@ch:
   317                           	opt callstack 0
   318  00003D                     wait2US@i:
   319                           	opt callstack 0
   320  00003D                     wait10US@i:
   321                           	opt callstack 0
   322                           
   323                           ; 4 bytes @ 0x1A
   324  00003D                     	ds	2
   325  00003F                     ??_waitForSensor1:
   326  00003F                     ??_getDistance1:
   327  00003F                     ??_waitForSensor2:
   328  00003F                     ??_getDistance2:
   329  00003F                     ??_waitForSensor3:
   330  00003F                     ??_getDistance3:
   331  00003F                     ??_waitForSensor4:
   332  00003F                     ??_getDistance4:
   333  00003F                     ??_waitForSensor5:
   334  00003F                     ??_getDistance5:
   335  00003F                     ??_readADC:
   336  00003F                     readI2C@reg:
   337                           	opt callstack 0
   338                           
   339                           ; 1 bytes @ 0x1C
   340  00003F                     	ds	1
   341  000040                     readI2C@data:
   342                           	opt callstack 0
   343                           
   344                           ; 1 bytes @ 0x1D
   345  000040                     	ds	1
   346  000041                     readI2C@tmpOK:
   347                           	opt callstack 0
   348  000041                     waitForSensor1@i:
   349                           	opt callstack 0
   350  000041                     waitForSensor2@i:
   351                           	opt callstack 0
   352  000041                     waitForSensor3@i:
   353                           	opt callstack 0
   354  000041                     waitForSensor4@i:
   355                           	opt callstack 0
   356  000041                     waitForSensor5@i:
   357                           	opt callstack 0
   358  000041                     getDistance1@ticks:
   359                           	opt callstack 0
   360  000041                     getDistance2@ticks:
   361                           	opt callstack 0
   362  000041                     getDistance3@ticks:
   363                           	opt callstack 0
   364  000041                     getDistance4@ticks:
   365                           	opt callstack 0
   366  000041                     getDistance5@ticks:
   367                           	opt callstack 0
   368                           
   369                           ; 2 bytes @ 0x1E
   370  000041                     	ds	2
   371  000043                     readI2C@counter:
   372                           	opt callstack 0
   373                           
   374                           ; 2 bytes @ 0x20
   375  000043                     	ds	2
   376                           
   377 ;;
   378 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   379 ;;
   380 ;; *************** function _main *****************
   381 ;; Defined at:
   382 ;;		line 106 in file "MainCode.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;		None
   385 ;; Auto vars:     Size  Location     Type
   386 ;;  temp1           2    4[BANK0 ] int 
   387 ;;  temp0           2    2[BANK0 ] int 
   388 ;; Return value:  Size  Location     Type
   389 ;;                  2  234[None  ] int 
   390 ;; Registers used:
   391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   392 ;; Tracked objects:
   393 ;;		On entry : 0/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   397 ;;      Params:         0       0       0       0       0       0       0       0       0
   398 ;;      Locals:         0       4       0       0       0       0       0       0       0
   399 ;;      Temps:          0       2       0       0       0       0       0       0       0
   400 ;;      Totals:         0       6       0       0       0       0       0       0       0
   401 ;;Total ram usage:        6 bytes
   402 ;; Hardware stack levels required when called:    3
   403 ;; This function calls:
   404 ;;		_getDistance1
   405 ;;		_getDistance2
   406 ;;		_getDistance3
   407 ;;		_getDistance4
   408 ;;		_getDistance5
   409 ;;		_initADC
   410 ;;		_initCAN
   411 ;;		_initHCSR04
   412 ;;		_initI2C
   413 ;;		_readADC
   414 ;;		_readI2C
   415 ;;		_wait10US
   416 ;;		_wait2US
   417 ;;		_waitForSensor1
   418 ;;		_waitForSensor2
   419 ;;		_waitForSensor3
   420 ;;		_waitForSensor4
   421 ;;		_waitForSensor5
   422 ;; This function is called by:
   423 ;;		Startup code after reset
   424 ;; This function uses a non-reentrant model
   425 ;;
   426                           
   427                           	psect	text0
   428  0000AC                     __ptext0:
   429                           	opt callstack 0
   430  0000AC                     _main:
   431                           	opt callstack 28
   432                           
   433                           ;MainCode.c: 108:             valid_distance3 = 1;
   434                           
   435                           ;incstack = 0
   436  0000AC  0E60               	movlw	96
   437  0000AE  0139               	movlb	57	; () banked
   438  0000B0  6FD9               	movwf	217,b	;volatile
   439                           
   440                           ; BSR set to: 57
   441                           ;MainCode.c: 109:         }
   442  0000B2  EC7D  F003         	call	_initCAN	;wreg free
   443                           
   444                           ;MainCode.c: 111:             distance3 = 0;
   445  0000B6  EC29  F006         	call	_initADC	;wreg free
   446                           
   447                           ;MainCode.c: 112:             valid_distance3 = 0;
   448  0000BA  ECB0  F005         	call	_initHCSR04	;wreg free
   449                           
   450                           ;MainCode.c: 113:         }
   451  0000BE  EC3A  F003         	call	_initI2C	;wreg free
   452                           
   453                           ;MainCode.c: 115:         wait10US();
   454  0000C2  8CD2               	bsf	16338,6,c	;volatile
   455                           
   456                           ;MainCode.c: 117:         PORTAbits.RA1 = 0;
   457  0000C4  9AD2               	bcf	16338,5,c	;volatile
   458                           
   459                           ;MainCode.c: 119:         PORTAbits.RA1 = 1;
   460  0000C6  0139               	movlb	57	; () banked
   461  0000C8  8195               	bsf	149,0,b	;volatile
   462                           
   463                           ; BSR set to: 57
   464                           ;MainCode.c: 120:         wait10US();
   465  0000CA  8395               	bsf	149,1,b	;volatile
   466                           
   467                           ; BSR set to: 57
   468                           ;MainCode.c: 121:         PORTAbits.RA1 = 0;
   469  0000CC  8ED2               	bsf	16338,7,c	;volatile
   470  0000CE                     l2640:
   471                           
   472                           ;MainCode.c: 128:             valid_distance4 = 0;
   473  0000CE  92CC               	bcf	16332,1,c	;volatile
   474                           
   475                           ;MainCode.c: 129:         }
   476  0000D0  ECF3  F005         	call	_wait2US	;wreg free
   477                           
   478                           ;MainCode.c: 130:         wait10US();
   479  0000D4  82CC               	bsf	16332,1,c	;volatile
   480                           
   481                           ;MainCode.c: 131: 
   482  0000D6  EC0E  F006         	call	_wait10US	;wreg free
   483                           
   484                           ;MainCode.c: 132:         PORTAbits.RA2 = 0;
   485  0000DA  92CC               	bcf	16332,1,c	;volatile
   486                           
   487                           ;MainCode.c: 133:         wait2US();
   488  0000DC  EC7E  F004         	call	_waitForSensor1	;wreg free
   489  0000E0  043D               	decf	?_waitForSensor1,w,c
   490  0000E2  103E               	iorwf	?_waitForSensor1+1,w,c
   491  0000E4  A4D8               	btfss	status,2,c
   492  0000E6  D00C               	goto	l2656
   493                           
   494                           ;MainCode.c: 134:         PORTAbits.RA2 = 1;
   495  0000E8  EC7D  F005         	call	_getDistance1	;wreg free
   496  0000EC  0060  F0F4  F017   	movff	?_getDistance1,_distance1
   497  0000F2  0060  F0F8  F018   	movff	?_getDistance1+1,_distance1+1
   498                           
   499                           ;MainCode.c: 135:         wait10US();
   500  0000F8  0E00               	movlw	0
   501  0000FA  6E0E               	movwf	_valid_distance1+1,c
   502  0000FC  0E01               	movlw	1
   503  0000FE  D007               	goto	L1
   504  000100                     l2656:
   505                           
   506                           ;MainCode.c: 138:             distance5 = getDistance5();
   507  000100  0E00               	movlw	0
   508  000102  6E18               	movwf	_distance1+1,c
   509  000104  0E00               	movlw	0
   510  000106  6E17               	movwf	_distance1,c
   511                           
   512                           ;MainCode.c: 139:             valid_distance5 = 1;
   513  000108  0E00               	movlw	0
   514  00010A  6E0E               	movwf	_valid_distance1+1,c
   515  00010C  0E00               	movlw	0
   516  00010E                     L1:
   517  00010E  6E0D               	movwf	_valid_distance1,c
   518                           
   519                           ;MainCode.c: 141:         else{
   520  000110  EC0E  F006         	call	_wait10US	;wreg free
   521                           
   522                           ;MainCode.c: 144:         }
   523  000114  94CC               	bcf	16332,2,c	;volatile
   524                           
   525                           ;MainCode.c: 145:         wait10US();
   526  000116  ECF3  F005         	call	_wait2US	;wreg free
   527                           
   528                           ;MainCode.c: 146:         int temp0 = readADC(0);
   529  00011A  84CC               	bsf	16332,2,c	;volatile
   530                           
   531                           ;MainCode.c: 147:         int temp1 = readADC(1);
   532  00011C  EC0E  F006         	call	_wait10US	;wreg free
   533                           
   534                           ;MainCode.c: 148:         ADCvalueHigh0 = (temp0 >> 8) & 0xFF;
   535  000120  94CC               	bcf	16332,2,c	;volatile
   536                           
   537                           ;MainCode.c: 149:         ADCvalueLow0 = temp0 & 0xFF;
   538  000122  EC4B  F004         	call	_waitForSensor2	;wreg free
   539  000126  043D               	decf	?_waitForSensor2,w,c
   540  000128  103E               	iorwf	?_waitForSensor2+1,w,c
   541  00012A  A4D8               	btfss	status,2,c
   542  00012C  D00C               	goto	l2676
   543                           
   544                           ;MainCode.c: 150:         ADCvalueHigh1 = (temp1 >> 8) & 0xFF;
   545  00012E  EC4A  F005         	call	_getDistance2	;wreg free
   546  000132  0060  F0F4  F015   	movff	?_getDistance2,_distance2
   547  000138  0060  F0F8  F016   	movff	?_getDistance2+1,_distance2+1
   548                           
   549                           ;MainCode.c: 151:         ADCvalueLow1 = temp1 & 0xFF;
   550  00013E  0E00               	movlw	0
   551  000140  6E0C               	movwf	_valid_distance2+1,c
   552  000142  0E01               	movlw	1
   553  000144  D007               	goto	L2
   554  000146                     l2676:
   555                           
   556                           ;MainCode.c: 154: 
   557  000146  0E00               	movlw	0
   558  000148  6E16               	movwf	_distance2+1,c
   559  00014A  0E00               	movlw	0
   560  00014C  6E15               	movwf	_distance2,c
   561                           
   562                           ;MainCode.c: 155:     }
   563  00014E  0E00               	movlw	0
   564  000150  6E0C               	movwf	_valid_distance2+1,c
   565  000152  0E00               	movlw	0
   566  000154                     L2:
   567  000154  6E0B               	movwf	_valid_distance2,c
   568                           
   569                           ;MainCode.c: 157: }
   570  000156  EC0E  F006         	call	_wait10US	;wreg free
   571                           
   572                           ;MainCode.c: 159: void __attribute__((picinterrupt(("irq(AD), high_priority")))) adcInt(
      +                          void) {
   573  00015A  9ECC               	bcf	16332,7,c	;volatile
   574                           
   575                           ;MainCode.c: 160: 
   576  00015C  ECF3  F005         	call	_wait2US	;wreg free
   577                           
   578                           ;MainCode.c: 161: 
   579  000160  8ECC               	bsf	16332,7,c	;volatile
   580                           
   581                           ;MainCode.c: 162: 
   582  000162  EC0E  F006         	call	_wait10US	;wreg free
   583                           
   584                           ;MainCode.c: 163: }
   585  000166  9ECC               	bcf	16332,7,c	;volatile
   586                           
   587                           ;MainCode.c: 164: 
   588  000168  EC18  F004         	call	_waitForSensor3	;wreg free
   589  00016C  043D               	decf	?_waitForSensor3,w,c
   590  00016E  103E               	iorwf	?_waitForSensor3+1,w,c
   591  000170  A4D8               	btfss	status,2,c
   592  000172  D00C               	goto	l2696
   593                           
   594                           ;MainCode.c: 165: void __attribute__((picinterrupt(("irq(RXB0IF), high_priority")))) can
      +                          RecInt(void) {
   595  000174  EC17  F005         	call	_getDistance3	;wreg free
   596  000178  0060  F0F4  F013   	movff	?_getDistance3,_distance3
   597  00017E  0060  F0F8  F014   	movff	?_getDistance3+1,_distance3+1
   598                           
   599                           ;MainCode.c: 166: 
   600  000184  0E00               	movlw	0
   601  000186  6E0A               	movwf	_valid_distance3+1,c
   602  000188  0E01               	movlw	1
   603  00018A  D007               	goto	L3
   604  00018C                     l2696:
   605                           
   606                           ;MainCode.c: 169: 
   607  00018C  0E00               	movlw	0
   608  00018E  6E14               	movwf	_distance3+1,c
   609  000190  0E00               	movlw	0
   610  000192  6E13               	movwf	_distance3,c
   611                           
   612                           ;MainCode.c: 170:         int message[8];
   613  000194  0E00               	movlw	0
   614  000196  6E0A               	movwf	_valid_distance3+1,c
   615  000198  0E00               	movlw	0
   616  00019A                     L3:
   617  00019A  6E09               	movwf	_valid_distance3,c
   618                           
   619                           ;MainCode.c: 173: 
   620  00019C  EC0E  F006         	call	_wait10US	;wreg free
   621                           
   622                           ;MainCode.c: 175:                 message[0] = 1;
   623  0001A0  92CA               	bcf	16330,1,c	;volatile
   624                           
   625                           ;MainCode.c: 176:                 sendCANmessage(0, message, 1);
   626  0001A2  ECF3  F005         	call	_wait2US	;wreg free
   627                           
   628                           ;MainCode.c: 177:                 break;
   629  0001A6  82CA               	bsf	16330,1,c	;volatile
   630                           
   631                           ;MainCode.c: 178:             case 1:
   632  0001A8  EC0E  F006         	call	_wait10US	;wreg free
   633                           
   634                           ;MainCode.c: 179:                 message[0] = ADCvalueHigh0;
   635  0001AC  92CA               	bcf	16330,1,c	;volatile
   636                           
   637                           ;MainCode.c: 180:                 message[1] = ADCvalueLow0;
   638  0001AE  ECE5  F003         	call	_waitForSensor4	;wreg free
   639  0001B2  043D               	decf	?_waitForSensor4,w,c
   640  0001B4  103E               	iorwf	?_waitForSensor4+1,w,c
   641  0001B6  A4D8               	btfss	status,2,c
   642  0001B8  D00C               	goto	l2716
   643                           
   644                           ;MainCode.c: 181:                 sendCANmessage(0, message, 2);
   645  0001BA  ECE4  F004         	call	_getDistance4	;wreg free
   646  0001BE  0060  F0F4  F011   	movff	?_getDistance4,_distance4
   647  0001C4  0060  F0F8  F012   	movff	?_getDistance4+1,_distance4+1
   648                           
   649                           ;MainCode.c: 182:                 break;
   650  0001CA  0E00               	movlw	0
   651  0001CC  6E08               	movwf	_valid_distance4+1,c
   652  0001CE  0E01               	movlw	1
   653  0001D0  D007               	goto	L4
   654  0001D2                     l2716:
   655                           
   656                           ;MainCode.c: 185:                 message[1] = ADCvalueLow1;
   657  0001D2  0E00               	movlw	0
   658  0001D4  6E12               	movwf	_distance4+1,c
   659  0001D6  0E00               	movlw	0
   660  0001D8  6E11               	movwf	_distance4,c
   661                           
   662                           ;MainCode.c: 186:                 sendCANmessage(0, message, 2);
   663  0001DA  0E00               	movlw	0
   664  0001DC  6E08               	movwf	_valid_distance4+1,c
   665  0001DE  0E00               	movlw	0
   666  0001E0                     L4:
   667  0001E0  6E07               	movwf	_valid_distance4,c
   668                           
   669                           ;MainCode.c: 188:             case 3:
   670  0001E2  EC0E  F006         	call	_wait10US	;wreg free
   671                           
   672                           ;MainCode.c: 190:                 message[1] = distance1 & 0xFF;
   673  0001E6  94CA               	bcf	16330,2,c	;volatile
   674                           
   675                           ;MainCode.c: 191:                 message[2] = valid_distance1;
   676  0001E8  ECF3  F005         	call	_wait2US	;wreg free
   677                           
   678                           ;MainCode.c: 192:                 sendCANmessage(0, message, 3);
   679  0001EC  84CA               	bsf	16330,2,c	;volatile
   680                           
   681                           ;MainCode.c: 193:                 break;
   682  0001EE  EC0E  F006         	call	_wait10US	;wreg free
   683                           
   684                           ;MainCode.c: 194:             case 4:
   685  0001F2  94CA               	bcf	16330,2,c	;volatile
   686                           
   687                           ;MainCode.c: 195:                 message[0] = distance2 >> 8 & 0xFF;
   688  0001F4  ECB2  F003         	call	_waitForSensor5	;wreg free
   689  0001F8  043D               	decf	?_waitForSensor5,w,c
   690  0001FA  103E               	iorwf	?_waitForSensor5+1,w,c
   691  0001FC  A4D8               	btfss	status,2,c
   692  0001FE  D00C               	goto	l2736
   693                           
   694                           ;MainCode.c: 196:                 message[1] = distance2 & 0xFF;
   695  000200  ECB1  F004         	call	_getDistance5	;wreg free
   696  000204  0060  F0F4  F00F   	movff	?_getDistance5,_distance5
   697  00020A  0060  F0F8  F010   	movff	?_getDistance5+1,_distance5+1
   698                           
   699                           ;MainCode.c: 197:                 message[2] = valid_distance2;
   700  000210  0E00               	movlw	0
   701  000212  6E06               	movwf	_valid_distance5+1,c
   702  000214  0E01               	movlw	1
   703  000216  D007               	goto	L5
   704  000218                     l2736:
   705                           
   706                           ;MainCode.c: 200:             case 5:
   707  000218  0E00               	movlw	0
   708  00021A  6E10               	movwf	_distance5+1,c
   709  00021C  0E00               	movlw	0
   710  00021E  6E0F               	movwf	_distance5,c
   711                           
   712                           ;MainCode.c: 201:                 message[0] = distance3 >> 8 & 0xFF;
   713  000220  0E00               	movlw	0
   714  000222  6E06               	movwf	_valid_distance5+1,c
   715  000224  0E00               	movlw	0
   716  000226                     L5:
   717  000226  6E05               	movwf	_valid_distance5,c
   718                           
   719                           ;MainCode.c: 203:                 message[2] = valid_distance3;
   720  000228  EC0E  F006         	call	_wait10US	;wreg free
   721                           
   722                           ;MainCode.c: 204:                 sendCANmessage(0, message, 3);
   723  00022C  0E00               	movlw	0
   724  00022E  6E3E               	movwf	readADC@ch+1,c
   725  000230  0E00               	movlw	0
   726  000232  6E3D               	movwf	readADC@ch,c
   727  000234  ECD3  F005         	call	_readADC	;wreg free
   728  000238  0060  F0F4  F062   	movff	?_readADC,main@temp0
   729  00023E  0060  F0F8  F063   	movff	?_readADC+1,main@temp0+1
   730                           
   731                           ;MainCode.c: 205:                 break;
   732  000244  0E00               	movlw	0
   733  000246  6E3E               	movwf	readADC@ch+1,c
   734  000248  0E01               	movlw	1
   735  00024A  6E3D               	movwf	readADC@ch,c
   736  00024C  ECD3  F005         	call	_readADC	;wreg free
   737  000250  0060  F0F4  F064   	movff	?_readADC,main@temp1
   738  000256  0060  F0F8  F065   	movff	?_readADC+1,main@temp1+1
   739                           
   740                           ;MainCode.c: 206:             case 6:
   741  00025C  0060  F18C  F060   	movff	main@temp0+1,??_main
   742  000262  0100               	movlb	0	; () banked
   743  000264  6B61               	clrf	(??_main+1)& (0+255),b
   744  000266  BF60               	btfsc	??_main& (0+255),7,b
   745  000268  6961               	setf	(??_main+1)& (0+255),b
   746  00026A  5160               	movf	??_main& (0+255),w,b
   747  00026C  6E1F               	movwf	_ADCvalueHigh0,c
   748  00026E  6A20               	clrf	_ADCvalueHigh0+1,c
   749                           
   750                           ; BSR set to: 0
   751                           ;MainCode.c: 207:                 message[0] = distance4 >> 8 & 0xFF;
   752  000270  5162               	movf	main@temp0& (0+255),w,b
   753  000272  6E1D               	movwf	_ADCvalueLow0,c
   754  000274  6A1E               	clrf	_ADCvalueLow0+1,c
   755                           
   756                           ; BSR set to: 0
   757                           ;MainCode.c: 208:                 message[1] = distance4 & 0xFF;
   758  000276  0060  F194  F060   	movff	main@temp1+1,??_main
   759  00027C  6B61               	clrf	(??_main+1)& (0+255),b
   760  00027E  BF60               	btfsc	??_main& (0+255),7,b
   761  000280  6961               	setf	(??_main+1)& (0+255),b
   762  000282  5160               	movf	??_main& (0+255),w,b
   763  000284  6E1B               	movwf	_ADCvalueHigh1,c
   764  000286  6A1C               	clrf	_ADCvalueHigh1+1,c
   765                           
   766                           ; BSR set to: 0
   767                           ;MainCode.c: 209:                 message[2] = valid_distance4;
   768  000288  5164               	movf	main@temp1& (0+255),w,b
   769  00028A  6E19               	movwf	_ADCvalueLow1,c
   770  00028C  6A1A               	clrf	_ADCvalueLow1+1,c
   771                           
   772                           ; BSR set to: 0
   773                           ;MainCode.c: 210:                 sendCANmessage(0, message, 3);
   774  00028E  0E21               	movlw	low _con_perimeter
   775  000290  6E3D               	movwf	readI2C@conOK,c
   776  000292  0E00               	movlw	high _con_perimeter
   777  000294  6E3E               	movwf	readI2C@conOK+1,c
   778  000296  0E09               	movlw	9
   779  000298  EC47  F002         	call	_readI2C
   780  00029C  0060  F0F4  F003   	movff	?_readI2C,_perimeter
   781  0002A2  0060  F0F8  F004   	movff	?_readI2C+1,_perimeter+1
   782                           
   783                           ;MainCode.c: 211:                 break;
   784  0002A8  0E21               	movlw	low _con_perimeter
   785  0002AA  6E3D               	movwf	readI2C@conOK,c
   786  0002AC  0E00               	movlw	high _con_perimeter
   787  0002AE  6E3E               	movwf	readI2C@conOK+1,c
   788  0002B0  0E0A               	movlw	10
   789  0002B2  EC47  F002         	call	_readI2C
   790  0002B6  0060  F0F4  F001   	movff	?_readI2C,_sign_perimeter
   791  0002BC  0060  F0F8  F002   	movff	?_readI2C+1,_sign_perimeter+1
   792  0002C2  D705               	goto	l2640
   793  0002C4                     __end_of_main:
   794                           	opt callstack 0
   795                           
   796 ;; *************** function _waitForSensor5 *****************
   797 ;; Defined at:
   798 ;;		line 547 in file "MainCode.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;		None
   801 ;; Auto vars:     Size  Location     Type
   802 ;;  i               2   30[COMRAM] int 
   803 ;; Return value:  Size  Location     Type
   804 ;;                  2   26[COMRAM] int 
   805 ;; Registers used:
   806 ;;		wreg, status,2, status,0
   807 ;; Tracked objects:
   808 ;;		On entry : 0/0
   809 ;;		On exit  : 0/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   812 ;;      Params:         2       0       0       0       0       0       0       0       0
   813 ;;      Locals:         2       0       0       0       0       0       0       0       0
   814 ;;      Temps:          2       0       0       0       0       0       0       0       0
   815 ;;      Totals:         6       0       0       0       0       0       0       0       0
   816 ;;Total ram usage:        6 bytes
   817 ;; Hardware stack levels used:    1
   818 ;; Hardware stack levels required when called:    2
   819 ;; This function calls:
   820 ;;		Nothing
   821 ;; This function is called by:
   822 ;;		_main
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           	psect	text1
   827  000764                     __ptext1:
   828                           	opt callstack 0
   829  000764                     _waitForSensor5:
   830                           	opt callstack 28
   831                           
   832                           ;MainCode.c: 548:     int i = 0;
   833                           
   834                           ;incstack = 0
   835  000764  0E00               	movlw	0
   836  000766  6E42               	movwf	waitForSensor5@i+1,c
   837  000768  0E00               	movlw	0
   838  00076A  6E41               	movwf	waitForSensor5@i,c
   839                           
   840                           ;MainCode.c: 549:     TMR1H = 0;
   841  00076C  0E00               	movlw	0
   842  00076E  6EB1               	movwf	16305,c	;volatile
   843                           
   844                           ;MainCode.c: 550:     TMR1L = 0;
   845  000770  0E00               	movlw	0
   846  000772  6EB0               	movwf	16304,c	;volatile
   847                           
   848                           ;MainCode.c: 551:     T1CONbits.TMR1ON = 1;
   849  000774  80B2               	bsf	16306,0,c	;volatile
   850                           
   851                           ;MainCode.c: 552:     while (!PORTAbits.RA4 && (i < 10000))
   852  000776  D00D               	goto	l2516
   853  000778                     l2514:
   854                           
   855                           ;MainCode.c: 553:         i = (TMR1H << 8) | TMR1L;
   856  000778  50B0               	movf	16304,w,c	;volatile
   857  00077A  006F FEC4  F03F    	movff	16305,??_waitForSensor5	;volatile
   858  000780  6A40               	clrf	(??_waitForSensor5+1)& (0+255),c
   859  000782  0060  F0FC  F040   	movff	??_waitForSensor5,??_waitForSensor5+1
   860  000788  6A3F               	clrf	??_waitForSensor5,c
   861  00078A  103F               	iorwf	??_waitForSensor5,w,c
   862  00078C  6E41               	movwf	waitForSensor5@i,c
   863  00078E  5040               	movf	??_waitForSensor5+1,w,c
   864  000790  6E42               	movwf	waitForSensor5@i+1,c
   865  000792                     l2516:
   866                           
   867                           ;MainCode.c: 552:     while (!PORTAbits.RA4 && (i < 10000))
   868  000792  B8CA               	btfsc	16330,4,c	;volatile
   869  000794  D008               	goto	u1420
   870  000796  BE42               	btfsc	waitForSensor5@i+1,7,c
   871  000798  D7EF               	goto	l2514
   872  00079A  0E10               	movlw	16
   873  00079C  5C41               	subwf	waitForSensor5@i,w,c
   874  00079E  0E27               	movlw	39
   875  0007A0  5842               	subwfb	waitForSensor5@i+1,w,c
   876  0007A2  A0D8               	btfss	status,0,c
   877  0007A4  D7E9               	goto	l2514
   878  0007A6                     u1420:
   879                           
   880                           ;MainCode.c: 554:     if (i >= 10000)
   881  0007A6  BE42               	btfsc	waitForSensor5@i+1,7,c
   882  0007A8  D00B               	goto	l2528
   883  0007AA  0E10               	movlw	16
   884  0007AC  5C41               	subwf	waitForSensor5@i,w,c
   885  0007AE  0E27               	movlw	39
   886  0007B0  5842               	subwfb	waitForSensor5@i+1,w,c
   887  0007B2  A0D8               	btfss	status,0,c
   888  0007B4  D005               	goto	l2528
   889                           
   890                           ;MainCode.c: 555:         return 0;
   891  0007B6  0E00               	movlw	0
   892  0007B8  6E3E               	movwf	?_waitForSensor5+1,c
   893  0007BA  0E00               	movlw	0
   894  0007BC  6E3D               	movwf	?_waitForSensor5,c
   895  0007BE  0012               	return	
   896  0007C0                     l2528:
   897                           
   898                           ;MainCode.c: 557:         return 1;
   899  0007C0  0E00               	movlw	0
   900  0007C2  6E3E               	movwf	?_waitForSensor5+1,c
   901  0007C4  0E01               	movlw	1
   902  0007C6  6E3D               	movwf	?_waitForSensor5,c
   903  0007C8  0012               	return		;funcret
   904  0007CA                     __end_of_waitForSensor5:
   905                           	opt callstack 0
   906                           
   907 ;; *************** function _waitForSensor4 *****************
   908 ;; Defined at:
   909 ;;		line 534 in file "MainCode.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;		None
   912 ;; Auto vars:     Size  Location     Type
   913 ;;  i               2   30[COMRAM] int 
   914 ;; Return value:  Size  Location     Type
   915 ;;                  2   26[COMRAM] int 
   916 ;; Registers used:
   917 ;;		wreg, status,2, status,0
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   923 ;;      Params:         2       0       0       0       0       0       0       0       0
   924 ;;      Locals:         2       0       0       0       0       0       0       0       0
   925 ;;      Temps:          2       0       0       0       0       0       0       0       0
   926 ;;      Totals:         6       0       0       0       0       0       0       0       0
   927 ;;Total ram usage:        6 bytes
   928 ;; Hardware stack levels used:    1
   929 ;; Hardware stack levels required when called:    2
   930 ;; This function calls:
   931 ;;		Nothing
   932 ;; This function is called by:
   933 ;;		_main
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           	psect	text2
   938  0007CA                     __ptext2:
   939                           	opt callstack 0
   940  0007CA                     _waitForSensor4:
   941                           	opt callstack 28
   942                           
   943                           ;MainCode.c: 535:     int i = 0;
   944                           
   945                           ;incstack = 0
   946  0007CA  0E00               	movlw	0
   947  0007CC  6E42               	movwf	waitForSensor4@i+1,c
   948  0007CE  0E00               	movlw	0
   949  0007D0  6E41               	movwf	waitForSensor4@i,c
   950                           
   951                           ;MainCode.c: 536:     TMR1H = 0;
   952  0007D2  0E00               	movlw	0
   953  0007D4  6EB1               	movwf	16305,c	;volatile
   954                           
   955                           ;MainCode.c: 537:     TMR1L = 0;
   956  0007D6  0E00               	movlw	0
   957  0007D8  6EB0               	movwf	16304,c	;volatile
   958                           
   959                           ;MainCode.c: 538:     T1CONbits.TMR1ON = 1;
   960  0007DA  80B2               	bsf	16306,0,c	;volatile
   961                           
   962                           ;MainCode.c: 539:     while (!PORTBbits.RB4 && (i < 10000))
   963  0007DC  D00D               	goto	l2480
   964  0007DE                     l2478:
   965                           
   966                           ;MainCode.c: 540:         i = (TMR1H << 8) | TMR1L;
   967  0007DE  50B0               	movf	16304,w,c	;volatile
   968  0007E0  006F FEC4  F03F    	movff	16305,??_waitForSensor4	;volatile
   969  0007E6  6A40               	clrf	(??_waitForSensor4+1)& (0+255),c
   970  0007E8  0060  F0FC  F040   	movff	??_waitForSensor4,??_waitForSensor4+1
   971  0007EE  6A3F               	clrf	??_waitForSensor4,c
   972  0007F0  103F               	iorwf	??_waitForSensor4,w,c
   973  0007F2  6E41               	movwf	waitForSensor4@i,c
   974  0007F4  5040               	movf	??_waitForSensor4+1,w,c
   975  0007F6  6E42               	movwf	waitForSensor4@i+1,c
   976  0007F8                     l2480:
   977                           
   978                           ;MainCode.c: 539:     while (!PORTBbits.RB4 && (i < 10000))
   979  0007F8  B8CB               	btfsc	16331,4,c	;volatile
   980  0007FA  D008               	goto	u1360
   981  0007FC  BE42               	btfsc	waitForSensor4@i+1,7,c
   982  0007FE  D7EF               	goto	l2478
   983  000800  0E10               	movlw	16
   984  000802  5C41               	subwf	waitForSensor4@i,w,c
   985  000804  0E27               	movlw	39
   986  000806  5842               	subwfb	waitForSensor4@i+1,w,c
   987  000808  A0D8               	btfss	status,0,c
   988  00080A  D7E9               	goto	l2478
   989  00080C                     u1360:
   990                           
   991                           ;MainCode.c: 541:     if (i >= 10000)
   992  00080C  BE42               	btfsc	waitForSensor4@i+1,7,c
   993  00080E  D00B               	goto	l2492
   994  000810  0E10               	movlw	16
   995  000812  5C41               	subwf	waitForSensor4@i,w,c
   996  000814  0E27               	movlw	39
   997  000816  5842               	subwfb	waitForSensor4@i+1,w,c
   998  000818  A0D8               	btfss	status,0,c
   999  00081A  D005               	goto	l2492
  1000                           
  1001                           ;MainCode.c: 542:         return 0;
  1002  00081C  0E00               	movlw	0
  1003  00081E  6E3E               	movwf	?_waitForSensor4+1,c
  1004  000820  0E00               	movlw	0
  1005  000822  6E3D               	movwf	?_waitForSensor4,c
  1006  000824  0012               	return	
  1007  000826                     l2492:
  1008                           
  1009                           ;MainCode.c: 544:         return 1;
  1010  000826  0E00               	movlw	0
  1011  000828  6E3E               	movwf	?_waitForSensor4+1,c
  1012  00082A  0E01               	movlw	1
  1013  00082C  6E3D               	movwf	?_waitForSensor4,c
  1014  00082E  0012               	return		;funcret
  1015  000830                     __end_of_waitForSensor4:
  1016                           	opt callstack 0
  1017                           
  1018 ;; *************** function _waitForSensor3 *****************
  1019 ;; Defined at:
  1020 ;;		line 521 in file "MainCode.c"
  1021 ;; Parameters:    Size  Location     Type
  1022 ;;		None
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;  i               2   30[COMRAM] int 
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  2   26[COMRAM] int 
  1027 ;; Registers used:
  1028 ;;		wreg, status,2, status,0
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1034 ;;      Params:         2       0       0       0       0       0       0       0       0
  1035 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1036 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1037 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1038 ;;Total ram usage:        6 bytes
  1039 ;; Hardware stack levels used:    1
  1040 ;; Hardware stack levels required when called:    2
  1041 ;; This function calls:
  1042 ;;		Nothing
  1043 ;; This function is called by:
  1044 ;;		_main
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           	psect	text3
  1049  000830                     __ptext3:
  1050                           	opt callstack 0
  1051  000830                     _waitForSensor3:
  1052                           	opt callstack 28
  1053                           
  1054                           ;MainCode.c: 522:     int i = 0;
  1055                           
  1056                           ;incstack = 0
  1057  000830  0E00               	movlw	0
  1058  000832  6E42               	movwf	waitForSensor3@i+1,c
  1059  000834  0E00               	movlw	0
  1060  000836  6E41               	movwf	waitForSensor3@i,c
  1061                           
  1062                           ;MainCode.c: 523:     TMR1H = 0;
  1063  000838  0E00               	movlw	0
  1064  00083A  6EB1               	movwf	16305,c	;volatile
  1065                           
  1066                           ;MainCode.c: 524:     TMR1L = 0;
  1067  00083C  0E00               	movlw	0
  1068  00083E  6EB0               	movwf	16304,c	;volatile
  1069                           
  1070                           ;MainCode.c: 525:     T1CONbits.TMR1ON = 1;
  1071  000840  80B2               	bsf	16306,0,c	;volatile
  1072                           
  1073                           ;MainCode.c: 526:     while (!PORTAbits.RA5 && (i < 10000))
  1074  000842  D00D               	goto	l2444
  1075  000844                     l2442:
  1076                           
  1077                           ;MainCode.c: 527:         i = (TMR1H << 8) | TMR1L;
  1078  000844  50B0               	movf	16304,w,c	;volatile
  1079  000846  006F FEC4  F03F    	movff	16305,??_waitForSensor3	;volatile
  1080  00084C  6A40               	clrf	(??_waitForSensor3+1)& (0+255),c
  1081  00084E  0060  F0FC  F040   	movff	??_waitForSensor3,??_waitForSensor3+1
  1082  000854  6A3F               	clrf	??_waitForSensor3,c
  1083  000856  103F               	iorwf	??_waitForSensor3,w,c
  1084  000858  6E41               	movwf	waitForSensor3@i,c
  1085  00085A  5040               	movf	??_waitForSensor3+1,w,c
  1086  00085C  6E42               	movwf	waitForSensor3@i+1,c
  1087  00085E                     l2444:
  1088                           
  1089                           ;MainCode.c: 526:     while (!PORTAbits.RA5 && (i < 10000))
  1090  00085E  BACA               	btfsc	16330,5,c	;volatile
  1091  000860  D008               	goto	u1300
  1092  000862  BE42               	btfsc	waitForSensor3@i+1,7,c
  1093  000864  D7EF               	goto	l2442
  1094  000866  0E10               	movlw	16
  1095  000868  5C41               	subwf	waitForSensor3@i,w,c
  1096  00086A  0E27               	movlw	39
  1097  00086C  5842               	subwfb	waitForSensor3@i+1,w,c
  1098  00086E  A0D8               	btfss	status,0,c
  1099  000870  D7E9               	goto	l2442
  1100  000872                     u1300:
  1101                           
  1102                           ;MainCode.c: 528:     if (i >= 10000)
  1103  000872  BE42               	btfsc	waitForSensor3@i+1,7,c
  1104  000874  D00B               	goto	l2456
  1105  000876  0E10               	movlw	16
  1106  000878  5C41               	subwf	waitForSensor3@i,w,c
  1107  00087A  0E27               	movlw	39
  1108  00087C  5842               	subwfb	waitForSensor3@i+1,w,c
  1109  00087E  A0D8               	btfss	status,0,c
  1110  000880  D005               	goto	l2456
  1111                           
  1112                           ;MainCode.c: 529:         return 0;
  1113  000882  0E00               	movlw	0
  1114  000884  6E3E               	movwf	?_waitForSensor3+1,c
  1115  000886  0E00               	movlw	0
  1116  000888  6E3D               	movwf	?_waitForSensor3,c
  1117  00088A  0012               	return	
  1118  00088C                     l2456:
  1119                           
  1120                           ;MainCode.c: 531:         return 1;
  1121  00088C  0E00               	movlw	0
  1122  00088E  6E3E               	movwf	?_waitForSensor3+1,c
  1123  000890  0E01               	movlw	1
  1124  000892  6E3D               	movwf	?_waitForSensor3,c
  1125  000894  0012               	return		;funcret
  1126  000896                     __end_of_waitForSensor3:
  1127                           	opt callstack 0
  1128                           
  1129 ;; *************** function _waitForSensor2 *****************
  1130 ;; Defined at:
  1131 ;;		line 508 in file "MainCode.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;		None
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;  i               2   30[COMRAM] int 
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  2   26[COMRAM] int 
  1138 ;; Registers used:
  1139 ;;		wreg, status,2, status,0
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1145 ;;      Params:         2       0       0       0       0       0       0       0       0
  1146 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1147 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1148 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1149 ;;Total ram usage:        6 bytes
  1150 ;; Hardware stack levels used:    1
  1151 ;; Hardware stack levels required when called:    2
  1152 ;; This function calls:
  1153 ;;		Nothing
  1154 ;; This function is called by:
  1155 ;;		_main
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           	psect	text4
  1160  000896                     __ptext4:
  1161                           	opt callstack 0
  1162  000896                     _waitForSensor2:
  1163                           	opt callstack 28
  1164                           
  1165                           ;MainCode.c: 509:     int i = 0;
  1166                           
  1167                           ;incstack = 0
  1168  000896  0E00               	movlw	0
  1169  000898  6E42               	movwf	waitForSensor2@i+1,c
  1170  00089A  0E00               	movlw	0
  1171  00089C  6E41               	movwf	waitForSensor2@i,c
  1172                           
  1173                           ;MainCode.c: 510:     TMR1H = 0;
  1174  00089E  0E00               	movlw	0
  1175  0008A0  6EB1               	movwf	16305,c	;volatile
  1176                           
  1177                           ;MainCode.c: 511:     TMR1L = 0;
  1178  0008A2  0E00               	movlw	0
  1179  0008A4  6EB0               	movwf	16304,c	;volatile
  1180                           
  1181                           ;MainCode.c: 512:     T1CONbits.TMR1ON = 1;
  1182  0008A6  80B2               	bsf	16306,0,c	;volatile
  1183                           
  1184                           ;MainCode.c: 513:     while (!PORTBbits.RB0 && (i < 10000))
  1185  0008A8  D00D               	goto	l2408
  1186  0008AA                     l2406:
  1187                           
  1188                           ;MainCode.c: 514:         i = (TMR1H << 8) | TMR1L;
  1189  0008AA  50B0               	movf	16304,w,c	;volatile
  1190  0008AC  006F FEC4  F03F    	movff	16305,??_waitForSensor2	;volatile
  1191  0008B2  6A40               	clrf	(??_waitForSensor2+1)& (0+255),c
  1192  0008B4  0060  F0FC  F040   	movff	??_waitForSensor2,??_waitForSensor2+1
  1193  0008BA  6A3F               	clrf	??_waitForSensor2,c
  1194  0008BC  103F               	iorwf	??_waitForSensor2,w,c
  1195  0008BE  6E41               	movwf	waitForSensor2@i,c
  1196  0008C0  5040               	movf	??_waitForSensor2+1,w,c
  1197  0008C2  6E42               	movwf	waitForSensor2@i+1,c
  1198  0008C4                     l2408:
  1199                           
  1200                           ;MainCode.c: 513:     while (!PORTBbits.RB0 && (i < 10000))
  1201  0008C4  B0CB               	btfsc	16331,0,c	;volatile
  1202  0008C6  D008               	goto	u1240
  1203  0008C8  BE42               	btfsc	waitForSensor2@i+1,7,c
  1204  0008CA  D7EF               	goto	l2406
  1205  0008CC  0E10               	movlw	16
  1206  0008CE  5C41               	subwf	waitForSensor2@i,w,c
  1207  0008D0  0E27               	movlw	39
  1208  0008D2  5842               	subwfb	waitForSensor2@i+1,w,c
  1209  0008D4  A0D8               	btfss	status,0,c
  1210  0008D6  D7E9               	goto	l2406
  1211  0008D8                     u1240:
  1212                           
  1213                           ;MainCode.c: 515:     if (i >= 10000)
  1214  0008D8  BE42               	btfsc	waitForSensor2@i+1,7,c
  1215  0008DA  D00B               	goto	l2420
  1216  0008DC  0E10               	movlw	16
  1217  0008DE  5C41               	subwf	waitForSensor2@i,w,c
  1218  0008E0  0E27               	movlw	39
  1219  0008E2  5842               	subwfb	waitForSensor2@i+1,w,c
  1220  0008E4  A0D8               	btfss	status,0,c
  1221  0008E6  D005               	goto	l2420
  1222                           
  1223                           ;MainCode.c: 516:         return 0;
  1224  0008E8  0E00               	movlw	0
  1225  0008EA  6E3E               	movwf	?_waitForSensor2+1,c
  1226  0008EC  0E00               	movlw	0
  1227  0008EE  6E3D               	movwf	?_waitForSensor2,c
  1228  0008F0  0012               	return	
  1229  0008F2                     l2420:
  1230                           
  1231                           ;MainCode.c: 518:         return 1;
  1232  0008F2  0E00               	movlw	0
  1233  0008F4  6E3E               	movwf	?_waitForSensor2+1,c
  1234  0008F6  0E01               	movlw	1
  1235  0008F8  6E3D               	movwf	?_waitForSensor2,c
  1236  0008FA  0012               	return		;funcret
  1237  0008FC                     __end_of_waitForSensor2:
  1238                           	opt callstack 0
  1239                           
  1240 ;; *************** function _waitForSensor1 *****************
  1241 ;; Defined at:
  1242 ;;		line 495 in file "MainCode.c"
  1243 ;; Parameters:    Size  Location     Type
  1244 ;;		None
  1245 ;; Auto vars:     Size  Location     Type
  1246 ;;  i               2   30[COMRAM] int 
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  2   26[COMRAM] int 
  1249 ;; Registers used:
  1250 ;;		wreg, status,2, status,0
  1251 ;; Tracked objects:
  1252 ;;		On entry : 0/0
  1253 ;;		On exit  : 0/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1256 ;;      Params:         2       0       0       0       0       0       0       0       0
  1257 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1258 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1259 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1260 ;;Total ram usage:        6 bytes
  1261 ;; Hardware stack levels used:    1
  1262 ;; Hardware stack levels required when called:    2
  1263 ;; This function calls:
  1264 ;;		Nothing
  1265 ;; This function is called by:
  1266 ;;		_main
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           	psect	text5
  1271  0008FC                     __ptext5:
  1272                           	opt callstack 0
  1273  0008FC                     _waitForSensor1:
  1274                           	opt callstack 28
  1275                           
  1276                           ;MainCode.c: 496:     int i = 0;
  1277                           
  1278                           ;incstack = 0
  1279  0008FC  0E00               	movlw	0
  1280  0008FE  6E42               	movwf	waitForSensor1@i+1,c
  1281  000900  0E00               	movlw	0
  1282  000902  6E41               	movwf	waitForSensor1@i,c
  1283                           
  1284                           ;MainCode.c: 497:     TMR1H = 0;
  1285  000904  0E00               	movlw	0
  1286  000906  6EB1               	movwf	16305,c	;volatile
  1287                           
  1288                           ;MainCode.c: 498:     TMR1L = 0;
  1289  000908  0E00               	movlw	0
  1290  00090A  6EB0               	movwf	16304,c	;volatile
  1291                           
  1292                           ;MainCode.c: 499:     T1CONbits.TMR1ON = 1;
  1293  00090C  80B2               	bsf	16306,0,c	;volatile
  1294                           
  1295                           ;MainCode.c: 500:     while (!PORTBbits.RB1 && (i < 10000))
  1296  00090E  D00D               	goto	l2372
  1297  000910                     l2370:
  1298                           
  1299                           ;MainCode.c: 501:         i = (TMR1H << 8) | TMR1L;
  1300  000910  50B0               	movf	16304,w,c	;volatile
  1301  000912  006F FEC4  F03F    	movff	16305,??_waitForSensor1	;volatile
  1302  000918  6A40               	clrf	(??_waitForSensor1+1)& (0+255),c
  1303  00091A  0060  F0FC  F040   	movff	??_waitForSensor1,??_waitForSensor1+1
  1304  000920  6A3F               	clrf	??_waitForSensor1,c
  1305  000922  103F               	iorwf	??_waitForSensor1,w,c
  1306  000924  6E41               	movwf	waitForSensor1@i,c
  1307  000926  5040               	movf	??_waitForSensor1+1,w,c
  1308  000928  6E42               	movwf	waitForSensor1@i+1,c
  1309  00092A                     l2372:
  1310                           
  1311                           ;MainCode.c: 500:     while (!PORTBbits.RB1 && (i < 10000))
  1312  00092A  B2CB               	btfsc	16331,1,c	;volatile
  1313  00092C  D008               	goto	u1180
  1314  00092E  BE42               	btfsc	waitForSensor1@i+1,7,c
  1315  000930  D7EF               	goto	l2370
  1316  000932  0E10               	movlw	16
  1317  000934  5C41               	subwf	waitForSensor1@i,w,c
  1318  000936  0E27               	movlw	39
  1319  000938  5842               	subwfb	waitForSensor1@i+1,w,c
  1320  00093A  A0D8               	btfss	status,0,c
  1321  00093C  D7E9               	goto	l2370
  1322  00093E                     u1180:
  1323                           
  1324                           ;MainCode.c: 502:     if (i >= 10000)
  1325  00093E  BE42               	btfsc	waitForSensor1@i+1,7,c
  1326  000940  D00B               	goto	l2384
  1327  000942  0E10               	movlw	16
  1328  000944  5C41               	subwf	waitForSensor1@i,w,c
  1329  000946  0E27               	movlw	39
  1330  000948  5842               	subwfb	waitForSensor1@i+1,w,c
  1331  00094A  A0D8               	btfss	status,0,c
  1332  00094C  D005               	goto	l2384
  1333                           
  1334                           ;MainCode.c: 503:         return 0;
  1335  00094E  0E00               	movlw	0
  1336  000950  6E3E               	movwf	?_waitForSensor1+1,c
  1337  000952  0E00               	movlw	0
  1338  000954  6E3D               	movwf	?_waitForSensor1,c
  1339  000956  0012               	return	
  1340  000958                     l2384:
  1341                           
  1342                           ;MainCode.c: 505:         return 1;
  1343  000958  0E00               	movlw	0
  1344  00095A  6E3E               	movwf	?_waitForSensor1+1,c
  1345  00095C  0E01               	movlw	1
  1346  00095E  6E3D               	movwf	?_waitForSensor1,c
  1347  000960  0012               	return		;funcret
  1348  000962                     __end_of_waitForSensor1:
  1349                           	opt callstack 0
  1350                           
  1351 ;; *************** function _wait2US *****************
  1352 ;; Defined at:
  1353 ;;		line 645 in file "MainCode.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;		None
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;  i               4   26[COMRAM] long 
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  1    wreg      void 
  1360 ;; Registers used:
  1361 ;;		wreg, status,2, status,0
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1367 ;;      Params:         0       0       0       0       0       0       0       0       0
  1368 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1369 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1370 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1371 ;;Total ram usage:        4 bytes
  1372 ;; Hardware stack levels used:    1
  1373 ;; Hardware stack levels required when called:    2
  1374 ;; This function calls:
  1375 ;;		Nothing
  1376 ;; This function is called by:
  1377 ;;		_main
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           	psect	text6
  1382  000BE6                     __ptext6:
  1383                           	opt callstack 0
  1384  000BE6                     _wait2US:
  1385                           	opt callstack 28
  1386                           
  1387                           ;MainCode.c: 646:     for (long i = 0; i < 2; i++) {
  1388                           
  1389                           ;incstack = 0
  1390  000BE6  0E00               	movlw	0
  1391  000BE8  6E3D               	movwf	wait2US@i,c
  1392  000BEA  0E00               	movlw	0
  1393  000BEC  6E3E               	movwf	wait2US@i+1,c
  1394  000BEE  0E00               	movlw	0
  1395  000BF0  6E3F               	movwf	wait2US@i+2,c
  1396  000BF2  0E00               	movlw	0
  1397  000BF4  6E40               	movwf	wait2US@i+3,c
  1398  000BF6                     l407:
  1399                           
  1400                           ;MainCode.c: 647:         __nop();
  1401  000BF6  F000               	nop	
  1402                           
  1403                           ;MainCode.c: 648:     }
  1404  000BF8  0E01               	movlw	1
  1405  000BFA  263D               	addwf	wait2US@i,f,c
  1406  000BFC  0E00               	movlw	0
  1407  000BFE  223E               	addwfc	wait2US@i+1,f,c
  1408  000C00  223F               	addwfc	wait2US@i+2,f,c
  1409  000C02  2240               	addwfc	wait2US@i+3,f,c
  1410  000C04  BE40               	btfsc	wait2US@i+3,7,c
  1411  000C06  D7F7               	goto	l407
  1412  000C08  5040               	movf	wait2US@i+3,w,c
  1413  000C0A  103F               	iorwf	wait2US@i+2,w,c
  1414  000C0C  103E               	iorwf	wait2US@i+1,w,c
  1415  000C0E  E105               	bnz	u1150
  1416  000C10  0E02               	movlw	2
  1417  000C12  5C3D               	subwf	wait2US@i,w,c
  1418  000C14  B0D8               	btfsc	status,0,c
  1419  000C16  0012               	return	
  1420  000C18  D7EE               	goto	l407
  1421  000C1A                     u1150:
  1422  000C1A  0012               	return		;funcret
  1423  000C1C                     __end_of_wait2US:
  1424                           	opt callstack 0
  1425                           
  1426 ;; *************** function _wait10US *****************
  1427 ;; Defined at:
  1428 ;;		line 651 in file "MainCode.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;		None
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;  i               4   26[COMRAM] long 
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      void 
  1435 ;; Registers used:
  1436 ;;		wreg, status,2, status,0
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1442 ;;      Params:         0       0       0       0       0       0       0       0       0
  1443 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1444 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1445 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1446 ;;Total ram usage:        4 bytes
  1447 ;; Hardware stack levels used:    1
  1448 ;; Hardware stack levels required when called:    2
  1449 ;; This function calls:
  1450 ;;		Nothing
  1451 ;; This function is called by:
  1452 ;;		_main
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           	psect	text7
  1457  000C1C                     __ptext7:
  1458                           	opt callstack 0
  1459  000C1C                     _wait10US:
  1460                           	opt callstack 28
  1461                           
  1462                           ;MainCode.c: 652:     for (long i = 0; i < 6; i++) {
  1463                           
  1464                           ;incstack = 0
  1465  000C1C  0E00               	movlw	0
  1466  000C1E  6E3D               	movwf	wait10US@i,c
  1467  000C20  0E00               	movlw	0
  1468  000C22  6E3E               	movwf	wait10US@i+1,c
  1469  000C24  0E00               	movlw	0
  1470  000C26  6E3F               	movwf	wait10US@i+2,c
  1471  000C28  0E00               	movlw	0
  1472  000C2A  6E40               	movwf	wait10US@i+3,c
  1473  000C2C                     l412:
  1474                           
  1475                           ;MainCode.c: 653:         __nop();
  1476  000C2C  F000               	nop	
  1477                           
  1478                           ;MainCode.c: 654:     }
  1479  000C2E  0E01               	movlw	1
  1480  000C30  263D               	addwf	wait10US@i,f,c
  1481  000C32  0E00               	movlw	0
  1482  000C34  223E               	addwfc	wait10US@i+1,f,c
  1483  000C36  223F               	addwfc	wait10US@i+2,f,c
  1484  000C38  2240               	addwfc	wait10US@i+3,f,c
  1485  000C3A  BE40               	btfsc	wait10US@i+3,7,c
  1486  000C3C  D7F7               	goto	l412
  1487  000C3E  5040               	movf	wait10US@i+3,w,c
  1488  000C40  103F               	iorwf	wait10US@i+2,w,c
  1489  000C42  103E               	iorwf	wait10US@i+1,w,c
  1490  000C44  E105               	bnz	u1160
  1491  000C46  0E06               	movlw	6
  1492  000C48  5C3D               	subwf	wait10US@i,w,c
  1493  000C4A  B0D8               	btfsc	status,0,c
  1494  000C4C  0012               	return	
  1495  000C4E  D7EE               	goto	l412
  1496  000C50                     u1160:
  1497  000C50  0012               	return		;funcret
  1498  000C52                     __end_of_wait10US:
  1499                           	opt callstack 0
  1500                           
  1501 ;; *************** function _readI2C *****************
  1502 ;; Defined at:
  1503 ;;		line 312 in file "MainCode.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;  reg             1    wreg     unsigned char 
  1506 ;;  conOK           2   26[COMRAM] PTR int 
  1507 ;;		 -> con_perimeter(2), 
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;  reg             1   28[COMRAM] unsigned char 
  1510 ;;  counter         2   32[COMRAM] int 
  1511 ;;  tmpOK           2   30[COMRAM] int 
  1512 ;;  data            1   29[COMRAM] unsigned char 
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  2   26[COMRAM] int 
  1515 ;; Registers used:
  1516 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1522 ;;      Params:         2       0       0       0       0       0       0       0       0
  1523 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1524 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1525 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1526 ;;Total ram usage:        8 bytes
  1527 ;; Hardware stack levels used:    1
  1528 ;; Hardware stack levels required when called:    2
  1529 ;; This function calls:
  1530 ;;		Nothing
  1531 ;; This function is called by:
  1532 ;;		_main
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536                           	psect	text8
  1537  00048E                     __ptext8:
  1538                           	opt callstack 0
  1539  00048E                     _readI2C:
  1540                           	opt callstack 28
  1541                           
  1542                           ;incstack = 0
  1543                           ;readI2C@reg stored from wreg
  1544  00048E  6E3F               	movwf	readI2C@reg,c
  1545                           
  1546                           ;MainCode.c: 328:     I2C1STAT1bits.TXWE = 0;
  1547  000490  013D               	movlb	61	; () banked
  1548  000492  9F78               	bcf	120,7,b	;volatile
  1549                           
  1550                           ;MainCode.c: 329:     I2C1STAT1bits.RXRE = 0;
  1551  000494  9778               	bcf	120,3,b	;volatile
  1552                           
  1553                           ; BSR set to: 61
  1554                           ;MainCode.c: 330:     unsigned char data;;MainCode.c: 331:     int tmpOK = 1;
  1555  000496  0E00               	movlw	0
  1556  000498  6E42               	movwf	readI2C@tmpOK+1,c
  1557  00049A  0E01               	movlw	1
  1558  00049C  6E41               	movwf	readI2C@tmpOK,c
  1559                           
  1560                           ;MainCode.c: 332:     I2C1ADB1 = 0X10;
  1561  00049E  0E10               	movlw	16
  1562  0004A0  6F6E               	movwf	110,b	;volatile
  1563                           
  1564                           ; BSR set to: 61
  1565                           ;MainCode.c: 333:     I2C1TXB = reg;
  1566  0004A2  0060  F0FF  FD6B   	movff	readI2C@reg,15723	;volatile
  1567  0004A8                     l273:
  1568                           
  1569                           ; BSR set to: 61
  1570  0004A8  AF77               	btfss	119,7,b	;volatile
  1571  0004AA  D7FE               	goto	l273
  1572                           
  1573                           ; BSR set to: 61
  1574                           ;MainCode.c: 335:     I2C1CNT = 1;
  1575  0004AC  0E01               	movlw	1
  1576  0004AE  6F6C               	movwf	108,b	;volatile
  1577                           
  1578                           ; BSR set to: 61
  1579                           ;MainCode.c: 336:     I2C1CON0bits.RSEN = 1;
  1580  0004B0  8D73               	bsf	115,6,b	;volatile
  1581                           
  1582                           ; BSR set to: 61
  1583                           ;MainCode.c: 337:     I2C1CON0bits.S = 1;
  1584  0004B2  8B73               	bsf	115,5,b	;volatile
  1585                           
  1586                           ;MainCode.c: 338:     int counter = 0;
  1587  0004B4  0E00               	movlw	0
  1588  0004B6  6E44               	movwf	readI2C@counter+1,c
  1589  0004B8  0E00               	movlw	0
  1590  0004BA  6E43               	movwf	readI2C@counter,c
  1591                           
  1592                           ;MainCode.c: 339:     while (!I2C1CON0bits.MDR && counter < 25000) {
  1593  0004BC  D002               	goto	l2574
  1594  0004BE                     l2572:
  1595                           
  1596                           ; BSR set to: 61
  1597                           ;MainCode.c: 340:         counter++;
  1598  0004BE  4A43               	infsnz	readI2C@counter,f,c
  1599  0004C0  2A44               	incf	readI2C@counter+1,f,c
  1600  0004C2                     l2574:
  1601                           
  1602                           ; BSR set to: 61
  1603                           ;MainCode.c: 339:     while (!I2C1CON0bits.MDR && counter < 25000) {
  1604  0004C2  B773               	btfsc	115,3,b	;volatile
  1605  0004C4  D008               	goto	u1520
  1606                           
  1607                           ; BSR set to: 61
  1608  0004C6  BE44               	btfsc	readI2C@counter+1,7,c
  1609  0004C8  D7FA               	goto	l2572
  1610  0004CA  0EA8               	movlw	168
  1611  0004CC  5C43               	subwf	readI2C@counter,w,c
  1612  0004CE  0E61               	movlw	97
  1613  0004D0  5844               	subwfb	readI2C@counter+1,w,c
  1614  0004D2  A0D8               	btfss	status,0,c
  1615  0004D4  D7F4               	goto	l2572
  1616  0004D6                     u1520:
  1617                           
  1618                           ; BSR set to: 61
  1619                           ;MainCode.c: 342:     if (counter >= 25000) tmpOK = 0;
  1620  0004D6  BE44               	btfsc	readI2C@counter+1,7,c
  1621  0004D8  D00A               	goto	l281
  1622  0004DA  0EA8               	movlw	168
  1623  0004DC  5C43               	subwf	readI2C@counter,w,c
  1624  0004DE  0E61               	movlw	97
  1625  0004E0  5844               	subwfb	readI2C@counter+1,w,c
  1626  0004E2  A0D8               	btfss	status,0,c
  1627  0004E4  D004               	goto	l281
  1628                           
  1629                           ; BSR set to: 61
  1630  0004E6  0E00               	movlw	0
  1631  0004E8  6E42               	movwf	readI2C@tmpOK+1,c
  1632  0004EA  0E00               	movlw	0
  1633  0004EC  6E41               	movwf	readI2C@tmpOK,c
  1634  0004EE                     l281:
  1635                           
  1636                           ; BSR set to: 61
  1637                           ;MainCode.c: 346:     I2C1ADB1 = (0x11);
  1638  0004EE  0E11               	movlw	17
  1639  0004F0  6F6E               	movwf	110,b	;volatile
  1640                           
  1641                           ;MainCode.c: 347:     I2C1CNT = 1;
  1642  0004F2  0E01               	movlw	1
  1643  0004F4  6F6C               	movwf	108,b	;volatile
  1644                           
  1645                           ; BSR set to: 61
  1646                           ;MainCode.c: 348:     I2C1CON0bits.S = 1;
  1647  0004F6  8B73               	bsf	115,5,b	;volatile
  1648                           
  1649                           ; BSR set to: 61
  1650                           ;MainCode.c: 349:     I2C1CON0bits.RSEN = 0;
  1651  0004F8  9D73               	bcf	115,6,b	;volatile
  1652                           
  1653                           ;MainCode.c: 350:     counter = 0;
  1654  0004FA  0E00               	movlw	0
  1655  0004FC  6E44               	movwf	readI2C@counter+1,c
  1656  0004FE  0E00               	movlw	0
  1657  000500  6E43               	movwf	readI2C@counter,c
  1658                           
  1659                           ;MainCode.c: 351:     while (!I2C1STAT1bits.RXBF && counter < 25000) {
  1660  000502  D002               	goto	l2588
  1661  000504                     l2586:
  1662                           
  1663                           ; BSR set to: 61
  1664                           ;MainCode.c: 352:         counter++;
  1665  000504  4A43               	infsnz	readI2C@counter,f,c
  1666  000506  2A44               	incf	readI2C@counter+1,f,c
  1667  000508                     l2588:
  1668                           
  1669                           ; BSR set to: 61
  1670                           ;MainCode.c: 351:     while (!I2C1STAT1bits.RXBF && counter < 25000) {
  1671  000508  B178               	btfsc	120,0,b	;volatile
  1672  00050A  D008               	goto	u1550
  1673                           
  1674                           ; BSR set to: 61
  1675  00050C  BE44               	btfsc	readI2C@counter+1,7,c
  1676  00050E  D7FA               	goto	l2586
  1677  000510  0EA8               	movlw	168
  1678  000512  5C43               	subwf	readI2C@counter,w,c
  1679  000514  0E61               	movlw	97
  1680  000516  5844               	subwfb	readI2C@counter+1,w,c
  1681  000518  A0D8               	btfss	status,0,c
  1682  00051A  D7F4               	goto	l2586
  1683  00051C                     u1550:
  1684                           
  1685                           ; BSR set to: 61
  1686                           ;MainCode.c: 354:     if (counter >= 25000) tmpOK = 0;
  1687  00051C  BE44               	btfsc	readI2C@counter+1,7,c
  1688  00051E  D00B               	goto	l287
  1689  000520  0EA8               	movlw	168
  1690  000522  5C43               	subwf	readI2C@counter,w,c
  1691  000524  0E61               	movlw	97
  1692  000526  5844               	subwfb	readI2C@counter+1,w,c
  1693  000528  A0D8               	btfss	status,0,c
  1694  00052A  D005               	goto	l287
  1695                           
  1696                           ; BSR set to: 61
  1697  00052C  0E00               	movlw	0
  1698  00052E  6E42               	movwf	readI2C@tmpOK+1,c
  1699  000530  0E00               	movlw	0
  1700  000532  6E41               	movwf	readI2C@tmpOK,c
  1701  000534  D003               	goto	l2596
  1702  000536                     l287:
  1703                           
  1704                           ; BSR set to: 61
  1705  000536  006F F5A8  F040    	movff	15722,readI2C@data	;volatile
  1706  00053C                     l2596:
  1707                           
  1708                           ; BSR set to: 61
  1709                           ;MainCode.c: 362:     counter = 0;
  1710  00053C  0E00               	movlw	0
  1711  00053E  6E44               	movwf	readI2C@counter+1,c
  1712  000540  0E00               	movlw	0
  1713  000542  6E43               	movwf	readI2C@counter,c
  1714                           
  1715                           ;MainCode.c: 363:     while (!I2C1PIRbits.PCIF && counter < 25000) {
  1716  000544  D002               	goto	l2600
  1717  000546                     l2598:
  1718                           
  1719                           ; BSR set to: 61
  1720                           ;MainCode.c: 364:         counter++;
  1721  000546  4A43               	infsnz	readI2C@counter,f,c
  1722  000548  2A44               	incf	readI2C@counter+1,f,c
  1723  00054A                     l2600:
  1724                           
  1725                           ; BSR set to: 61
  1726                           ;MainCode.c: 363:     while (!I2C1PIRbits.PCIF && counter < 25000) {
  1727  00054A  B579               	btfsc	121,2,b	;volatile
  1728  00054C  D008               	goto	u1580
  1729                           
  1730                           ; BSR set to: 61
  1731  00054E  BE44               	btfsc	readI2C@counter+1,7,c
  1732  000550  D7FA               	goto	l2598
  1733  000552  0EA8               	movlw	168
  1734  000554  5C43               	subwf	readI2C@counter,w,c
  1735  000556  0E61               	movlw	97
  1736  000558  5844               	subwfb	readI2C@counter+1,w,c
  1737  00055A  A0D8               	btfss	status,0,c
  1738  00055C  D7F4               	goto	l2598
  1739  00055E                     u1580:
  1740                           
  1741                           ; BSR set to: 61
  1742                           ;MainCode.c: 366:     if (counter >= 25000) tmpOK = 0;
  1743  00055E  BE44               	btfsc	readI2C@counter+1,7,c
  1744  000560  D00A               	goto	l2608
  1745  000562  0EA8               	movlw	168
  1746  000564  5C43               	subwf	readI2C@counter,w,c
  1747  000566  0E61               	movlw	97
  1748  000568  5844               	subwfb	readI2C@counter+1,w,c
  1749  00056A  A0D8               	btfss	status,0,c
  1750  00056C  D004               	goto	l2608
  1751                           
  1752                           ; BSR set to: 61
  1753  00056E  0E00               	movlw	0
  1754  000570  6E42               	movwf	readI2C@tmpOK+1,c
  1755  000572  0E00               	movlw	0
  1756  000574  6E41               	movwf	readI2C@tmpOK,c
  1757  000576                     l2608:
  1758                           
  1759                           ; BSR set to: 61
  1760                           ;MainCode.c: 369:     I2C1PIRbits.PCIF = 0;
  1761  000576  9579               	bcf	121,2,b	;volatile
  1762                           
  1763                           ; BSR set to: 61
  1764                           ;MainCode.c: 370:     I2C1PIRbits.SCIF = 0;
  1765  000578  9179               	bcf	121,0,b	;volatile
  1766                           
  1767                           ; BSR set to: 61
  1768                           ;MainCode.c: 371:     I2C1STAT1bits.CLRBF = 1;
  1769  00057A  8578               	bsf	120,2,b	;volatile
  1770                           
  1771                           ; BSR set to: 61
  1772                           ;MainCode.c: 372:     * conOK = tmpOK;
  1773  00057C  0060  F0F7  FFD9   	movff	readI2C@conOK,fsr2l
  1774  000582  0060  F0FB  FFDA   	movff	readI2C@conOK+1,fsr2h
  1775  000588  0060  F107  FFDE   	movff	readI2C@tmpOK,postinc2
  1776  00058E  0060  F10B  FFDD   	movff	readI2C@tmpOK+1,postdec2
  1777                           
  1778                           ; BSR set to: 61
  1779                           ;MainCode.c: 373:     return data;
  1780  000594  0060  F100  F03D   	movff	readI2C@data,?_readI2C
  1781  00059A  6A3E               	clrf	?_readI2C+1,c
  1782                           
  1783                           ; BSR set to: 61
  1784  00059C  0012               	return		;funcret
  1785  00059E                     __end_of_readI2C:
  1786                           	opt callstack 0
  1787                           
  1788 ;; *************** function _readADC *****************
  1789 ;; Defined at:
  1790 ;;		line 729 in file "MainCode.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;  ch              2   26[COMRAM] int 
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;		None
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  2   26[COMRAM] int 
  1797 ;; Registers used:
  1798 ;;		wreg, status,2, status,0
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1804 ;;      Params:         2       0       0       0       0       0       0       0       0
  1805 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1806 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1807 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1808 ;;Total ram usage:        4 bytes
  1809 ;; Hardware stack levels used:    1
  1810 ;; Hardware stack levels required when called:    2
  1811 ;; This function calls:
  1812 ;;		Nothing
  1813 ;; This function is called by:
  1814 ;;		_main
  1815 ;; This function uses a non-reentrant model
  1816 ;;
  1817                           
  1818                           	psect	text9
  1819  000BA6                     __ptext9:
  1820                           	opt callstack 0
  1821  000BA6                     _readADC:
  1822                           	opt callstack 28
  1823                           
  1824                           ;MainCode.c: 730:     if (ch == 0) ADPCHbits.ADPCH = 0b010110;
  1825                           
  1826                           ; BSR set to: 61
  1827                           ;incstack = 0
  1828  000BA6  503D               	movf	readADC@ch,w,c
  1829  000BA8  103E               	iorwf	readADC@ch+1,w,c
  1830  000BAA  A4D8               	btfss	status,2,c
  1831  000BAC  D005               	goto	l2550
  1832  000BAE  013E               	movlb	62	; () banked
  1833  000BB0  51F1               	movf	241,w,b	;volatile
  1834  000BB2  0BC0               	andlw	-64
  1835  000BB4  0916               	iorlw	22
  1836  000BB6  D008               	goto	L6
  1837  000BB8                     l2550:
  1838  000BB8  043D               	decf	readADC@ch,w,c
  1839  000BBA  103E               	iorwf	readADC@ch+1,w,c
  1840  000BBC  A4D8               	btfss	status,2,c
  1841  000BBE  D005               	goto	l2554
  1842  000BC0  013E               	movlb	62	; () banked
  1843  000BC2  51F1               	movf	241,w,b	;volatile
  1844  000BC4  0BC0               	andlw	-64
  1845  000BC6  0915               	iorlw	21
  1846  000BC8                     L6:
  1847  000BC8  6FF1               	movwf	241,b	;volatile
  1848  000BCA                     l2554:
  1849                           
  1850                           ;MainCode.c: 732:     ADCON0bits.GO = 1;
  1851  000BCA  013E               	movlb	62	; () banked
  1852  000BCC  81F8               	bsf	248,0,b	;volatile
  1853  000BCE                     l435:
  1854                           
  1855                           ; BSR set to: 62
  1856  000BCE  B1F8               	btfsc	248,0,b	;volatile
  1857  000BD0  D7FE               	goto	l435
  1858                           
  1859                           ; BSR set to: 62
  1860                           ;MainCode.c: 734:     return (ADRESH << 8) +ADRESL;
  1861  000BD2  51F0               	movf	240,w,b	;volatile
  1862  000BD4  6E40               	movwf	(??_readADC+1)& (0+255),c
  1863  000BD6  6A3F               	clrf	??_readADC& (0+255),c
  1864  000BD8  51EF               	movf	239,w,b	;volatile
  1865  000BDA  243F               	addwf	??_readADC,w,c
  1866  000BDC  6E3D               	movwf	?_readADC,c
  1867  000BDE  0E00               	movlw	0
  1868  000BE0  2040               	addwfc	??_readADC+1,w,c
  1869  000BE2  6E3E               	movwf	?_readADC+1,c
  1870                           
  1871                           ; BSR set to: 62
  1872  000BE4  0012               	return		;funcret
  1873  000BE6                     __end_of_readADC:
  1874                           	opt callstack 0
  1875                           
  1876 ;; *************** function _initI2C *****************
  1877 ;; Defined at:
  1878 ;;		line 376 in file "MainCode.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;		None
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;  state           2   26[COMRAM] int 
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  1    wreg      void 
  1885 ;; Registers used:
  1886 ;;		wreg, status,2
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1892 ;;      Params:         0       0       0       0       0       0       0       0       0
  1893 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1894 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1895 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1896 ;;Total ram usage:        2 bytes
  1897 ;; Hardware stack levels used:    1
  1898 ;; Hardware stack levels required when called:    2
  1899 ;; This function calls:
  1900 ;;		Nothing
  1901 ;; This function is called by:
  1902 ;;		_main
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906                           	psect	text10
  1907  000674                     __ptext10:
  1908                           	opt callstack 0
  1909  000674                     _initI2C:
  1910                           	opt callstack 28
  1911                           
  1912                           ;MainCode.c: 377:     LATCbits.LATC3 = 0;
  1913                           
  1914                           ; BSR set to: 62
  1915                           ;incstack = 0
  1916  000674  96BC               	bcf	16316,3,c	;volatile
  1917                           
  1918                           ;MainCode.c: 378:     LATCbits.LATC4 = 0;
  1919  000676  98BC               	bcf	16316,4,c	;volatile
  1920                           
  1921                           ;MainCode.c: 379:     TRISCbits.TRISC3 = 0;
  1922  000678  96C4               	bcf	16324,3,c	;volatile
  1923                           
  1924                           ;MainCode.c: 380:     TRISCbits.TRISC4 = 0;
  1925  00067A  98C4               	bcf	16324,4,c	;volatile
  1926                           
  1927                           ;MainCode.c: 381:     ANSELCbits.ANSELC3 = 0;
  1928  00067C  013A               	movlb	58	; () banked
  1929  00067E  9760               	bcf	96,3,b	;volatile
  1930                           
  1931                           ;MainCode.c: 382:     ANSELCbits.ANSELC4 = 0;
  1932  000680  9960               	bcf	96,4,b	;volatile
  1933                           
  1934                           ;MainCode.c: 383:     ODCONCbits.ODCC3 = 1;
  1935  000682  8762               	bsf	98,3,b	;volatile
  1936                           
  1937                           ;MainCode.c: 384:     ODCONCbits.ODCC4 = 1;
  1938  000684  8962               	bsf	98,4,b	;volatile
  1939                           
  1940                           ; BSR set to: 58
  1941                           ;MainCode.c: 385:     RC3I2C = 0x01;
  1942  000686  0E01               	movlw	1
  1943  000688  6F6A               	movwf	106,b	;volatile
  1944                           
  1945                           ; BSR set to: 58
  1946                           ;MainCode.c: 388:     SLRCONCbits.SLRC3 = 0;
  1947  00068A  9763               	bcf	99,3,b	;volatile
  1948                           
  1949                           ;MainCode.c: 389:     RC4I2C = 0x01;
  1950  00068C  0E01               	movlw	1
  1951  00068E  6F6B               	movwf	107,b	;volatile
  1952                           
  1953                           ; BSR set to: 58
  1954                           ;MainCode.c: 390:     SLRCONCbits.SLRC4 = 0;
  1955  000690  9963               	bcf	99,4,b	;volatile
  1956                           
  1957                           ;MainCode.c: 393:     int state = (unsigned char) GIE;
  1958  000692  AED2               	btfss	16338,7,c	;volatile
  1959  000694  D002               	goto	u1110
  1960  000696  0E01               	movlw	1
  1961  000698  D001               	goto	u1120
  1962  00069A                     u1110:
  1963  00069A  0E00               	movlw	0
  1964  00069C                     u1120:
  1965  00069C  6E3D               	movwf	initI2C@state,c
  1966  00069E  6A3E               	clrf	initI2C@state+1,c
  1967                           
  1968                           ; BSR set to: 58
  1969                           ;MainCode.c: 394:     GIE = 0;
  1970  0006A0  9ED2               	bcf	16338,7,c	;volatile
  1971                           
  1972                           ;MainCode.c: 395:     PPSLOCK = 0x55;
  1973  0006A2  0E55               	movlw	85
  1974  0006A4  6FBF               	movwf	191,b	;volsfr
  1975                           
  1976                           ;MainCode.c: 396:     PPSLOCK = 0xAA;
  1977  0006A6  0EAA               	movlw	170
  1978  0006A8  6FBF               	movwf	191,b	;volsfr
  1979                           
  1980                           ; BSR set to: 58
  1981                           ;MainCode.c: 397:     PPSLOCKbits.PPSLOCKED = 0x00;
  1982  0006AA  91BF               	bcf	191,0,b	;volsfr
  1983                           
  1984                           ;MainCode.c: 398:     RC3PPS = 0x21;
  1985  0006AC  0E21               	movlw	33
  1986  0006AE  6F13               	movwf	19,b	;volatile
  1987                           
  1988                           ;MainCode.c: 399:     RC4PPS = 0x22;
  1989  0006B0  0E22               	movlw	34
  1990  0006B2  6F14               	movwf	20,b	;volatile
  1991                           
  1992                           ;MainCode.c: 400:     I2C1SDAPPSbits.I2C1SDAPPS = 0x14;
  1993  0006B4  51E4               	movf	228,w,b	;volatile
  1994  0006B6  0BE0               	andlw	-32
  1995  0006B8  0914               	iorlw	20
  1996  0006BA  6FE4               	movwf	228,b	;volatile
  1997                           
  1998                           ;MainCode.c: 401:     I2C1SCLPPSbits.I2C1SCLPPS = 0x13;
  1999  0006BC  51E3               	movf	227,w,b	;volatile
  2000  0006BE  0BE0               	andlw	-32
  2001  0006C0  0913               	iorlw	19
  2002  0006C2  6FE3               	movwf	227,b	;volatile
  2003                           
  2004                           ;MainCode.c: 402:     PPSLOCK = 0x55;
  2005  0006C4  0E55               	movlw	85
  2006  0006C6  6FBF               	movwf	191,b	;volsfr
  2007                           
  2008                           ;MainCode.c: 403:     PPSLOCK = 0xAA;
  2009  0006C8  0EAA               	movlw	170
  2010  0006CA  6FBF               	movwf	191,b	;volsfr
  2011                           
  2012                           ; BSR set to: 58
  2013                           ;MainCode.c: 404:     PPSLOCKbits.PPSLOCKED = 0x01;
  2014  0006CC  81BF               	bsf	191,0,b	;volsfr
  2015                           
  2016                           ; BSR set to: 58
  2017                           ;MainCode.c: 405:     GIE = state;
  2018  0006CE  A03D               	btfss	initI2C@state,0,c
  2019  0006D0  D002               	goto	u1130
  2020  0006D2  8ED2               	bsf	16338,7,c	;volatile
  2021  0006D4  D001               	goto	u1145
  2022  0006D6                     u1130:
  2023  0006D6  9ED2               	bcf	16338,7,c	;volatile
  2024  0006D8                     u1145:
  2025                           
  2026                           ;MainCode.c: 406:     I2C1CON0 = 0x04;
  2027  0006D8  0E04               	movlw	4
  2028  0006DA  013D               	movlb	61	; () banked
  2029  0006DC  6F73               	movwf	115,b	;volatile
  2030                           
  2031                           ;MainCode.c: 407:     I2C1CON1 = 0x80;
  2032  0006DE  0E80               	movlw	128
  2033  0006E0  6F74               	movwf	116,b	;volatile
  2034                           
  2035                           ;MainCode.c: 408:     I2C1CON2 = 0x24;
  2036  0006E2  0E24               	movlw	36
  2037  0006E4  6F75               	movwf	117,b	;volatile
  2038                           
  2039                           ;MainCode.c: 411:     I2C1CLK = 0x03;
  2040  0006E6  0E03               	movlw	3
  2041  0006E8  6F7B               	movwf	123,b	;volatile
  2042                           
  2043                           ;MainCode.c: 412:     I2C1PIR = 0;
  2044  0006EA  0E00               	movlw	0
  2045  0006EC  6F79               	movwf	121,b	;volatile
  2046                           
  2047                           ;MainCode.c: 413:     I2C1ERR = 0;
  2048  0006EE  0E00               	movlw	0
  2049  0006F0  6F76               	movwf	118,b	;volatile
  2050                           
  2051                           ; BSR set to: 61
  2052                           ;MainCode.c: 414:     I2C1CON0bits.EN = 1;
  2053  0006F2  8F73               	bsf	115,7,b	;volatile
  2054                           
  2055                           ; BSR set to: 61
  2056                           ;MainCode.c: 415:     I2C1ERRbits.NACKIE = 1;
  2057  0006F4  8176               	bsf	118,0,b	;volatile
  2058                           
  2059                           ; BSR set to: 61
  2060                           ;MainCode.c: 416:     I2C1PIEbits.ACKTIE = 1;
  2061  0006F6  8D7A               	bsf	122,6,b	;volatile
  2062                           
  2063                           ; BSR set to: 61
  2064  0006F8  0012               	return		;funcret
  2065  0006FA                     __end_of_initI2C:
  2066                           	opt callstack 0
  2067                           
  2068 ;; *************** function _initHCSR04 *****************
  2069 ;; Defined at:
  2070 ;;		line 458 in file "MainCode.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;		None
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;		None
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  1    wreg      void 
  2077 ;; Registers used:
  2078 ;;		wreg, status,2
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2084 ;;      Params:         0       0       0       0       0       0       0       0       0
  2085 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2086 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2087 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2088 ;;Total ram usage:        0 bytes
  2089 ;; Hardware stack levels used:    1
  2090 ;; Hardware stack levels required when called:    2
  2091 ;; This function calls:
  2092 ;;		Nothing
  2093 ;; This function is called by:
  2094 ;;		_main
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           	psect	text11
  2099  000B60                     __ptext11:
  2100                           	opt callstack 0
  2101  000B60                     _initHCSR04:
  2102                           	opt callstack 28
  2103                           
  2104                           ;MainCode.c: 459:     T1CLK = 0x01;
  2105                           
  2106                           ; BSR set to: 61
  2107                           ;incstack = 0
  2108  000B60  0E01               	movlw	1
  2109  000B62  6EB5               	movwf	16309,c	;volatile
  2110                           
  2111                           ;MainCode.c: 460:     T1CONbits.CKPS = 0b11;
  2112  000B64  0E30               	movlw	48
  2113  000B66  12B2               	iorwf	16306,f,c	;volatile
  2114                           
  2115                           ;MainCode.c: 461:     TMR1H = 0x00;
  2116  000B68  0E00               	movlw	0
  2117  000B6A  6EB1               	movwf	16305,c	;volatile
  2118                           
  2119                           ;MainCode.c: 462:     TMR1L = 0x00;
  2120  000B6C  0E00               	movlw	0
  2121  000B6E  6EB0               	movwf	16304,c	;volatile
  2122                           
  2123                           ;MainCode.c: 464:     ANSELCbits.ANSELC1 = 0;
  2124  000B70  013A               	movlb	58	; () banked
  2125  000B72  9360               	bcf	96,1,b	;volatile
  2126                           
  2127                           ; BSR set to: 58
  2128                           ;MainCode.c: 465:     ANSELCbits.ANSELC2 = 0;
  2129  000B74  9560               	bcf	96,2,b	;volatile
  2130                           
  2131                           ; BSR set to: 58
  2132                           ;MainCode.c: 466:     ANSELCbits.ANSELC7 = 0;
  2133  000B76  9F60               	bcf	96,7,b	;volatile
  2134                           
  2135                           ; BSR set to: 58
  2136                           ;MainCode.c: 467:     ANSELAbits.ANSELA1 = 0;
  2137  000B78  9340               	bcf	64,1,b	;volatile
  2138                           
  2139                           ; BSR set to: 58
  2140                           ;MainCode.c: 468:     ANSELAbits.ANSELA2 = 0;
  2141  000B7A  9540               	bcf	64,2,b	;volatile
  2142                           
  2143                           ; BSR set to: 58
  2144                           ;MainCode.c: 470:     ANSELBbits.ANSELB1 = 0;
  2145  000B7C  9350               	bcf	80,1,b	;volatile
  2146                           
  2147                           ; BSR set to: 58
  2148                           ;MainCode.c: 471:     ANSELBbits.ANSELB0 = 0;
  2149  000B7E  9150               	bcf	80,0,b	;volatile
  2150                           
  2151                           ; BSR set to: 58
  2152                           ;MainCode.c: 472:     ANSELAbits.ANSELA5 = 0;
  2153  000B80  9B40               	bcf	64,5,b	;volatile
  2154                           
  2155                           ; BSR set to: 58
  2156                           ;MainCode.c: 473:     ANSELBbits.ANSELB4 = 0;
  2157  000B82  9950               	bcf	80,4,b	;volatile
  2158                           
  2159                           ; BSR set to: 58
  2160                           ;MainCode.c: 474:     ANSELAbits.ANSELA4 = 0;
  2161  000B84  9940               	bcf	64,4,b	;volatile
  2162                           
  2163                           ; BSR set to: 58
  2164                           ;MainCode.c: 476:     TRISCbits.TRISC1 = 0;
  2165  000B86  92C4               	bcf	16324,1,c	;volatile
  2166                           
  2167                           ; BSR set to: 58
  2168                           ;MainCode.c: 477:     TRISCbits.TRISC2 = 0;
  2169  000B88  94C4               	bcf	16324,2,c	;volatile
  2170                           
  2171                           ; BSR set to: 58
  2172                           ;MainCode.c: 478:     TRISCbits.TRISC7 = 0;
  2173  000B8A  9EC4               	bcf	16324,7,c	;volatile
  2174                           
  2175                           ; BSR set to: 58
  2176                           ;MainCode.c: 479:     TRISAbits.TRISA1 = 0;
  2177  000B8C  92C2               	bcf	16322,1,c	;volatile
  2178                           
  2179                           ; BSR set to: 58
  2180                           ;MainCode.c: 480:     TRISAbits.TRISA2 = 0;
  2181  000B8E  94C2               	bcf	16322,2,c	;volatile
  2182                           
  2183                           ; BSR set to: 58
  2184                           ;MainCode.c: 482:     TRISBbits.TRISB1 = 1;
  2185  000B90  82C3               	bsf	16323,1,c	;volatile
  2186                           
  2187                           ; BSR set to: 58
  2188                           ;MainCode.c: 483:     TRISBbits.TRISB0 = 1;
  2189  000B92  80C3               	bsf	16323,0,c	;volatile
  2190                           
  2191                           ; BSR set to: 58
  2192                           ;MainCode.c: 484:     TRISAbits.TRISA5 = 1;
  2193  000B94  8AC2               	bsf	16322,5,c	;volatile
  2194                           
  2195                           ; BSR set to: 58
  2196                           ;MainCode.c: 485:     TRISBbits.TRISB4 = 1;
  2197  000B96  88C3               	bsf	16323,4,c	;volatile
  2198                           
  2199                           ; BSR set to: 58
  2200                           ;MainCode.c: 486:     TRISAbits.TRISA4 = 1;
  2201  000B98  88C2               	bsf	16322,4,c	;volatile
  2202                           
  2203                           ; BSR set to: 58
  2204                           ;MainCode.c: 488:     PORTCbits.RC1 = 0;
  2205  000B9A  92CC               	bcf	16332,1,c	;volatile
  2206                           
  2207                           ; BSR set to: 58
  2208                           ;MainCode.c: 489:     PORTCbits.RC2 = 0;
  2209  000B9C  94CC               	bcf	16332,2,c	;volatile
  2210                           
  2211                           ; BSR set to: 58
  2212                           ;MainCode.c: 490:     PORTCbits.RC7 = 0;
  2213  000B9E  9ECC               	bcf	16332,7,c	;volatile
  2214                           
  2215                           ; BSR set to: 58
  2216                           ;MainCode.c: 491:     PORTAbits.RA1 = 0;
  2217  000BA0  92CA               	bcf	16330,1,c	;volatile
  2218                           
  2219                           ; BSR set to: 58
  2220                           ;MainCode.c: 492:     PORTAbits.RA2 = 0;
  2221  000BA2  94CA               	bcf	16330,2,c	;volatile
  2222                           
  2223                           ; BSR set to: 58
  2224  000BA4  0012               	return		;funcret
  2225  000BA6                     __end_of_initHCSR04:
  2226                           	opt callstack 0
  2227                           
  2228 ;; *************** function _initCAN *****************
  2229 ;; Defined at:
  2230 ;;		line 657 in file "MainCode.c"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;		None
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;		None
  2235 ;; Return value:  Size  Location     Type
  2236 ;;                  1    wreg      void 
  2237 ;; Registers used:
  2238 ;;		wreg, status,2, status,0
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2244 ;;      Params:         0       0       0       0       0       0       0       0       0
  2245 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2246 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2247 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2248 ;;Total ram usage:        0 bytes
  2249 ;; Hardware stack levels used:    1
  2250 ;; Hardware stack levels required when called:    2
  2251 ;; This function calls:
  2252 ;;		Nothing
  2253 ;; This function is called by:
  2254 ;;		_main
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           	psect	text12
  2259  0006FA                     __ptext12:
  2260                           	opt callstack 0
  2261  0006FA                     _initCAN:
  2262                           	opt callstack 28
  2263                           
  2264                           ;MainCode.c: 662:     RB2PPS = 0b110011;
  2265                           
  2266                           ; BSR set to: 58
  2267                           ;incstack = 0
  2268  0006FA  0E33               	movlw	51
  2269  0006FC  013A               	movlb	58	; () banked
  2270  0006FE  6F0A               	movwf	10,b	;volatile
  2271                           
  2272                           ; BSR set to: 58
  2273                           ;MainCode.c: 664:     TRISBbits.TRISB2 = 0;
  2274  000700  94C3               	bcf	16323,2,c	;volatile
  2275                           
  2276                           ; BSR set to: 58
  2277                           ;MainCode.c: 665:     TRISBbits.TRISB3 = 1;
  2278  000702  86C3               	bsf	16323,3,c	;volatile
  2279                           
  2280                           ; BSR set to: 58
  2281                           ;MainCode.c: 667:     ANSELBbits.ANSELB2 = 0;
  2282  000704  9550               	bcf	80,2,b	;volatile
  2283                           
  2284                           ; BSR set to: 58
  2285                           ;MainCode.c: 668:     ANSELBbits.ANSELB3 = 0;
  2286  000706  9750               	bcf	80,3,b	;volatile
  2287                           
  2288                           ; BSR set to: 58
  2289                           ;MainCode.c: 670:     CANCONbits.REQOP2 = 1;
  2290  000708  8E8F               	bsf	16271,7,c	;volatile
  2291                           
  2292                           ; BSR set to: 58
  2293                           ;MainCode.c: 671:     CANCONbits.REQOP1 = 0;
  2294  00070A  9C8F               	bcf	16271,6,c	;volatile
  2295                           
  2296                           ; BSR set to: 58
  2297                           ;MainCode.c: 672:     CANCONbits.REQOP0 = 0;
  2298  00070C  9A8F               	bcf	16271,5,c	;volatile
  2299  00070E                     l2242:
  2300  00070E  388E               	swapf	16270,w,c	;volatile
  2301  000710  32E8               	rrcf	wreg,f,c
  2302  000712  0B07               	andlw	7
  2303  000714  0A04               	xorlw	4
  2304  000716  A4D8               	btfss	status,2,c
  2305  000718  D7FA               	goto	l2242
  2306                           
  2307                           ;MainCode.c: 676:     BRGCON1bits.BRP = 0b011111;
  2308  00071A  0137               	movlb	55	; () banked
  2309  00071C  5103               	movf	3,w,b	;volatile
  2310  00071E  0BC0               	andlw	-64
  2311  000720  091F               	iorlw	31
  2312  000722  6F03               	movwf	3,b	;volatile
  2313                           
  2314                           ;MainCode.c: 678:     RXF0SIDH = 0;
  2315  000724  0E00               	movlw	0
  2316  000726  6FA0               	movwf	160,b	;volatile
  2317                           
  2318                           ;MainCode.c: 679:     RXF0SIDLbits.SID = 1;
  2319  000728  51A1               	movf	161,w,b	;volatile
  2320  00072A  0B1F               	andlw	-225
  2321  00072C  0920               	iorlw	32
  2322  00072E  6FA1               	movwf	161,b	;volatile
  2323                           
  2324                           ; BSR set to: 55
  2325                           ;MainCode.c: 680:     RXF0SIDLbits.EXIDEN = 0;
  2326  000730  97A1               	bcf	161,3,b	;volatile
  2327                           
  2328                           ; BSR set to: 55
  2329                           ;MainCode.c: 681:     RXM0SIDH = 255;
  2330  000732  69B8               	setf	184,b	;volatile
  2331                           
  2332                           ;MainCode.c: 682:     RXM0SIDLbits.SID = 0b111;
  2333  000734  0EE0               	movlw	224
  2334  000736  13B9               	iorwf	185,f,b	;volatile
  2335                           
  2336                           ; BSR set to: 55
  2337                           ;MainCode.c: 683:     RXB0CONbits.RXM1 = 0;
  2338  000738  9C80               	bcf	16256,6,c	;volatile
  2339                           
  2340                           ; BSR set to: 55
  2341                           ;MainCode.c: 684:     RXB0CONbits.RXM0 = 1;
  2342  00073A  8A80               	bsf	16256,5,c	;volatile
  2343                           
  2344                           ; BSR set to: 55
  2345                           ;MainCode.c: 685:     RXB0CONbits.FILHIT0 = 0;
  2346  00073C  9080               	bcf	16256,0,c	;volatile
  2347                           
  2348                           ; BSR set to: 55
  2349                           ;MainCode.c: 687:     RXF1SIDH = 255;
  2350  00073E  69A4               	setf	164,b	;volatile
  2351                           
  2352                           ;MainCode.c: 688:     RXF1SIDLbits.SID = 0b111;
  2353  000740  0EE0               	movlw	224
  2354  000742  13A5               	iorwf	165,f,b	;volatile
  2355                           
  2356                           ; BSR set to: 55
  2357                           ;MainCode.c: 689:     RXF1SIDLbits.EXIDEN = 0;
  2358  000744  97A5               	bcf	165,3,b	;volatile
  2359                           
  2360                           ; BSR set to: 55
  2361                           ;MainCode.c: 690:     RXM1SIDH = 255;
  2362  000746  69BC               	setf	188,b	;volatile
  2363                           
  2364                           ;MainCode.c: 691:     RXM1SIDLbits.SID = 0b111;
  2365  000748  0EE0               	movlw	224
  2366  00074A  13BD               	iorwf	189,f,b	;volatile
  2367                           
  2368                           ; BSR set to: 55
  2369                           ;MainCode.c: 692:     RXB1CONbits.RXM1 = 0;
  2370  00074C  9DF0               	bcf	240,6,b	;volatile
  2371                           
  2372                           ; BSR set to: 55
  2373                           ;MainCode.c: 693:     RXB1CONbits.RXM0 = 1;
  2374  00074E  8BF0               	bsf	240,5,b	;volatile
  2375                           
  2376                           ; BSR set to: 55
  2377                           ;MainCode.c: 694:     RXB1CONbits.FILHIT0 = 0;
  2378  000750  91F0               	bcf	240,0,b	;volatile
  2379                           
  2380                           ;MainCode.c: 696:     CANCONbits.REQOP = 0b000;
  2381  000752  0E1F               	movlw	-225
  2382  000754  168F               	andwf	16271,f,c	;volatile
  2383  000756                     l2268:
  2384  000756  388E               	swapf	16270,w,c	;volatile
  2385  000758  32E8               	rrcf	wreg,f,c
  2386  00075A  0B07               	andlw	7
  2387  00075C  0900               	iorlw	0
  2388  00075E  B4D8               	btfsc	status,2,c
  2389  000760  0012               	return	
  2390  000762  D7F9               	goto	l2268
  2391  000764                     __end_of_initCAN:
  2392                           	opt callstack 0
  2393                           
  2394 ;; *************** function _initADC *****************
  2395 ;; Defined at:
  2396 ;;		line 419 in file "MainCode.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;		None
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;		None
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  1    wreg      void 
  2403 ;; Registers used:
  2404 ;;		wreg, status,2
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2410 ;;      Params:         0       0       0       0       0       0       0       0       0
  2411 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2412 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2413 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2414 ;;Total ram usage:        0 bytes
  2415 ;; Hardware stack levels used:    1
  2416 ;; Hardware stack levels required when called:    2
  2417 ;; This function calls:
  2418 ;;		Nothing
  2419 ;; This function is called by:
  2420 ;;		_main
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           	psect	text13
  2425  000C52                     __ptext13:
  2426                           	opt callstack 0
  2427  000C52                     _initADC:
  2428                           	opt callstack 28
  2429                           
  2430                           ;MainCode.c: 421:     TRISCbits.TRISC6 = 1;
  2431                           
  2432                           ;incstack = 0
  2433  000C52  8CC4               	bsf	16324,6,c	;volatile
  2434                           
  2435                           ;MainCode.c: 422:     TRISCbits.TRISC5 = 1;
  2436  000C54  8AC4               	bsf	16324,5,c	;volatile
  2437                           
  2438                           ;MainCode.c: 423:     ANSELCbits.ANSELC6 = 1;
  2439  000C56  013A               	movlb	58	; () banked
  2440  000C58  8D60               	bsf	96,6,b	;volatile
  2441                           
  2442                           ;MainCode.c: 424:     ANSELCbits.ANSELC5 = 1;
  2443  000C5A  8B60               	bsf	96,5,b	;volatile
  2444                           
  2445                           ;MainCode.c: 426:     ADCON0bits.ON = 1;
  2446  000C5C  013E               	movlb	62	; () banked
  2447  000C5E  8FF8               	bsf	248,7,b	;volatile
  2448                           
  2449                           ; BSR set to: 62
  2450                           ;MainCode.c: 427:     ADCLKbits.CS = 0b011100;
  2451  000C60  51FF               	movf	255,w,b	;volatile
  2452  000C62  0BC0               	andlw	-64
  2453  000C64  091C               	iorlw	28
  2454  000C66  6FFF               	movwf	255,b	;volatile
  2455                           
  2456                           ;MainCode.c: 429:     ADCON0bits.FM = 0;
  2457  000C68  0EF3               	movlw	-13
  2458  000C6A  17F8               	andwf	248,f,b	;volatile
  2459                           
  2460                           ;MainCode.c: 431:     ADREFbits.NREF = 0;
  2461  000C6C  0E0F               	movlw	-241
  2462  000C6E  17FD               	andwf	253,f,b	;volatile
  2463                           
  2464                           ;MainCode.c: 432:     ADREFbits.PREF = 00;
  2465  000C70  0EF0               	movlw	-16
  2466  000C72  17FD               	andwf	253,f,b	;volatile
  2467                           
  2468                           ;MainCode.c: 434:     ADPCHbits.ADPCH = 0b010110;
  2469  000C74  51F1               	movf	241,w,b	;volatile
  2470  000C76  0BC0               	andlw	-64
  2471  000C78  0916               	iorlw	22
  2472  000C7A  6FF1               	movwf	241,b	;volatile
  2473                           
  2474                           ; BSR set to: 62
  2475                           ;MainCode.c: 436:     ADCON0bits.ON = 1;
  2476  000C7C  8FF8               	bsf	248,7,b	;volatile
  2477                           
  2478                           ; BSR set to: 62
  2479  000C7E  0012               	return		;funcret
  2480  000C80                     __end_of_initADC:
  2481                           	opt callstack 0
  2482                           
  2483 ;; *************** function _getDistance5 *****************
  2484 ;; Defined at:
  2485 ;;		line 628 in file "MainCode.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;		None
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;  ticks           2   30[COMRAM] int 
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  2   26[COMRAM] int 
  2492 ;; Registers used:
  2493 ;;		wreg, status,2, status,0
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2499 ;;      Params:         2       0       0       0       0       0       0       0       0
  2500 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2501 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2502 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2503 ;;Total ram usage:        6 bytes
  2504 ;; Hardware stack levels used:    1
  2505 ;; Hardware stack levels required when called:    2
  2506 ;; This function calls:
  2507 ;;		Nothing
  2508 ;; This function is called by:
  2509 ;;		_main
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513                           	psect	text14
  2514  000962                     __ptext14:
  2515                           	opt callstack 0
  2516  000962                     _getDistance5:
  2517                           	opt callstack 28
  2518                           
  2519                           ;MainCode.c: 629:     int ticks = 0;
  2520                           
  2521                           ; BSR set to: 62
  2522                           ;incstack = 0
  2523  000962  0E00               	movlw	0
  2524  000964  6E42               	movwf	getDistance5@ticks+1,c
  2525  000966  0E00               	movlw	0
  2526  000968  6E41               	movwf	getDistance5@ticks,c
  2527                           
  2528                           ;MainCode.c: 630:     TMR1H = 0;
  2529  00096A  0E00               	movlw	0
  2530  00096C  6EB1               	movwf	16305,c	;volatile
  2531                           
  2532                           ;MainCode.c: 631:     TMR1L = 0;
  2533  00096E  0E00               	movlw	0
  2534  000970  6EB0               	movwf	16304,c	;volatile
  2535                           
  2536                           ;MainCode.c: 633:     while (PORTAbits.RA4 && (ticks < 15000))
  2537  000972  D00D               	goto	l2536
  2538  000974                     l2534:
  2539                           
  2540                           ;MainCode.c: 634:         ticks = (TMR1H << 8) | TMR1L;
  2541  000974  50B0               	movf	16304,w,c	;volatile
  2542  000976  006F FEC4  F03F    	movff	16305,??_getDistance5	;volatile
  2543  00097C  6A40               	clrf	(??_getDistance5+1)& (0+255),c
  2544  00097E  0060  F0FC  F040   	movff	??_getDistance5,??_getDistance5+1
  2545  000984  6A3F               	clrf	??_getDistance5,c
  2546  000986  103F               	iorwf	??_getDistance5,w,c
  2547  000988  6E41               	movwf	getDistance5@ticks,c
  2548  00098A  5040               	movf	??_getDistance5+1,w,c
  2549  00098C  6E42               	movwf	getDistance5@ticks+1,c
  2550  00098E                     l2536:
  2551                           
  2552                           ;MainCode.c: 633:     while (PORTAbits.RA4 && (ticks < 15000))
  2553  00098E  A8CA               	btfss	16330,4,c	;volatile
  2554  000990  D008               	goto	u1450
  2555  000992  BE42               	btfsc	getDistance5@ticks+1,7,c
  2556  000994  D7EF               	goto	l2534
  2557  000996  0E98               	movlw	152
  2558  000998  5C41               	subwf	getDistance5@ticks,w,c
  2559  00099A  0E3A               	movlw	58
  2560  00099C  5842               	subwfb	getDistance5@ticks+1,w,c
  2561  00099E  A0D8               	btfss	status,0,c
  2562  0009A0  D7E9               	goto	l2534
  2563  0009A2                     u1450:
  2564                           
  2565                           ;MainCode.c: 636:     T1CONbits.TMR1ON = 0;
  2566  0009A2  90B2               	bcf	16306,0,c	;volatile
  2567                           
  2568                           ;MainCode.c: 638:     if (ticks >= 15000)
  2569  0009A4  BE42               	btfsc	getDistance5@ticks+1,7,c
  2570  0009A6  D009               	goto	l402
  2571  0009A8  0E98               	movlw	152
  2572  0009AA  5C41               	subwf	getDistance5@ticks,w,c
  2573  0009AC  0E3A               	movlw	58
  2574  0009AE  5842               	subwfb	getDistance5@ticks+1,w,c
  2575  0009B0  A0D8               	btfss	status,0,c
  2576  0009B2  D003               	goto	l402
  2577                           
  2578                           ;MainCode.c: 639:         return -1;
  2579  0009B4  683D               	setf	?_getDistance5,c
  2580  0009B6  683E               	setf	?_getDistance5+1,c
  2581  0009B8  0012               	return	
  2582  0009BA                     l402:
  2583                           
  2584                           ;MainCode.c: 642:         return ticks;
  2585  0009BA  0060  F104  F03D   	movff	getDistance5@ticks,?_getDistance5
  2586  0009C0  0060  F108  F03E   	movff	getDistance5@ticks+1,?_getDistance5+1
  2587  0009C6  0012               	return		;funcret
  2588  0009C8                     __end_of_getDistance5:
  2589                           	opt callstack 0
  2590                           
  2591 ;; *************** function _getDistance4 *****************
  2592 ;; Defined at:
  2593 ;;		line 611 in file "MainCode.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;		None
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;  ticks           2   30[COMRAM] int 
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  2   26[COMRAM] int 
  2600 ;; Registers used:
  2601 ;;		wreg, status,2, status,0
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2607 ;;      Params:         2       0       0       0       0       0       0       0       0
  2608 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2609 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2610 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2611 ;;Total ram usage:        6 bytes
  2612 ;; Hardware stack levels used:    1
  2613 ;; Hardware stack levels required when called:    2
  2614 ;; This function calls:
  2615 ;;		Nothing
  2616 ;; This function is called by:
  2617 ;;		_main
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           	psect	text15
  2622  0009C8                     __ptext15:
  2623                           	opt callstack 0
  2624  0009C8                     _getDistance4:
  2625                           	opt callstack 28
  2626                           
  2627                           ;MainCode.c: 612:     int ticks = 0;
  2628                           
  2629                           ;incstack = 0
  2630  0009C8  0E00               	movlw	0
  2631  0009CA  6E42               	movwf	getDistance4@ticks+1,c
  2632  0009CC  0E00               	movlw	0
  2633  0009CE  6E41               	movwf	getDistance4@ticks,c
  2634                           
  2635                           ;MainCode.c: 613:     TMR1H = 0;
  2636  0009D0  0E00               	movlw	0
  2637  0009D2  6EB1               	movwf	16305,c	;volatile
  2638                           
  2639                           ;MainCode.c: 614:     TMR1L = 0;
  2640  0009D4  0E00               	movlw	0
  2641  0009D6  6EB0               	movwf	16304,c	;volatile
  2642                           
  2643                           ;MainCode.c: 616:     while (PORTBbits.RB4 && (ticks < 15000))
  2644  0009D8  D00D               	goto	l2500
  2645  0009DA                     l2498:
  2646                           
  2647                           ;MainCode.c: 617:         ticks = (TMR1H << 8) | TMR1L;
  2648  0009DA  50B0               	movf	16304,w,c	;volatile
  2649  0009DC  006F FEC4  F03F    	movff	16305,??_getDistance4	;volatile
  2650  0009E2  6A40               	clrf	(??_getDistance4+1)& (0+255),c
  2651  0009E4  0060  F0FC  F040   	movff	??_getDistance4,??_getDistance4+1
  2652  0009EA  6A3F               	clrf	??_getDistance4,c
  2653  0009EC  103F               	iorwf	??_getDistance4,w,c
  2654  0009EE  6E41               	movwf	getDistance4@ticks,c
  2655  0009F0  5040               	movf	??_getDistance4+1,w,c
  2656  0009F2  6E42               	movwf	getDistance4@ticks+1,c
  2657  0009F4                     l2500:
  2658                           
  2659                           ;MainCode.c: 616:     while (PORTBbits.RB4 && (ticks < 15000))
  2660  0009F4  A8CB               	btfss	16331,4,c	;volatile
  2661  0009F6  D008               	goto	u1390
  2662  0009F8  BE42               	btfsc	getDistance4@ticks+1,7,c
  2663  0009FA  D7EF               	goto	l2498
  2664  0009FC  0E98               	movlw	152
  2665  0009FE  5C41               	subwf	getDistance4@ticks,w,c
  2666  000A00  0E3A               	movlw	58
  2667  000A02  5842               	subwfb	getDistance4@ticks+1,w,c
  2668  000A04  A0D8               	btfss	status,0,c
  2669  000A06  D7E9               	goto	l2498
  2670  000A08                     u1390:
  2671                           
  2672                           ;MainCode.c: 619:     T1CONbits.TMR1ON = 0;
  2673  000A08  90B2               	bcf	16306,0,c	;volatile
  2674                           
  2675                           ;MainCode.c: 621:     if (ticks >= 15000)
  2676  000A0A  BE42               	btfsc	getDistance4@ticks+1,7,c
  2677  000A0C  D009               	goto	l392
  2678  000A0E  0E98               	movlw	152
  2679  000A10  5C41               	subwf	getDistance4@ticks,w,c
  2680  000A12  0E3A               	movlw	58
  2681  000A14  5842               	subwfb	getDistance4@ticks+1,w,c
  2682  000A16  A0D8               	btfss	status,0,c
  2683  000A18  D003               	goto	l392
  2684                           
  2685                           ;MainCode.c: 622:         return -1;
  2686  000A1A  683D               	setf	?_getDistance4,c
  2687  000A1C  683E               	setf	?_getDistance4+1,c
  2688  000A1E  0012               	return	
  2689  000A20                     l392:
  2690                           
  2691                           ;MainCode.c: 625:         return ticks;
  2692  000A20  0060  F104  F03D   	movff	getDistance4@ticks,?_getDistance4
  2693  000A26  0060  F108  F03E   	movff	getDistance4@ticks+1,?_getDistance4+1
  2694  000A2C  0012               	return		;funcret
  2695  000A2E                     __end_of_getDistance4:
  2696                           	opt callstack 0
  2697                           
  2698 ;; *************** function _getDistance3 *****************
  2699 ;; Defined at:
  2700 ;;		line 594 in file "MainCode.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;		None
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;  ticks           2   30[COMRAM] int 
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  2   26[COMRAM] int 
  2707 ;; Registers used:
  2708 ;;		wreg, status,2, status,0
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2714 ;;      Params:         2       0       0       0       0       0       0       0       0
  2715 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2716 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2717 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2718 ;;Total ram usage:        6 bytes
  2719 ;; Hardware stack levels used:    1
  2720 ;; Hardware stack levels required when called:    2
  2721 ;; This function calls:
  2722 ;;		Nothing
  2723 ;; This function is called by:
  2724 ;;		_main
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           	psect	text16
  2729  000A2E                     __ptext16:
  2730                           	opt callstack 0
  2731  000A2E                     _getDistance3:
  2732                           	opt callstack 28
  2733                           
  2734                           ;MainCode.c: 595:     int ticks = 0;
  2735                           
  2736                           ;incstack = 0
  2737  000A2E  0E00               	movlw	0
  2738  000A30  6E42               	movwf	getDistance3@ticks+1,c
  2739  000A32  0E00               	movlw	0
  2740  000A34  6E41               	movwf	getDistance3@ticks,c
  2741                           
  2742                           ;MainCode.c: 596:     TMR1H = 0;
  2743  000A36  0E00               	movlw	0
  2744  000A38  6EB1               	movwf	16305,c	;volatile
  2745                           
  2746                           ;MainCode.c: 597:     TMR1L = 0;
  2747  000A3A  0E00               	movlw	0
  2748  000A3C  6EB0               	movwf	16304,c	;volatile
  2749                           
  2750                           ;MainCode.c: 599:     while (PORTAbits.RA5 && (ticks < 15000))
  2751  000A3E  D00D               	goto	l2464
  2752  000A40                     l2462:
  2753                           
  2754                           ;MainCode.c: 600:         ticks = (TMR1H << 8) | TMR1L;
  2755  000A40  50B0               	movf	16304,w,c	;volatile
  2756  000A42  006F FEC4  F03F    	movff	16305,??_getDistance3	;volatile
  2757  000A48  6A40               	clrf	(??_getDistance3+1)& (0+255),c
  2758  000A4A  0060  F0FC  F040   	movff	??_getDistance3,??_getDistance3+1
  2759  000A50  6A3F               	clrf	??_getDistance3,c
  2760  000A52  103F               	iorwf	??_getDistance3,w,c
  2761  000A54  6E41               	movwf	getDistance3@ticks,c
  2762  000A56  5040               	movf	??_getDistance3+1,w,c
  2763  000A58  6E42               	movwf	getDistance3@ticks+1,c
  2764  000A5A                     l2464:
  2765                           
  2766                           ;MainCode.c: 599:     while (PORTAbits.RA5 && (ticks < 15000))
  2767  000A5A  AACA               	btfss	16330,5,c	;volatile
  2768  000A5C  D008               	goto	u1330
  2769  000A5E  BE42               	btfsc	getDistance3@ticks+1,7,c
  2770  000A60  D7EF               	goto	l2462
  2771  000A62  0E98               	movlw	152
  2772  000A64  5C41               	subwf	getDistance3@ticks,w,c
  2773  000A66  0E3A               	movlw	58
  2774  000A68  5842               	subwfb	getDistance3@ticks+1,w,c
  2775  000A6A  A0D8               	btfss	status,0,c
  2776  000A6C  D7E9               	goto	l2462
  2777  000A6E                     u1330:
  2778                           
  2779                           ;MainCode.c: 602:     T1CONbits.TMR1ON = 0;
  2780  000A6E  90B2               	bcf	16306,0,c	;volatile
  2781                           
  2782                           ;MainCode.c: 604:     if (ticks >= 15000)
  2783  000A70  BE42               	btfsc	getDistance3@ticks+1,7,c
  2784  000A72  D009               	goto	l382
  2785  000A74  0E98               	movlw	152
  2786  000A76  5C41               	subwf	getDistance3@ticks,w,c
  2787  000A78  0E3A               	movlw	58
  2788  000A7A  5842               	subwfb	getDistance3@ticks+1,w,c
  2789  000A7C  A0D8               	btfss	status,0,c
  2790  000A7E  D003               	goto	l382
  2791                           
  2792                           ;MainCode.c: 605:         return -1;
  2793  000A80  683D               	setf	?_getDistance3,c
  2794  000A82  683E               	setf	?_getDistance3+1,c
  2795  000A84  0012               	return	
  2796  000A86                     l382:
  2797                           
  2798                           ;MainCode.c: 608:         return ticks;
  2799  000A86  0060  F104  F03D   	movff	getDistance3@ticks,?_getDistance3
  2800  000A8C  0060  F108  F03E   	movff	getDistance3@ticks+1,?_getDistance3+1
  2801  000A92  0012               	return		;funcret
  2802  000A94                     __end_of_getDistance3:
  2803                           	opt callstack 0
  2804                           
  2805 ;; *************** function _getDistance2 *****************
  2806 ;; Defined at:
  2807 ;;		line 577 in file "MainCode.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;		None
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;  ticks           2   30[COMRAM] int 
  2812 ;; Return value:  Size  Location     Type
  2813 ;;                  2   26[COMRAM] int 
  2814 ;; Registers used:
  2815 ;;		wreg, status,2, status,0
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2821 ;;      Params:         2       0       0       0       0       0       0       0       0
  2822 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2823 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2824 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2825 ;;Total ram usage:        6 bytes
  2826 ;; Hardware stack levels used:    1
  2827 ;; Hardware stack levels required when called:    2
  2828 ;; This function calls:
  2829 ;;		Nothing
  2830 ;; This function is called by:
  2831 ;;		_main
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           	psect	text17
  2836  000A94                     __ptext17:
  2837                           	opt callstack 0
  2838  000A94                     _getDistance2:
  2839                           	opt callstack 28
  2840                           
  2841                           ;MainCode.c: 578:     int ticks = 0;
  2842                           
  2843                           ;incstack = 0
  2844  000A94  0E00               	movlw	0
  2845  000A96  6E42               	movwf	getDistance2@ticks+1,c
  2846  000A98  0E00               	movlw	0
  2847  000A9A  6E41               	movwf	getDistance2@ticks,c
  2848                           
  2849                           ;MainCode.c: 579:     TMR1H = 0;
  2850  000A9C  0E00               	movlw	0
  2851  000A9E  6EB1               	movwf	16305,c	;volatile
  2852                           
  2853                           ;MainCode.c: 580:     TMR1L = 0;
  2854  000AA0  0E00               	movlw	0
  2855  000AA2  6EB0               	movwf	16304,c	;volatile
  2856                           
  2857                           ;MainCode.c: 582:     while (PORTBbits.RB0 && (ticks < 15000))
  2858  000AA4  D00D               	goto	l2428
  2859  000AA6                     l2426:
  2860                           
  2861                           ;MainCode.c: 583:         ticks = (TMR1H << 8) | TMR1L;
  2862  000AA6  50B0               	movf	16304,w,c	;volatile
  2863  000AA8  006F FEC4  F03F    	movff	16305,??_getDistance2	;volatile
  2864  000AAE  6A40               	clrf	(??_getDistance2+1)& (0+255),c
  2865  000AB0  0060  F0FC  F040   	movff	??_getDistance2,??_getDistance2+1
  2866  000AB6  6A3F               	clrf	??_getDistance2,c
  2867  000AB8  103F               	iorwf	??_getDistance2,w,c
  2868  000ABA  6E41               	movwf	getDistance2@ticks,c
  2869  000ABC  5040               	movf	??_getDistance2+1,w,c
  2870  000ABE  6E42               	movwf	getDistance2@ticks+1,c
  2871  000AC0                     l2428:
  2872                           
  2873                           ;MainCode.c: 582:     while (PORTBbits.RB0 && (ticks < 15000))
  2874  000AC0  A0CB               	btfss	16331,0,c	;volatile
  2875  000AC2  D008               	goto	u1270
  2876  000AC4  BE42               	btfsc	getDistance2@ticks+1,7,c
  2877  000AC6  D7EF               	goto	l2426
  2878  000AC8  0E98               	movlw	152
  2879  000ACA  5C41               	subwf	getDistance2@ticks,w,c
  2880  000ACC  0E3A               	movlw	58
  2881  000ACE  5842               	subwfb	getDistance2@ticks+1,w,c
  2882  000AD0  A0D8               	btfss	status,0,c
  2883  000AD2  D7E9               	goto	l2426
  2884  000AD4                     u1270:
  2885                           
  2886                           ;MainCode.c: 585:     T1CONbits.TMR1ON = 0;
  2887  000AD4  90B2               	bcf	16306,0,c	;volatile
  2888                           
  2889                           ;MainCode.c: 587:     if (ticks >= 15000)
  2890  000AD6  BE42               	btfsc	getDistance2@ticks+1,7,c
  2891  000AD8  D009               	goto	l372
  2892  000ADA  0E98               	movlw	152
  2893  000ADC  5C41               	subwf	getDistance2@ticks,w,c
  2894  000ADE  0E3A               	movlw	58
  2895  000AE0  5842               	subwfb	getDistance2@ticks+1,w,c
  2896  000AE2  A0D8               	btfss	status,0,c
  2897  000AE4  D003               	goto	l372
  2898                           
  2899                           ;MainCode.c: 588:         return -1;
  2900  000AE6  683D               	setf	?_getDistance2,c
  2901  000AE8  683E               	setf	?_getDistance2+1,c
  2902  000AEA  0012               	return	
  2903  000AEC                     l372:
  2904                           
  2905                           ;MainCode.c: 591:         return ticks;
  2906  000AEC  0060  F104  F03D   	movff	getDistance2@ticks,?_getDistance2
  2907  000AF2  0060  F108  F03E   	movff	getDistance2@ticks+1,?_getDistance2+1
  2908  000AF8  0012               	return		;funcret
  2909  000AFA                     __end_of_getDistance2:
  2910                           	opt callstack 0
  2911                           
  2912 ;; *************** function _getDistance1 *****************
  2913 ;; Defined at:
  2914 ;;		line 560 in file "MainCode.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;		None
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;  ticks           2   30[COMRAM] int 
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  2   26[COMRAM] int 
  2921 ;; Registers used:
  2922 ;;		wreg, status,2, status,0
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2928 ;;      Params:         2       0       0       0       0       0       0       0       0
  2929 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2930 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2931 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2932 ;;Total ram usage:        6 bytes
  2933 ;; Hardware stack levels used:    1
  2934 ;; Hardware stack levels required when called:    2
  2935 ;; This function calls:
  2936 ;;		Nothing
  2937 ;; This function is called by:
  2938 ;;		_main
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           	psect	text18
  2943  000AFA                     __ptext18:
  2944                           	opt callstack 0
  2945  000AFA                     _getDistance1:
  2946                           	opt callstack 28
  2947                           
  2948                           ;MainCode.c: 561:     int ticks = 0;
  2949                           
  2950                           ;incstack = 0
  2951  000AFA  0E00               	movlw	0
  2952  000AFC  6E42               	movwf	getDistance1@ticks+1,c
  2953  000AFE  0E00               	movlw	0
  2954  000B00  6E41               	movwf	getDistance1@ticks,c
  2955                           
  2956                           ;MainCode.c: 562:     TMR1H = 0;
  2957  000B02  0E00               	movlw	0
  2958  000B04  6EB1               	movwf	16305,c	;volatile
  2959                           
  2960                           ;MainCode.c: 563:     TMR1L = 0;
  2961  000B06  0E00               	movlw	0
  2962  000B08  6EB0               	movwf	16304,c	;volatile
  2963                           
  2964                           ;MainCode.c: 565:     while (PORTBbits.RB1 && (ticks < 15000))
  2965  000B0A  D00D               	goto	l2392
  2966  000B0C                     l2390:
  2967                           
  2968                           ;MainCode.c: 566:         ticks = (TMR1H << 8) | TMR1L;
  2969  000B0C  50B0               	movf	16304,w,c	;volatile
  2970  000B0E  006F FEC4  F03F    	movff	16305,??_getDistance1	;volatile
  2971  000B14  6A40               	clrf	(??_getDistance1+1)& (0+255),c
  2972  000B16  0060  F0FC  F040   	movff	??_getDistance1,??_getDistance1+1
  2973  000B1C  6A3F               	clrf	??_getDistance1,c
  2974  000B1E  103F               	iorwf	??_getDistance1,w,c
  2975  000B20  6E41               	movwf	getDistance1@ticks,c
  2976  000B22  5040               	movf	??_getDistance1+1,w,c
  2977  000B24  6E42               	movwf	getDistance1@ticks+1,c
  2978  000B26                     l2392:
  2979                           
  2980                           ;MainCode.c: 565:     while (PORTBbits.RB1 && (ticks < 15000))
  2981  000B26  A2CB               	btfss	16331,1,c	;volatile
  2982  000B28  D008               	goto	u1210
  2983  000B2A  BE42               	btfsc	getDistance1@ticks+1,7,c
  2984  000B2C  D7EF               	goto	l2390
  2985  000B2E  0E98               	movlw	152
  2986  000B30  5C41               	subwf	getDistance1@ticks,w,c
  2987  000B32  0E3A               	movlw	58
  2988  000B34  5842               	subwfb	getDistance1@ticks+1,w,c
  2989  000B36  A0D8               	btfss	status,0,c
  2990  000B38  D7E9               	goto	l2390
  2991  000B3A                     u1210:
  2992                           
  2993                           ;MainCode.c: 568:     T1CONbits.TMR1ON = 0;
  2994  000B3A  90B2               	bcf	16306,0,c	;volatile
  2995                           
  2996                           ;MainCode.c: 570:     if (ticks >= 15000)
  2997  000B3C  BE42               	btfsc	getDistance1@ticks+1,7,c
  2998  000B3E  D009               	goto	l362
  2999  000B40  0E98               	movlw	152
  3000  000B42  5C41               	subwf	getDistance1@ticks,w,c
  3001  000B44  0E3A               	movlw	58
  3002  000B46  5842               	subwfb	getDistance1@ticks+1,w,c
  3003  000B48  A0D8               	btfss	status,0,c
  3004  000B4A  D003               	goto	l362
  3005                           
  3006                           ;MainCode.c: 571:         return -1;
  3007  000B4C  683D               	setf	?_getDistance1,c
  3008  000B4E  683E               	setf	?_getDistance1+1,c
  3009  000B50  0012               	return	
  3010  000B52                     l362:
  3011                           
  3012                           ;MainCode.c: 574:         return ticks;
  3013  000B52  0060  F104  F03D   	movff	getDistance1@ticks,?_getDistance1
  3014  000B58  0060  F108  F03E   	movff	getDistance1@ticks+1,?_getDistance1+1
  3015  000B5E  0012               	return		;funcret
  3016  000B60                     __end_of_getDistance1:
  3017                           	opt callstack 0
  3018                           
  3019 ;; *************** function _adcInt *****************
  3020 ;; Defined at:
  3021 ;;		line 217 in file "MainCode.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;		None
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;		None
  3026 ;; Return value:  Size  Location     Type
  3027 ;;                  1    wreg      void 
  3028 ;; Registers used:
  3029 ;;		None
  3030 ;; Tracked objects:
  3031 ;;		On entry : 0/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3035 ;;      Params:         0       0       0       0       0       0       0       0       0
  3036 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3037 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3038 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3039 ;;Total ram usage:        0 bytes
  3040 ;; Hardware stack levels used:    1
  3041 ;; This function calls:
  3042 ;;		Nothing
  3043 ;; This function is called by:
  3044 ;;		Interrupt level 2
  3045 ;; This function uses a non-reentrant model
  3046 ;;
  3047                           
  3048                           	psect	text19
  3049  000CA4                     __ptext19:
  3050                           	opt callstack 0
  3051  000CA4                     _adcInt:
  3052                           	opt callstack 29
  3053                           
  3054                           ;incstack = 0
  3055  000CA4  0011               	retfie		f
  3056  000CA6                     __end_of_adcInt:
  3057                           	opt callstack 0
  3058                           
  3059 ;; *************** function _canRecInt *****************
  3060 ;; Defined at:
  3061 ;;		line 223 in file "MainCode.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;		None
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;  message        16   10[COMRAM] int [8]
  3066 ;; Return value:  Size  Location     Type
  3067 ;;                  1    wreg      void 
  3068 ;; Registers used:
  3069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3070 ;; Tracked objects:
  3071 ;;		On entry : 0/0
  3072 ;;		On exit  : 0/0
  3073 ;;		Unchanged: 0/0
  3074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3075 ;;      Params:         0       0       0       0       0       0       0       0       0
  3076 ;;      Locals:        16       0       0       0       0       0       0       0       0
  3077 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3078 ;;      Totals:        18       0       0       0       0       0       0       0       0
  3079 ;;Total ram usage:       18 bytes
  3080 ;; Hardware stack levels used:    1
  3081 ;; Hardware stack levels required when called:    1
  3082 ;; This function calls:
  3083 ;;		_sendCANmessage
  3084 ;; This function is called by:
  3085 ;;		Interrupt level 2
  3086 ;; This function uses a non-reentrant model
  3087 ;;
  3088                           
  3089                           	psect	text20
  3090  0002C4                     __ptext20:
  3091                           	opt callstack 0
  3092  0002C4                     _canRecInt:
  3093                           	opt callstack 28
  3094                           
  3095                           ;incstack = 0
  3096  0002C4  BE80               	btfsc	16256,7,c	;volatile
  3097  0002C6  D0BC               	goto	i2l2200
  3098  0002C8  D0DF               	goto	i2l258
  3099  0002CA                     i2l2158:
  3100  0002CA  0E00               	movlw	0
  3101  0002CC  6E2E               	movwf	canRecInt@message+1,c
  3102  0002CE  0E01               	movlw	1
  3103  0002D0  6E2D               	movwf	canRecInt@message,c
  3104  0002D2  0E00               	movlw	0
  3105  0002D4  6E24               	movwf	sendCANmessage@id+1,c
  3106  0002D6  0E00               	movlw	0
  3107  0002D8  6E23               	movwf	sendCANmessage@id,c
  3108  0002DA  0E2D               	movlw	low canRecInt@message
  3109  0002DC  6E25               	movwf	sendCANmessage@message,c
  3110  0002DE  0E00               	movlw	high canRecInt@message
  3111  0002E0  6E26               	movwf	sendCANmessage@message+1,c
  3112  0002E2  0E00               	movlw	0
  3113  0002E4  6E28               	movwf	sendCANmessage@length+1,c
  3114  0002E6  0E01               	movlw	1
  3115  0002E8  6E27               	movwf	sendCANmessage@length,c
  3116  0002EA  ECCF  F002         	call	_sendCANmessage	;wreg free
  3117  0002EE  D0CB               	goto	i2l261
  3118  0002F0                     i2l262:
  3119  0002F0  0060  F07C  F02D   	movff	_ADCvalueHigh0,canRecInt@message
  3120  0002F6  0060  F080  F02E   	movff	_ADCvalueHigh0+1,canRecInt@message+1
  3121  0002FC  0060  F074  F02F   	movff	_ADCvalueLow0,canRecInt@message+2
  3122  000302  0060  F078  F030   	movff	_ADCvalueLow0+1,canRecInt@message+3
  3123  000308                     i2l2162:
  3124  000308  0E00               	movlw	0
  3125  00030A  6E24               	movwf	sendCANmessage@id+1,c
  3126  00030C  0E00               	movlw	0
  3127  00030E  6E23               	movwf	sendCANmessage@id,c
  3128  000310  0E2D               	movlw	low canRecInt@message
  3129  000312  6E25               	movwf	sendCANmessage@message,c
  3130  000314  0E00               	movlw	high canRecInt@message
  3131  000316  6E26               	movwf	sendCANmessage@message+1,c
  3132  000318  0E00               	movlw	0
  3133  00031A  6E28               	movwf	sendCANmessage@length+1,c
  3134  00031C  0E02               	movlw	2
  3135  00031E  6E27               	movwf	sendCANmessage@length,c
  3136  000320  ECCF  F002         	call	_sendCANmessage	;wreg free
  3137  000324  D0B0               	goto	i2l261
  3138  000326                     i2l263:
  3139  000326  0060  F06C  F02D   	movff	_ADCvalueHigh1,canRecInt@message
  3140  00032C  0060  F070  F02E   	movff	_ADCvalueHigh1+1,canRecInt@message+1
  3141  000332  0060  F064  F02F   	movff	_ADCvalueLow1,canRecInt@message+2
  3142  000338  0060  F068  F030   	movff	_ADCvalueLow1+1,canRecInt@message+3
  3143  00033E  D7E4               	goto	i2l2162
  3144  000340                     i2l2166:
  3145  000340  0060  F060  F02B   	movff	_distance1+1,??_canRecInt
  3146  000346  6A2C               	clrf	(??_canRecInt+1)& (0+255),c
  3147  000348  BE2B               	btfsc	??_canRecInt& (0+255),7,c
  3148  00034A  682C               	setf	(??_canRecInt+1)& (0+255),c
  3149  00034C  502B               	movf	??_canRecInt,w,c
  3150  00034E  6E2D               	movwf	canRecInt@message,c
  3151  000350  6A2E               	clrf	canRecInt@message+1,c
  3152  000352  5017               	movf	_distance1,w,c
  3153  000354  6E2F               	movwf	canRecInt@message+2,c
  3154  000356  6A30               	clrf	canRecInt@message+3,c
  3155  000358  0060  F034  F031   	movff	_valid_distance1,canRecInt@message+4
  3156  00035E  0060  F038  F032   	movff	_valid_distance1+1,canRecInt@message+5
  3157  000364                     i2l2170:
  3158  000364  0E00               	movlw	0
  3159  000366  6E24               	movwf	sendCANmessage@id+1,c
  3160  000368  0E00               	movlw	0
  3161  00036A  6E23               	movwf	sendCANmessage@id,c
  3162  00036C  0E2D               	movlw	low canRecInt@message
  3163  00036E  6E25               	movwf	sendCANmessage@message,c
  3164  000370  0E00               	movlw	high canRecInt@message
  3165  000372  6E26               	movwf	sendCANmessage@message+1,c
  3166  000374  0E00               	movlw	0
  3167  000376  6E28               	movwf	sendCANmessage@length+1,c
  3168  000378  0E03               	movlw	3
  3169  00037A  6E27               	movwf	sendCANmessage@length,c
  3170  00037C  ECCF  F002         	call	_sendCANmessage	;wreg free
  3171  000380  D082               	goto	i2l261
  3172  000382                     i2l2172:
  3173  000382  0060  F058  F02B   	movff	_distance2+1,??_canRecInt
  3174  000388  6A2C               	clrf	(??_canRecInt+1)& (0+255),c
  3175  00038A  BE2B               	btfsc	??_canRecInt& (0+255),7,c
  3176  00038C  682C               	setf	(??_canRecInt+1)& (0+255),c
  3177  00038E  502B               	movf	??_canRecInt,w,c
  3178  000390  6E2D               	movwf	canRecInt@message,c
  3179  000392  6A2E               	clrf	canRecInt@message+1,c
  3180  000394  5015               	movf	_distance2,w,c
  3181  000396  6E2F               	movwf	canRecInt@message+2,c
  3182  000398  6A30               	clrf	canRecInt@message+3,c
  3183  00039A  0060  F02C  F031   	movff	_valid_distance2,canRecInt@message+4
  3184  0003A0  0060  F030  F032   	movff	_valid_distance2+1,canRecInt@message+5
  3185  0003A6  D7DE               	goto	i2l2170
  3186  0003A8                     i2l2178:
  3187  0003A8  0060  F050  F02B   	movff	_distance3+1,??_canRecInt
  3188  0003AE  6A2C               	clrf	(??_canRecInt+1)& (0+255),c
  3189  0003B0  BE2B               	btfsc	??_canRecInt& (0+255),7,c
  3190  0003B2  682C               	setf	(??_canRecInt+1)& (0+255),c
  3191  0003B4  502B               	movf	??_canRecInt,w,c
  3192  0003B6  6E2D               	movwf	canRecInt@message,c
  3193  0003B8  6A2E               	clrf	canRecInt@message+1,c
  3194  0003BA  5013               	movf	_distance3,w,c
  3195  0003BC  6E2F               	movwf	canRecInt@message+2,c
  3196  0003BE  6A30               	clrf	canRecInt@message+3,c
  3197  0003C0  0060  F024  F031   	movff	_valid_distance3,canRecInt@message+4
  3198  0003C6  0060  F028  F032   	movff	_valid_distance3+1,canRecInt@message+5
  3199  0003CC  D7CB               	goto	i2l2170
  3200  0003CE                     i2l2184:
  3201  0003CE  0060  F048  F02B   	movff	_distance4+1,??_canRecInt
  3202  0003D4  6A2C               	clrf	(??_canRecInt+1)& (0+255),c
  3203  0003D6  BE2B               	btfsc	??_canRecInt& (0+255),7,c
  3204  0003D8  682C               	setf	(??_canRecInt+1)& (0+255),c
  3205  0003DA  502B               	movf	??_canRecInt,w,c
  3206  0003DC  6E2D               	movwf	canRecInt@message,c
  3207  0003DE  6A2E               	clrf	canRecInt@message+1,c
  3208  0003E0  5011               	movf	_distance4,w,c
  3209  0003E2  6E2F               	movwf	canRecInt@message+2,c
  3210  0003E4  6A30               	clrf	canRecInt@message+3,c
  3211  0003E6  0060  F01C  F031   	movff	_valid_distance4,canRecInt@message+4
  3212  0003EC  0060  F020  F032   	movff	_valid_distance4+1,canRecInt@message+5
  3213  0003F2  D7B8               	goto	i2l2170
  3214  0003F4                     i2l2190:
  3215  0003F4  0060  F040  F02B   	movff	_distance5+1,??_canRecInt
  3216  0003FA  6A2C               	clrf	(??_canRecInt+1)& (0+255),c
  3217  0003FC  BE2B               	btfsc	??_canRecInt& (0+255),7,c
  3218  0003FE  682C               	setf	(??_canRecInt+1)& (0+255),c
  3219  000400  502B               	movf	??_canRecInt,w,c
  3220  000402  6E2D               	movwf	canRecInt@message,c
  3221  000404  6A2E               	clrf	canRecInt@message+1,c
  3222  000406  500F               	movf	_distance5,w,c
  3223  000408  6E2F               	movwf	canRecInt@message+2,c
  3224  00040A  6A30               	clrf	canRecInt@message+3,c
  3225  00040C  0060  F014  F031   	movff	_valid_distance5,canRecInt@message+4
  3226  000412  0060  F018  F032   	movff	_valid_distance5+1,canRecInt@message+5
  3227  000418  D7A5               	goto	i2l2170
  3228  00041A                     i2l269:
  3229  00041A  0060  F00C  F02D   	movff	_perimeter,canRecInt@message
  3230  000420  0060  F010  F02E   	movff	_perimeter+1,canRecInt@message+1
  3231  000426  0060  F004  F02F   	movff	_sign_perimeter,canRecInt@message+2
  3232  00042C  0060  F008  F030   	movff	_sign_perimeter+1,canRecInt@message+3
  3233  000432  0060  F084  F031   	movff	_con_perimeter,canRecInt@message+4
  3234  000438  0060  F088  F032   	movff	_con_perimeter+1,canRecInt@message+5
  3235  00043E  D792               	goto	i2l2170
  3236  000440                     i2l2200:
  3237  000440  5086               	movf	16262,w,c	;volatile
  3238  000442  6E2B               	movwf	??_canRecInt& (0+255),c
  3239  000444  6A2C               	clrf	(??_canRecInt+1)& (0+255),c
  3240                           
  3241                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3242                           ; Switch size 1, requested type "simple"
  3243                           ; Number of cases is 1, Range of values is 0 to 0
  3244                           ; switch strategies available:
  3245                           ; Name         Instructions Cycles
  3246                           ; simple_byte            4     3 (average)
  3247                           ;	Chosen strategy is simple_byte
  3248  000446  502C               	movf	??_canRecInt+1,w,c
  3249  000448  0A00               	xorlw	0	; case 0
  3250  00044A  A4D8               	btfss	status,2,c
  3251  00044C  D01C               	goto	i2l261
  3252                           
  3253                           ; Switch size 1, requested type "simple"
  3254                           ; Number of cases is 9, Range of values is 0 to 8
  3255                           ; switch strategies available:
  3256                           ; Name         Instructions Cycles
  3257                           ; simple_byte           28    15 (average)
  3258                           ;	Chosen strategy is simple_byte
  3259  00044E  502B               	movf	??_canRecInt,w,c
  3260  000450  0A00               	xorlw	0	; case 0
  3261  000452  B4D8               	btfsc	status,2,c
  3262  000454  D73A               	goto	i2l2158
  3263  000456  0A01               	xorlw	1	; case 1
  3264  000458  B4D8               	btfsc	status,2,c
  3265  00045A  D74A               	goto	i2l262
  3266  00045C  0A03               	xorlw	3	; case 2
  3267  00045E  B4D8               	btfsc	status,2,c
  3268  000460  D762               	goto	i2l263
  3269  000462  0A01               	xorlw	1	; case 3
  3270  000464  B4D8               	btfsc	status,2,c
  3271  000466  D76C               	goto	i2l2166
  3272  000468  0A07               	xorlw	7	; case 4
  3273  00046A  B4D8               	btfsc	status,2,c
  3274  00046C  D78A               	goto	i2l2172
  3275  00046E  0A01               	xorlw	1	; case 5
  3276  000470  B4D8               	btfsc	status,2,c
  3277  000472  D79A               	goto	i2l2178
  3278  000474  0A03               	xorlw	3	; case 6
  3279  000476  B4D8               	btfsc	status,2,c
  3280  000478  D7AA               	goto	i2l2184
  3281  00047A  0A01               	xorlw	1	; case 7
  3282  00047C  B4D8               	btfsc	status,2,c
  3283  00047E  D7BA               	goto	i2l2190
  3284  000480  0A0F               	xorlw	15	; case 8
  3285  000482  B4D8               	btfsc	status,2,c
  3286  000484  D7CA               	goto	i2l269
  3287  000486                     i2l261:
  3288                           
  3289                           ;MainCode.c: 306:         RXB0CONbits.RXFUL = 0;
  3290  000486  9E80               	bcf	16256,7,c	;volatile
  3291  000488                     i2l258:
  3292                           
  3293                           ;MainCode.c: 308:     PIR5bits.RXB0IF = 0;
  3294  000488  0139               	movlb	57	; () banked
  3295  00048A  91A5               	bcf	165,0,b	;volatile
  3296                           
  3297                           ; BSR set to: 57
  3298                           
  3299                           ;MainCode.c: 309:     return;
  3300  00048C  0011               	retfie		f
  3301  00048E                     __end_of_canRecInt:
  3302                           	opt callstack 0
  3303                           
  3304 ;; *************** function _sendCANmessage *****************
  3305 ;; Defined at:
  3306 ;;		line 702 in file "MainCode.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;  id              2    0[COMRAM] int 
  3309 ;;  message         2    2[COMRAM] PTR int 
  3310 ;;		 -> canRecInt@message(16), 
  3311 ;;  length          2    4[COMRAM] int 
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;		None
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  1    wreg      void 
  3316 ;; Registers used:
  3317 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3323 ;;      Params:         6       0       0       0       0       0       0       0       0
  3324 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3325 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3326 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3327 ;;Total ram usage:        8 bytes
  3328 ;; Hardware stack levels used:    1
  3329 ;; This function calls:
  3330 ;;		Nothing
  3331 ;; This function is called by:
  3332 ;;		_canRecInt
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           	psect	text21
  3337  00059E                     __ptext21:
  3338                           	opt callstack 0
  3339  00059E                     _sendCANmessage:
  3340                           	opt callstack 28
  3341                           
  3342                           ;MainCode.c: 703:     TXB0CONbits.TXREQ = 0;
  3343                           
  3344                           ; BSR set to: 57
  3345                           ;incstack = 0
  3346  00059E  0137               	movlb	55	; () banked
  3347  0005A0  97E0               	bcf	224,3,b	;volatile
  3348                           
  3349                           ; BSR set to: 55
  3350                           ;MainCode.c: 705:     CANCONbits.WIN = 0b000;
  3351  0005A2  0EF1               	movlw	-15
  3352  0005A4  168F               	andwf	16271,f,c	;volatile
  3353                           
  3354                           ;MainCode.c: 707:     TXB0CONbits.TXPRI = 0b11;
  3355  0005A6  0E03               	movlw	3
  3356  0005A8  13E0               	iorwf	224,f,b	;volatile
  3357                           
  3358                           ; BSR set to: 55
  3359                           ;MainCode.c: 709:     TXB0D0 = message[0];
  3360  0005AA  0060  F097  FFD9   	movff	sendCANmessage@message,fsr2l
  3361  0005B0  0060  F09B  FFDA   	movff	sendCANmessage@message+1,fsr2h
  3362  0005B6  50DF               	movf	indf2,w,c
  3363  0005B8  6FE6               	movwf	230,b	;volatile
  3364                           
  3365                           ; BSR set to: 55
  3366                           ;MainCode.c: 710:     TXB0D1 = message[1];
  3367  0005BA  EE20 F002          	lfsr	2,2
  3368  0005BE  5025               	movf	sendCANmessage@message,w,c
  3369  0005C0  26D9               	addwf	fsr2l,f,c
  3370  0005C2  5026               	movf	sendCANmessage@message+1,w,c
  3371  0005C4  22DA               	addwfc	fsr2h,f,c
  3372  0005C6  50DF               	movf	indf2,w,c
  3373  0005C8  6FE7               	movwf	231,b	;volatile
  3374                           
  3375                           ; BSR set to: 55
  3376                           ;MainCode.c: 711:     TXB0D2 = message[2];
  3377  0005CA  EE20 F004          	lfsr	2,4
  3378  0005CE  5025               	movf	sendCANmessage@message,w,c
  3379  0005D0  26D9               	addwf	fsr2l,f,c
  3380  0005D2  5026               	movf	sendCANmessage@message+1,w,c
  3381  0005D4  22DA               	addwfc	fsr2h,f,c
  3382  0005D6  50DF               	movf	indf2,w,c
  3383  0005D8  6FE8               	movwf	232,b	;volatile
  3384                           
  3385                           ; BSR set to: 55
  3386                           ;MainCode.c: 712:     TXB0D3 = message[3];
  3387  0005DA  EE20 F006          	lfsr	2,6
  3388  0005DE  5025               	movf	sendCANmessage@message,w,c
  3389  0005E0  26D9               	addwf	fsr2l,f,c
  3390  0005E2  5026               	movf	sendCANmessage@message+1,w,c
  3391  0005E4  22DA               	addwfc	fsr2h,f,c
  3392  0005E6  50DF               	movf	indf2,w,c
  3393  0005E8  6FE9               	movwf	233,b	;volatile
  3394                           
  3395                           ; BSR set to: 55
  3396                           ;MainCode.c: 713:     TXB0D4 = message[4];
  3397  0005EA  EE20 F008          	lfsr	2,8
  3398  0005EE  5025               	movf	sendCANmessage@message,w,c
  3399  0005F0  26D9               	addwf	fsr2l,f,c
  3400  0005F2  5026               	movf	sendCANmessage@message+1,w,c
  3401  0005F4  22DA               	addwfc	fsr2h,f,c
  3402  0005F6  50DF               	movf	indf2,w,c
  3403  0005F8  6FEA               	movwf	234,b	;volatile
  3404                           
  3405                           ; BSR set to: 55
  3406                           ;MainCode.c: 714:     TXB0D5 = message[5];
  3407  0005FA  EE20 F00A          	lfsr	2,10
  3408  0005FE  5025               	movf	sendCANmessage@message,w,c
  3409  000600  26D9               	addwf	fsr2l,f,c
  3410  000602  5026               	movf	sendCANmessage@message+1,w,c
  3411  000604  22DA               	addwfc	fsr2h,f,c
  3412  000606  50DF               	movf	indf2,w,c
  3413  000608  6FEB               	movwf	235,b	;volatile
  3414                           
  3415                           ; BSR set to: 55
  3416                           ;MainCode.c: 715:     TXB0D6 = message[6];
  3417  00060A  EE20 F00C          	lfsr	2,12
  3418  00060E  5025               	movf	sendCANmessage@message,w,c
  3419  000610  26D9               	addwf	fsr2l,f,c
  3420  000612  5026               	movf	sendCANmessage@message+1,w,c
  3421  000614  22DA               	addwfc	fsr2h,f,c
  3422  000616  50DF               	movf	indf2,w,c
  3423  000618  6FEC               	movwf	236,b	;volatile
  3424                           
  3425                           ; BSR set to: 55
  3426                           ;MainCode.c: 716:     TXB0D7 = message[7];
  3427  00061A  EE20 F00E          	lfsr	2,14
  3428  00061E  5025               	movf	sendCANmessage@message,w,c
  3429  000620  26D9               	addwf	fsr2l,f,c
  3430  000622  5026               	movf	sendCANmessage@message+1,w,c
  3431  000624  22DA               	addwfc	fsr2h,f,c
  3432  000626  50DF               	movf	indf2,w,c
  3433  000628  6FED               	movwf	237,b	;volatile
  3434                           
  3435                           ;MainCode.c: 718:     TXB0SIDLbits.SID = id;
  3436  00062A  0060  F08C  F029   	movff	sendCANmessage@id,??_sendCANmessage
  3437  000630  3A29               	swapf	??_sendCANmessage,f,c
  3438  000632  4629               	rlncf	??_sendCANmessage,f,c
  3439  000634  51E2               	movf	226,w,b	;volatile
  3440  000636  1829               	xorwf	??_sendCANmessage,w,c
  3441  000638  0B1F               	andlw	-225
  3442  00063A  1829               	xorwf	??_sendCANmessage,w,c
  3443  00063C  6FE2               	movwf	226,b	;volatile
  3444                           
  3445                           ;MainCode.c: 719:     TXB0SIDH = id >> 3;
  3446  00063E  0060  F08C  F029   	movff	sendCANmessage@id,??_sendCANmessage
  3447  000644  0060  F090  F02A   	movff	sendCANmessage@id+1,??_sendCANmessage+1
  3448  00064A  342A               	rlcf	??_sendCANmessage+1,w,c
  3449  00064C  322A               	rrcf	??_sendCANmessage+1,f,c
  3450  00064E  3229               	rrcf	??_sendCANmessage,f,c
  3451  000650  342A               	rlcf	??_sendCANmessage+1,w,c
  3452  000652  322A               	rrcf	??_sendCANmessage+1,f,c
  3453  000654  3229               	rrcf	??_sendCANmessage,f,c
  3454  000656  342A               	rlcf	??_sendCANmessage+1,w,c
  3455  000658  322A               	rrcf	??_sendCANmessage+1,f,c
  3456  00065A  3229               	rrcf	??_sendCANmessage,f,c
  3457  00065C  5029               	movf	??_sendCANmessage,w,c
  3458  00065E  6FE1               	movwf	225,b	;volatile
  3459                           
  3460                           ;MainCode.c: 721:     TXB0DLCbits.DLC = length;
  3461  000660  51E5               	movf	229,w,b	;volatile
  3462  000662  1827               	xorwf	sendCANmessage@length,w,c
  3463  000664  0BF0               	andlw	-16
  3464  000666  1827               	xorwf	sendCANmessage@length,w,c
  3465  000668  6FE5               	movwf	229,b	;volatile
  3466                           
  3467                           ; BSR set to: 55
  3468                           ;MainCode.c: 722:     TXB0DLCbits.TXRTR = 0;
  3469  00066A  9DE5               	bcf	229,6,b	;volatile
  3470                           
  3471                           ; BSR set to: 55
  3472                           ;MainCode.c: 724:     TXB0CONbits.TXREQ = 1;
  3473  00066C  87E0               	bsf	224,3,b	;volatile
  3474  00066E                     i2l426:
  3475                           
  3476                           ; BSR set to: 55
  3477  00066E  B7E0               	btfsc	224,3,b	;volatile
  3478  000670  0012               	return	
  3479  000672  D7FD               	goto	i2l426
  3480  000674                     __end_of_sendCANmessage:
  3481                           	opt callstack 0
  3482                           
  3483                           ;
  3484                           ; Interrupt Vector Table @ 0x8
  3485                           ;
  3486                           
  3487                           	psect	ivt0x8
  3488  000008                     __pivt0x8:
  3489                           	opt callstack 0
  3490  000008                     ivt0x8_base:
  3491                           	opt callstack 0
  3492                           
  3493                           ; Vector 0 : SWINT
  3494  000008  0029               	dw	ivt0x8_undefint shr (0+2)
  3495                           
  3496                           ; Vector 1 : HLVD
  3497  00000A  0029               	dw	ivt0x8_undefint shr (0+2)
  3498                           
  3499                           ; Vector 2 : OSF
  3500  00000C  0029               	dw	ivt0x8_undefint shr (0+2)
  3501                           
  3502                           ; Vector 3 : CSW
  3503  00000E  0029               	dw	ivt0x8_undefint shr (0+2)
  3504                           
  3505                           ; Vector 4 : NVM
  3506  000010  0029               	dw	ivt0x8_undefint shr (0+2)
  3507                           
  3508                           ; Vector 5 : SCAN
  3509  000012  0029               	dw	ivt0x8_undefint shr (0+2)
  3510                           
  3511                           ; Vector 6 : CRC
  3512  000014  0029               	dw	ivt0x8_undefint shr (0+2)
  3513                           
  3514                           ; Vector 7 : IOC
  3515  000016  0029               	dw	ivt0x8_undefint shr (0+2)
  3516                           
  3517                           ; Vector 8 : INT0
  3518  000018  0029               	dw	ivt0x8_undefint shr (0+2)
  3519                           
  3520                           ; Vector 9 : ZCD
  3521  00001A  0029               	dw	ivt0x8_undefint shr (0+2)
  3522                           
  3523                           ; Vector 10 : AD
  3524  00001C  0329               	dw	_adcInt shr (0+2)
  3525                           
  3526                           ; Vector 11 : ADT
  3527  00001E  0029               	dw	ivt0x8_undefint shr (0+2)
  3528                           
  3529                           ; Vector 12 : CMP1
  3530  000020  0029               	dw	ivt0x8_undefint shr (0+2)
  3531                           
  3532                           ; Vector 13 : SMT1
  3533  000022  0029               	dw	ivt0x8_undefint shr (0+2)
  3534                           
  3535                           ; Vector 14 : SMT1PRA
  3536  000024  0029               	dw	ivt0x8_undefint shr (0+2)
  3537                           
  3538                           ; Vector 15 : SMT1PWA
  3539  000026  0029               	dw	ivt0x8_undefint shr (0+2)
  3540                           
  3541                           ; Vector 16 : DMA1SCNT
  3542  000028  0029               	dw	ivt0x8_undefint shr (0+2)
  3543                           
  3544                           ; Vector 17 : DMA1DCNT
  3545  00002A  0029               	dw	ivt0x8_undefint shr (0+2)
  3546                           
  3547                           ; Vector 18 : DMA1OR
  3548  00002C  0029               	dw	ivt0x8_undefint shr (0+2)
  3549                           
  3550                           ; Vector 19 : DMA1A
  3551  00002E  0029               	dw	ivt0x8_undefint shr (0+2)
  3552                           
  3553                           ; Vector 20 : SPI1RX
  3554  000030  0029               	dw	ivt0x8_undefint shr (0+2)
  3555                           
  3556                           ; Vector 21 : SPI1TX
  3557  000032  0029               	dw	ivt0x8_undefint shr (0+2)
  3558                           
  3559                           ; Vector 22 : SPI1
  3560  000034  0029               	dw	ivt0x8_undefint shr (0+2)
  3561                           
  3562                           ; Vector 23 : I2C1RX
  3563  000036  0029               	dw	ivt0x8_undefint shr (0+2)
  3564                           
  3565                           ; Vector 24 : I2C1TX
  3566  000038  0029               	dw	ivt0x8_undefint shr (0+2)
  3567                           
  3568                           ; Vector 25 : I2C1
  3569  00003A  0029               	dw	ivt0x8_undefint shr (0+2)
  3570                           
  3571                           ; Vector 26 : I2C1E
  3572  00003C  0029               	dw	ivt0x8_undefint shr (0+2)
  3573                           
  3574                           ; Vector 27 : U1RX
  3575  00003E  0029               	dw	ivt0x8_undefint shr (0+2)
  3576                           
  3577                           ; Vector 28 : U1TX
  3578  000040  0029               	dw	ivt0x8_undefint shr (0+2)
  3579                           
  3580                           ; Vector 29 : U1E
  3581  000042  0029               	dw	ivt0x8_undefint shr (0+2)
  3582                           
  3583                           ; Vector 30 : U1
  3584  000044  0029               	dw	ivt0x8_undefint shr (0+2)
  3585                           
  3586                           ; Vector 31 : TMR0
  3587  000046  0029               	dw	ivt0x8_undefint shr (0+2)
  3588                           
  3589                           ; Vector 32 : TMR1
  3590  000048  0029               	dw	ivt0x8_undefint shr (0+2)
  3591                           
  3592                           ; Vector 33 : TMR1G
  3593  00004A  0029               	dw	ivt0x8_undefint shr (0+2)
  3594                           
  3595                           ; Vector 34 : TMR2
  3596  00004C  0029               	dw	ivt0x8_undefint shr (0+2)
  3597                           
  3598                           ; Vector 35 : CCP1
  3599  00004E  0029               	dw	ivt0x8_undefint shr (0+2)
  3600                           
  3601                           ; Vector 36 : NCO1
  3602  000050  0029               	dw	ivt0x8_undefint shr (0+2)
  3603                           
  3604                           ; Vector 37 : CWG1
  3605  000052  0029               	dw	ivt0x8_undefint shr (0+2)
  3606                           
  3607                           ; Vector 38 : CLC1
  3608  000054  0029               	dw	ivt0x8_undefint shr (0+2)
  3609                           
  3610                           ; Vector 39 : INT1
  3611  000056  0029               	dw	ivt0x8_undefint shr (0+2)
  3612                           
  3613                           ; Vector 40 : RXB0IF
  3614  000058  00B1               	dw	_canRecInt shr (0+2)
  3615                           
  3616                           ; Vector 41 : RXB1IF
  3617  00005A  0029               	dw	ivt0x8_undefint shr (0+2)
  3618                           
  3619                           ; Vector 42 : TXB0IF
  3620  00005C  0029               	dw	ivt0x8_undefint shr (0+2)
  3621                           
  3622                           ; Vector 43 : TXB1IF
  3623  00005E  0029               	dw	ivt0x8_undefint shr (0+2)
  3624                           
  3625                           ; Vector 44 : TXB2IF
  3626  000060  0029               	dw	ivt0x8_undefint shr (0+2)
  3627                           
  3628                           ; Vector 45 : ERRIF
  3629  000062  0029               	dw	ivt0x8_undefint shr (0+2)
  3630                           
  3631                           ; Vector 46 : WAKIF
  3632  000064  0029               	dw	ivt0x8_undefint shr (0+2)
  3633                           
  3634                           ; Vector 47 : IRXIF
  3635  000066  0029               	dw	ivt0x8_undefint shr (0+2)
  3636                           
  3637                           ; Vector 48 : CMP2
  3638  000068  0029               	dw	ivt0x8_undefint shr (0+2)
  3639                           
  3640                           ; Vector 49 : SMT2
  3641  00006A  0029               	dw	ivt0x8_undefint shr (0+2)
  3642                           
  3643                           ; Vector 50 : SMT2PRA
  3644  00006C  0029               	dw	ivt0x8_undefint shr (0+2)
  3645                           
  3646                           ; Vector 51 : SMT2PWA
  3647  00006E  0029               	dw	ivt0x8_undefint shr (0+2)
  3648                           
  3649                           ; Vector 52 : DMA2SCNT
  3650  000070  0029               	dw	ivt0x8_undefint shr (0+2)
  3651                           
  3652                           ; Vector 53 : DMA2DCNT
  3653  000072  0029               	dw	ivt0x8_undefint shr (0+2)
  3654                           
  3655                           ; Vector 54 : DMA2OR
  3656  000074  0029               	dw	ivt0x8_undefint shr (0+2)
  3657                           
  3658                           ; Vector 55 : DMA2A
  3659  000076  0029               	dw	ivt0x8_undefint shr (0+2)
  3660                           
  3661                           ; Vector 56 : I2C2RX
  3662  000078  0029               	dw	ivt0x8_undefint shr (0+2)
  3663                           
  3664                           ; Vector 57 : I2C2TX
  3665  00007A  0029               	dw	ivt0x8_undefint shr (0+2)
  3666                           
  3667                           ; Vector 58 : I2C2
  3668  00007C  0029               	dw	ivt0x8_undefint shr (0+2)
  3669                           
  3670                           ; Vector 59 : I2C2E
  3671  00007E  0029               	dw	ivt0x8_undefint shr (0+2)
  3672                           
  3673                           ; Vector 60 : U2RX
  3674  000080  0029               	dw	ivt0x8_undefint shr (0+2)
  3675                           
  3676                           ; Vector 61 : U2TX
  3677  000082  0029               	dw	ivt0x8_undefint shr (0+2)
  3678                           
  3679                           ; Vector 62 : U2E
  3680  000084  0029               	dw	ivt0x8_undefint shr (0+2)
  3681                           
  3682                           ; Vector 63 : U2
  3683  000086  0029               	dw	ivt0x8_undefint shr (0+2)
  3684                           
  3685                           ; Vector 64 : TMR3
  3686  000088  0029               	dw	ivt0x8_undefint shr (0+2)
  3687                           
  3688                           ; Vector 65 : TMR3G
  3689  00008A  0029               	dw	ivt0x8_undefint shr (0+2)
  3690                           
  3691                           ; Vector 66 : TMR4
  3692  00008C  0029               	dw	ivt0x8_undefint shr (0+2)
  3693                           
  3694                           ; Vector 67 : CCP2
  3695  00008E  0029               	dw	ivt0x8_undefint shr (0+2)
  3696                           
  3697                           ; Vector 68 : CWG2
  3698  000090  0029               	dw	ivt0x8_undefint shr (0+2)
  3699                           
  3700                           ; Vector 69 : CLC2
  3701  000092  0029               	dw	ivt0x8_undefint shr (0+2)
  3702                           
  3703                           ; Vector 70 : INT2
  3704  000094  0029               	dw	ivt0x8_undefint shr (0+2)
  3705                           
  3706                           ; Vector 71 : TMR5
  3707  000096  0029               	dw	ivt0x8_undefint shr (0+2)
  3708                           
  3709                           ; Vector 72 : TMR5G
  3710  000098  0029               	dw	ivt0x8_undefint shr (0+2)
  3711                           
  3712                           ; Vector 73 : TMR6
  3713  00009A  0029               	dw	ivt0x8_undefint shr (0+2)
  3714                           
  3715                           ; Vector 74 : CCP3
  3716  00009C  0029               	dw	ivt0x8_undefint shr (0+2)
  3717                           
  3718                           ; Vector 75 : CWG3
  3719  00009E  0029               	dw	ivt0x8_undefint shr (0+2)
  3720                           
  3721                           ; Vector 76 : CLC3
  3722  0000A0  0029               	dw	ivt0x8_undefint shr (0+2)
  3723                           
  3724                           ; Vector 77 : CCP4
  3725  0000A2  0029               	dw	ivt0x8_undefint shr (0+2)
  3726                           
  3727                           ; Vector 78 : CLC4
  3728  0000A4  0029               	dw	ivt0x8_undefint shr (0+2)
  3729  0000A6                     ivt0x8_undefint:
  3730                           	opt callstack 0
  3731  0000A6  00FF               	reset	
  3732  0000                     
  3733                           	psect	rparam
  3734  0000                     tosu	equ	0x3FFF
  3735                           tosh	equ	0x3FFE
  3736                           tosl	equ	0x3FFD
  3737                           stkptr	equ	0x3FFC
  3738                           pclatu	equ	0x3FFB
  3739                           pclath	equ	0x3FFA
  3740                           pcl	equ	0x3FF9
  3741                           tblptru	equ	0x3FF8
  3742                           tblptrh	equ	0x3FF7
  3743                           tblptrl	equ	0x3FF6
  3744                           tablat	equ	0x3FF5
  3745                           prodh	equ	0x3FF4
  3746                           prodl	equ	0x3FF3
  3747                           indf0	equ	0x3FEF
  3748                           postinc0	equ	0x3FEE
  3749                           postdec0	equ	0x3FED
  3750                           preinc0	equ	0x3FEC
  3751                           plusw0	equ	0x3FEB
  3752                           fsr0h	equ	0x3FEA
  3753                           fsr0l	equ	0x3FE9
  3754                           wreg	equ	0x3FE8
  3755                           indf1	equ	0x3FE7
  3756                           postinc1	equ	0x3FE6
  3757                           postdec1	equ	0x3FE5
  3758                           preinc1	equ	0x3FE4
  3759                           plusw1	equ	0x3FE3
  3760                           fsr1h	equ	0x3FE2
  3761                           fsr1l	equ	0x3FE1
  3762                           bsr	equ	0x3FE0
  3763                           indf2	equ	0x3FDF
  3764                           postinc2	equ	0x3FDE
  3765                           postdec2	equ	0x3FDD
  3766                           preinc2	equ	0x3FDC
  3767                           plusw2	equ	0x3FDB
  3768                           fsr2h	equ	0x3FDA
  3769                           fsr2l	equ	0x3FD9
  3770                           status	equ	0x3FD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         34
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     34      68
    BANK0           160      6       6
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sendCANmessage@message	PTR int  size(2) Largest target is 16
		 -> canRecInt@message(COMRAM[16]), 

    readI2C@conOK	PTR int  size(2) Largest target is 2
		 -> con_perimeter(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_readI2C

Critical Paths under _adcInt in COMRAM

    None.

Critical Paths under _canRecInt in COMRAM

    _canRecInt->_sendCANmessage

Critical Paths under _main in BANK0

    None.

Critical Paths under _adcInt in BANK0

    None.

Critical Paths under _canRecInt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _adcInt in BANK1

    None.

Critical Paths under _canRecInt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _adcInt in BANK2

    None.

Critical Paths under _canRecInt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _adcInt in BANK3

    None.

Critical Paths under _canRecInt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _adcInt in BANK4

    None.

Critical Paths under _canRecInt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _adcInt in BANK5

    None.

Critical Paths under _canRecInt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _adcInt in BANK6

    None.

Critical Paths under _canRecInt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _adcInt in BANK7

    None.

Critical Paths under _canRecInt in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    1845
                                              0 BANK0      6     6      0
                       _getDistance1
                       _getDistance2
                       _getDistance3
                       _getDistance4
                       _getDistance5
                            _initADC
                            _initCAN
                         _initHCSR04
                            _initI2C
                            _readADC
                            _readI2C
                           _wait10US
                            _wait2US
                     _waitForSensor1
                     _waitForSensor2
                     _waitForSensor3
                     _waitForSensor4
                     _waitForSensor5
 ---------------------------------------------------------------------------------
 (1) _waitForSensor5                                       6     4      2      68
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _waitForSensor4                                       6     4      2      68
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _waitForSensor3                                       6     4      2      68
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _waitForSensor2                                       6     4      2      68
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _waitForSensor1                                       6     4      2      68
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _wait2US                                              4     4      0      46
                                             26 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _wait10US                                             4     4      0      46
                                             26 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _readI2C                                              8     6      2     523
                                             26 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _readADC                                              4     2      2     242
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _initI2C                                              2     2      0      23
                                             26 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initHCSR04                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initCAN                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getDistance5                                         6     4      2      99
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _getDistance4                                         6     4      2      99
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _getDistance3                                         6     4      2      99
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _getDistance2                                         6     4      2      99
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _getDistance1                                         6     4      2      99
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _adcInt                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _canRecInt                                           18    18      0    2845
                                              8 COMRAM    18    18      0
                     _sendCANmessage
 ---------------------------------------------------------------------------------
 (3) _sendCANmessage                                       8     2      6    2294
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _getDistance1
   _getDistance2
   _getDistance3
   _getDistance4
   _getDistance5
   _initADC
   _initCAN
   _initHCSR04
   _initI2C
   _readADC
   _readI2C
   _wait10US
   _wait2US
   _waitForSensor1
   _waitForSensor2
   _waitForSensor3
   _waitForSensor4
   _waitForSensor5

 _adcInt (ROOT)

 _canRecInt (ROOT)
   _sendCANmessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      20        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      6       6       5        3.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     22      44       1       71.6%
BITSFR_9             0      0       0     200        0.0%
SFR_9                0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4A       3        0.0%
DATA                 0      0      4A      21        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed May 27 22:02:39 2020

               __CFG_CP$OFF 000000                 __CFG_LVP$ON 000000                         l402 09BA  
                       l412 0C2C                         l407 0BF6                         l281 04EE  
                       l273 04A8                         l362 0B52                         l435 0BCE  
                       l372 0AEC                         l382 0A86                         l287 0536  
                       l392 0A20                         _GIE 01FE97                         wreg 003FE8  
             __CFG_BBEN$OFF 000000                __CFG_ZCD$OFF 000000                        l2242 070E  
                      l2500 09F4                        l2420 08F2                        l2406 08AA  
                      l2600 054A                        l2408 08C4                        l2426 0AA6  
                      l2370 0910                        l2442 0844                        l2514 0778  
                      l2428 0AC0                        l2268 0756                        l2372 092A  
                      l2444 085E                        l2516 0792                        l2390 0B0C  
                      l2462 0A40                        l2534 0974                        l2550 0BB8  
                      l2392 0B26                        l2464 0A5A                        l2536 098E  
                      l2608 0576                        l2384 0958                        l2456 088C  
                      l2480 07F8                        l2528 07C0                        l2640 00CE  
                      l2554 0BCA                        l2572 04BE                        l2492 0826  
                      l2716 01D2                        l2574 04C2                        l2478 07DE  
                      l2736 0218                        l2656 0100                        l2498 09DA  
                      l2586 0504                        l2596 053C                        l2588 0508  
                      l2676 0146                        l2598 0546                        l2696 018C  
                      u1110 069A                        u1120 069C                        u1210 0B3A  
                      u1130 06D6                        u1300 0872                        u1150 0C1A  
                      u1160 0C50                        u1240 08D8                        u1145 06D8  
                      u1330 0A6E                        u1180 093E                        u1420 07A6  
                      u1270 0AD4                        u1520 04D6                        u1360 080C  
                      u1450 09A2                        u1390 0A08                        u1550 051C  
                      u1580 055E               __CFG_FCMEN$ON 000000                        _main 00AC  
                      fsr2h 003FDA                        indf2 003FDF                        fsr2l 003FD9  
                      start 00A8               __CFG_CSWEN$ON 000000                ___param_bank 000000  
                     ?_main 0023               __CFG_WDTE$OFF 000000                       _T1CLK 003FB5  
            __CFG_DEBUG$OFF 000000                       i2l261 0486                       i2l262 02F0  
                     i2l263 0326                       i2l426 066E                       i2l258 0488  
                     i2l269 041A                       _TMR1H 003FB1                       _TMR1L 003FB0  
               readI2C@data 0040               __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000  
             __CFG_WRTD$OFF 000000             __end_of_initI2C 06FA             __end_of_initADC 0C80  
           __end_of_initCAN 0764             __end_of_readI2C 059E             __end_of_readADC 0BE6  
        __CFG_MCLRE$EXTMCLR 000000             __end_of_wait2US 0C1C        sendCANmessage@length 0027  
                     status 003FD8        __end_of_getDistance1 0B60        __end_of_getDistance2 0AFA  
      __end_of_getDistance3 0A94        __end_of_getDistance4 0A2E        __end_of_getDistance5 09C8  
         getDistance1@ticks 0041           getDistance2@ticks 0041           getDistance3@ticks 0041  
         getDistance4@ticks 0041           getDistance5@ticks 0041             __initialization 0C80  
              __end_of_main 02C4              __CFG_SAFEN$OFF 000000                      ??_main 0060  
            __CFG_PR1WAY$ON 000000               __activetblptr 000002              __CFG_MVECEN$ON 000000  
          ??_sendCANmessage 0029                initI2C@state 003D                      _ADRESH 003EF0  
                    _ADRESL 003EEF                      _RC3I2C 003A6A                      _RC4I2C 003A6B  
                    _RB2PPS 003A0A                      _RC3PPS 003A13                      _RC4PPS 003A14  
                    i2l2200 0440              __CFG_WDTCCS$SC 000000                      i2l2170 0364  
                    i2l2162 0308                      i2l2172 0382                      i2l2190 03F4  
                    i2l2166 0340                      i2l2158 02CA                      i2l2184 03CE  
                    i2l2178 03A8                      _RXB0D0 003F86                      _TXB0D0 0037E6  
                    _TXB0D1 0037E7                      _TXB0D2 0037E8                      _TXB0D3 0037E9  
                    _TXB0D4 0037EA                      _TXB0D5 0037EB                      _TXB0D6 0037EC  
                    _TXB0D7 0037ED              __CFG_XINST$OFF 000000                readI2C@conOK 003D  
                    _adcInt 0CA4                readI2C@tmpOK 0041              __CFG_STVREN$ON 000000  
                    clear_0 0C86            __end_of_wait10US 0C52                   ??_initI2C 003D  
                 ??_initADC 003D                   ??_initCAN 003D                   ??_readI2C 003F  
                 ??_readADC 003F                   ??_wait2US 003D       sendCANmessage@message 0025  
                    tblptru 003FF8     __size_of_waitForSensor1 0066     __size_of_waitForSensor2 0066  
   __size_of_waitForSensor3 0066     __size_of_waitForSensor4 0066     __size_of_waitForSensor5 0066  
                __accesstop 0060     __end_of__initialization 0C98               ___rparam_used 000001  
        __size_of_canRecInt 01CA              __pcstackCOMRAM 0023              ivt0x8_undefint 00A6  
              _ADCvalueLow0 001D                _ADCvalueLow1 0019       __size_of_getDistance1 0066  
     __size_of_getDistance2 0066       __size_of_getDistance3 0066       __size_of_getDistance4 0066  
     __size_of_getDistance5 0066             __CFG_IVT1WAY$ON 000000                     IVTBASEH 003FD6  
                   IVTBASEL 003FD5                     IVTBASEU 003FD7                     ?_adcInt 0023  
                   _I2C1CLK 003D7B                     _I2C1CNT 003D6C                     _I2C1ERR 003D76  
                   _I2C1PIR 003D79                     _I2C1RXB 003D6A                     _I2C1TXB 003D6B  
           __CFG_PPS1WAY$ON 000000                _getDistance1 0AFA                _getDistance2 0A94  
              _getDistance3 0A2E                _getDistance4 09C8                _getDistance5 0962  
       __CFG_PWRTS$PWRT_OFF 000000           __end_of_canRecInt 048E                     _OSCCON1 0039D9  
                   _PPSLOCK 003ABF                   _ADCLKbits 003EFF                  _initHCSR04 0B60  
                 _ADPCHbits 003EF1                   ?_wait10US 0023                   _ADREFbits 003EFD  
                   __Hparam 0000                     __Lparam 0000  __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
            _I2C1SDAPPSbits 003AE4             __size_of_adcInt 0002                     __pcinit 0C80  
                   __ramtop 0800                     __ptext0 00AC                     __ptext1 0764  
                   __ptext2 07CA                     __ptext3 0830                     __ptext4 0896  
                   __ptext5 08FC                     __ptext6 0BE6                     __ptext7 0C1C  
                   __ptext8 048E                     __ptext9 0BA6              _I2C1SCLPPSbits 003AE3  
                   _initI2C 0674                     _initADC 0C52                     _initCAN 06FA  
           __CFG_WRTAPP$OFF 000000                     _readI2C 048E                     _readADC 0BA6  
                 _T1CONbits 003FB2                 _I2C1ERRbits 003D76                     _wait2US 0BE6  
               _I2C1PIEbits 003D7A             __CFG_WRTSAF$OFF 000000              _waitForSensor1 08FC  
            _waitForSensor2 0896              _waitForSensor3 0830              _waitForSensor4 07CA  
            _waitForSensor5 0764                 _I2C1PIRbits 003D79        end_of_initialization 0C98  
             __Lmediumconst 0000                  ??_wait10US 003D                     postdec2 003FDD  
                   postinc0 003FEE                     postinc2 003FDE       __CFG_WDTCPS$WDTCPS_31 000000  
                 _PORTAbits 003FCA                   _PORTBbits 003FCB                   _PORTCbits 003FCC  
            _sign_perimeter 0001      __end_of_waitForSensor1 0962      __end_of_waitForSensor2 08FC  
    __end_of_waitForSensor3 0896      __end_of_waitForSensor4 0830      __end_of_waitForSensor5 07CA  
                 _TRISAbits 003FC2                   _TRISBbits 003FC3                   _TRISCbits 003FC4  
          sendCANmessage@id 0023                 ?_initHCSR04 0023              __end_of_adcInt 0CA6  
                readI2C@reg 003F             ?_waitForSensor1 003D             ?_waitForSensor2 003D  
           ?_waitForSensor3 003D             ?_waitForSensor4 003D             ?_waitForSensor5 003D  
       start_initialization 0C80               _ADCvalueHigh0 001F               _ADCvalueHigh1 001B  
                ivt0x8_base 0008                 _CANSTATbits 003F8E     __size_of_sendCANmessage 00D6  
          __CFG_LPBOREN$OFF 000000                    ??_adcInt 0023         __size_of_initHCSR04 0046  
               __pbssCOMRAM 0001               __pcstackBANK0 0060                 _BRGCON1bits 003703  
                 _canRecInt 02C4           __size_of_wait10US 0036                    _I2C1ADB1 003D6E  
                  _I2C1CON0 003D73                    _I2C1CON1 003D74                    _I2C1CON2 003D75  
                 _distance1 0017                   _distance2 0015                   _distance3 0013  
                 _distance4 0011                   _distance5 000F                    ?_initI2C 0023  
                  ?_initADC 0023                    ?_initCAN 0023                    ?_readI2C 003D  
                  ?_readADC 003D      __CFG_BBSIZE$BBSIZE_512 000000                    ?_wait2US 0023  
                ?_canRecInt 0023                    _LATCbits 003FBC                   _perimeter 0003  
                  _PIE5bits 003995         __CFG_BORV$VBOR_2P45 000000               _I2C1STAT0bits 003D77  
             _I2C1STAT1bits 003D78                    _PIR5bits 0039A5                    _RXF0SIDH 0037A0  
                  _RXF1SIDH 0037A4                    _TXB0SIDH 0037E1                    _RXM0SIDH 0037B8  
                  _RXM1SIDH 0037BC                  _ADCON0bits 003EF8                   main@temp0 0062  
                 main@temp1 0064                 _INTCON0bits 003FD2                   readADC@ch 003D  
                _CANCONbits 003F8F                ??_initHCSR04 003D              _sendCANmessage 059E  
                  __Hrparam 0000             _valid_distance1 000D             _valid_distance2 000B  
           _valid_distance3 0009             _valid_distance4 0007             _valid_distance5 0005  
                  __Lrparam 0000          __CFG_BOREN$SBORDIS 000000              readI2C@counter 0043  
          ??_waitForSensor1 003F            ??_waitForSensor2 003F            ??_waitForSensor3 003F  
          ??_waitForSensor4 003F            ??_waitForSensor5 003F             waitForSensor1@i 0041  
           waitForSensor2@i 0041             waitForSensor3@i 0041             waitForSensor4@i 0041  
           waitForSensor5@i 0041                  _ANSELAbits 003A40                  _ANSELBbits 003A50  
                _ANSELCbits 003A60                   wait10US@i 003D          __end_of_initHCSR04 0BA6  
          __size_of_initI2C 0086            __size_of_initADC 002E            __size_of_initCAN 006A  
          __size_of_readI2C 0110            __size_of_readADC 0040                _RXF0SIDLbits 0037A1  
              _I2C1CON0bits 003D73                    __pivt0x8 0008                _RXF1SIDLbits 0037A5  
          __size_of_wait2US 0036                    __ptext10 0674                    __ptext11 0B60  
                  __ptext20 02C4                    __ptext12 06FA                    __ptext21 059E  
                  __ptext13 0C52                    __ptext14 0962                    __ptext15 09C8  
                  __ptext16 0A2E                    __ptext17 0A94                    __ptext18 0AFA  
                  __ptext19 0CA4                 ??_canRecInt 002B      __end_of_sendCANmessage 0674  
             __size_of_main 0218                    _wait10US 0C1C        __CFG_WDTCWS$WDTCWS_7 000000  
              _TXB0SIDLbits 0037E2                  _ODCONCbits 003A62               ?_getDistance1 003D  
             ?_getDistance2 003D               ?_getDistance3 003D               ?_getDistance4 003D  
             ?_getDistance5 003D                _RXM0SIDLbits 0037B9                 _RXB0CONbits 003F80  
               _RXB1CONbits 0037F0                _RXM1SIDLbits 0037BD            canRecInt@message 002D  
                  intlevel2 0000               _con_perimeter 0021                    wait2US@i 003D  
           ?_sendCANmessage 0023                 _TXB0DLCbits 0037E5           __CFG_CLKOUTEN$OFF 000000  
               _SLRCONCbits 003A63                 _TXB0CONbits 0037E0                 _PPSLOCKbits 003ABF  
            ??_getDistance1 003F              ??_getDistance2 003F              ??_getDistance3 003F  
            ??_getDistance4 003F              ??_getDistance5 003F  
