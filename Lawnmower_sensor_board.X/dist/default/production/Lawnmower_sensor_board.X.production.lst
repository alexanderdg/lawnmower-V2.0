

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Aug 08 23:29:58 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F25K83
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=4,class=CODE,delta=1
    29                           	psect	text20,global,reloc=4,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34  0000                     
    35                           ; Version 2.05
    36                           ; Generated 20/12/2018 GMT
    37                           ; 
    38                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F25K83 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     _TXB0DLCbits	set	14309
    70  0000                     _TXB0SIDH	set	14305
    71  0000                     _TXB0SIDLbits	set	14306
    72  0000                     _TXB0D7	set	14317
    73  0000                     _TXB0D6	set	14316
    74  0000                     _TXB0D5	set	14315
    75  0000                     _TXB0D4	set	14314
    76  0000                     _TXB0D3	set	14313
    77  0000                     _TXB0D2	set	14312
    78  0000                     _TXB0D1	set	14311
    79  0000                     _TXB0D0	set	14310
    80  0000                     _TXB0CONbits	set	14304
    81  0000                     _RXB1CONbits	set	14320
    82  0000                     _RXM1SIDLbits	set	14269
    83  0000                     _RXM1SIDH	set	14268
    84  0000                     _RXF1SIDLbits	set	14245
    85  0000                     _RXF1SIDH	set	14244
    86  0000                     _RXM0SIDLbits	set	14265
    87  0000                     _RXM0SIDH	set	14264
    88  0000                     _RXF0SIDLbits	set	14241
    89  0000                     _RXF0SIDH	set	14240
    90  0000                     _BRGCON1bits	set	14083
    91  0000                     _PIR5bits	set	14757
    92  0000                     _PIE5bits	set	14741
    93  0000                     _OSCCON1	set	14809
    94  0000                     _RB2PPS	set	14858
    95  0000                     _ANSELBbits	set	14928
    96  0000                     _ANSELAbits	set	14912
    97  0000                     _I2C1SCLPPSbits	set	15075
    98  0000                     _I2C1SDAPPSbits	set	15076
    99  0000                     _RC4PPS	set	14868
   100  0000                     _RC3PPS	set	14867
   101  0000                     _PPSLOCKbits	set	15039
   102  0000                     _PPSLOCK	set	15039
   103  0000                     _RC4I2C	set	14955
   104  0000                     _SLRCONCbits	set	14947
   105  0000                     _RC3I2C	set	14954
   106  0000                     _ODCONCbits	set	14946
   107  0000                     _ANSELCbits	set	14944
   108  0000                     _I2C1PIEbits	set	15738
   109  0000                     _I2C1ERRbits	set	15734
   110  0000                     _I2C1ERR	set	15734
   111  0000                     _I2C1PIR	set	15737
   112  0000                     _I2C1CLK	set	15739
   113  0000                     _I2C1CON2	set	15733
   114  0000                     _I2C1CON1	set	15732
   115  0000                     _I2C1CON0	set	15731
   116  0000                     _I2C1PIRbits	set	15737
   117  0000                     _I2C1RXB	set	15722
   118  0000                     _I2C1CON0bits	set	15731
   119  0000                     _I2C1CNT	set	15724
   120  0000                     _I2C1STAT0bits	set	15735
   121  0000                     _I2C1TXB	set	15723
   122  0000                     _I2C1ADB1	set	15726
   123  0000                     _I2C1STAT1bits	set	15736
   124  0000                     _ADRESL	set	16111
   125  0000                     _ADRESH	set	16112
   126  0000                     _ADPCHbits	set	16113
   127  0000                     _ADREFbits	set	16125
   128  0000                     _ADCLKbits	set	16127
   129  0000                     _ADCON0bits	set	16120
   130  0000                     _FVRCONbits	set	16065
   131  0000                     _CANSTATbits	set	16270
   132  0000                     _CANCONbits	set	16271
   133  0000                     _PORTBbits	set	16331
   134  0000                     _TRISBbits	set	16323
   135  0000                     _TRISAbits	set	16322
   136  0000                     _TMR1L	set	16304
   137  0000                     _TMR1H	set	16305
   138  0000                     _T1CONbits	set	16306
   139  0000                     _T1CLK	set	16309
   140  0000                     _TRISCbits	set	16324
   141  0000                     _LATCbits	set	16316
   142  0000                     _RXB0D0	set	16262
   143  0000                     _RXB0CONbits	set	16256
   144  0000                     _PORTAbits	set	16330
   145  0000                     _PORTCbits	set	16332
   146  0000                     _INTCON0bits	set	16338
   147  0000                     _GIE	set	130711
   148                           
   149                           ; #config settings
   150  0000                     
   151                           	psect	cinit
   152  000C98                     __pcinit:
   153                           	opt callstack 0
   154  000C98                     start_initialization:
   155                           	opt callstack 0
   156  000C98                     __initialization:
   157                           	opt callstack 0
   158                           
   159                           ; Clear objects allocated to COMRAM (34 bytes)
   160  000C98  EE00  F001         	lfsr	0,__pbssCOMRAM
   161  000C9C  0E22               	movlw	34
   162  000C9E                     clear_0:
   163  000C9E  6AEE               	clrf	postinc0,c
   164  000CA0  06E8               	decf	wreg,f,c
   165  000CA2  E1FD               	bnz	clear_0
   166                           
   167                           ;
   168                           ; Setup IVTBASE
   169                           ;
   170  000CA4  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   171  000CA6  6ED5               	movwf	213,c
   172  000CA8  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   173  000CAA  6ED6               	movwf	214,c
   174  000CAC  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   175  000CAE  6ED7               	movwf	215,c
   176  000CB0                     end_of_initialization:
   177                           	opt callstack 0
   178  000CB0                     __end_of__initialization:
   179                           	opt callstack 0
   180  000CB0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   181  000CB2  6EF8               	movwf	tblptru,c
   182  000CB4  0100               	movlb	0
   183  000CB6  EF56  F000         	goto	_main	;jump to C main() function
   184                           
   185                           	psect	bssCOMRAM
   186  000001                     __pbssCOMRAM:
   187                           	opt callstack 0
   188  000001                     _sign_perimeter:
   189                           	opt callstack 0
   190  000001                     	ds	2
   191  000003                     _perimeter:
   192                           	opt callstack 0
   193  000003                     	ds	2
   194  000005                     _valid_distance5:
   195                           	opt callstack 0
   196  000005                     	ds	2
   197  000007                     _valid_distance4:
   198                           	opt callstack 0
   199  000007                     	ds	2
   200  000009                     _valid_distance3:
   201                           	opt callstack 0
   202  000009                     	ds	2
   203  00000B                     _valid_distance2:
   204                           	opt callstack 0
   205  00000B                     	ds	2
   206  00000D                     _valid_distance1:
   207                           	opt callstack 0
   208  00000D                     	ds	2
   209  00000F                     _distance5:
   210                           	opt callstack 0
   211  00000F                     	ds	2
   212  000011                     _distance4:
   213                           	opt callstack 0
   214  000011                     	ds	2
   215  000013                     _distance3:
   216                           	opt callstack 0
   217  000013                     	ds	2
   218  000015                     _distance2:
   219                           	opt callstack 0
   220  000015                     	ds	2
   221  000017                     _distance1:
   222                           	opt callstack 0
   223  000017                     	ds	2
   224  000019                     _ADCvalueLow1:
   225                           	opt callstack 0
   226  000019                     	ds	2
   227  00001B                     _ADCvalueHigh1:
   228                           	opt callstack 0
   229  00001B                     	ds	2
   230  00001D                     _ADCvalueLow0:
   231                           	opt callstack 0
   232  00001D                     	ds	2
   233  00001F                     _ADCvalueHigh0:
   234                           	opt callstack 0
   235  00001F                     	ds	2
   236  000021                     _con_perimeter:
   237                           	opt callstack 0
   238  000021                     	ds	2
   239                           
   240                           	psect	cstackBANK0
   241  000060                     __pcstackBANK0:
   242                           	opt callstack 0
   243  000060                     ??_main:
   244                           
   245                           ; 1 bytes @ 0x0
   246  000060                     	ds	2
   247  000062                     main@temp0:
   248                           	opt callstack 0
   249                           
   250                           ; 2 bytes @ 0x2
   251  000062                     	ds	2
   252  000064                     main@temp1:
   253                           	opt callstack 0
   254                           
   255                           ; 2 bytes @ 0x4
   256  000064                     	ds	2
   257                           
   258                           	psect	cstackCOMRAM
   259  000023                     __pcstackCOMRAM:
   260                           	opt callstack 0
   261  000023                     sendCANmessage@id:
   262                           	opt callstack 0
   263                           
   264                           ; 2 bytes @ 0x0
   265  000023                     	ds	2
   266  000025                     sendCANmessage@message:
   267                           	opt callstack 0
   268                           
   269                           ; 2 bytes @ 0x2
   270  000025                     	ds	2
   271  000027                     sendCANmessage@length:
   272                           	opt callstack 0
   273                           
   274                           ; 2 bytes @ 0x4
   275  000027                     	ds	2
   276  000029                     ??_sendCANmessage:
   277                           
   278                           ; 1 bytes @ 0x6
   279  000029                     	ds	2
   280  00002B                     ??_canRecInt:
   281                           
   282                           ; 1 bytes @ 0x8
   283  00002B                     	ds	2
   284  00002D                     canRecInt@message:
   285                           	opt callstack 0
   286                           
   287                           ; 16 bytes @ 0xA
   288  00002D                     	ds	16
   289  00003D                     ?_waitForSensor1:
   290                           	opt callstack 0
   291  00003D                     ?_getDistance1:
   292                           	opt callstack 0
   293  00003D                     ?_waitForSensor2:
   294                           	opt callstack 0
   295  00003D                     ?_getDistance2:
   296                           	opt callstack 0
   297  00003D                     ?_waitForSensor3:
   298                           	opt callstack 0
   299  00003D                     ?_getDistance3:
   300                           	opt callstack 0
   301  00003D                     ?_waitForSensor4:
   302                           	opt callstack 0
   303  00003D                     ?_getDistance4:
   304                           	opt callstack 0
   305  00003D                     ?_waitForSensor5:
   306                           	opt callstack 0
   307  00003D                     ?_getDistance5:
   308                           	opt callstack 0
   309  00003D                     ?_readADC:
   310                           	opt callstack 0
   311  00003D                     ?_readI2C:
   312                           	opt callstack 0
   313  00003D                     readI2C@conOK:
   314                           	opt callstack 0
   315  00003D                     initI2C@state:
   316                           	opt callstack 0
   317  00003D                     readADC@ch:
   318                           	opt callstack 0
   319  00003D                     wait2US@i:
   320                           	opt callstack 0
   321  00003D                     wait10US@i:
   322                           	opt callstack 0
   323                           
   324                           ; 4 bytes @ 0x1A
   325  00003D                     	ds	2
   326  00003F                     ??_waitForSensor1:
   327  00003F                     ??_getDistance1:
   328  00003F                     ??_waitForSensor2:
   329  00003F                     ??_getDistance2:
   330  00003F                     ??_waitForSensor3:
   331  00003F                     ??_getDistance3:
   332  00003F                     ??_waitForSensor4:
   333  00003F                     ??_getDistance4:
   334  00003F                     ??_waitForSensor5:
   335  00003F                     ??_getDistance5:
   336  00003F                     ??_readADC:
   337  00003F                     readI2C@reg:
   338                           	opt callstack 0
   339                           
   340                           ; 1 bytes @ 0x1C
   341  00003F                     	ds	1
   342  000040                     readI2C@data:
   343                           	opt callstack 0
   344                           
   345                           ; 1 bytes @ 0x1D
   346  000040                     	ds	1
   347  000041                     readI2C@tmpOK:
   348                           	opt callstack 0
   349  000041                     waitForSensor1@i:
   350                           	opt callstack 0
   351  000041                     waitForSensor2@i:
   352                           	opt callstack 0
   353  000041                     waitForSensor3@i:
   354                           	opt callstack 0
   355  000041                     waitForSensor4@i:
   356                           	opt callstack 0
   357  000041                     waitForSensor5@i:
   358                           	opt callstack 0
   359  000041                     getDistance1@ticks:
   360                           	opt callstack 0
   361  000041                     getDistance2@ticks:
   362                           	opt callstack 0
   363  000041                     getDistance3@ticks:
   364                           	opt callstack 0
   365  000041                     getDistance4@ticks:
   366                           	opt callstack 0
   367  000041                     getDistance5@ticks:
   368                           	opt callstack 0
   369                           
   370                           ; 2 bytes @ 0x1E
   371  000041                     	ds	2
   372  000043                     readI2C@counter:
   373                           	opt callstack 0
   374                           
   375                           ; 2 bytes @ 0x20
   376  000043                     	ds	2
   377                           
   378 ;;
   379 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   380 ;;
   381 ;; *************** function _main *****************
   382 ;; Defined at:
   383 ;;		line 106 in file "MainCode.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;  temp1           2    4[BANK0 ] int 
   388 ;;  temp0           2    2[BANK0 ] int 
   389 ;; Return value:  Size  Location     Type
   390 ;;                  2  236[None  ] int 
   391 ;; Registers used:
   392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   393 ;; Tracked objects:
   394 ;;		On entry : 0/0
   395 ;;		On exit  : 0/0
   396 ;;		Unchanged: 0/0
   397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   398 ;;      Params:         0       0       0       0       0       0       0       0       0
   399 ;;      Locals:         0       4       0       0       0       0       0       0       0
   400 ;;      Temps:          0       2       0       0       0       0       0       0       0
   401 ;;      Totals:         0       6       0       0       0       0       0       0       0
   402 ;;Total ram usage:        6 bytes
   403 ;; Hardware stack levels required when called:    3
   404 ;; This function calls:
   405 ;;		_getDistance1
   406 ;;		_getDistance2
   407 ;;		_getDistance3
   408 ;;		_getDistance4
   409 ;;		_getDistance5
   410 ;;		_initADC
   411 ;;		_initCAN
   412 ;;		_initHCSR04
   413 ;;		_initI2C
   414 ;;		_readADC
   415 ;;		_readI2C
   416 ;;		_wait10US
   417 ;;		_wait2US
   418 ;;		_waitForSensor1
   419 ;;		_waitForSensor2
   420 ;;		_waitForSensor3
   421 ;;		_waitForSensor4
   422 ;;		_waitForSensor5
   423 ;; This function is called by:
   424 ;;		Startup code after reset
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           	psect	text0
   429  0000AC                     __ptext0:
   430                           	opt callstack 0
   431  0000AC                     _main:
   432                           	opt callstack 28
   433                           
   434                           ;MainCode.c: 108:             valid_distance3 = 1;
   435                           
   436                           ;incstack = 0
   437  0000AC  0E60               	movlw	96
   438  0000AE  0139               	movlb	57	; () banked
   439  0000B0  6FD9               	movwf	217,b	;volatile
   440                           
   441                           ; BSR set to: 57
   442                           ;MainCode.c: 109:         }
   443  0000B2  EC7D  F003         	call	_initCAN	;wreg free
   444                           
   445                           ;MainCode.c: 111:             distance3 = 0;
   446  0000B6  ECD3  F005         	call	_initADC	;wreg free
   447                           
   448                           ;MainCode.c: 112:             valid_distance3 = 0;
   449  0000BA  ECB0  F005         	call	_initHCSR04	;wreg free
   450                           
   451                           ;MainCode.c: 113:         }
   452  0000BE  EC3A  F003         	call	_initI2C	;wreg free
   453                           
   454                           ;MainCode.c: 115:         wait10US();
   455  0000C2  8CD2               	bsf	16338,6,c	;volatile
   456                           
   457                           ;MainCode.c: 117:         PORTAbits.RA1 = 0;
   458  0000C4  9AD2               	bcf	16338,5,c	;volatile
   459                           
   460                           ;MainCode.c: 119:         PORTAbits.RA1 = 1;
   461  0000C6  0139               	movlb	57	; () banked
   462  0000C8  8195               	bsf	149,0,b	;volatile
   463                           
   464                           ; BSR set to: 57
   465                           ;MainCode.c: 120:         wait10US();
   466  0000CA  9395               	bcf	149,1,b	;volatile
   467                           
   468                           ; BSR set to: 57
   469                           ;MainCode.c: 121:         PORTAbits.RA1 = 0;
   470  0000CC  8ED2               	bsf	16338,7,c	;volatile
   471  0000CE                     l2662:
   472                           
   473                           ;MainCode.c: 128:             valid_distance4 = 0;
   474  0000CE  92CC               	bcf	16332,1,c	;volatile
   475                           
   476                           ;MainCode.c: 129:         }
   477  0000D0  EC16  F006         	call	_wait2US	;wreg free
   478                           
   479                           ;MainCode.c: 130:         wait10US();
   480  0000D4  82CC               	bsf	16332,1,c	;volatile
   481                           
   482                           ;MainCode.c: 131: 
   483  0000D6  EC31  F006         	call	_wait10US	;wreg free
   484                           
   485                           ;MainCode.c: 132:         PORTAbits.RA2 = 0;
   486  0000DA  92CC               	bcf	16332,1,c	;volatile
   487                           
   488                           ;MainCode.c: 133:         wait2US();
   489  0000DC  EC7E  F004         	call	_waitForSensor1	;wreg free
   490  0000E0  043D               	decf	?_waitForSensor1,w,c
   491  0000E2  103E               	iorwf	?_waitForSensor1+1,w,c
   492  0000E4  A4D8               	btfss	status,2,c
   493  0000E6  D00C               	goto	l2678
   494                           
   495                           ;MainCode.c: 134:         PORTAbits.RA2 = 1;
   496  0000E8  EC7D  F005         	call	_getDistance1	;wreg free
   497  0000EC  0060  F0F4  F017   	movff	?_getDistance1,_distance1
   498  0000F2  0060  F0F8  F018   	movff	?_getDistance1+1,_distance1+1
   499                           
   500                           ;MainCode.c: 135:         wait10US();
   501  0000F8  0E00               	movlw	0
   502  0000FA  6E0E               	movwf	_valid_distance1+1,c
   503  0000FC  0E01               	movlw	1
   504  0000FE  D007               	goto	L1
   505  000100                     l2678:
   506                           
   507                           ;MainCode.c: 138:             distance5 = getDistance5();
   508  000100  0E00               	movlw	0
   509  000102  6E18               	movwf	_distance1+1,c
   510  000104  0E00               	movlw	0
   511  000106  6E17               	movwf	_distance1,c
   512                           
   513                           ;MainCode.c: 139:             valid_distance5 = 1;
   514  000108  0E00               	movlw	0
   515  00010A  6E0E               	movwf	_valid_distance1+1,c
   516  00010C  0E00               	movlw	0
   517  00010E                     L1:
   518  00010E  6E0D               	movwf	_valid_distance1,c
   519                           
   520                           ;MainCode.c: 141:         else{
   521  000110  EC31  F006         	call	_wait10US	;wreg free
   522                           
   523                           ;MainCode.c: 144:         }
   524  000114  94CC               	bcf	16332,2,c	;volatile
   525                           
   526                           ;MainCode.c: 145:         wait10US();
   527  000116  EC16  F006         	call	_wait2US	;wreg free
   528                           
   529                           ;MainCode.c: 146:         int temp0 = readADC(0);
   530  00011A  84CC               	bsf	16332,2,c	;volatile
   531                           
   532                           ;MainCode.c: 147:         int temp1 = readADC(1);
   533  00011C  EC31  F006         	call	_wait10US	;wreg free
   534                           
   535                           ;MainCode.c: 148:         ADCvalueHigh0 = (temp0 >> 8) & 0xFF;
   536  000120  94CC               	bcf	16332,2,c	;volatile
   537                           
   538                           ;MainCode.c: 149:         ADCvalueLow0 = temp0 & 0xFF;
   539  000122  EC4B  F004         	call	_waitForSensor2	;wreg free
   540  000126  043D               	decf	?_waitForSensor2,w,c
   541  000128  103E               	iorwf	?_waitForSensor2+1,w,c
   542  00012A  A4D8               	btfss	status,2,c
   543  00012C  D00C               	goto	l2698
   544                           
   545                           ;MainCode.c: 150:         ADCvalueHigh1 = (temp1 >> 8) & 0xFF;
   546  00012E  EC4A  F005         	call	_getDistance2	;wreg free
   547  000132  0060  F0F4  F015   	movff	?_getDistance2,_distance2
   548  000138  0060  F0F8  F016   	movff	?_getDistance2+1,_distance2+1
   549                           
   550                           ;MainCode.c: 151:         ADCvalueLow1 = temp1 & 0xFF;
   551  00013E  0E00               	movlw	0
   552  000140  6E0C               	movwf	_valid_distance2+1,c
   553  000142  0E01               	movlw	1
   554  000144  D007               	goto	L2
   555  000146                     l2698:
   556                           
   557                           ;MainCode.c: 154: 
   558  000146  0E00               	movlw	0
   559  000148  6E16               	movwf	_distance2+1,c
   560  00014A  0E00               	movlw	0
   561  00014C  6E15               	movwf	_distance2,c
   562                           
   563                           ;MainCode.c: 155:     }
   564  00014E  0E00               	movlw	0
   565  000150  6E0C               	movwf	_valid_distance2+1,c
   566  000152  0E00               	movlw	0
   567  000154                     L2:
   568  000154  6E0B               	movwf	_valid_distance2,c
   569                           
   570                           ;MainCode.c: 157: }
   571  000156  EC31  F006         	call	_wait10US	;wreg free
   572                           
   573                           ;MainCode.c: 159: void __attribute__((picinterrupt(("irq(AD), high_priority")))) adcInt(
      +                          void) {
   574  00015A  9ECC               	bcf	16332,7,c	;volatile
   575                           
   576                           ;MainCode.c: 160: 
   577  00015C  EC16  F006         	call	_wait2US	;wreg free
   578                           
   579                           ;MainCode.c: 161: 
   580  000160  8ECC               	bsf	16332,7,c	;volatile
   581                           
   582                           ;MainCode.c: 162: 
   583  000162  EC31  F006         	call	_wait10US	;wreg free
   584                           
   585                           ;MainCode.c: 163: }
   586  000166  9ECC               	bcf	16332,7,c	;volatile
   587                           
   588                           ;MainCode.c: 164: 
   589  000168  EC18  F004         	call	_waitForSensor3	;wreg free
   590  00016C  043D               	decf	?_waitForSensor3,w,c
   591  00016E  103E               	iorwf	?_waitForSensor3+1,w,c
   592  000170  A4D8               	btfss	status,2,c
   593  000172  D00C               	goto	l2718
   594                           
   595                           ;MainCode.c: 165: void __attribute__((picinterrupt(("irq(RXB0IF), high_priority")))) can
      +                          RecInt(void) {
   596  000174  EC17  F005         	call	_getDistance3	;wreg free
   597  000178  0060  F0F4  F013   	movff	?_getDistance3,_distance3
   598  00017E  0060  F0F8  F014   	movff	?_getDistance3+1,_distance3+1
   599                           
   600                           ;MainCode.c: 166: 
   601  000184  0E00               	movlw	0
   602  000186  6E0A               	movwf	_valid_distance3+1,c
   603  000188  0E01               	movlw	1
   604  00018A  D007               	goto	L3
   605  00018C                     l2718:
   606                           
   607                           ;MainCode.c: 169: 
   608  00018C  0E00               	movlw	0
   609  00018E  6E14               	movwf	_distance3+1,c
   610  000190  0E00               	movlw	0
   611  000192  6E13               	movwf	_distance3,c
   612                           
   613                           ;MainCode.c: 170:         int message[8];
   614  000194  0E00               	movlw	0
   615  000196  6E0A               	movwf	_valid_distance3+1,c
   616  000198  0E00               	movlw	0
   617  00019A                     L3:
   618  00019A  6E09               	movwf	_valid_distance3,c
   619                           
   620                           ;MainCode.c: 173: 
   621  00019C  EC31  F006         	call	_wait10US	;wreg free
   622                           
   623                           ;MainCode.c: 175:                 message[0] = 1;
   624  0001A0  92CA               	bcf	16330,1,c	;volatile
   625                           
   626                           ;MainCode.c: 176:                 sendCANmessage(0, message, 1);
   627  0001A2  EC16  F006         	call	_wait2US	;wreg free
   628                           
   629                           ;MainCode.c: 177:                 break;
   630  0001A6  82CA               	bsf	16330,1,c	;volatile
   631                           
   632                           ;MainCode.c: 178:             case 1:
   633  0001A8  EC31  F006         	call	_wait10US	;wreg free
   634                           
   635                           ;MainCode.c: 179:                 message[0] = ADCvalueHigh0;
   636  0001AC  92CA               	bcf	16330,1,c	;volatile
   637                           
   638                           ;MainCode.c: 180:                 message[1] = ADCvalueLow0;
   639  0001AE  ECE5  F003         	call	_waitForSensor4	;wreg free
   640  0001B2  043D               	decf	?_waitForSensor4,w,c
   641  0001B4  103E               	iorwf	?_waitForSensor4+1,w,c
   642  0001B6  A4D8               	btfss	status,2,c
   643  0001B8  D00C               	goto	l2738
   644                           
   645                           ;MainCode.c: 181:                 sendCANmessage(0, message, 2);
   646  0001BA  ECE4  F004         	call	_getDistance4	;wreg free
   647  0001BE  0060  F0F4  F011   	movff	?_getDistance4,_distance4
   648  0001C4  0060  F0F8  F012   	movff	?_getDistance4+1,_distance4+1
   649                           
   650                           ;MainCode.c: 182:                 break;
   651  0001CA  0E00               	movlw	0
   652  0001CC  6E08               	movwf	_valid_distance4+1,c
   653  0001CE  0E01               	movlw	1
   654  0001D0  D007               	goto	L4
   655  0001D2                     l2738:
   656                           
   657                           ;MainCode.c: 185:                 message[1] = ADCvalueLow1;
   658  0001D2  0E00               	movlw	0
   659  0001D4  6E12               	movwf	_distance4+1,c
   660  0001D6  0E00               	movlw	0
   661  0001D8  6E11               	movwf	_distance4,c
   662                           
   663                           ;MainCode.c: 186:                 sendCANmessage(0, message, 2);
   664  0001DA  0E00               	movlw	0
   665  0001DC  6E08               	movwf	_valid_distance4+1,c
   666  0001DE  0E00               	movlw	0
   667  0001E0                     L4:
   668  0001E0  6E07               	movwf	_valid_distance4,c
   669                           
   670                           ;MainCode.c: 188:             case 3:
   671  0001E2  EC31  F006         	call	_wait10US	;wreg free
   672                           
   673                           ;MainCode.c: 190:                 message[1] = distance1 & 0xFF;
   674  0001E6  94CA               	bcf	16330,2,c	;volatile
   675                           
   676                           ;MainCode.c: 191:                 message[2] = valid_distance1;
   677  0001E8  EC16  F006         	call	_wait2US	;wreg free
   678                           
   679                           ;MainCode.c: 192:                 sendCANmessage(0, message, 3);
   680  0001EC  84CA               	bsf	16330,2,c	;volatile
   681                           
   682                           ;MainCode.c: 193:                 break;
   683  0001EE  EC31  F006         	call	_wait10US	;wreg free
   684                           
   685                           ;MainCode.c: 194:             case 4:
   686  0001F2  94CA               	bcf	16330,2,c	;volatile
   687                           
   688                           ;MainCode.c: 195:                 message[0] = distance2 >> 8 & 0xFF;
   689  0001F4  ECB2  F003         	call	_waitForSensor5	;wreg free
   690  0001F8  043D               	decf	?_waitForSensor5,w,c
   691  0001FA  103E               	iorwf	?_waitForSensor5+1,w,c
   692  0001FC  A4D8               	btfss	status,2,c
   693  0001FE  D00C               	goto	l2758
   694                           
   695                           ;MainCode.c: 196:                 message[1] = distance2 & 0xFF;
   696  000200  ECB1  F004         	call	_getDistance5	;wreg free
   697  000204  0060  F0F4  F00F   	movff	?_getDistance5,_distance5
   698  00020A  0060  F0F8  F010   	movff	?_getDistance5+1,_distance5+1
   699                           
   700                           ;MainCode.c: 197:                 message[2] = valid_distance2;
   701  000210  0E00               	movlw	0
   702  000212  6E06               	movwf	_valid_distance5+1,c
   703  000214  0E01               	movlw	1
   704  000216  D007               	goto	L5
   705  000218                     l2758:
   706                           
   707                           ;MainCode.c: 200:             case 5:
   708  000218  0E00               	movlw	0
   709  00021A  6E10               	movwf	_distance5+1,c
   710  00021C  0E00               	movlw	0
   711  00021E  6E0F               	movwf	_distance5,c
   712                           
   713                           ;MainCode.c: 201:                 message[0] = distance3 >> 8 & 0xFF;
   714  000220  0E00               	movlw	0
   715  000222  6E06               	movwf	_valid_distance5+1,c
   716  000224  0E00               	movlw	0
   717  000226                     L5:
   718  000226  6E05               	movwf	_valid_distance5,c
   719                           
   720                           ;MainCode.c: 203:                 message[2] = valid_distance3;
   721  000228  EC31  F006         	call	_wait10US	;wreg free
   722                           
   723                           ;MainCode.c: 204:                 sendCANmessage(0, message, 3);
   724  00022C  0E00               	movlw	0
   725  00022E  6E3E               	movwf	readADC@ch+1,c
   726  000230  0E00               	movlw	0
   727  000232  6E3D               	movwf	readADC@ch,c
   728  000234  ECF6  F005         	call	_readADC	;wreg free
   729  000238  0060  F0F4  F062   	movff	?_readADC,main@temp0
   730  00023E  0060  F0F8  F063   	movff	?_readADC+1,main@temp0+1
   731                           
   732                           ;MainCode.c: 205:                 break;
   733  000244  0E00               	movlw	0
   734  000246  6E3E               	movwf	readADC@ch+1,c
   735  000248  0E01               	movlw	1
   736  00024A  6E3D               	movwf	readADC@ch,c
   737  00024C  ECF6  F005         	call	_readADC	;wreg free
   738  000250  0060  F0F4  F064   	movff	?_readADC,main@temp1
   739  000256  0060  F0F8  F065   	movff	?_readADC+1,main@temp1+1
   740                           
   741                           ;MainCode.c: 206:             case 6:
   742  00025C  0060  F18C  F060   	movff	main@temp0+1,??_main
   743  000262  0100               	movlb	0	; () banked
   744  000264  6B61               	clrf	(??_main+1)& (0+255),b
   745  000266  BF60               	btfsc	??_main& (0+255),7,b
   746  000268  6961               	setf	(??_main+1)& (0+255),b
   747  00026A  5160               	movf	??_main& (0+255),w,b
   748  00026C  6E1F               	movwf	_ADCvalueHigh0,c
   749  00026E  6A20               	clrf	_ADCvalueHigh0+1,c
   750                           
   751                           ; BSR set to: 0
   752                           ;MainCode.c: 207:                 message[0] = distance4 >> 8 & 0xFF;
   753  000270  5162               	movf	main@temp0& (0+255),w,b
   754  000272  6E1D               	movwf	_ADCvalueLow0,c
   755  000274  6A1E               	clrf	_ADCvalueLow0+1,c
   756                           
   757                           ; BSR set to: 0
   758                           ;MainCode.c: 208:                 message[1] = distance4 & 0xFF;
   759  000276  0060  F194  F060   	movff	main@temp1+1,??_main
   760  00027C  6B61               	clrf	(??_main+1)& (0+255),b
   761  00027E  BF60               	btfsc	??_main& (0+255),7,b
   762  000280  6961               	setf	(??_main+1)& (0+255),b
   763  000282  5160               	movf	??_main& (0+255),w,b
   764  000284  6E1B               	movwf	_ADCvalueHigh1,c
   765  000286  6A1C               	clrf	_ADCvalueHigh1+1,c
   766                           
   767                           ; BSR set to: 0
   768                           ;MainCode.c: 209:                 message[2] = valid_distance4;
   769  000288  5164               	movf	main@temp1& (0+255),w,b
   770  00028A  6E19               	movwf	_ADCvalueLow1,c
   771  00028C  6A1A               	clrf	_ADCvalueLow1+1,c
   772                           
   773                           ; BSR set to: 0
   774                           ;MainCode.c: 210:                 sendCANmessage(0, message, 3);
   775  00028E  0E21               	movlw	low _con_perimeter
   776  000290  6E3D               	movwf	readI2C@conOK,c
   777  000292  0E00               	movlw	high _con_perimeter
   778  000294  6E3E               	movwf	readI2C@conOK+1,c
   779  000296  0E09               	movlw	9
   780  000298  EC47  F002         	call	_readI2C
   781  00029C  0060  F0F4  F003   	movff	?_readI2C,_perimeter
   782  0002A2  0060  F0F8  F004   	movff	?_readI2C+1,_perimeter+1
   783                           
   784                           ;MainCode.c: 211:                 break;
   785  0002A8  0E21               	movlw	low _con_perimeter
   786  0002AA  6E3D               	movwf	readI2C@conOK,c
   787  0002AC  0E00               	movlw	high _con_perimeter
   788  0002AE  6E3E               	movwf	readI2C@conOK+1,c
   789  0002B0  0E0A               	movlw	10
   790  0002B2  EC47  F002         	call	_readI2C
   791  0002B6  0060  F0F4  F001   	movff	?_readI2C,_sign_perimeter
   792  0002BC  0060  F0F8  F002   	movff	?_readI2C+1,_sign_perimeter+1
   793  0002C2  D705               	goto	l2662
   794  0002C4                     __end_of_main:
   795                           	opt callstack 0
   796                           
   797 ;; *************** function _waitForSensor5 *****************
   798 ;; Defined at:
   799 ;;		line 551 in file "MainCode.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;		None
   802 ;; Auto vars:     Size  Location     Type
   803 ;;  i               2   30[COMRAM] int 
   804 ;; Return value:  Size  Location     Type
   805 ;;                  2   26[COMRAM] int 
   806 ;; Registers used:
   807 ;;		wreg, status,2, status,0
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   813 ;;      Params:         2       0       0       0       0       0       0       0       0
   814 ;;      Locals:         2       0       0       0       0       0       0       0       0
   815 ;;      Temps:          2       0       0       0       0       0       0       0       0
   816 ;;      Totals:         6       0       0       0       0       0       0       0       0
   817 ;;Total ram usage:        6 bytes
   818 ;; Hardware stack levels used:    1
   819 ;; Hardware stack levels required when called:    2
   820 ;; This function calls:
   821 ;;		Nothing
   822 ;; This function is called by:
   823 ;;		_main
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           	psect	text1
   828  000764                     __ptext1:
   829                           	opt callstack 0
   830  000764                     _waitForSensor5:
   831                           	opt callstack 28
   832                           
   833                           ;MainCode.c: 552:     int i = 0;
   834                           
   835                           ;incstack = 0
   836  000764  0E00               	movlw	0
   837  000766  6E42               	movwf	waitForSensor5@i+1,c
   838  000768  0E00               	movlw	0
   839  00076A  6E41               	movwf	waitForSensor5@i,c
   840                           
   841                           ;MainCode.c: 553:     TMR1H = 0;
   842  00076C  0E00               	movlw	0
   843  00076E  6EB1               	movwf	16305,c	;volatile
   844                           
   845                           ;MainCode.c: 554:     TMR1L = 0;
   846  000770  0E00               	movlw	0
   847  000772  6EB0               	movwf	16304,c	;volatile
   848                           
   849                           ;MainCode.c: 555:     T1CONbits.TMR1ON = 1;
   850  000774  80B2               	bsf	16306,0,c	;volatile
   851                           
   852                           ;MainCode.c: 556:     while (!PORTAbits.RA4 && (i < 10000))
   853  000776  D00D               	goto	l2538
   854  000778                     l2536:
   855                           
   856                           ;MainCode.c: 557:         i = (TMR1H << 8) | TMR1L;
   857  000778  50B0               	movf	16304,w,c	;volatile
   858  00077A  006F FEC4  F03F    	movff	16305,??_waitForSensor5	;volatile
   859  000780  6A40               	clrf	(??_waitForSensor5+1)& (0+255),c
   860  000782  0060  F0FC  F040   	movff	??_waitForSensor5,??_waitForSensor5+1
   861  000788  6A3F               	clrf	??_waitForSensor5,c
   862  00078A  103F               	iorwf	??_waitForSensor5,w,c
   863  00078C  6E41               	movwf	waitForSensor5@i,c
   864  00078E  5040               	movf	??_waitForSensor5+1,w,c
   865  000790  6E42               	movwf	waitForSensor5@i+1,c
   866  000792                     l2538:
   867                           
   868                           ;MainCode.c: 556:     while (!PORTAbits.RA4 && (i < 10000))
   869  000792  B8CA               	btfsc	16330,4,c	;volatile
   870  000794  D008               	goto	u1420
   871  000796  BE42               	btfsc	waitForSensor5@i+1,7,c
   872  000798  D7EF               	goto	l2536
   873  00079A  0E10               	movlw	16
   874  00079C  5C41               	subwf	waitForSensor5@i,w,c
   875  00079E  0E27               	movlw	39
   876  0007A0  5842               	subwfb	waitForSensor5@i+1,w,c
   877  0007A2  A0D8               	btfss	status,0,c
   878  0007A4  D7E9               	goto	l2536
   879  0007A6                     u1420:
   880                           
   881                           ;MainCode.c: 558:     if (i >= 10000)
   882  0007A6  BE42               	btfsc	waitForSensor5@i+1,7,c
   883  0007A8  D00B               	goto	l2550
   884  0007AA  0E10               	movlw	16
   885  0007AC  5C41               	subwf	waitForSensor5@i,w,c
   886  0007AE  0E27               	movlw	39
   887  0007B0  5842               	subwfb	waitForSensor5@i+1,w,c
   888  0007B2  A0D8               	btfss	status,0,c
   889  0007B4  D005               	goto	l2550
   890                           
   891                           ;MainCode.c: 559:         return 0;
   892  0007B6  0E00               	movlw	0
   893  0007B8  6E3E               	movwf	?_waitForSensor5+1,c
   894  0007BA  0E00               	movlw	0
   895  0007BC  6E3D               	movwf	?_waitForSensor5,c
   896  0007BE  0012               	return	
   897  0007C0                     l2550:
   898                           
   899                           ;MainCode.c: 561:         return 1;
   900  0007C0  0E00               	movlw	0
   901  0007C2  6E3E               	movwf	?_waitForSensor5+1,c
   902  0007C4  0E01               	movlw	1
   903  0007C6  6E3D               	movwf	?_waitForSensor5,c
   904  0007C8  0012               	return		;funcret
   905  0007CA                     __end_of_waitForSensor5:
   906                           	opt callstack 0
   907                           
   908 ;; *************** function _waitForSensor4 *****************
   909 ;; Defined at:
   910 ;;		line 538 in file "MainCode.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;		None
   913 ;; Auto vars:     Size  Location     Type
   914 ;;  i               2   30[COMRAM] int 
   915 ;; Return value:  Size  Location     Type
   916 ;;                  2   26[COMRAM] int 
   917 ;; Registers used:
   918 ;;		wreg, status,2, status,0
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   924 ;;      Params:         2       0       0       0       0       0       0       0       0
   925 ;;      Locals:         2       0       0       0       0       0       0       0       0
   926 ;;      Temps:          2       0       0       0       0       0       0       0       0
   927 ;;      Totals:         6       0       0       0       0       0       0       0       0
   928 ;;Total ram usage:        6 bytes
   929 ;; Hardware stack levels used:    1
   930 ;; Hardware stack levels required when called:    2
   931 ;; This function calls:
   932 ;;		Nothing
   933 ;; This function is called by:
   934 ;;		_main
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           	psect	text2
   939  0007CA                     __ptext2:
   940                           	opt callstack 0
   941  0007CA                     _waitForSensor4:
   942                           	opt callstack 28
   943                           
   944                           ;MainCode.c: 539:     int i = 0;
   945                           
   946                           ;incstack = 0
   947  0007CA  0E00               	movlw	0
   948  0007CC  6E42               	movwf	waitForSensor4@i+1,c
   949  0007CE  0E00               	movlw	0
   950  0007D0  6E41               	movwf	waitForSensor4@i,c
   951                           
   952                           ;MainCode.c: 540:     TMR1H = 0;
   953  0007D2  0E00               	movlw	0
   954  0007D4  6EB1               	movwf	16305,c	;volatile
   955                           
   956                           ;MainCode.c: 541:     TMR1L = 0;
   957  0007D6  0E00               	movlw	0
   958  0007D8  6EB0               	movwf	16304,c	;volatile
   959                           
   960                           ;MainCode.c: 542:     T1CONbits.TMR1ON = 1;
   961  0007DA  80B2               	bsf	16306,0,c	;volatile
   962                           
   963                           ;MainCode.c: 543:     while (!PORTBbits.RB4 && (i < 10000))
   964  0007DC  D00D               	goto	l2502
   965  0007DE                     l2500:
   966                           
   967                           ;MainCode.c: 544:         i = (TMR1H << 8) | TMR1L;
   968  0007DE  50B0               	movf	16304,w,c	;volatile
   969  0007E0  006F FEC4  F03F    	movff	16305,??_waitForSensor4	;volatile
   970  0007E6  6A40               	clrf	(??_waitForSensor4+1)& (0+255),c
   971  0007E8  0060  F0FC  F040   	movff	??_waitForSensor4,??_waitForSensor4+1
   972  0007EE  6A3F               	clrf	??_waitForSensor4,c
   973  0007F0  103F               	iorwf	??_waitForSensor4,w,c
   974  0007F2  6E41               	movwf	waitForSensor4@i,c
   975  0007F4  5040               	movf	??_waitForSensor4+1,w,c
   976  0007F6  6E42               	movwf	waitForSensor4@i+1,c
   977  0007F8                     l2502:
   978                           
   979                           ;MainCode.c: 543:     while (!PORTBbits.RB4 && (i < 10000))
   980  0007F8  B8CB               	btfsc	16331,4,c	;volatile
   981  0007FA  D008               	goto	u1360
   982  0007FC  BE42               	btfsc	waitForSensor4@i+1,7,c
   983  0007FE  D7EF               	goto	l2500
   984  000800  0E10               	movlw	16
   985  000802  5C41               	subwf	waitForSensor4@i,w,c
   986  000804  0E27               	movlw	39
   987  000806  5842               	subwfb	waitForSensor4@i+1,w,c
   988  000808  A0D8               	btfss	status,0,c
   989  00080A  D7E9               	goto	l2500
   990  00080C                     u1360:
   991                           
   992                           ;MainCode.c: 545:     if (i >= 10000)
   993  00080C  BE42               	btfsc	waitForSensor4@i+1,7,c
   994  00080E  D00B               	goto	l2514
   995  000810  0E10               	movlw	16
   996  000812  5C41               	subwf	waitForSensor4@i,w,c
   997  000814  0E27               	movlw	39
   998  000816  5842               	subwfb	waitForSensor4@i+1,w,c
   999  000818  A0D8               	btfss	status,0,c
  1000  00081A  D005               	goto	l2514
  1001                           
  1002                           ;MainCode.c: 546:         return 0;
  1003  00081C  0E00               	movlw	0
  1004  00081E  6E3E               	movwf	?_waitForSensor4+1,c
  1005  000820  0E00               	movlw	0
  1006  000822  6E3D               	movwf	?_waitForSensor4,c
  1007  000824  0012               	return	
  1008  000826                     l2514:
  1009                           
  1010                           ;MainCode.c: 548:         return 1;
  1011  000826  0E00               	movlw	0
  1012  000828  6E3E               	movwf	?_waitForSensor4+1,c
  1013  00082A  0E01               	movlw	1
  1014  00082C  6E3D               	movwf	?_waitForSensor4,c
  1015  00082E  0012               	return		;funcret
  1016  000830                     __end_of_waitForSensor4:
  1017                           	opt callstack 0
  1018                           
  1019 ;; *************** function _waitForSensor3 *****************
  1020 ;; Defined at:
  1021 ;;		line 525 in file "MainCode.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;		None
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;  i               2   30[COMRAM] int 
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  2   26[COMRAM] int 
  1028 ;; Registers used:
  1029 ;;		wreg, status,2, status,0
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1035 ;;      Params:         2       0       0       0       0       0       0       0       0
  1036 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1037 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1038 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1039 ;;Total ram usage:        6 bytes
  1040 ;; Hardware stack levels used:    1
  1041 ;; Hardware stack levels required when called:    2
  1042 ;; This function calls:
  1043 ;;		Nothing
  1044 ;; This function is called by:
  1045 ;;		_main
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text3
  1050  000830                     __ptext3:
  1051                           	opt callstack 0
  1052  000830                     _waitForSensor3:
  1053                           	opt callstack 28
  1054                           
  1055                           ;MainCode.c: 526:     int i = 0;
  1056                           
  1057                           ;incstack = 0
  1058  000830  0E00               	movlw	0
  1059  000832  6E42               	movwf	waitForSensor3@i+1,c
  1060  000834  0E00               	movlw	0
  1061  000836  6E41               	movwf	waitForSensor3@i,c
  1062                           
  1063                           ;MainCode.c: 527:     TMR1H = 0;
  1064  000838  0E00               	movlw	0
  1065  00083A  6EB1               	movwf	16305,c	;volatile
  1066                           
  1067                           ;MainCode.c: 528:     TMR1L = 0;
  1068  00083C  0E00               	movlw	0
  1069  00083E  6EB0               	movwf	16304,c	;volatile
  1070                           
  1071                           ;MainCode.c: 529:     T1CONbits.TMR1ON = 1;
  1072  000840  80B2               	bsf	16306,0,c	;volatile
  1073                           
  1074                           ;MainCode.c: 530:     while (!PORTAbits.RA5 && (i < 10000))
  1075  000842  D00D               	goto	l2466
  1076  000844                     l2464:
  1077                           
  1078                           ;MainCode.c: 531:         i = (TMR1H << 8) | TMR1L;
  1079  000844  50B0               	movf	16304,w,c	;volatile
  1080  000846  006F FEC4  F03F    	movff	16305,??_waitForSensor3	;volatile
  1081  00084C  6A40               	clrf	(??_waitForSensor3+1)& (0+255),c
  1082  00084E  0060  F0FC  F040   	movff	??_waitForSensor3,??_waitForSensor3+1
  1083  000854  6A3F               	clrf	??_waitForSensor3,c
  1084  000856  103F               	iorwf	??_waitForSensor3,w,c
  1085  000858  6E41               	movwf	waitForSensor3@i,c
  1086  00085A  5040               	movf	??_waitForSensor3+1,w,c
  1087  00085C  6E42               	movwf	waitForSensor3@i+1,c
  1088  00085E                     l2466:
  1089                           
  1090                           ;MainCode.c: 530:     while (!PORTAbits.RA5 && (i < 10000))
  1091  00085E  BACA               	btfsc	16330,5,c	;volatile
  1092  000860  D008               	goto	u1300
  1093  000862  BE42               	btfsc	waitForSensor3@i+1,7,c
  1094  000864  D7EF               	goto	l2464
  1095  000866  0E10               	movlw	16
  1096  000868  5C41               	subwf	waitForSensor3@i,w,c
  1097  00086A  0E27               	movlw	39
  1098  00086C  5842               	subwfb	waitForSensor3@i+1,w,c
  1099  00086E  A0D8               	btfss	status,0,c
  1100  000870  D7E9               	goto	l2464
  1101  000872                     u1300:
  1102                           
  1103                           ;MainCode.c: 532:     if (i >= 10000)
  1104  000872  BE42               	btfsc	waitForSensor3@i+1,7,c
  1105  000874  D00B               	goto	l2478
  1106  000876  0E10               	movlw	16
  1107  000878  5C41               	subwf	waitForSensor3@i,w,c
  1108  00087A  0E27               	movlw	39
  1109  00087C  5842               	subwfb	waitForSensor3@i+1,w,c
  1110  00087E  A0D8               	btfss	status,0,c
  1111  000880  D005               	goto	l2478
  1112                           
  1113                           ;MainCode.c: 533:         return 0;
  1114  000882  0E00               	movlw	0
  1115  000884  6E3E               	movwf	?_waitForSensor3+1,c
  1116  000886  0E00               	movlw	0
  1117  000888  6E3D               	movwf	?_waitForSensor3,c
  1118  00088A  0012               	return	
  1119  00088C                     l2478:
  1120                           
  1121                           ;MainCode.c: 535:         return 1;
  1122  00088C  0E00               	movlw	0
  1123  00088E  6E3E               	movwf	?_waitForSensor3+1,c
  1124  000890  0E01               	movlw	1
  1125  000892  6E3D               	movwf	?_waitForSensor3,c
  1126  000894  0012               	return		;funcret
  1127  000896                     __end_of_waitForSensor3:
  1128                           	opt callstack 0
  1129                           
  1130 ;; *************** function _waitForSensor2 *****************
  1131 ;; Defined at:
  1132 ;;		line 512 in file "MainCode.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;		None
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;  i               2   30[COMRAM] int 
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  2   26[COMRAM] int 
  1139 ;; Registers used:
  1140 ;;		wreg, status,2, status,0
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1146 ;;      Params:         2       0       0       0       0       0       0       0       0
  1147 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1148 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1149 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1150 ;;Total ram usage:        6 bytes
  1151 ;; Hardware stack levels used:    1
  1152 ;; Hardware stack levels required when called:    2
  1153 ;; This function calls:
  1154 ;;		Nothing
  1155 ;; This function is called by:
  1156 ;;		_main
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           	psect	text4
  1161  000896                     __ptext4:
  1162                           	opt callstack 0
  1163  000896                     _waitForSensor2:
  1164                           	opt callstack 28
  1165                           
  1166                           ;MainCode.c: 513:     int i = 0;
  1167                           
  1168                           ;incstack = 0
  1169  000896  0E00               	movlw	0
  1170  000898  6E42               	movwf	waitForSensor2@i+1,c
  1171  00089A  0E00               	movlw	0
  1172  00089C  6E41               	movwf	waitForSensor2@i,c
  1173                           
  1174                           ;MainCode.c: 514:     TMR1H = 0;
  1175  00089E  0E00               	movlw	0
  1176  0008A0  6EB1               	movwf	16305,c	;volatile
  1177                           
  1178                           ;MainCode.c: 515:     TMR1L = 0;
  1179  0008A2  0E00               	movlw	0
  1180  0008A4  6EB0               	movwf	16304,c	;volatile
  1181                           
  1182                           ;MainCode.c: 516:     T1CONbits.TMR1ON = 1;
  1183  0008A6  80B2               	bsf	16306,0,c	;volatile
  1184                           
  1185                           ;MainCode.c: 517:     while (!PORTBbits.RB0 && (i < 10000))
  1186  0008A8  D00D               	goto	l2430
  1187  0008AA                     l2428:
  1188                           
  1189                           ;MainCode.c: 518:         i = (TMR1H << 8) | TMR1L;
  1190  0008AA  50B0               	movf	16304,w,c	;volatile
  1191  0008AC  006F FEC4  F03F    	movff	16305,??_waitForSensor2	;volatile
  1192  0008B2  6A40               	clrf	(??_waitForSensor2+1)& (0+255),c
  1193  0008B4  0060  F0FC  F040   	movff	??_waitForSensor2,??_waitForSensor2+1
  1194  0008BA  6A3F               	clrf	??_waitForSensor2,c
  1195  0008BC  103F               	iorwf	??_waitForSensor2,w,c
  1196  0008BE  6E41               	movwf	waitForSensor2@i,c
  1197  0008C0  5040               	movf	??_waitForSensor2+1,w,c
  1198  0008C2  6E42               	movwf	waitForSensor2@i+1,c
  1199  0008C4                     l2430:
  1200                           
  1201                           ;MainCode.c: 517:     while (!PORTBbits.RB0 && (i < 10000))
  1202  0008C4  B0CB               	btfsc	16331,0,c	;volatile
  1203  0008C6  D008               	goto	u1240
  1204  0008C8  BE42               	btfsc	waitForSensor2@i+1,7,c
  1205  0008CA  D7EF               	goto	l2428
  1206  0008CC  0E10               	movlw	16
  1207  0008CE  5C41               	subwf	waitForSensor2@i,w,c
  1208  0008D0  0E27               	movlw	39
  1209  0008D2  5842               	subwfb	waitForSensor2@i+1,w,c
  1210  0008D4  A0D8               	btfss	status,0,c
  1211  0008D6  D7E9               	goto	l2428
  1212  0008D8                     u1240:
  1213                           
  1214                           ;MainCode.c: 519:     if (i >= 10000)
  1215  0008D8  BE42               	btfsc	waitForSensor2@i+1,7,c
  1216  0008DA  D00B               	goto	l2442
  1217  0008DC  0E10               	movlw	16
  1218  0008DE  5C41               	subwf	waitForSensor2@i,w,c
  1219  0008E0  0E27               	movlw	39
  1220  0008E2  5842               	subwfb	waitForSensor2@i+1,w,c
  1221  0008E4  A0D8               	btfss	status,0,c
  1222  0008E6  D005               	goto	l2442
  1223                           
  1224                           ;MainCode.c: 520:         return 0;
  1225  0008E8  0E00               	movlw	0
  1226  0008EA  6E3E               	movwf	?_waitForSensor2+1,c
  1227  0008EC  0E00               	movlw	0
  1228  0008EE  6E3D               	movwf	?_waitForSensor2,c
  1229  0008F0  0012               	return	
  1230  0008F2                     l2442:
  1231                           
  1232                           ;MainCode.c: 522:         return 1;
  1233  0008F2  0E00               	movlw	0
  1234  0008F4  6E3E               	movwf	?_waitForSensor2+1,c
  1235  0008F6  0E01               	movlw	1
  1236  0008F8  6E3D               	movwf	?_waitForSensor2,c
  1237  0008FA  0012               	return		;funcret
  1238  0008FC                     __end_of_waitForSensor2:
  1239                           	opt callstack 0
  1240                           
  1241 ;; *************** function _waitForSensor1 *****************
  1242 ;; Defined at:
  1243 ;;		line 499 in file "MainCode.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;		None
  1246 ;; Auto vars:     Size  Location     Type
  1247 ;;  i               2   30[COMRAM] int 
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  2   26[COMRAM] int 
  1250 ;; Registers used:
  1251 ;;		wreg, status,2, status,0
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1257 ;;      Params:         2       0       0       0       0       0       0       0       0
  1258 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1259 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1260 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1261 ;;Total ram usage:        6 bytes
  1262 ;; Hardware stack levels used:    1
  1263 ;; Hardware stack levels required when called:    2
  1264 ;; This function calls:
  1265 ;;		Nothing
  1266 ;; This function is called by:
  1267 ;;		_main
  1268 ;; This function uses a non-reentrant model
  1269 ;;
  1270                           
  1271                           	psect	text5
  1272  0008FC                     __ptext5:
  1273                           	opt callstack 0
  1274  0008FC                     _waitForSensor1:
  1275                           	opt callstack 28
  1276                           
  1277                           ;MainCode.c: 500:     int i = 0;
  1278                           
  1279                           ;incstack = 0
  1280  0008FC  0E00               	movlw	0
  1281  0008FE  6E42               	movwf	waitForSensor1@i+1,c
  1282  000900  0E00               	movlw	0
  1283  000902  6E41               	movwf	waitForSensor1@i,c
  1284                           
  1285                           ;MainCode.c: 501:     TMR1H = 0;
  1286  000904  0E00               	movlw	0
  1287  000906  6EB1               	movwf	16305,c	;volatile
  1288                           
  1289                           ;MainCode.c: 502:     TMR1L = 0;
  1290  000908  0E00               	movlw	0
  1291  00090A  6EB0               	movwf	16304,c	;volatile
  1292                           
  1293                           ;MainCode.c: 503:     T1CONbits.TMR1ON = 1;
  1294  00090C  80B2               	bsf	16306,0,c	;volatile
  1295                           
  1296                           ;MainCode.c: 504:     while (!PORTBbits.RB1 && (i < 10000))
  1297  00090E  D00D               	goto	l2394
  1298  000910                     l2392:
  1299                           
  1300                           ;MainCode.c: 505:         i = (TMR1H << 8) | TMR1L;
  1301  000910  50B0               	movf	16304,w,c	;volatile
  1302  000912  006F FEC4  F03F    	movff	16305,??_waitForSensor1	;volatile
  1303  000918  6A40               	clrf	(??_waitForSensor1+1)& (0+255),c
  1304  00091A  0060  F0FC  F040   	movff	??_waitForSensor1,??_waitForSensor1+1
  1305  000920  6A3F               	clrf	??_waitForSensor1,c
  1306  000922  103F               	iorwf	??_waitForSensor1,w,c
  1307  000924  6E41               	movwf	waitForSensor1@i,c
  1308  000926  5040               	movf	??_waitForSensor1+1,w,c
  1309  000928  6E42               	movwf	waitForSensor1@i+1,c
  1310  00092A                     l2394:
  1311                           
  1312                           ;MainCode.c: 504:     while (!PORTBbits.RB1 && (i < 10000))
  1313  00092A  B2CB               	btfsc	16331,1,c	;volatile
  1314  00092C  D008               	goto	u1180
  1315  00092E  BE42               	btfsc	waitForSensor1@i+1,7,c
  1316  000930  D7EF               	goto	l2392
  1317  000932  0E10               	movlw	16
  1318  000934  5C41               	subwf	waitForSensor1@i,w,c
  1319  000936  0E27               	movlw	39
  1320  000938  5842               	subwfb	waitForSensor1@i+1,w,c
  1321  00093A  A0D8               	btfss	status,0,c
  1322  00093C  D7E9               	goto	l2392
  1323  00093E                     u1180:
  1324                           
  1325                           ;MainCode.c: 506:     if (i >= 10000)
  1326  00093E  BE42               	btfsc	waitForSensor1@i+1,7,c
  1327  000940  D00B               	goto	l2406
  1328  000942  0E10               	movlw	16
  1329  000944  5C41               	subwf	waitForSensor1@i,w,c
  1330  000946  0E27               	movlw	39
  1331  000948  5842               	subwfb	waitForSensor1@i+1,w,c
  1332  00094A  A0D8               	btfss	status,0,c
  1333  00094C  D005               	goto	l2406
  1334                           
  1335                           ;MainCode.c: 507:         return 0;
  1336  00094E  0E00               	movlw	0
  1337  000950  6E3E               	movwf	?_waitForSensor1+1,c
  1338  000952  0E00               	movlw	0
  1339  000954  6E3D               	movwf	?_waitForSensor1,c
  1340  000956  0012               	return	
  1341  000958                     l2406:
  1342                           
  1343                           ;MainCode.c: 509:         return 1;
  1344  000958  0E00               	movlw	0
  1345  00095A  6E3E               	movwf	?_waitForSensor1+1,c
  1346  00095C  0E01               	movlw	1
  1347  00095E  6E3D               	movwf	?_waitForSensor1,c
  1348  000960  0012               	return		;funcret
  1349  000962                     __end_of_waitForSensor1:
  1350                           	opt callstack 0
  1351                           
  1352 ;; *************** function _wait2US *****************
  1353 ;; Defined at:
  1354 ;;		line 649 in file "MainCode.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;		None
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;  i               4   26[COMRAM] long 
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  1    wreg      void 
  1361 ;; Registers used:
  1362 ;;		wreg, status,2, status,0
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1368 ;;      Params:         0       0       0       0       0       0       0       0       0
  1369 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1370 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1371 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1372 ;;Total ram usage:        4 bytes
  1373 ;; Hardware stack levels used:    1
  1374 ;; Hardware stack levels required when called:    2
  1375 ;; This function calls:
  1376 ;;		Nothing
  1377 ;; This function is called by:
  1378 ;;		_main
  1379 ;; This function uses a non-reentrant model
  1380 ;;
  1381                           
  1382                           	psect	text6
  1383  000C2C                     __ptext6:
  1384                           	opt callstack 0
  1385  000C2C                     _wait2US:
  1386                           	opt callstack 28
  1387                           
  1388                           ;MainCode.c: 650:     for (long i = 0; i < 2; i++) {
  1389                           
  1390                           ;incstack = 0
  1391  000C2C  0E00               	movlw	0
  1392  000C2E  6E3D               	movwf	wait2US@i,c
  1393  000C30  0E00               	movlw	0
  1394  000C32  6E3E               	movwf	wait2US@i+1,c
  1395  000C34  0E00               	movlw	0
  1396  000C36  6E3F               	movwf	wait2US@i+2,c
  1397  000C38  0E00               	movlw	0
  1398  000C3A  6E40               	movwf	wait2US@i+3,c
  1399  000C3C                     l409:
  1400                           
  1401                           ;MainCode.c: 651:         __nop();
  1402  000C3C  F000               	nop	
  1403                           
  1404                           ;MainCode.c: 652:     }
  1405  000C3E  0E01               	movlw	1
  1406  000C40  263D               	addwf	wait2US@i,f,c
  1407  000C42  0E00               	movlw	0
  1408  000C44  223E               	addwfc	wait2US@i+1,f,c
  1409  000C46  223F               	addwfc	wait2US@i+2,f,c
  1410  000C48  2240               	addwfc	wait2US@i+3,f,c
  1411  000C4A  BE40               	btfsc	wait2US@i+3,7,c
  1412  000C4C  D7F7               	goto	l409
  1413  000C4E  5040               	movf	wait2US@i+3,w,c
  1414  000C50  103F               	iorwf	wait2US@i+2,w,c
  1415  000C52  103E               	iorwf	wait2US@i+1,w,c
  1416  000C54  E105               	bnz	u1150
  1417  000C56  0E02               	movlw	2
  1418  000C58  5C3D               	subwf	wait2US@i,w,c
  1419  000C5A  B0D8               	btfsc	status,0,c
  1420  000C5C  0012               	return	
  1421  000C5E  D7EE               	goto	l409
  1422  000C60                     u1150:
  1423  000C60  0012               	return		;funcret
  1424  000C62                     __end_of_wait2US:
  1425                           	opt callstack 0
  1426                           
  1427 ;; *************** function _wait10US *****************
  1428 ;; Defined at:
  1429 ;;		line 655 in file "MainCode.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;		None
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;  i               4   26[COMRAM] long 
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  1    wreg      void 
  1436 ;; Registers used:
  1437 ;;		wreg, status,2, status,0
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1443 ;;      Params:         0       0       0       0       0       0       0       0       0
  1444 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1445 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1446 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1447 ;;Total ram usage:        4 bytes
  1448 ;; Hardware stack levels used:    1
  1449 ;; Hardware stack levels required when called:    2
  1450 ;; This function calls:
  1451 ;;		Nothing
  1452 ;; This function is called by:
  1453 ;;		_main
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457                           	psect	text7
  1458  000C62                     __ptext7:
  1459                           	opt callstack 0
  1460  000C62                     _wait10US:
  1461                           	opt callstack 28
  1462                           
  1463                           ;MainCode.c: 656:     for (long i = 0; i < 6; i++) {
  1464                           
  1465                           ;incstack = 0
  1466  000C62  0E00               	movlw	0
  1467  000C64  6E3D               	movwf	wait10US@i,c
  1468  000C66  0E00               	movlw	0
  1469  000C68  6E3E               	movwf	wait10US@i+1,c
  1470  000C6A  0E00               	movlw	0
  1471  000C6C  6E3F               	movwf	wait10US@i+2,c
  1472  000C6E  0E00               	movlw	0
  1473  000C70  6E40               	movwf	wait10US@i+3,c
  1474  000C72                     l414:
  1475                           
  1476                           ;MainCode.c: 657:         __nop();
  1477  000C72  F000               	nop	
  1478                           
  1479                           ;MainCode.c: 658:     }
  1480  000C74  0E01               	movlw	1
  1481  000C76  263D               	addwf	wait10US@i,f,c
  1482  000C78  0E00               	movlw	0
  1483  000C7A  223E               	addwfc	wait10US@i+1,f,c
  1484  000C7C  223F               	addwfc	wait10US@i+2,f,c
  1485  000C7E  2240               	addwfc	wait10US@i+3,f,c
  1486  000C80  BE40               	btfsc	wait10US@i+3,7,c
  1487  000C82  D7F7               	goto	l414
  1488  000C84  5040               	movf	wait10US@i+3,w,c
  1489  000C86  103F               	iorwf	wait10US@i+2,w,c
  1490  000C88  103E               	iorwf	wait10US@i+1,w,c
  1491  000C8A  E105               	bnz	u1160
  1492  000C8C  0E06               	movlw	6
  1493  000C8E  5C3D               	subwf	wait10US@i,w,c
  1494  000C90  B0D8               	btfsc	status,0,c
  1495  000C92  0012               	return	
  1496  000C94  D7EE               	goto	l414
  1497  000C96                     u1160:
  1498  000C96  0012               	return		;funcret
  1499  000C98                     __end_of_wait10US:
  1500                           	opt callstack 0
  1501                           
  1502 ;; *************** function _readI2C *****************
  1503 ;; Defined at:
  1504 ;;		line 312 in file "MainCode.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;  reg             1    wreg     unsigned char 
  1507 ;;  conOK           2   26[COMRAM] PTR int 
  1508 ;;		 -> con_perimeter(2), 
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;  reg             1   28[COMRAM] unsigned char 
  1511 ;;  counter         2   32[COMRAM] int 
  1512 ;;  tmpOK           2   30[COMRAM] int 
  1513 ;;  data            1   29[COMRAM] unsigned char 
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  2   26[COMRAM] int 
  1516 ;; Registers used:
  1517 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1523 ;;      Params:         2       0       0       0       0       0       0       0       0
  1524 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1525 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1526 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1527 ;;Total ram usage:        8 bytes
  1528 ;; Hardware stack levels used:    1
  1529 ;; Hardware stack levels required when called:    2
  1530 ;; This function calls:
  1531 ;;		Nothing
  1532 ;; This function is called by:
  1533 ;;		_main
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537                           	psect	text8
  1538  00048E                     __ptext8:
  1539                           	opt callstack 0
  1540  00048E                     _readI2C:
  1541                           	opt callstack 28
  1542                           
  1543                           ;incstack = 0
  1544                           ;readI2C@reg stored from wreg
  1545  00048E  6E3F               	movwf	readI2C@reg,c
  1546                           
  1547                           ;MainCode.c: 328:     I2C1STAT1bits.TXWE = 0;
  1548  000490  013D               	movlb	61	; () banked
  1549  000492  9F78               	bcf	120,7,b	;volatile
  1550                           
  1551                           ;MainCode.c: 329:     I2C1STAT1bits.RXRE = 0;
  1552  000494  9778               	bcf	120,3,b	;volatile
  1553                           
  1554                           ; BSR set to: 61
  1555                           ;MainCode.c: 330:     unsigned char data;;MainCode.c: 331:     int tmpOK = 1;
  1556  000496  0E00               	movlw	0
  1557  000498  6E42               	movwf	readI2C@tmpOK+1,c
  1558  00049A  0E01               	movlw	1
  1559  00049C  6E41               	movwf	readI2C@tmpOK,c
  1560                           
  1561                           ;MainCode.c: 332:     I2C1ADB1 = 0X10;
  1562  00049E  0E10               	movlw	16
  1563  0004A0  6F6E               	movwf	110,b	;volatile
  1564                           
  1565                           ; BSR set to: 61
  1566                           ;MainCode.c: 333:     I2C1TXB = reg;
  1567  0004A2  0060  F0FF  FD6B   	movff	readI2C@reg,15723	;volatile
  1568  0004A8                     l275:
  1569                           
  1570                           ; BSR set to: 61
  1571  0004A8  AF77               	btfss	119,7,b	;volatile
  1572  0004AA  D7FE               	goto	l275
  1573                           
  1574                           ; BSR set to: 61
  1575                           ;MainCode.c: 335:     I2C1CNT = 1;
  1576  0004AC  0E01               	movlw	1
  1577  0004AE  6F6C               	movwf	108,b	;volatile
  1578                           
  1579                           ; BSR set to: 61
  1580                           ;MainCode.c: 336:     I2C1CON0bits.RSEN = 1;
  1581  0004B0  8D73               	bsf	115,6,b	;volatile
  1582                           
  1583                           ; BSR set to: 61
  1584                           ;MainCode.c: 337:     I2C1CON0bits.S = 1;
  1585  0004B2  8B73               	bsf	115,5,b	;volatile
  1586                           
  1587                           ;MainCode.c: 338:     int counter = 0;
  1588  0004B4  0E00               	movlw	0
  1589  0004B6  6E44               	movwf	readI2C@counter+1,c
  1590  0004B8  0E00               	movlw	0
  1591  0004BA  6E43               	movwf	readI2C@counter,c
  1592                           
  1593                           ;MainCode.c: 339:     while (!I2C1CON0bits.MDR && counter < 25000) {
  1594  0004BC  D002               	goto	l2596
  1595  0004BE                     l2594:
  1596                           
  1597                           ; BSR set to: 61
  1598                           ;MainCode.c: 340:         counter++;
  1599  0004BE  4A43               	infsnz	readI2C@counter,f,c
  1600  0004C0  2A44               	incf	readI2C@counter+1,f,c
  1601  0004C2                     l2596:
  1602                           
  1603                           ; BSR set to: 61
  1604                           ;MainCode.c: 339:     while (!I2C1CON0bits.MDR && counter < 25000) {
  1605  0004C2  B773               	btfsc	115,3,b	;volatile
  1606  0004C4  D008               	goto	u1520
  1607                           
  1608                           ; BSR set to: 61
  1609  0004C6  BE44               	btfsc	readI2C@counter+1,7,c
  1610  0004C8  D7FA               	goto	l2594
  1611  0004CA  0EA8               	movlw	168
  1612  0004CC  5C43               	subwf	readI2C@counter,w,c
  1613  0004CE  0E61               	movlw	97
  1614  0004D0  5844               	subwfb	readI2C@counter+1,w,c
  1615  0004D2  A0D8               	btfss	status,0,c
  1616  0004D4  D7F4               	goto	l2594
  1617  0004D6                     u1520:
  1618                           
  1619                           ; BSR set to: 61
  1620                           ;MainCode.c: 342:     if (counter >= 25000) tmpOK = 0;
  1621  0004D6  BE44               	btfsc	readI2C@counter+1,7,c
  1622  0004D8  D00A               	goto	l283
  1623  0004DA  0EA8               	movlw	168
  1624  0004DC  5C43               	subwf	readI2C@counter,w,c
  1625  0004DE  0E61               	movlw	97
  1626  0004E0  5844               	subwfb	readI2C@counter+1,w,c
  1627  0004E2  A0D8               	btfss	status,0,c
  1628  0004E4  D004               	goto	l283
  1629                           
  1630                           ; BSR set to: 61
  1631  0004E6  0E00               	movlw	0
  1632  0004E8  6E42               	movwf	readI2C@tmpOK+1,c
  1633  0004EA  0E00               	movlw	0
  1634  0004EC  6E41               	movwf	readI2C@tmpOK,c
  1635  0004EE                     l283:
  1636                           
  1637                           ; BSR set to: 61
  1638                           ;MainCode.c: 346:     I2C1ADB1 = (0x11);
  1639  0004EE  0E11               	movlw	17
  1640  0004F0  6F6E               	movwf	110,b	;volatile
  1641                           
  1642                           ;MainCode.c: 347:     I2C1CNT = 1;
  1643  0004F2  0E01               	movlw	1
  1644  0004F4  6F6C               	movwf	108,b	;volatile
  1645                           
  1646                           ; BSR set to: 61
  1647                           ;MainCode.c: 348:     I2C1CON0bits.S = 1;
  1648  0004F6  8B73               	bsf	115,5,b	;volatile
  1649                           
  1650                           ; BSR set to: 61
  1651                           ;MainCode.c: 349:     I2C1CON0bits.RSEN = 0;
  1652  0004F8  9D73               	bcf	115,6,b	;volatile
  1653                           
  1654                           ;MainCode.c: 350:     counter = 0;
  1655  0004FA  0E00               	movlw	0
  1656  0004FC  6E44               	movwf	readI2C@counter+1,c
  1657  0004FE  0E00               	movlw	0
  1658  000500  6E43               	movwf	readI2C@counter,c
  1659                           
  1660                           ;MainCode.c: 351:     while (!I2C1STAT1bits.RXBF && counter < 25000) {
  1661  000502  D002               	goto	l2610
  1662  000504                     l2608:
  1663                           
  1664                           ; BSR set to: 61
  1665                           ;MainCode.c: 352:         counter++;
  1666  000504  4A43               	infsnz	readI2C@counter,f,c
  1667  000506  2A44               	incf	readI2C@counter+1,f,c
  1668  000508                     l2610:
  1669                           
  1670                           ; BSR set to: 61
  1671                           ;MainCode.c: 351:     while (!I2C1STAT1bits.RXBF && counter < 25000) {
  1672  000508  B178               	btfsc	120,0,b	;volatile
  1673  00050A  D008               	goto	u1550
  1674                           
  1675                           ; BSR set to: 61
  1676  00050C  BE44               	btfsc	readI2C@counter+1,7,c
  1677  00050E  D7FA               	goto	l2608
  1678  000510  0EA8               	movlw	168
  1679  000512  5C43               	subwf	readI2C@counter,w,c
  1680  000514  0E61               	movlw	97
  1681  000516  5844               	subwfb	readI2C@counter+1,w,c
  1682  000518  A0D8               	btfss	status,0,c
  1683  00051A  D7F4               	goto	l2608
  1684  00051C                     u1550:
  1685                           
  1686                           ; BSR set to: 61
  1687                           ;MainCode.c: 354:     if (counter >= 25000) tmpOK = 0;
  1688  00051C  BE44               	btfsc	readI2C@counter+1,7,c
  1689  00051E  D00B               	goto	l289
  1690  000520  0EA8               	movlw	168
  1691  000522  5C43               	subwf	readI2C@counter,w,c
  1692  000524  0E61               	movlw	97
  1693  000526  5844               	subwfb	readI2C@counter+1,w,c
  1694  000528  A0D8               	btfss	status,0,c
  1695  00052A  D005               	goto	l289
  1696                           
  1697                           ; BSR set to: 61
  1698  00052C  0E00               	movlw	0
  1699  00052E  6E42               	movwf	readI2C@tmpOK+1,c
  1700  000530  0E00               	movlw	0
  1701  000532  6E41               	movwf	readI2C@tmpOK,c
  1702  000534  D003               	goto	l2618
  1703  000536                     l289:
  1704                           
  1705                           ; BSR set to: 61
  1706  000536  006F F5A8  F040    	movff	15722,readI2C@data	;volatile
  1707  00053C                     l2618:
  1708                           
  1709                           ; BSR set to: 61
  1710                           ;MainCode.c: 362:     counter = 0;
  1711  00053C  0E00               	movlw	0
  1712  00053E  6E44               	movwf	readI2C@counter+1,c
  1713  000540  0E00               	movlw	0
  1714  000542  6E43               	movwf	readI2C@counter,c
  1715                           
  1716                           ;MainCode.c: 363:     while (!I2C1PIRbits.PCIF && counter < 25000) {
  1717  000544  D002               	goto	l2622
  1718  000546                     l2620:
  1719                           
  1720                           ; BSR set to: 61
  1721                           ;MainCode.c: 364:         counter++;
  1722  000546  4A43               	infsnz	readI2C@counter,f,c
  1723  000548  2A44               	incf	readI2C@counter+1,f,c
  1724  00054A                     l2622:
  1725                           
  1726                           ; BSR set to: 61
  1727                           ;MainCode.c: 363:     while (!I2C1PIRbits.PCIF && counter < 25000) {
  1728  00054A  B579               	btfsc	121,2,b	;volatile
  1729  00054C  D008               	goto	u1580
  1730                           
  1731                           ; BSR set to: 61
  1732  00054E  BE44               	btfsc	readI2C@counter+1,7,c
  1733  000550  D7FA               	goto	l2620
  1734  000552  0EA8               	movlw	168
  1735  000554  5C43               	subwf	readI2C@counter,w,c
  1736  000556  0E61               	movlw	97
  1737  000558  5844               	subwfb	readI2C@counter+1,w,c
  1738  00055A  A0D8               	btfss	status,0,c
  1739  00055C  D7F4               	goto	l2620
  1740  00055E                     u1580:
  1741                           
  1742                           ; BSR set to: 61
  1743                           ;MainCode.c: 366:     if (counter >= 25000) tmpOK = 0;
  1744  00055E  BE44               	btfsc	readI2C@counter+1,7,c
  1745  000560  D00A               	goto	l2630
  1746  000562  0EA8               	movlw	168
  1747  000564  5C43               	subwf	readI2C@counter,w,c
  1748  000566  0E61               	movlw	97
  1749  000568  5844               	subwfb	readI2C@counter+1,w,c
  1750  00056A  A0D8               	btfss	status,0,c
  1751  00056C  D004               	goto	l2630
  1752                           
  1753                           ; BSR set to: 61
  1754  00056E  0E00               	movlw	0
  1755  000570  6E42               	movwf	readI2C@tmpOK+1,c
  1756  000572  0E00               	movlw	0
  1757  000574  6E41               	movwf	readI2C@tmpOK,c
  1758  000576                     l2630:
  1759                           
  1760                           ; BSR set to: 61
  1761                           ;MainCode.c: 369:     I2C1PIRbits.PCIF = 0;
  1762  000576  9579               	bcf	121,2,b	;volatile
  1763                           
  1764                           ; BSR set to: 61
  1765                           ;MainCode.c: 370:     I2C1PIRbits.SCIF = 0;
  1766  000578  9179               	bcf	121,0,b	;volatile
  1767                           
  1768                           ; BSR set to: 61
  1769                           ;MainCode.c: 371:     I2C1STAT1bits.CLRBF = 1;
  1770  00057A  8578               	bsf	120,2,b	;volatile
  1771                           
  1772                           ; BSR set to: 61
  1773                           ;MainCode.c: 372:     * conOK = tmpOK;
  1774  00057C  0060  F0F7  FFD9   	movff	readI2C@conOK,fsr2l
  1775  000582  0060  F0FB  FFDA   	movff	readI2C@conOK+1,fsr2h
  1776  000588  0060  F107  FFDE   	movff	readI2C@tmpOK,postinc2
  1777  00058E  0060  F10B  FFDD   	movff	readI2C@tmpOK+1,postdec2
  1778                           
  1779                           ; BSR set to: 61
  1780                           ;MainCode.c: 373:     return data;
  1781  000594  0060  F100  F03D   	movff	readI2C@data,?_readI2C
  1782  00059A  6A3E               	clrf	?_readI2C+1,c
  1783                           
  1784                           ; BSR set to: 61
  1785  00059C  0012               	return		;funcret
  1786  00059E                     __end_of_readI2C:
  1787                           	opt callstack 0
  1788                           
  1789 ;; *************** function _readADC *****************
  1790 ;; Defined at:
  1791 ;;		line 733 in file "MainCode.c"
  1792 ;; Parameters:    Size  Location     Type
  1793 ;;  ch              2   26[COMRAM] int 
  1794 ;; Auto vars:     Size  Location     Type
  1795 ;;		None
  1796 ;; Return value:  Size  Location     Type
  1797 ;;                  2   26[COMRAM] int 
  1798 ;; Registers used:
  1799 ;;		wreg, status,2, status,0
  1800 ;; Tracked objects:
  1801 ;;		On entry : 0/0
  1802 ;;		On exit  : 0/0
  1803 ;;		Unchanged: 0/0
  1804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1805 ;;      Params:         2       0       0       0       0       0       0       0       0
  1806 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1807 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1808 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1809 ;;Total ram usage:        4 bytes
  1810 ;; Hardware stack levels used:    1
  1811 ;; Hardware stack levels required when called:    2
  1812 ;; This function calls:
  1813 ;;		Nothing
  1814 ;; This function is called by:
  1815 ;;		_main
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           	psect	text9
  1820  000BEC                     __ptext9:
  1821                           	opt callstack 0
  1822  000BEC                     _readADC:
  1823                           	opt callstack 28
  1824                           
  1825                           ;MainCode.c: 734:     if (ch == 0) ADPCHbits.ADPCH = 0b010110;
  1826                           
  1827                           ; BSR set to: 61
  1828                           ;incstack = 0
  1829  000BEC  503D               	movf	readADC@ch,w,c
  1830  000BEE  103E               	iorwf	readADC@ch+1,w,c
  1831  000BF0  A4D8               	btfss	status,2,c
  1832  000BF2  D005               	goto	l2572
  1833  000BF4  013E               	movlb	62	; () banked
  1834  000BF6  51F1               	movf	241,w,b	;volatile
  1835  000BF8  0BC0               	andlw	-64
  1836  000BFA  0916               	iorlw	22
  1837  000BFC  D008               	goto	L6
  1838  000BFE                     l2572:
  1839  000BFE  043D               	decf	readADC@ch,w,c
  1840  000C00  103E               	iorwf	readADC@ch+1,w,c
  1841  000C02  A4D8               	btfss	status,2,c
  1842  000C04  D005               	goto	l2576
  1843  000C06  013E               	movlb	62	; () banked
  1844  000C08  51F1               	movf	241,w,b	;volatile
  1845  000C0A  0BC0               	andlw	-64
  1846  000C0C  0915               	iorlw	21
  1847  000C0E                     L6:
  1848  000C0E  6FF1               	movwf	241,b	;volatile
  1849  000C10                     l2576:
  1850                           
  1851                           ;MainCode.c: 736:     ADCON0bits.GO = 1;
  1852  000C10  013E               	movlb	62	; () banked
  1853  000C12  81F8               	bsf	248,0,b	;volatile
  1854  000C14                     l437:
  1855                           
  1856                           ; BSR set to: 62
  1857  000C14  B1F8               	btfsc	248,0,b	;volatile
  1858  000C16  D7FE               	goto	l437
  1859                           
  1860                           ; BSR set to: 62
  1861                           ;MainCode.c: 738:     return (ADRESH << 8) +ADRESL;
  1862  000C18  51F0               	movf	240,w,b	;volatile
  1863  000C1A  6E40               	movwf	(??_readADC+1)& (0+255),c
  1864  000C1C  6A3F               	clrf	??_readADC& (0+255),c
  1865  000C1E  51EF               	movf	239,w,b	;volatile
  1866  000C20  243F               	addwf	??_readADC,w,c
  1867  000C22  6E3D               	movwf	?_readADC,c
  1868  000C24  0E00               	movlw	0
  1869  000C26  2040               	addwfc	??_readADC+1,w,c
  1870  000C28  6E3E               	movwf	?_readADC+1,c
  1871                           
  1872                           ; BSR set to: 62
  1873  000C2A  0012               	return		;funcret
  1874  000C2C                     __end_of_readADC:
  1875                           	opt callstack 0
  1876                           
  1877 ;; *************** function _initI2C *****************
  1878 ;; Defined at:
  1879 ;;		line 376 in file "MainCode.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;		None
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;  state           2   26[COMRAM] int 
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      void 
  1886 ;; Registers used:
  1887 ;;		wreg, status,2
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1893 ;;      Params:         0       0       0       0       0       0       0       0       0
  1894 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1895 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1896 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1897 ;;Total ram usage:        2 bytes
  1898 ;; Hardware stack levels used:    1
  1899 ;; Hardware stack levels required when called:    2
  1900 ;; This function calls:
  1901 ;;		Nothing
  1902 ;; This function is called by:
  1903 ;;		_main
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907                           	psect	text10
  1908  000674                     __ptext10:
  1909                           	opt callstack 0
  1910  000674                     _initI2C:
  1911                           	opt callstack 28
  1912                           
  1913                           ;MainCode.c: 377:     LATCbits.LATC3 = 0;
  1914                           
  1915                           ; BSR set to: 62
  1916                           ;incstack = 0
  1917  000674  96BC               	bcf	16316,3,c	;volatile
  1918                           
  1919                           ;MainCode.c: 378:     LATCbits.LATC4 = 0;
  1920  000676  98BC               	bcf	16316,4,c	;volatile
  1921                           
  1922                           ;MainCode.c: 379:     TRISCbits.TRISC3 = 0;
  1923  000678  96C4               	bcf	16324,3,c	;volatile
  1924                           
  1925                           ;MainCode.c: 380:     TRISCbits.TRISC4 = 0;
  1926  00067A  98C4               	bcf	16324,4,c	;volatile
  1927                           
  1928                           ;MainCode.c: 381:     ANSELCbits.ANSELC3 = 0;
  1929  00067C  013A               	movlb	58	; () banked
  1930  00067E  9760               	bcf	96,3,b	;volatile
  1931                           
  1932                           ;MainCode.c: 382:     ANSELCbits.ANSELC4 = 0;
  1933  000680  9960               	bcf	96,4,b	;volatile
  1934                           
  1935                           ;MainCode.c: 383:     ODCONCbits.ODCC3 = 1;
  1936  000682  8762               	bsf	98,3,b	;volatile
  1937                           
  1938                           ;MainCode.c: 384:     ODCONCbits.ODCC4 = 1;
  1939  000684  8962               	bsf	98,4,b	;volatile
  1940                           
  1941                           ; BSR set to: 58
  1942                           ;MainCode.c: 385:     RC3I2C = 0x01;
  1943  000686  0E01               	movlw	1
  1944  000688  6F6A               	movwf	106,b	;volatile
  1945                           
  1946                           ; BSR set to: 58
  1947                           ;MainCode.c: 388:     SLRCONCbits.SLRC3 = 0;
  1948  00068A  9763               	bcf	99,3,b	;volatile
  1949                           
  1950                           ;MainCode.c: 389:     RC4I2C = 0x01;
  1951  00068C  0E01               	movlw	1
  1952  00068E  6F6B               	movwf	107,b	;volatile
  1953                           
  1954                           ; BSR set to: 58
  1955                           ;MainCode.c: 390:     SLRCONCbits.SLRC4 = 0;
  1956  000690  9963               	bcf	99,4,b	;volatile
  1957                           
  1958                           ;MainCode.c: 393:     int state = (unsigned char) GIE;
  1959  000692  AED2               	btfss	16338,7,c	;volatile
  1960  000694  D002               	goto	u1110
  1961  000696  0E01               	movlw	1
  1962  000698  D001               	goto	u1120
  1963  00069A                     u1110:
  1964  00069A  0E00               	movlw	0
  1965  00069C                     u1120:
  1966  00069C  6E3D               	movwf	initI2C@state,c
  1967  00069E  6A3E               	clrf	initI2C@state+1,c
  1968                           
  1969                           ; BSR set to: 58
  1970                           ;MainCode.c: 394:     GIE = 0;
  1971  0006A0  9ED2               	bcf	16338,7,c	;volatile
  1972                           
  1973                           ;MainCode.c: 395:     PPSLOCK = 0x55;
  1974  0006A2  0E55               	movlw	85
  1975  0006A4  6FBF               	movwf	191,b	;volsfr
  1976                           
  1977                           ;MainCode.c: 396:     PPSLOCK = 0xAA;
  1978  0006A6  0EAA               	movlw	170
  1979  0006A8  6FBF               	movwf	191,b	;volsfr
  1980                           
  1981                           ; BSR set to: 58
  1982                           ;MainCode.c: 397:     PPSLOCKbits.PPSLOCKED = 0x00;
  1983  0006AA  91BF               	bcf	191,0,b	;volsfr
  1984                           
  1985                           ;MainCode.c: 398:     RC3PPS = 0x21;
  1986  0006AC  0E21               	movlw	33
  1987  0006AE  6F13               	movwf	19,b	;volatile
  1988                           
  1989                           ;MainCode.c: 399:     RC4PPS = 0x22;
  1990  0006B0  0E22               	movlw	34
  1991  0006B2  6F14               	movwf	20,b	;volatile
  1992                           
  1993                           ;MainCode.c: 400:     I2C1SDAPPSbits.I2C1SDAPPS = 0x14;
  1994  0006B4  51E4               	movf	228,w,b	;volatile
  1995  0006B6  0BE0               	andlw	-32
  1996  0006B8  0914               	iorlw	20
  1997  0006BA  6FE4               	movwf	228,b	;volatile
  1998                           
  1999                           ;MainCode.c: 401:     I2C1SCLPPSbits.I2C1SCLPPS = 0x13;
  2000  0006BC  51E3               	movf	227,w,b	;volatile
  2001  0006BE  0BE0               	andlw	-32
  2002  0006C0  0913               	iorlw	19
  2003  0006C2  6FE3               	movwf	227,b	;volatile
  2004                           
  2005                           ;MainCode.c: 402:     PPSLOCK = 0x55;
  2006  0006C4  0E55               	movlw	85
  2007  0006C6  6FBF               	movwf	191,b	;volsfr
  2008                           
  2009                           ;MainCode.c: 403:     PPSLOCK = 0xAA;
  2010  0006C8  0EAA               	movlw	170
  2011  0006CA  6FBF               	movwf	191,b	;volsfr
  2012                           
  2013                           ; BSR set to: 58
  2014                           ;MainCode.c: 404:     PPSLOCKbits.PPSLOCKED = 0x01;
  2015  0006CC  81BF               	bsf	191,0,b	;volsfr
  2016                           
  2017                           ; BSR set to: 58
  2018                           ;MainCode.c: 405:     GIE = state;
  2019  0006CE  A03D               	btfss	initI2C@state,0,c
  2020  0006D0  D002               	goto	u1130
  2021  0006D2  8ED2               	bsf	16338,7,c	;volatile
  2022  0006D4  D001               	goto	u1145
  2023  0006D6                     u1130:
  2024  0006D6  9ED2               	bcf	16338,7,c	;volatile
  2025  0006D8                     u1145:
  2026                           
  2027                           ;MainCode.c: 406:     I2C1CON0 = 0x04;
  2028  0006D8  0E04               	movlw	4
  2029  0006DA  013D               	movlb	61	; () banked
  2030  0006DC  6F73               	movwf	115,b	;volatile
  2031                           
  2032                           ;MainCode.c: 407:     I2C1CON1 = 0x80;
  2033  0006DE  0E80               	movlw	128
  2034  0006E0  6F74               	movwf	116,b	;volatile
  2035                           
  2036                           ;MainCode.c: 408:     I2C1CON2 = 0x24;
  2037  0006E2  0E24               	movlw	36
  2038  0006E4  6F75               	movwf	117,b	;volatile
  2039                           
  2040                           ;MainCode.c: 411:     I2C1CLK = 0x03;
  2041  0006E6  0E03               	movlw	3
  2042  0006E8  6F7B               	movwf	123,b	;volatile
  2043                           
  2044                           ;MainCode.c: 412:     I2C1PIR = 0;
  2045  0006EA  0E00               	movlw	0
  2046  0006EC  6F79               	movwf	121,b	;volatile
  2047                           
  2048                           ;MainCode.c: 413:     I2C1ERR = 0;
  2049  0006EE  0E00               	movlw	0
  2050  0006F0  6F76               	movwf	118,b	;volatile
  2051                           
  2052                           ; BSR set to: 61
  2053                           ;MainCode.c: 414:     I2C1CON0bits.EN = 1;
  2054  0006F2  8F73               	bsf	115,7,b	;volatile
  2055                           
  2056                           ; BSR set to: 61
  2057                           ;MainCode.c: 415:     I2C1ERRbits.NACKIE = 1;
  2058  0006F4  8176               	bsf	118,0,b	;volatile
  2059                           
  2060                           ; BSR set to: 61
  2061                           ;MainCode.c: 416:     I2C1PIEbits.ACKTIE = 1;
  2062  0006F6  8D7A               	bsf	122,6,b	;volatile
  2063                           
  2064                           ; BSR set to: 61
  2065  0006F8  0012               	return		;funcret
  2066  0006FA                     __end_of_initI2C:
  2067                           	opt callstack 0
  2068                           
  2069 ;; *************** function _initHCSR04 *****************
  2070 ;; Defined at:
  2071 ;;		line 462 in file "MainCode.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;		None
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;		None
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  1    wreg      void 
  2078 ;; Registers used:
  2079 ;;		wreg, status,2
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2085 ;;      Params:         0       0       0       0       0       0       0       0       0
  2086 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2087 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2088 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2089 ;;Total ram usage:        0 bytes
  2090 ;; Hardware stack levels used:    1
  2091 ;; Hardware stack levels required when called:    2
  2092 ;; This function calls:
  2093 ;;		Nothing
  2094 ;; This function is called by:
  2095 ;;		_main
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           	psect	text11
  2100  000B60                     __ptext11:
  2101                           	opt callstack 0
  2102  000B60                     _initHCSR04:
  2103                           	opt callstack 28
  2104                           
  2105                           ;MainCode.c: 463:     T1CLK = 0x01;
  2106                           
  2107                           ; BSR set to: 61
  2108                           ;incstack = 0
  2109  000B60  0E01               	movlw	1
  2110  000B62  6EB5               	movwf	16309,c	;volatile
  2111                           
  2112                           ;MainCode.c: 464:     T1CONbits.CKPS = 0b11;
  2113  000B64  0E30               	movlw	48
  2114  000B66  12B2               	iorwf	16306,f,c	;volatile
  2115                           
  2116                           ;MainCode.c: 465:     TMR1H = 0x00;
  2117  000B68  0E00               	movlw	0
  2118  000B6A  6EB1               	movwf	16305,c	;volatile
  2119                           
  2120                           ;MainCode.c: 466:     TMR1L = 0x00;
  2121  000B6C  0E00               	movlw	0
  2122  000B6E  6EB0               	movwf	16304,c	;volatile
  2123                           
  2124                           ;MainCode.c: 468:     ANSELCbits.ANSELC1 = 0;
  2125  000B70  013A               	movlb	58	; () banked
  2126  000B72  9360               	bcf	96,1,b	;volatile
  2127                           
  2128                           ; BSR set to: 58
  2129                           ;MainCode.c: 469:     ANSELCbits.ANSELC2 = 0;
  2130  000B74  9560               	bcf	96,2,b	;volatile
  2131                           
  2132                           ; BSR set to: 58
  2133                           ;MainCode.c: 470:     ANSELCbits.ANSELC7 = 0;
  2134  000B76  9F60               	bcf	96,7,b	;volatile
  2135                           
  2136                           ; BSR set to: 58
  2137                           ;MainCode.c: 471:     ANSELAbits.ANSELA1 = 0;
  2138  000B78  9340               	bcf	64,1,b	;volatile
  2139                           
  2140                           ; BSR set to: 58
  2141                           ;MainCode.c: 472:     ANSELAbits.ANSELA2 = 0;
  2142  000B7A  9540               	bcf	64,2,b	;volatile
  2143                           
  2144                           ; BSR set to: 58
  2145                           ;MainCode.c: 474:     ANSELBbits.ANSELB1 = 0;
  2146  000B7C  9350               	bcf	80,1,b	;volatile
  2147                           
  2148                           ; BSR set to: 58
  2149                           ;MainCode.c: 475:     ANSELBbits.ANSELB0 = 0;
  2150  000B7E  9150               	bcf	80,0,b	;volatile
  2151                           
  2152                           ; BSR set to: 58
  2153                           ;MainCode.c: 476:     ANSELAbits.ANSELA5 = 0;
  2154  000B80  9B40               	bcf	64,5,b	;volatile
  2155                           
  2156                           ; BSR set to: 58
  2157                           ;MainCode.c: 477:     ANSELBbits.ANSELB4 = 0;
  2158  000B82  9950               	bcf	80,4,b	;volatile
  2159                           
  2160                           ; BSR set to: 58
  2161                           ;MainCode.c: 478:     ANSELAbits.ANSELA4 = 0;
  2162  000B84  9940               	bcf	64,4,b	;volatile
  2163                           
  2164                           ; BSR set to: 58
  2165                           ;MainCode.c: 480:     TRISCbits.TRISC1 = 0;
  2166  000B86  92C4               	bcf	16324,1,c	;volatile
  2167                           
  2168                           ; BSR set to: 58
  2169                           ;MainCode.c: 481:     TRISCbits.TRISC2 = 0;
  2170  000B88  94C4               	bcf	16324,2,c	;volatile
  2171                           
  2172                           ; BSR set to: 58
  2173                           ;MainCode.c: 482:     TRISCbits.TRISC7 = 0;
  2174  000B8A  9EC4               	bcf	16324,7,c	;volatile
  2175                           
  2176                           ; BSR set to: 58
  2177                           ;MainCode.c: 483:     TRISAbits.TRISA1 = 0;
  2178  000B8C  92C2               	bcf	16322,1,c	;volatile
  2179                           
  2180                           ; BSR set to: 58
  2181                           ;MainCode.c: 484:     TRISAbits.TRISA2 = 0;
  2182  000B8E  94C2               	bcf	16322,2,c	;volatile
  2183                           
  2184                           ; BSR set to: 58
  2185                           ;MainCode.c: 486:     TRISBbits.TRISB1 = 1;
  2186  000B90  82C3               	bsf	16323,1,c	;volatile
  2187                           
  2188                           ; BSR set to: 58
  2189                           ;MainCode.c: 487:     TRISBbits.TRISB0 = 1;
  2190  000B92  80C3               	bsf	16323,0,c	;volatile
  2191                           
  2192                           ; BSR set to: 58
  2193                           ;MainCode.c: 488:     TRISAbits.TRISA5 = 1;
  2194  000B94  8AC2               	bsf	16322,5,c	;volatile
  2195                           
  2196                           ; BSR set to: 58
  2197                           ;MainCode.c: 489:     TRISBbits.TRISB4 = 1;
  2198  000B96  88C3               	bsf	16323,4,c	;volatile
  2199                           
  2200                           ; BSR set to: 58
  2201                           ;MainCode.c: 490:     TRISAbits.TRISA4 = 1;
  2202  000B98  88C2               	bsf	16322,4,c	;volatile
  2203                           
  2204                           ; BSR set to: 58
  2205                           ;MainCode.c: 492:     PORTCbits.RC1 = 0;
  2206  000B9A  92CC               	bcf	16332,1,c	;volatile
  2207                           
  2208                           ; BSR set to: 58
  2209                           ;MainCode.c: 493:     PORTCbits.RC2 = 0;
  2210  000B9C  94CC               	bcf	16332,2,c	;volatile
  2211                           
  2212                           ; BSR set to: 58
  2213                           ;MainCode.c: 494:     PORTCbits.RC7 = 0;
  2214  000B9E  9ECC               	bcf	16332,7,c	;volatile
  2215                           
  2216                           ; BSR set to: 58
  2217                           ;MainCode.c: 495:     PORTAbits.RA1 = 0;
  2218  000BA0  92CA               	bcf	16330,1,c	;volatile
  2219                           
  2220                           ; BSR set to: 58
  2221                           ;MainCode.c: 496:     PORTAbits.RA2 = 0;
  2222  000BA2  94CA               	bcf	16330,2,c	;volatile
  2223                           
  2224                           ; BSR set to: 58
  2225  000BA4  0012               	return		;funcret
  2226  000BA6                     __end_of_initHCSR04:
  2227                           	opt callstack 0
  2228                           
  2229 ;; *************** function _initCAN *****************
  2230 ;; Defined at:
  2231 ;;		line 661 in file "MainCode.c"
  2232 ;; Parameters:    Size  Location     Type
  2233 ;;		None
  2234 ;; Auto vars:     Size  Location     Type
  2235 ;;		None
  2236 ;; Return value:  Size  Location     Type
  2237 ;;                  1    wreg      void 
  2238 ;; Registers used:
  2239 ;;		wreg, status,2, status,0
  2240 ;; Tracked objects:
  2241 ;;		On entry : 0/0
  2242 ;;		On exit  : 0/0
  2243 ;;		Unchanged: 0/0
  2244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2245 ;;      Params:         0       0       0       0       0       0       0       0       0
  2246 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2247 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2248 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2249 ;;Total ram usage:        0 bytes
  2250 ;; Hardware stack levels used:    1
  2251 ;; Hardware stack levels required when called:    2
  2252 ;; This function calls:
  2253 ;;		Nothing
  2254 ;; This function is called by:
  2255 ;;		_main
  2256 ;; This function uses a non-reentrant model
  2257 ;;
  2258                           
  2259                           	psect	text12
  2260  0006FA                     __ptext12:
  2261                           	opt callstack 0
  2262  0006FA                     _initCAN:
  2263                           	opt callstack 28
  2264                           
  2265                           ;MainCode.c: 666:     RB2PPS = 0b110011;
  2266                           
  2267                           ; BSR set to: 58
  2268                           ;incstack = 0
  2269  0006FA  0E33               	movlw	51
  2270  0006FC  013A               	movlb	58	; () banked
  2271  0006FE  6F0A               	movwf	10,b	;volatile
  2272                           
  2273                           ; BSR set to: 58
  2274                           ;MainCode.c: 668:     TRISBbits.TRISB2 = 0;
  2275  000700  94C3               	bcf	16323,2,c	;volatile
  2276                           
  2277                           ; BSR set to: 58
  2278                           ;MainCode.c: 669:     TRISBbits.TRISB3 = 1;
  2279  000702  86C3               	bsf	16323,3,c	;volatile
  2280                           
  2281                           ; BSR set to: 58
  2282                           ;MainCode.c: 671:     ANSELBbits.ANSELB2 = 0;
  2283  000704  9550               	bcf	80,2,b	;volatile
  2284                           
  2285                           ; BSR set to: 58
  2286                           ;MainCode.c: 672:     ANSELBbits.ANSELB3 = 0;
  2287  000706  9750               	bcf	80,3,b	;volatile
  2288                           
  2289                           ; BSR set to: 58
  2290                           ;MainCode.c: 674:     CANCONbits.REQOP2 = 1;
  2291  000708  8E8F               	bsf	16271,7,c	;volatile
  2292                           
  2293                           ; BSR set to: 58
  2294                           ;MainCode.c: 675:     CANCONbits.REQOP1 = 0;
  2295  00070A  9C8F               	bcf	16271,6,c	;volatile
  2296                           
  2297                           ; BSR set to: 58
  2298                           ;MainCode.c: 676:     CANCONbits.REQOP0 = 0;
  2299  00070C  9A8F               	bcf	16271,5,c	;volatile
  2300  00070E                     l2254:
  2301  00070E  388E               	swapf	16270,w,c	;volatile
  2302  000710  32E8               	rrcf	wreg,f,c
  2303  000712  0B07               	andlw	7
  2304  000714  0A04               	xorlw	4
  2305  000716  A4D8               	btfss	status,2,c
  2306  000718  D7FA               	goto	l2254
  2307                           
  2308                           ;MainCode.c: 680:     BRGCON1bits.BRP = 0b011111;
  2309  00071A  0137               	movlb	55	; () banked
  2310  00071C  5103               	movf	3,w,b	;volatile
  2311  00071E  0BC0               	andlw	-64
  2312  000720  091F               	iorlw	31
  2313  000722  6F03               	movwf	3,b	;volatile
  2314                           
  2315                           ;MainCode.c: 682:     RXF0SIDH = 0;
  2316  000724  0E00               	movlw	0
  2317  000726  6FA0               	movwf	160,b	;volatile
  2318                           
  2319                           ;MainCode.c: 683:     RXF0SIDLbits.SID = 1;
  2320  000728  51A1               	movf	161,w,b	;volatile
  2321  00072A  0B1F               	andlw	-225
  2322  00072C  0920               	iorlw	32
  2323  00072E  6FA1               	movwf	161,b	;volatile
  2324                           
  2325                           ; BSR set to: 55
  2326                           ;MainCode.c: 684:     RXF0SIDLbits.EXIDEN = 0;
  2327  000730  97A1               	bcf	161,3,b	;volatile
  2328                           
  2329                           ; BSR set to: 55
  2330                           ;MainCode.c: 685:     RXM0SIDH = 255;
  2331  000732  69B8               	setf	184,b	;volatile
  2332                           
  2333                           ;MainCode.c: 686:     RXM0SIDLbits.SID = 0b111;
  2334  000734  0EE0               	movlw	224
  2335  000736  13B9               	iorwf	185,f,b	;volatile
  2336                           
  2337                           ; BSR set to: 55
  2338                           ;MainCode.c: 687:     RXB0CONbits.RXM1 = 0;
  2339  000738  9C80               	bcf	16256,6,c	;volatile
  2340                           
  2341                           ; BSR set to: 55
  2342                           ;MainCode.c: 688:     RXB0CONbits.RXM0 = 1;
  2343  00073A  8A80               	bsf	16256,5,c	;volatile
  2344                           
  2345                           ; BSR set to: 55
  2346                           ;MainCode.c: 689:     RXB0CONbits.FILHIT0 = 0;
  2347  00073C  9080               	bcf	16256,0,c	;volatile
  2348                           
  2349                           ; BSR set to: 55
  2350                           ;MainCode.c: 691:     RXF1SIDH = 255;
  2351  00073E  69A4               	setf	164,b	;volatile
  2352                           
  2353                           ;MainCode.c: 692:     RXF1SIDLbits.SID = 0b111;
  2354  000740  0EE0               	movlw	224
  2355  000742  13A5               	iorwf	165,f,b	;volatile
  2356                           
  2357                           ; BSR set to: 55
  2358                           ;MainCode.c: 693:     RXF1SIDLbits.EXIDEN = 0;
  2359  000744  97A5               	bcf	165,3,b	;volatile
  2360                           
  2361                           ; BSR set to: 55
  2362                           ;MainCode.c: 694:     RXM1SIDH = 255;
  2363  000746  69BC               	setf	188,b	;volatile
  2364                           
  2365                           ;MainCode.c: 695:     RXM1SIDLbits.SID = 0b111;
  2366  000748  0EE0               	movlw	224
  2367  00074A  13BD               	iorwf	189,f,b	;volatile
  2368                           
  2369                           ; BSR set to: 55
  2370                           ;MainCode.c: 696:     RXB1CONbits.RXM1 = 0;
  2371  00074C  9DF0               	bcf	240,6,b	;volatile
  2372                           
  2373                           ; BSR set to: 55
  2374                           ;MainCode.c: 697:     RXB1CONbits.RXM0 = 1;
  2375  00074E  8BF0               	bsf	240,5,b	;volatile
  2376                           
  2377                           ; BSR set to: 55
  2378                           ;MainCode.c: 698:     RXB1CONbits.FILHIT0 = 0;
  2379  000750  91F0               	bcf	240,0,b	;volatile
  2380                           
  2381                           ;MainCode.c: 700:     CANCONbits.REQOP = 0b000;
  2382  000752  0E1F               	movlw	-225
  2383  000754  168F               	andwf	16271,f,c	;volatile
  2384  000756                     l2280:
  2385  000756  388E               	swapf	16270,w,c	;volatile
  2386  000758  32E8               	rrcf	wreg,f,c
  2387  00075A  0B07               	andlw	7
  2388  00075C  0900               	iorlw	0
  2389  00075E  B4D8               	btfsc	status,2,c
  2390  000760  0012               	return	
  2391  000762  D7F9               	goto	l2280
  2392  000764                     __end_of_initCAN:
  2393                           	opt callstack 0
  2394                           
  2395 ;; *************** function _initADC *****************
  2396 ;; Defined at:
  2397 ;;		line 419 in file "MainCode.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;		None
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;		None
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  1    wreg      void 
  2404 ;; Registers used:
  2405 ;;		wreg, status,2
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2411 ;;      Params:         0       0       0       0       0       0       0       0       0
  2412 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2413 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2414 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2415 ;;Total ram usage:        0 bytes
  2416 ;; Hardware stack levels used:    1
  2417 ;; Hardware stack levels required when called:    2
  2418 ;; This function calls:
  2419 ;;		Nothing
  2420 ;; This function is called by:
  2421 ;;		_main
  2422 ;; This function uses a non-reentrant model
  2423 ;;
  2424                           
  2425                           	psect	text13
  2426  000BA6                     __ptext13:
  2427                           	opt callstack 0
  2428  000BA6                     _initADC:
  2429                           	opt callstack 28
  2430                           
  2431                           ;MainCode.c: 421:     FVRCONbits.EN = 1;
  2432                           
  2433                           ;incstack = 0
  2434  000BA6  013E               	movlb	62	; () banked
  2435  000BA8  8FC1               	bsf	193,7,b	;volatile
  2436                           
  2437                           ; BSR set to: 62
  2438                           ;MainCode.c: 422:     FVRCONbits.CDAFVR = 0b10;
  2439  000BAA  51C1               	movf	193,w,b	;volatile
  2440  000BAC  0BF3               	andlw	-13
  2441  000BAE  0908               	iorlw	8
  2442  000BB0  6FC1               	movwf	193,b	;volatile
  2443                           
  2444                           ;MainCode.c: 423:     FVRCONbits.ADFVR = 0b10;
  2445  000BB2  51C1               	movf	193,w,b	;volatile
  2446  000BB4  0BFC               	andlw	-4
  2447  000BB6  0902               	iorlw	2
  2448  000BB8  6FC1               	movwf	193,b	;volatile
  2449                           
  2450                           ; BSR set to: 62
  2451                           ;MainCode.c: 425:     TRISCbits.TRISC6 = 1;
  2452  000BBA  8CC4               	bsf	16324,6,c	;volatile
  2453                           
  2454                           ; BSR set to: 62
  2455                           ;MainCode.c: 426:     TRISCbits.TRISC5 = 1;
  2456  000BBC  8AC4               	bsf	16324,5,c	;volatile
  2457                           
  2458                           ; BSR set to: 62
  2459                           ;MainCode.c: 427:     ANSELCbits.ANSELC6 = 1;
  2460  000BBE  013A               	movlb	58	; () banked
  2461  000BC0  8D60               	bsf	96,6,b	;volatile
  2462                           
  2463                           ; BSR set to: 58
  2464                           ;MainCode.c: 428:     ANSELCbits.ANSELC5 = 1;
  2465  000BC2  8B60               	bsf	96,5,b	;volatile
  2466                           
  2467                           ; BSR set to: 58
  2468                           ;MainCode.c: 430:     ADCON0bits.ON = 1;
  2469  000BC4  013E               	movlb	62	; () banked
  2470  000BC6  8FF8               	bsf	248,7,b	;volatile
  2471                           
  2472                           ;MainCode.c: 431:     ADCLKbits.CS = 0b011100;
  2473  000BC8  51FF               	movf	255,w,b	;volatile
  2474  000BCA  0BC0               	andlw	-64
  2475  000BCC  091C               	iorlw	28
  2476  000BCE  6FFF               	movwf	255,b	;volatile
  2477                           
  2478                           ;MainCode.c: 433:     ADCON0bits.FM = 0;
  2479  000BD0  0EF3               	movlw	-13
  2480  000BD2  17F8               	andwf	248,f,b	;volatile
  2481                           
  2482                           ;MainCode.c: 435:     ADREFbits.NREF = 0;
  2483  000BD4  0E0F               	movlw	-241
  2484  000BD6  17FD               	andwf	253,f,b	;volatile
  2485                           
  2486                           ;MainCode.c: 436:     ADREFbits.PREF = 11;
  2487  000BD8  51FD               	movf	253,w,b	;volatile
  2488  000BDA  0BF0               	andlw	-16
  2489  000BDC  090B               	iorlw	11
  2490  000BDE  6FFD               	movwf	253,b	;volatile
  2491                           
  2492                           ;MainCode.c: 438:     ADPCHbits.ADPCH = 0b010110;
  2493  000BE0  51F1               	movf	241,w,b	;volatile
  2494  000BE2  0BC0               	andlw	-64
  2495  000BE4  0916               	iorlw	22
  2496  000BE6  6FF1               	movwf	241,b	;volatile
  2497                           
  2498                           ; BSR set to: 62
  2499                           ;MainCode.c: 440:     ADCON0bits.ON = 1;
  2500  000BE8  8FF8               	bsf	248,7,b	;volatile
  2501                           
  2502                           ; BSR set to: 62
  2503  000BEA  0012               	return		;funcret
  2504  000BEC                     __end_of_initADC:
  2505                           	opt callstack 0
  2506                           
  2507 ;; *************** function _getDistance5 *****************
  2508 ;; Defined at:
  2509 ;;		line 632 in file "MainCode.c"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;		None
  2512 ;; Auto vars:     Size  Location     Type
  2513 ;;  ticks           2   30[COMRAM] int 
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  2   26[COMRAM] int 
  2516 ;; Registers used:
  2517 ;;		wreg, status,2, status,0
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2523 ;;      Params:         2       0       0       0       0       0       0       0       0
  2524 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2525 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2526 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2527 ;;Total ram usage:        6 bytes
  2528 ;; Hardware stack levels used:    1
  2529 ;; Hardware stack levels required when called:    2
  2530 ;; This function calls:
  2531 ;;		Nothing
  2532 ;; This function is called by:
  2533 ;;		_main
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           	psect	text14
  2538  000962                     __ptext14:
  2539                           	opt callstack 0
  2540  000962                     _getDistance5:
  2541                           	opt callstack 28
  2542                           
  2543                           ;MainCode.c: 633:     int ticks = 0;
  2544                           
  2545                           ; BSR set to: 62
  2546                           ;incstack = 0
  2547  000962  0E00               	movlw	0
  2548  000964  6E42               	movwf	getDistance5@ticks+1,c
  2549  000966  0E00               	movlw	0
  2550  000968  6E41               	movwf	getDistance5@ticks,c
  2551                           
  2552                           ;MainCode.c: 634:     TMR1H = 0;
  2553  00096A  0E00               	movlw	0
  2554  00096C  6EB1               	movwf	16305,c	;volatile
  2555                           
  2556                           ;MainCode.c: 635:     TMR1L = 0;
  2557  00096E  0E00               	movlw	0
  2558  000970  6EB0               	movwf	16304,c	;volatile
  2559                           
  2560                           ;MainCode.c: 637:     while (PORTAbits.RA4 && (ticks < 15000))
  2561  000972  D00D               	goto	l2558
  2562  000974                     l2556:
  2563                           
  2564                           ;MainCode.c: 638:         ticks = (TMR1H << 8) | TMR1L;
  2565  000974  50B0               	movf	16304,w,c	;volatile
  2566  000976  006F FEC4  F03F    	movff	16305,??_getDistance5	;volatile
  2567  00097C  6A40               	clrf	(??_getDistance5+1)& (0+255),c
  2568  00097E  0060  F0FC  F040   	movff	??_getDistance5,??_getDistance5+1
  2569  000984  6A3F               	clrf	??_getDistance5,c
  2570  000986  103F               	iorwf	??_getDistance5,w,c
  2571  000988  6E41               	movwf	getDistance5@ticks,c
  2572  00098A  5040               	movf	??_getDistance5+1,w,c
  2573  00098C  6E42               	movwf	getDistance5@ticks+1,c
  2574  00098E                     l2558:
  2575                           
  2576                           ;MainCode.c: 637:     while (PORTAbits.RA4 && (ticks < 15000))
  2577  00098E  A8CA               	btfss	16330,4,c	;volatile
  2578  000990  D008               	goto	u1450
  2579  000992  BE42               	btfsc	getDistance5@ticks+1,7,c
  2580  000994  D7EF               	goto	l2556
  2581  000996  0E98               	movlw	152
  2582  000998  5C41               	subwf	getDistance5@ticks,w,c
  2583  00099A  0E3A               	movlw	58
  2584  00099C  5842               	subwfb	getDistance5@ticks+1,w,c
  2585  00099E  A0D8               	btfss	status,0,c
  2586  0009A0  D7E9               	goto	l2556
  2587  0009A2                     u1450:
  2588                           
  2589                           ;MainCode.c: 640:     T1CONbits.TMR1ON = 0;
  2590  0009A2  90B2               	bcf	16306,0,c	;volatile
  2591                           
  2592                           ;MainCode.c: 642:     if (ticks >= 15000)
  2593  0009A4  BE42               	btfsc	getDistance5@ticks+1,7,c
  2594  0009A6  D009               	goto	l404
  2595  0009A8  0E98               	movlw	152
  2596  0009AA  5C41               	subwf	getDistance5@ticks,w,c
  2597  0009AC  0E3A               	movlw	58
  2598  0009AE  5842               	subwfb	getDistance5@ticks+1,w,c
  2599  0009B0  A0D8               	btfss	status,0,c
  2600  0009B2  D003               	goto	l404
  2601                           
  2602                           ;MainCode.c: 643:         return -1;
  2603  0009B4  683D               	setf	?_getDistance5,c
  2604  0009B6  683E               	setf	?_getDistance5+1,c
  2605  0009B8  0012               	return	
  2606  0009BA                     l404:
  2607                           
  2608                           ;MainCode.c: 646:         return ticks;
  2609  0009BA  0060  F104  F03D   	movff	getDistance5@ticks,?_getDistance5
  2610  0009C0  0060  F108  F03E   	movff	getDistance5@ticks+1,?_getDistance5+1
  2611  0009C6  0012               	return		;funcret
  2612  0009C8                     __end_of_getDistance5:
  2613                           	opt callstack 0
  2614                           
  2615 ;; *************** function _getDistance4 *****************
  2616 ;; Defined at:
  2617 ;;		line 615 in file "MainCode.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;		None
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;  ticks           2   30[COMRAM] int 
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  2   26[COMRAM] int 
  2624 ;; Registers used:
  2625 ;;		wreg, status,2, status,0
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2631 ;;      Params:         2       0       0       0       0       0       0       0       0
  2632 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2633 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2634 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2635 ;;Total ram usage:        6 bytes
  2636 ;; Hardware stack levels used:    1
  2637 ;; Hardware stack levels required when called:    2
  2638 ;; This function calls:
  2639 ;;		Nothing
  2640 ;; This function is called by:
  2641 ;;		_main
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           	psect	text15
  2646  0009C8                     __ptext15:
  2647                           	opt callstack 0
  2648  0009C8                     _getDistance4:
  2649                           	opt callstack 28
  2650                           
  2651                           ;MainCode.c: 616:     int ticks = 0;
  2652                           
  2653                           ;incstack = 0
  2654  0009C8  0E00               	movlw	0
  2655  0009CA  6E42               	movwf	getDistance4@ticks+1,c
  2656  0009CC  0E00               	movlw	0
  2657  0009CE  6E41               	movwf	getDistance4@ticks,c
  2658                           
  2659                           ;MainCode.c: 617:     TMR1H = 0;
  2660  0009D0  0E00               	movlw	0
  2661  0009D2  6EB1               	movwf	16305,c	;volatile
  2662                           
  2663                           ;MainCode.c: 618:     TMR1L = 0;
  2664  0009D4  0E00               	movlw	0
  2665  0009D6  6EB0               	movwf	16304,c	;volatile
  2666                           
  2667                           ;MainCode.c: 620:     while (PORTBbits.RB4 && (ticks < 15000))
  2668  0009D8  D00D               	goto	l2522
  2669  0009DA                     l2520:
  2670                           
  2671                           ;MainCode.c: 621:         ticks = (TMR1H << 8) | TMR1L;
  2672  0009DA  50B0               	movf	16304,w,c	;volatile
  2673  0009DC  006F FEC4  F03F    	movff	16305,??_getDistance4	;volatile
  2674  0009E2  6A40               	clrf	(??_getDistance4+1)& (0+255),c
  2675  0009E4  0060  F0FC  F040   	movff	??_getDistance4,??_getDistance4+1
  2676  0009EA  6A3F               	clrf	??_getDistance4,c
  2677  0009EC  103F               	iorwf	??_getDistance4,w,c
  2678  0009EE  6E41               	movwf	getDistance4@ticks,c
  2679  0009F0  5040               	movf	??_getDistance4+1,w,c
  2680  0009F2  6E42               	movwf	getDistance4@ticks+1,c
  2681  0009F4                     l2522:
  2682                           
  2683                           ;MainCode.c: 620:     while (PORTBbits.RB4 && (ticks < 15000))
  2684  0009F4  A8CB               	btfss	16331,4,c	;volatile
  2685  0009F6  D008               	goto	u1390
  2686  0009F8  BE42               	btfsc	getDistance4@ticks+1,7,c
  2687  0009FA  D7EF               	goto	l2520
  2688  0009FC  0E98               	movlw	152
  2689  0009FE  5C41               	subwf	getDistance4@ticks,w,c
  2690  000A00  0E3A               	movlw	58
  2691  000A02  5842               	subwfb	getDistance4@ticks+1,w,c
  2692  000A04  A0D8               	btfss	status,0,c
  2693  000A06  D7E9               	goto	l2520
  2694  000A08                     u1390:
  2695                           
  2696                           ;MainCode.c: 623:     T1CONbits.TMR1ON = 0;
  2697  000A08  90B2               	bcf	16306,0,c	;volatile
  2698                           
  2699                           ;MainCode.c: 625:     if (ticks >= 15000)
  2700  000A0A  BE42               	btfsc	getDistance4@ticks+1,7,c
  2701  000A0C  D009               	goto	l394
  2702  000A0E  0E98               	movlw	152
  2703  000A10  5C41               	subwf	getDistance4@ticks,w,c
  2704  000A12  0E3A               	movlw	58
  2705  000A14  5842               	subwfb	getDistance4@ticks+1,w,c
  2706  000A16  A0D8               	btfss	status,0,c
  2707  000A18  D003               	goto	l394
  2708                           
  2709                           ;MainCode.c: 626:         return -1;
  2710  000A1A  683D               	setf	?_getDistance4,c
  2711  000A1C  683E               	setf	?_getDistance4+1,c
  2712  000A1E  0012               	return	
  2713  000A20                     l394:
  2714                           
  2715                           ;MainCode.c: 629:         return ticks;
  2716  000A20  0060  F104  F03D   	movff	getDistance4@ticks,?_getDistance4
  2717  000A26  0060  F108  F03E   	movff	getDistance4@ticks+1,?_getDistance4+1
  2718  000A2C  0012               	return		;funcret
  2719  000A2E                     __end_of_getDistance4:
  2720                           	opt callstack 0
  2721                           
  2722 ;; *************** function _getDistance3 *****************
  2723 ;; Defined at:
  2724 ;;		line 598 in file "MainCode.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;		None
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;  ticks           2   30[COMRAM] int 
  2729 ;; Return value:  Size  Location     Type
  2730 ;;                  2   26[COMRAM] int 
  2731 ;; Registers used:
  2732 ;;		wreg, status,2, status,0
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2738 ;;      Params:         2       0       0       0       0       0       0       0       0
  2739 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2740 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2741 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2742 ;;Total ram usage:        6 bytes
  2743 ;; Hardware stack levels used:    1
  2744 ;; Hardware stack levels required when called:    2
  2745 ;; This function calls:
  2746 ;;		Nothing
  2747 ;; This function is called by:
  2748 ;;		_main
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           	psect	text16
  2753  000A2E                     __ptext16:
  2754                           	opt callstack 0
  2755  000A2E                     _getDistance3:
  2756                           	opt callstack 28
  2757                           
  2758                           ;MainCode.c: 599:     int ticks = 0;
  2759                           
  2760                           ;incstack = 0
  2761  000A2E  0E00               	movlw	0
  2762  000A30  6E42               	movwf	getDistance3@ticks+1,c
  2763  000A32  0E00               	movlw	0
  2764  000A34  6E41               	movwf	getDistance3@ticks,c
  2765                           
  2766                           ;MainCode.c: 600:     TMR1H = 0;
  2767  000A36  0E00               	movlw	0
  2768  000A38  6EB1               	movwf	16305,c	;volatile
  2769                           
  2770                           ;MainCode.c: 601:     TMR1L = 0;
  2771  000A3A  0E00               	movlw	0
  2772  000A3C  6EB0               	movwf	16304,c	;volatile
  2773                           
  2774                           ;MainCode.c: 603:     while (PORTAbits.RA5 && (ticks < 15000))
  2775  000A3E  D00D               	goto	l2486
  2776  000A40                     l2484:
  2777                           
  2778                           ;MainCode.c: 604:         ticks = (TMR1H << 8) | TMR1L;
  2779  000A40  50B0               	movf	16304,w,c	;volatile
  2780  000A42  006F FEC4  F03F    	movff	16305,??_getDistance3	;volatile
  2781  000A48  6A40               	clrf	(??_getDistance3+1)& (0+255),c
  2782  000A4A  0060  F0FC  F040   	movff	??_getDistance3,??_getDistance3+1
  2783  000A50  6A3F               	clrf	??_getDistance3,c
  2784  000A52  103F               	iorwf	??_getDistance3,w,c
  2785  000A54  6E41               	movwf	getDistance3@ticks,c
  2786  000A56  5040               	movf	??_getDistance3+1,w,c
  2787  000A58  6E42               	movwf	getDistance3@ticks+1,c
  2788  000A5A                     l2486:
  2789                           
  2790                           ;MainCode.c: 603:     while (PORTAbits.RA5 && (ticks < 15000))
  2791  000A5A  AACA               	btfss	16330,5,c	;volatile
  2792  000A5C  D008               	goto	u1330
  2793  000A5E  BE42               	btfsc	getDistance3@ticks+1,7,c
  2794  000A60  D7EF               	goto	l2484
  2795  000A62  0E98               	movlw	152
  2796  000A64  5C41               	subwf	getDistance3@ticks,w,c
  2797  000A66  0E3A               	movlw	58
  2798  000A68  5842               	subwfb	getDistance3@ticks+1,w,c
  2799  000A6A  A0D8               	btfss	status,0,c
  2800  000A6C  D7E9               	goto	l2484
  2801  000A6E                     u1330:
  2802                           
  2803                           ;MainCode.c: 606:     T1CONbits.TMR1ON = 0;
  2804  000A6E  90B2               	bcf	16306,0,c	;volatile
  2805                           
  2806                           ;MainCode.c: 608:     if (ticks >= 15000)
  2807  000A70  BE42               	btfsc	getDistance3@ticks+1,7,c
  2808  000A72  D009               	goto	l384
  2809  000A74  0E98               	movlw	152
  2810  000A76  5C41               	subwf	getDistance3@ticks,w,c
  2811  000A78  0E3A               	movlw	58
  2812  000A7A  5842               	subwfb	getDistance3@ticks+1,w,c
  2813  000A7C  A0D8               	btfss	status,0,c
  2814  000A7E  D003               	goto	l384
  2815                           
  2816                           ;MainCode.c: 609:         return -1;
  2817  000A80  683D               	setf	?_getDistance3,c
  2818  000A82  683E               	setf	?_getDistance3+1,c
  2819  000A84  0012               	return	
  2820  000A86                     l384:
  2821                           
  2822                           ;MainCode.c: 612:         return ticks;
  2823  000A86  0060  F104  F03D   	movff	getDistance3@ticks,?_getDistance3
  2824  000A8C  0060  F108  F03E   	movff	getDistance3@ticks+1,?_getDistance3+1
  2825  000A92  0012               	return		;funcret
  2826  000A94                     __end_of_getDistance3:
  2827                           	opt callstack 0
  2828                           
  2829 ;; *************** function _getDistance2 *****************
  2830 ;; Defined at:
  2831 ;;		line 581 in file "MainCode.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;		None
  2834 ;; Auto vars:     Size  Location     Type
  2835 ;;  ticks           2   30[COMRAM] int 
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  2   26[COMRAM] int 
  2838 ;; Registers used:
  2839 ;;		wreg, status,2, status,0
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2845 ;;      Params:         2       0       0       0       0       0       0       0       0
  2846 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2847 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2848 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2849 ;;Total ram usage:        6 bytes
  2850 ;; Hardware stack levels used:    1
  2851 ;; Hardware stack levels required when called:    2
  2852 ;; This function calls:
  2853 ;;		Nothing
  2854 ;; This function is called by:
  2855 ;;		_main
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           	psect	text17
  2860  000A94                     __ptext17:
  2861                           	opt callstack 0
  2862  000A94                     _getDistance2:
  2863                           	opt callstack 28
  2864                           
  2865                           ;MainCode.c: 582:     int ticks = 0;
  2866                           
  2867                           ;incstack = 0
  2868  000A94  0E00               	movlw	0
  2869  000A96  6E42               	movwf	getDistance2@ticks+1,c
  2870  000A98  0E00               	movlw	0
  2871  000A9A  6E41               	movwf	getDistance2@ticks,c
  2872                           
  2873                           ;MainCode.c: 583:     TMR1H = 0;
  2874  000A9C  0E00               	movlw	0
  2875  000A9E  6EB1               	movwf	16305,c	;volatile
  2876                           
  2877                           ;MainCode.c: 584:     TMR1L = 0;
  2878  000AA0  0E00               	movlw	0
  2879  000AA2  6EB0               	movwf	16304,c	;volatile
  2880                           
  2881                           ;MainCode.c: 586:     while (PORTBbits.RB0 && (ticks < 15000))
  2882  000AA4  D00D               	goto	l2450
  2883  000AA6                     l2448:
  2884                           
  2885                           ;MainCode.c: 587:         ticks = (TMR1H << 8) | TMR1L;
  2886  000AA6  50B0               	movf	16304,w,c	;volatile
  2887  000AA8  006F FEC4  F03F    	movff	16305,??_getDistance2	;volatile
  2888  000AAE  6A40               	clrf	(??_getDistance2+1)& (0+255),c
  2889  000AB0  0060  F0FC  F040   	movff	??_getDistance2,??_getDistance2+1
  2890  000AB6  6A3F               	clrf	??_getDistance2,c
  2891  000AB8  103F               	iorwf	??_getDistance2,w,c
  2892  000ABA  6E41               	movwf	getDistance2@ticks,c
  2893  000ABC  5040               	movf	??_getDistance2+1,w,c
  2894  000ABE  6E42               	movwf	getDistance2@ticks+1,c
  2895  000AC0                     l2450:
  2896                           
  2897                           ;MainCode.c: 586:     while (PORTBbits.RB0 && (ticks < 15000))
  2898  000AC0  A0CB               	btfss	16331,0,c	;volatile
  2899  000AC2  D008               	goto	u1270
  2900  000AC4  BE42               	btfsc	getDistance2@ticks+1,7,c
  2901  000AC6  D7EF               	goto	l2448
  2902  000AC8  0E98               	movlw	152
  2903  000ACA  5C41               	subwf	getDistance2@ticks,w,c
  2904  000ACC  0E3A               	movlw	58
  2905  000ACE  5842               	subwfb	getDistance2@ticks+1,w,c
  2906  000AD0  A0D8               	btfss	status,0,c
  2907  000AD2  D7E9               	goto	l2448
  2908  000AD4                     u1270:
  2909                           
  2910                           ;MainCode.c: 589:     T1CONbits.TMR1ON = 0;
  2911  000AD4  90B2               	bcf	16306,0,c	;volatile
  2912                           
  2913                           ;MainCode.c: 591:     if (ticks >= 15000)
  2914  000AD6  BE42               	btfsc	getDistance2@ticks+1,7,c
  2915  000AD8  D009               	goto	l374
  2916  000ADA  0E98               	movlw	152
  2917  000ADC  5C41               	subwf	getDistance2@ticks,w,c
  2918  000ADE  0E3A               	movlw	58
  2919  000AE0  5842               	subwfb	getDistance2@ticks+1,w,c
  2920  000AE2  A0D8               	btfss	status,0,c
  2921  000AE4  D003               	goto	l374
  2922                           
  2923                           ;MainCode.c: 592:         return -1;
  2924  000AE6  683D               	setf	?_getDistance2,c
  2925  000AE8  683E               	setf	?_getDistance2+1,c
  2926  000AEA  0012               	return	
  2927  000AEC                     l374:
  2928                           
  2929                           ;MainCode.c: 595:         return ticks;
  2930  000AEC  0060  F104  F03D   	movff	getDistance2@ticks,?_getDistance2
  2931  000AF2  0060  F108  F03E   	movff	getDistance2@ticks+1,?_getDistance2+1
  2932  000AF8  0012               	return		;funcret
  2933  000AFA                     __end_of_getDistance2:
  2934                           	opt callstack 0
  2935                           
  2936 ;; *************** function _getDistance1 *****************
  2937 ;; Defined at:
  2938 ;;		line 564 in file "MainCode.c"
  2939 ;; Parameters:    Size  Location     Type
  2940 ;;		None
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;  ticks           2   30[COMRAM] int 
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  2   26[COMRAM] int 
  2945 ;; Registers used:
  2946 ;;		wreg, status,2, status,0
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2952 ;;      Params:         2       0       0       0       0       0       0       0       0
  2953 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2954 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2955 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2956 ;;Total ram usage:        6 bytes
  2957 ;; Hardware stack levels used:    1
  2958 ;; Hardware stack levels required when called:    2
  2959 ;; This function calls:
  2960 ;;		Nothing
  2961 ;; This function is called by:
  2962 ;;		_main
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966                           	psect	text18
  2967  000AFA                     __ptext18:
  2968                           	opt callstack 0
  2969  000AFA                     _getDistance1:
  2970                           	opt callstack 28
  2971                           
  2972                           ;MainCode.c: 565:     int ticks = 0;
  2973                           
  2974                           ;incstack = 0
  2975  000AFA  0E00               	movlw	0
  2976  000AFC  6E42               	movwf	getDistance1@ticks+1,c
  2977  000AFE  0E00               	movlw	0
  2978  000B00  6E41               	movwf	getDistance1@ticks,c
  2979                           
  2980                           ;MainCode.c: 566:     TMR1H = 0;
  2981  000B02  0E00               	movlw	0
  2982  000B04  6EB1               	movwf	16305,c	;volatile
  2983                           
  2984                           ;MainCode.c: 567:     TMR1L = 0;
  2985  000B06  0E00               	movlw	0
  2986  000B08  6EB0               	movwf	16304,c	;volatile
  2987                           
  2988                           ;MainCode.c: 569:     while (PORTBbits.RB1 && (ticks < 15000))
  2989  000B0A  D00D               	goto	l2414
  2990  000B0C                     l2412:
  2991                           
  2992                           ;MainCode.c: 570:         ticks = (TMR1H << 8) | TMR1L;
  2993  000B0C  50B0               	movf	16304,w,c	;volatile
  2994  000B0E  006F FEC4  F03F    	movff	16305,??_getDistance1	;volatile
  2995  000B14  6A40               	clrf	(??_getDistance1+1)& (0+255),c
  2996  000B16  0060  F0FC  F040   	movff	??_getDistance1,??_getDistance1+1
  2997  000B1C  6A3F               	clrf	??_getDistance1,c
  2998  000B1E  103F               	iorwf	??_getDistance1,w,c
  2999  000B20  6E41               	movwf	getDistance1@ticks,c
  3000  000B22  5040               	movf	??_getDistance1+1,w,c
  3001  000B24  6E42               	movwf	getDistance1@ticks+1,c
  3002  000B26                     l2414:
  3003                           
  3004                           ;MainCode.c: 569:     while (PORTBbits.RB1 && (ticks < 15000))
  3005  000B26  A2CB               	btfss	16331,1,c	;volatile
  3006  000B28  D008               	goto	u1210
  3007  000B2A  BE42               	btfsc	getDistance1@ticks+1,7,c
  3008  000B2C  D7EF               	goto	l2412
  3009  000B2E  0E98               	movlw	152
  3010  000B30  5C41               	subwf	getDistance1@ticks,w,c
  3011  000B32  0E3A               	movlw	58
  3012  000B34  5842               	subwfb	getDistance1@ticks+1,w,c
  3013  000B36  A0D8               	btfss	status,0,c
  3014  000B38  D7E9               	goto	l2412
  3015  000B3A                     u1210:
  3016                           
  3017                           ;MainCode.c: 572:     T1CONbits.TMR1ON = 0;
  3018  000B3A  90B2               	bcf	16306,0,c	;volatile
  3019                           
  3020                           ;MainCode.c: 574:     if (ticks >= 15000)
  3021  000B3C  BE42               	btfsc	getDistance1@ticks+1,7,c
  3022  000B3E  D009               	goto	l364
  3023  000B40  0E98               	movlw	152
  3024  000B42  5C41               	subwf	getDistance1@ticks,w,c
  3025  000B44  0E3A               	movlw	58
  3026  000B46  5842               	subwfb	getDistance1@ticks+1,w,c
  3027  000B48  A0D8               	btfss	status,0,c
  3028  000B4A  D003               	goto	l364
  3029                           
  3030                           ;MainCode.c: 575:         return -1;
  3031  000B4C  683D               	setf	?_getDistance1,c
  3032  000B4E  683E               	setf	?_getDistance1+1,c
  3033  000B50  0012               	return	
  3034  000B52                     l364:
  3035                           
  3036                           ;MainCode.c: 578:         return ticks;
  3037  000B52  0060  F104  F03D   	movff	getDistance1@ticks,?_getDistance1
  3038  000B58  0060  F108  F03E   	movff	getDistance1@ticks+1,?_getDistance1+1
  3039  000B5E  0012               	return		;funcret
  3040  000B60                     __end_of_getDistance1:
  3041                           	opt callstack 0
  3042                           
  3043 ;; *************** function _adcInt *****************
  3044 ;; Defined at:
  3045 ;;		line 217 in file "MainCode.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;		None
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;		None
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  1    wreg      void 
  3052 ;; Registers used:
  3053 ;;		None
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3059 ;;      Params:         0       0       0       0       0       0       0       0       0
  3060 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3061 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3062 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3063 ;;Total ram usage:        0 bytes
  3064 ;; Hardware stack levels used:    1
  3065 ;; This function calls:
  3066 ;;		Nothing
  3067 ;; This function is called by:
  3068 ;;		Interrupt level 2
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072                           	psect	text19
  3073  000CBC                     __ptext19:
  3074                           	opt callstack 0
  3075  000CBC                     _adcInt:
  3076                           	opt callstack 29
  3077                           
  3078                           ;incstack = 0
  3079  000CBC  0011               	retfie		f
  3080  000CBE                     __end_of_adcInt:
  3081                           	opt callstack 0
  3082                           
  3083 ;; *************** function _canRecInt *****************
  3084 ;; Defined at:
  3085 ;;		line 223 in file "MainCode.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;		None
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;  message        16   10[COMRAM] int [8]
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  1    wreg      void 
  3092 ;; Registers used:
  3093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3099 ;;      Params:         0       0       0       0       0       0       0       0       0
  3100 ;;      Locals:        16       0       0       0       0       0       0       0       0
  3101 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3102 ;;      Totals:        18       0       0       0       0       0       0       0       0
  3103 ;;Total ram usage:       18 bytes
  3104 ;; Hardware stack levels used:    1
  3105 ;; Hardware stack levels required when called:    1
  3106 ;; This function calls:
  3107 ;;		_sendCANmessage
  3108 ;; This function is called by:
  3109 ;;		Interrupt level 2
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           	psect	text20
  3114  0002C4                     __ptext20:
  3115                           	opt callstack 0
  3116  0002C4                     _canRecInt:
  3117                           	opt callstack 28
  3118                           
  3119                           ;incstack = 0
  3120  0002C4  BE80               	btfsc	16256,7,c	;volatile
  3121  0002C6  D0BC               	goto	i2l2212
  3122  0002C8  D0DF               	goto	i2l260
  3123  0002CA                     i2l2170:
  3124  0002CA  0E00               	movlw	0
  3125  0002CC  6E2E               	movwf	canRecInt@message+1,c
  3126  0002CE  0E01               	movlw	1
  3127  0002D0  6E2D               	movwf	canRecInt@message,c
  3128  0002D2  0E00               	movlw	0
  3129  0002D4  6E24               	movwf	sendCANmessage@id+1,c
  3130  0002D6  0E00               	movlw	0
  3131  0002D8  6E23               	movwf	sendCANmessage@id,c
  3132  0002DA  0E2D               	movlw	low canRecInt@message
  3133  0002DC  6E25               	movwf	sendCANmessage@message,c
  3134  0002DE  0E00               	movlw	high canRecInt@message
  3135  0002E0  6E26               	movwf	sendCANmessage@message+1,c
  3136  0002E2  0E00               	movlw	0
  3137  0002E4  6E28               	movwf	sendCANmessage@length+1,c
  3138  0002E6  0E01               	movlw	1
  3139  0002E8  6E27               	movwf	sendCANmessage@length,c
  3140  0002EA  ECCF  F002         	call	_sendCANmessage	;wreg free
  3141  0002EE  D0CB               	goto	i2l263
  3142  0002F0                     i2l264:
  3143  0002F0  0060  F07C  F02D   	movff	_ADCvalueHigh0,canRecInt@message
  3144  0002F6  0060  F080  F02E   	movff	_ADCvalueHigh0+1,canRecInt@message+1
  3145  0002FC  0060  F074  F02F   	movff	_ADCvalueLow0,canRecInt@message+2
  3146  000302  0060  F078  F030   	movff	_ADCvalueLow0+1,canRecInt@message+3
  3147  000308                     i2l2174:
  3148  000308  0E00               	movlw	0
  3149  00030A  6E24               	movwf	sendCANmessage@id+1,c
  3150  00030C  0E00               	movlw	0
  3151  00030E  6E23               	movwf	sendCANmessage@id,c
  3152  000310  0E2D               	movlw	low canRecInt@message
  3153  000312  6E25               	movwf	sendCANmessage@message,c
  3154  000314  0E00               	movlw	high canRecInt@message
  3155  000316  6E26               	movwf	sendCANmessage@message+1,c
  3156  000318  0E00               	movlw	0
  3157  00031A  6E28               	movwf	sendCANmessage@length+1,c
  3158  00031C  0E02               	movlw	2
  3159  00031E  6E27               	movwf	sendCANmessage@length,c
  3160  000320  ECCF  F002         	call	_sendCANmessage	;wreg free
  3161  000324  D0B0               	goto	i2l263
  3162  000326                     i2l265:
  3163  000326  0060  F06C  F02D   	movff	_ADCvalueHigh1,canRecInt@message
  3164  00032C  0060  F070  F02E   	movff	_ADCvalueHigh1+1,canRecInt@message+1
  3165  000332  0060  F064  F02F   	movff	_ADCvalueLow1,canRecInt@message+2
  3166  000338  0060  F068  F030   	movff	_ADCvalueLow1+1,canRecInt@message+3
  3167  00033E  D7E4               	goto	i2l2174
  3168  000340                     i2l2178:
  3169  000340  0060  F060  F02B   	movff	_distance1+1,??_canRecInt
  3170  000346  6A2C               	clrf	(??_canRecInt+1)& (0+255),c
  3171  000348  BE2B               	btfsc	??_canRecInt& (0+255),7,c
  3172  00034A  682C               	setf	(??_canRecInt+1)& (0+255),c
  3173  00034C  502B               	movf	??_canRecInt,w,c
  3174  00034E  6E2D               	movwf	canRecInt@message,c
  3175  000350  6A2E               	clrf	canRecInt@message+1,c
  3176  000352  5017               	movf	_distance1,w,c
  3177  000354  6E2F               	movwf	canRecInt@message+2,c
  3178  000356  6A30               	clrf	canRecInt@message+3,c
  3179  000358  0060  F034  F031   	movff	_valid_distance1,canRecInt@message+4
  3180  00035E  0060  F038  F032   	movff	_valid_distance1+1,canRecInt@message+5
  3181  000364                     i2l2182:
  3182  000364  0E00               	movlw	0
  3183  000366  6E24               	movwf	sendCANmessage@id+1,c
  3184  000368  0E00               	movlw	0
  3185  00036A  6E23               	movwf	sendCANmessage@id,c
  3186  00036C  0E2D               	movlw	low canRecInt@message
  3187  00036E  6E25               	movwf	sendCANmessage@message,c
  3188  000370  0E00               	movlw	high canRecInt@message
  3189  000372  6E26               	movwf	sendCANmessage@message+1,c
  3190  000374  0E00               	movlw	0
  3191  000376  6E28               	movwf	sendCANmessage@length+1,c
  3192  000378  0E03               	movlw	3
  3193  00037A  6E27               	movwf	sendCANmessage@length,c
  3194  00037C  ECCF  F002         	call	_sendCANmessage	;wreg free
  3195  000380  D082               	goto	i2l263
  3196  000382                     i2l2184:
  3197  000382  0060  F058  F02B   	movff	_distance2+1,??_canRecInt
  3198  000388  6A2C               	clrf	(??_canRecInt+1)& (0+255),c
  3199  00038A  BE2B               	btfsc	??_canRecInt& (0+255),7,c
  3200  00038C  682C               	setf	(??_canRecInt+1)& (0+255),c
  3201  00038E  502B               	movf	??_canRecInt,w,c
  3202  000390  6E2D               	movwf	canRecInt@message,c
  3203  000392  6A2E               	clrf	canRecInt@message+1,c
  3204  000394  5015               	movf	_distance2,w,c
  3205  000396  6E2F               	movwf	canRecInt@message+2,c
  3206  000398  6A30               	clrf	canRecInt@message+3,c
  3207  00039A  0060  F02C  F031   	movff	_valid_distance2,canRecInt@message+4
  3208  0003A0  0060  F030  F032   	movff	_valid_distance2+1,canRecInt@message+5
  3209  0003A6  D7DE               	goto	i2l2182
  3210  0003A8                     i2l2190:
  3211  0003A8  0060  F050  F02B   	movff	_distance3+1,??_canRecInt
  3212  0003AE  6A2C               	clrf	(??_canRecInt+1)& (0+255),c
  3213  0003B0  BE2B               	btfsc	??_canRecInt& (0+255),7,c
  3214  0003B2  682C               	setf	(??_canRecInt+1)& (0+255),c
  3215  0003B4  502B               	movf	??_canRecInt,w,c
  3216  0003B6  6E2D               	movwf	canRecInt@message,c
  3217  0003B8  6A2E               	clrf	canRecInt@message+1,c
  3218  0003BA  5013               	movf	_distance3,w,c
  3219  0003BC  6E2F               	movwf	canRecInt@message+2,c
  3220  0003BE  6A30               	clrf	canRecInt@message+3,c
  3221  0003C0  0060  F024  F031   	movff	_valid_distance3,canRecInt@message+4
  3222  0003C6  0060  F028  F032   	movff	_valid_distance3+1,canRecInt@message+5
  3223  0003CC  D7CB               	goto	i2l2182
  3224  0003CE                     i2l2196:
  3225  0003CE  0060  F048  F02B   	movff	_distance4+1,??_canRecInt
  3226  0003D4  6A2C               	clrf	(??_canRecInt+1)& (0+255),c
  3227  0003D6  BE2B               	btfsc	??_canRecInt& (0+255),7,c
  3228  0003D8  682C               	setf	(??_canRecInt+1)& (0+255),c
  3229  0003DA  502B               	movf	??_canRecInt,w,c
  3230  0003DC  6E2D               	movwf	canRecInt@message,c
  3231  0003DE  6A2E               	clrf	canRecInt@message+1,c
  3232  0003E0  5011               	movf	_distance4,w,c
  3233  0003E2  6E2F               	movwf	canRecInt@message+2,c
  3234  0003E4  6A30               	clrf	canRecInt@message+3,c
  3235  0003E6  0060  F01C  F031   	movff	_valid_distance4,canRecInt@message+4
  3236  0003EC  0060  F020  F032   	movff	_valid_distance4+1,canRecInt@message+5
  3237  0003F2  D7B8               	goto	i2l2182
  3238  0003F4                     i2l2202:
  3239  0003F4  0060  F040  F02B   	movff	_distance5+1,??_canRecInt
  3240  0003FA  6A2C               	clrf	(??_canRecInt+1)& (0+255),c
  3241  0003FC  BE2B               	btfsc	??_canRecInt& (0+255),7,c
  3242  0003FE  682C               	setf	(??_canRecInt+1)& (0+255),c
  3243  000400  502B               	movf	??_canRecInt,w,c
  3244  000402  6E2D               	movwf	canRecInt@message,c
  3245  000404  6A2E               	clrf	canRecInt@message+1,c
  3246  000406  500F               	movf	_distance5,w,c
  3247  000408  6E2F               	movwf	canRecInt@message+2,c
  3248  00040A  6A30               	clrf	canRecInt@message+3,c
  3249  00040C  0060  F014  F031   	movff	_valid_distance5,canRecInt@message+4
  3250  000412  0060  F018  F032   	movff	_valid_distance5+1,canRecInt@message+5
  3251  000418  D7A5               	goto	i2l2182
  3252  00041A                     i2l271:
  3253  00041A  0060  F00C  F02D   	movff	_perimeter,canRecInt@message
  3254  000420  0060  F010  F02E   	movff	_perimeter+1,canRecInt@message+1
  3255  000426  0060  F004  F02F   	movff	_sign_perimeter,canRecInt@message+2
  3256  00042C  0060  F008  F030   	movff	_sign_perimeter+1,canRecInt@message+3
  3257  000432  0060  F084  F031   	movff	_con_perimeter,canRecInt@message+4
  3258  000438  0060  F088  F032   	movff	_con_perimeter+1,canRecInt@message+5
  3259  00043E  D792               	goto	i2l2182
  3260  000440                     i2l2212:
  3261  000440  5086               	movf	16262,w,c	;volatile
  3262  000442  6E2B               	movwf	??_canRecInt& (0+255),c
  3263  000444  6A2C               	clrf	(??_canRecInt+1)& (0+255),c
  3264                           
  3265                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3266                           ; Switch size 1, requested type "simple"
  3267                           ; Number of cases is 1, Range of values is 0 to 0
  3268                           ; switch strategies available:
  3269                           ; Name         Instructions Cycles
  3270                           ; simple_byte            4     3 (average)
  3271                           ;	Chosen strategy is simple_byte
  3272  000446  502C               	movf	??_canRecInt+1,w,c
  3273  000448  0A00               	xorlw	0	; case 0
  3274  00044A  A4D8               	btfss	status,2,c
  3275  00044C  D01C               	goto	i2l263
  3276                           
  3277                           ; Switch size 1, requested type "simple"
  3278                           ; Number of cases is 9, Range of values is 0 to 8
  3279                           ; switch strategies available:
  3280                           ; Name         Instructions Cycles
  3281                           ; simple_byte           28    15 (average)
  3282                           ;	Chosen strategy is simple_byte
  3283  00044E  502B               	movf	??_canRecInt,w,c
  3284  000450  0A00               	xorlw	0	; case 0
  3285  000452  B4D8               	btfsc	status,2,c
  3286  000454  D73A               	goto	i2l2170
  3287  000456  0A01               	xorlw	1	; case 1
  3288  000458  B4D8               	btfsc	status,2,c
  3289  00045A  D74A               	goto	i2l264
  3290  00045C  0A03               	xorlw	3	; case 2
  3291  00045E  B4D8               	btfsc	status,2,c
  3292  000460  D762               	goto	i2l265
  3293  000462  0A01               	xorlw	1	; case 3
  3294  000464  B4D8               	btfsc	status,2,c
  3295  000466  D76C               	goto	i2l2178
  3296  000468  0A07               	xorlw	7	; case 4
  3297  00046A  B4D8               	btfsc	status,2,c
  3298  00046C  D78A               	goto	i2l2184
  3299  00046E  0A01               	xorlw	1	; case 5
  3300  000470  B4D8               	btfsc	status,2,c
  3301  000472  D79A               	goto	i2l2190
  3302  000474  0A03               	xorlw	3	; case 6
  3303  000476  B4D8               	btfsc	status,2,c
  3304  000478  D7AA               	goto	i2l2196
  3305  00047A  0A01               	xorlw	1	; case 7
  3306  00047C  B4D8               	btfsc	status,2,c
  3307  00047E  D7BA               	goto	i2l2202
  3308  000480  0A0F               	xorlw	15	; case 8
  3309  000482  B4D8               	btfsc	status,2,c
  3310  000484  D7CA               	goto	i2l271
  3311  000486                     i2l263:
  3312                           
  3313                           ;MainCode.c: 306:         RXB0CONbits.RXFUL = 0;
  3314  000486  9E80               	bcf	16256,7,c	;volatile
  3315  000488                     i2l260:
  3316                           
  3317                           ;MainCode.c: 308:     PIR5bits.RXB0IF = 0;
  3318  000488  0139               	movlb	57	; () banked
  3319  00048A  91A5               	bcf	165,0,b	;volatile
  3320                           
  3321                           ; BSR set to: 57
  3322                           
  3323                           ;MainCode.c: 309:     return;
  3324  00048C  0011               	retfie		f
  3325  00048E                     __end_of_canRecInt:
  3326                           	opt callstack 0
  3327                           
  3328 ;; *************** function _sendCANmessage *****************
  3329 ;; Defined at:
  3330 ;;		line 706 in file "MainCode.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;  id              2    0[COMRAM] int 
  3333 ;;  message         2    2[COMRAM] PTR int 
  3334 ;;		 -> canRecInt@message(16), 
  3335 ;;  length          2    4[COMRAM] int 
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;		None
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  1    wreg      void 
  3340 ;; Registers used:
  3341 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3347 ;;      Params:         6       0       0       0       0       0       0       0       0
  3348 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3349 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3350 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3351 ;;Total ram usage:        8 bytes
  3352 ;; Hardware stack levels used:    1
  3353 ;; This function calls:
  3354 ;;		Nothing
  3355 ;; This function is called by:
  3356 ;;		_canRecInt
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           	psect	text21
  3361  00059E                     __ptext21:
  3362                           	opt callstack 0
  3363  00059E                     _sendCANmessage:
  3364                           	opt callstack 28
  3365                           
  3366                           ;MainCode.c: 707:     TXB0CONbits.TXREQ = 0;
  3367                           
  3368                           ; BSR set to: 57
  3369                           ;incstack = 0
  3370  00059E  0137               	movlb	55	; () banked
  3371  0005A0  97E0               	bcf	224,3,b	;volatile
  3372                           
  3373                           ; BSR set to: 55
  3374                           ;MainCode.c: 709:     CANCONbits.WIN = 0b000;
  3375  0005A2  0EF1               	movlw	-15
  3376  0005A4  168F               	andwf	16271,f,c	;volatile
  3377                           
  3378                           ;MainCode.c: 711:     TXB0CONbits.TXPRI = 0b11;
  3379  0005A6  0E03               	movlw	3
  3380  0005A8  13E0               	iorwf	224,f,b	;volatile
  3381                           
  3382                           ; BSR set to: 55
  3383                           ;MainCode.c: 713:     TXB0D0 = message[0];
  3384  0005AA  0060  F097  FFD9   	movff	sendCANmessage@message,fsr2l
  3385  0005B0  0060  F09B  FFDA   	movff	sendCANmessage@message+1,fsr2h
  3386  0005B6  50DF               	movf	indf2,w,c
  3387  0005B8  6FE6               	movwf	230,b	;volatile
  3388                           
  3389                           ; BSR set to: 55
  3390                           ;MainCode.c: 714:     TXB0D1 = message[1];
  3391  0005BA  EE20 F002          	lfsr	2,2
  3392  0005BE  5025               	movf	sendCANmessage@message,w,c
  3393  0005C0  26D9               	addwf	fsr2l,f,c
  3394  0005C2  5026               	movf	sendCANmessage@message+1,w,c
  3395  0005C4  22DA               	addwfc	fsr2h,f,c
  3396  0005C6  50DF               	movf	indf2,w,c
  3397  0005C8  6FE7               	movwf	231,b	;volatile
  3398                           
  3399                           ; BSR set to: 55
  3400                           ;MainCode.c: 715:     TXB0D2 = message[2];
  3401  0005CA  EE20 F004          	lfsr	2,4
  3402  0005CE  5025               	movf	sendCANmessage@message,w,c
  3403  0005D0  26D9               	addwf	fsr2l,f,c
  3404  0005D2  5026               	movf	sendCANmessage@message+1,w,c
  3405  0005D4  22DA               	addwfc	fsr2h,f,c
  3406  0005D6  50DF               	movf	indf2,w,c
  3407  0005D8  6FE8               	movwf	232,b	;volatile
  3408                           
  3409                           ; BSR set to: 55
  3410                           ;MainCode.c: 716:     TXB0D3 = message[3];
  3411  0005DA  EE20 F006          	lfsr	2,6
  3412  0005DE  5025               	movf	sendCANmessage@message,w,c
  3413  0005E0  26D9               	addwf	fsr2l,f,c
  3414  0005E2  5026               	movf	sendCANmessage@message+1,w,c
  3415  0005E4  22DA               	addwfc	fsr2h,f,c
  3416  0005E6  50DF               	movf	indf2,w,c
  3417  0005E8  6FE9               	movwf	233,b	;volatile
  3418                           
  3419                           ; BSR set to: 55
  3420                           ;MainCode.c: 717:     TXB0D4 = message[4];
  3421  0005EA  EE20 F008          	lfsr	2,8
  3422  0005EE  5025               	movf	sendCANmessage@message,w,c
  3423  0005F0  26D9               	addwf	fsr2l,f,c
  3424  0005F2  5026               	movf	sendCANmessage@message+1,w,c
  3425  0005F4  22DA               	addwfc	fsr2h,f,c
  3426  0005F6  50DF               	movf	indf2,w,c
  3427  0005F8  6FEA               	movwf	234,b	;volatile
  3428                           
  3429                           ; BSR set to: 55
  3430                           ;MainCode.c: 718:     TXB0D5 = message[5];
  3431  0005FA  EE20 F00A          	lfsr	2,10
  3432  0005FE  5025               	movf	sendCANmessage@message,w,c
  3433  000600  26D9               	addwf	fsr2l,f,c
  3434  000602  5026               	movf	sendCANmessage@message+1,w,c
  3435  000604  22DA               	addwfc	fsr2h,f,c
  3436  000606  50DF               	movf	indf2,w,c
  3437  000608  6FEB               	movwf	235,b	;volatile
  3438                           
  3439                           ; BSR set to: 55
  3440                           ;MainCode.c: 719:     TXB0D6 = message[6];
  3441  00060A  EE20 F00C          	lfsr	2,12
  3442  00060E  5025               	movf	sendCANmessage@message,w,c
  3443  000610  26D9               	addwf	fsr2l,f,c
  3444  000612  5026               	movf	sendCANmessage@message+1,w,c
  3445  000614  22DA               	addwfc	fsr2h,f,c
  3446  000616  50DF               	movf	indf2,w,c
  3447  000618  6FEC               	movwf	236,b	;volatile
  3448                           
  3449                           ; BSR set to: 55
  3450                           ;MainCode.c: 720:     TXB0D7 = message[7];
  3451  00061A  EE20 F00E          	lfsr	2,14
  3452  00061E  5025               	movf	sendCANmessage@message,w,c
  3453  000620  26D9               	addwf	fsr2l,f,c
  3454  000622  5026               	movf	sendCANmessage@message+1,w,c
  3455  000624  22DA               	addwfc	fsr2h,f,c
  3456  000626  50DF               	movf	indf2,w,c
  3457  000628  6FED               	movwf	237,b	;volatile
  3458                           
  3459                           ;MainCode.c: 722:     TXB0SIDLbits.SID = id;
  3460  00062A  0060  F08C  F029   	movff	sendCANmessage@id,??_sendCANmessage
  3461  000630  3A29               	swapf	??_sendCANmessage,f,c
  3462  000632  4629               	rlncf	??_sendCANmessage,f,c
  3463  000634  51E2               	movf	226,w,b	;volatile
  3464  000636  1829               	xorwf	??_sendCANmessage,w,c
  3465  000638  0B1F               	andlw	-225
  3466  00063A  1829               	xorwf	??_sendCANmessage,w,c
  3467  00063C  6FE2               	movwf	226,b	;volatile
  3468                           
  3469                           ;MainCode.c: 723:     TXB0SIDH = id >> 3;
  3470  00063E  0060  F08C  F029   	movff	sendCANmessage@id,??_sendCANmessage
  3471  000644  0060  F090  F02A   	movff	sendCANmessage@id+1,??_sendCANmessage+1
  3472  00064A  342A               	rlcf	??_sendCANmessage+1,w,c
  3473  00064C  322A               	rrcf	??_sendCANmessage+1,f,c
  3474  00064E  3229               	rrcf	??_sendCANmessage,f,c
  3475  000650  342A               	rlcf	??_sendCANmessage+1,w,c
  3476  000652  322A               	rrcf	??_sendCANmessage+1,f,c
  3477  000654  3229               	rrcf	??_sendCANmessage,f,c
  3478  000656  342A               	rlcf	??_sendCANmessage+1,w,c
  3479  000658  322A               	rrcf	??_sendCANmessage+1,f,c
  3480  00065A  3229               	rrcf	??_sendCANmessage,f,c
  3481  00065C  5029               	movf	??_sendCANmessage,w,c
  3482  00065E  6FE1               	movwf	225,b	;volatile
  3483                           
  3484                           ;MainCode.c: 725:     TXB0DLCbits.DLC = length;
  3485  000660  51E5               	movf	229,w,b	;volatile
  3486  000662  1827               	xorwf	sendCANmessage@length,w,c
  3487  000664  0BF0               	andlw	-16
  3488  000666  1827               	xorwf	sendCANmessage@length,w,c
  3489  000668  6FE5               	movwf	229,b	;volatile
  3490                           
  3491                           ; BSR set to: 55
  3492                           ;MainCode.c: 726:     TXB0DLCbits.TXRTR = 0;
  3493  00066A  9DE5               	bcf	229,6,b	;volatile
  3494                           
  3495                           ; BSR set to: 55
  3496                           ;MainCode.c: 728:     TXB0CONbits.TXREQ = 1;
  3497  00066C  87E0               	bsf	224,3,b	;volatile
  3498  00066E                     i2l428:
  3499                           
  3500                           ; BSR set to: 55
  3501  00066E  B7E0               	btfsc	224,3,b	;volatile
  3502  000670  0012               	return	
  3503  000672  D7FD               	goto	i2l428
  3504  000674                     __end_of_sendCANmessage:
  3505                           	opt callstack 0
  3506                           
  3507                           ;
  3508                           ; Interrupt Vector Table @ 0x8
  3509                           ;
  3510                           
  3511                           	psect	ivt0x8
  3512  000008                     __pivt0x8:
  3513                           	opt callstack 0
  3514  000008                     ivt0x8_base:
  3515                           	opt callstack 0
  3516                           
  3517                           ; Vector 0 : SWINT
  3518  000008  0029               	dw	ivt0x8_undefint shr (0+2)
  3519                           
  3520                           ; Vector 1 : HLVD
  3521  00000A  0029               	dw	ivt0x8_undefint shr (0+2)
  3522                           
  3523                           ; Vector 2 : OSF
  3524  00000C  0029               	dw	ivt0x8_undefint shr (0+2)
  3525                           
  3526                           ; Vector 3 : CSW
  3527  00000E  0029               	dw	ivt0x8_undefint shr (0+2)
  3528                           
  3529                           ; Vector 4 : NVM
  3530  000010  0029               	dw	ivt0x8_undefint shr (0+2)
  3531                           
  3532                           ; Vector 5 : SCAN
  3533  000012  0029               	dw	ivt0x8_undefint shr (0+2)
  3534                           
  3535                           ; Vector 6 : CRC
  3536  000014  0029               	dw	ivt0x8_undefint shr (0+2)
  3537                           
  3538                           ; Vector 7 : IOC
  3539  000016  0029               	dw	ivt0x8_undefint shr (0+2)
  3540                           
  3541                           ; Vector 8 : INT0
  3542  000018  0029               	dw	ivt0x8_undefint shr (0+2)
  3543                           
  3544                           ; Vector 9 : ZCD
  3545  00001A  0029               	dw	ivt0x8_undefint shr (0+2)
  3546                           
  3547                           ; Vector 10 : AD
  3548  00001C  032F               	dw	_adcInt shr (0+2)
  3549                           
  3550                           ; Vector 11 : ADT
  3551  00001E  0029               	dw	ivt0x8_undefint shr (0+2)
  3552                           
  3553                           ; Vector 12 : CMP1
  3554  000020  0029               	dw	ivt0x8_undefint shr (0+2)
  3555                           
  3556                           ; Vector 13 : SMT1
  3557  000022  0029               	dw	ivt0x8_undefint shr (0+2)
  3558                           
  3559                           ; Vector 14 : SMT1PRA
  3560  000024  0029               	dw	ivt0x8_undefint shr (0+2)
  3561                           
  3562                           ; Vector 15 : SMT1PWA
  3563  000026  0029               	dw	ivt0x8_undefint shr (0+2)
  3564                           
  3565                           ; Vector 16 : DMA1SCNT
  3566  000028  0029               	dw	ivt0x8_undefint shr (0+2)
  3567                           
  3568                           ; Vector 17 : DMA1DCNT
  3569  00002A  0029               	dw	ivt0x8_undefint shr (0+2)
  3570                           
  3571                           ; Vector 18 : DMA1OR
  3572  00002C  0029               	dw	ivt0x8_undefint shr (0+2)
  3573                           
  3574                           ; Vector 19 : DMA1A
  3575  00002E  0029               	dw	ivt0x8_undefint shr (0+2)
  3576                           
  3577                           ; Vector 20 : SPI1RX
  3578  000030  0029               	dw	ivt0x8_undefint shr (0+2)
  3579                           
  3580                           ; Vector 21 : SPI1TX
  3581  000032  0029               	dw	ivt0x8_undefint shr (0+2)
  3582                           
  3583                           ; Vector 22 : SPI1
  3584  000034  0029               	dw	ivt0x8_undefint shr (0+2)
  3585                           
  3586                           ; Vector 23 : I2C1RX
  3587  000036  0029               	dw	ivt0x8_undefint shr (0+2)
  3588                           
  3589                           ; Vector 24 : I2C1TX
  3590  000038  0029               	dw	ivt0x8_undefint shr (0+2)
  3591                           
  3592                           ; Vector 25 : I2C1
  3593  00003A  0029               	dw	ivt0x8_undefint shr (0+2)
  3594                           
  3595                           ; Vector 26 : I2C1E
  3596  00003C  0029               	dw	ivt0x8_undefint shr (0+2)
  3597                           
  3598                           ; Vector 27 : U1RX
  3599  00003E  0029               	dw	ivt0x8_undefint shr (0+2)
  3600                           
  3601                           ; Vector 28 : U1TX
  3602  000040  0029               	dw	ivt0x8_undefint shr (0+2)
  3603                           
  3604                           ; Vector 29 : U1E
  3605  000042  0029               	dw	ivt0x8_undefint shr (0+2)
  3606                           
  3607                           ; Vector 30 : U1
  3608  000044  0029               	dw	ivt0x8_undefint shr (0+2)
  3609                           
  3610                           ; Vector 31 : TMR0
  3611  000046  0029               	dw	ivt0x8_undefint shr (0+2)
  3612                           
  3613                           ; Vector 32 : TMR1
  3614  000048  0029               	dw	ivt0x8_undefint shr (0+2)
  3615                           
  3616                           ; Vector 33 : TMR1G
  3617  00004A  0029               	dw	ivt0x8_undefint shr (0+2)
  3618                           
  3619                           ; Vector 34 : TMR2
  3620  00004C  0029               	dw	ivt0x8_undefint shr (0+2)
  3621                           
  3622                           ; Vector 35 : CCP1
  3623  00004E  0029               	dw	ivt0x8_undefint shr (0+2)
  3624                           
  3625                           ; Vector 36 : NCO1
  3626  000050  0029               	dw	ivt0x8_undefint shr (0+2)
  3627                           
  3628                           ; Vector 37 : CWG1
  3629  000052  0029               	dw	ivt0x8_undefint shr (0+2)
  3630                           
  3631                           ; Vector 38 : CLC1
  3632  000054  0029               	dw	ivt0x8_undefint shr (0+2)
  3633                           
  3634                           ; Vector 39 : INT1
  3635  000056  0029               	dw	ivt0x8_undefint shr (0+2)
  3636                           
  3637                           ; Vector 40 : RXB0IF
  3638  000058  00B1               	dw	_canRecInt shr (0+2)
  3639                           
  3640                           ; Vector 41 : RXB1IF
  3641  00005A  0029               	dw	ivt0x8_undefint shr (0+2)
  3642                           
  3643                           ; Vector 42 : TXB0IF
  3644  00005C  0029               	dw	ivt0x8_undefint shr (0+2)
  3645                           
  3646                           ; Vector 43 : TXB1IF
  3647  00005E  0029               	dw	ivt0x8_undefint shr (0+2)
  3648                           
  3649                           ; Vector 44 : TXB2IF
  3650  000060  0029               	dw	ivt0x8_undefint shr (0+2)
  3651                           
  3652                           ; Vector 45 : ERRIF
  3653  000062  0029               	dw	ivt0x8_undefint shr (0+2)
  3654                           
  3655                           ; Vector 46 : WAKIF
  3656  000064  0029               	dw	ivt0x8_undefint shr (0+2)
  3657                           
  3658                           ; Vector 47 : IRXIF
  3659  000066  0029               	dw	ivt0x8_undefint shr (0+2)
  3660                           
  3661                           ; Vector 48 : CMP2
  3662  000068  0029               	dw	ivt0x8_undefint shr (0+2)
  3663                           
  3664                           ; Vector 49 : SMT2
  3665  00006A  0029               	dw	ivt0x8_undefint shr (0+2)
  3666                           
  3667                           ; Vector 50 : SMT2PRA
  3668  00006C  0029               	dw	ivt0x8_undefint shr (0+2)
  3669                           
  3670                           ; Vector 51 : SMT2PWA
  3671  00006E  0029               	dw	ivt0x8_undefint shr (0+2)
  3672                           
  3673                           ; Vector 52 : DMA2SCNT
  3674  000070  0029               	dw	ivt0x8_undefint shr (0+2)
  3675                           
  3676                           ; Vector 53 : DMA2DCNT
  3677  000072  0029               	dw	ivt0x8_undefint shr (0+2)
  3678                           
  3679                           ; Vector 54 : DMA2OR
  3680  000074  0029               	dw	ivt0x8_undefint shr (0+2)
  3681                           
  3682                           ; Vector 55 : DMA2A
  3683  000076  0029               	dw	ivt0x8_undefint shr (0+2)
  3684                           
  3685                           ; Vector 56 : I2C2RX
  3686  000078  0029               	dw	ivt0x8_undefint shr (0+2)
  3687                           
  3688                           ; Vector 57 : I2C2TX
  3689  00007A  0029               	dw	ivt0x8_undefint shr (0+2)
  3690                           
  3691                           ; Vector 58 : I2C2
  3692  00007C  0029               	dw	ivt0x8_undefint shr (0+2)
  3693                           
  3694                           ; Vector 59 : I2C2E
  3695  00007E  0029               	dw	ivt0x8_undefint shr (0+2)
  3696                           
  3697                           ; Vector 60 : U2RX
  3698  000080  0029               	dw	ivt0x8_undefint shr (0+2)
  3699                           
  3700                           ; Vector 61 : U2TX
  3701  000082  0029               	dw	ivt0x8_undefint shr (0+2)
  3702                           
  3703                           ; Vector 62 : U2E
  3704  000084  0029               	dw	ivt0x8_undefint shr (0+2)
  3705                           
  3706                           ; Vector 63 : U2
  3707  000086  0029               	dw	ivt0x8_undefint shr (0+2)
  3708                           
  3709                           ; Vector 64 : TMR3
  3710  000088  0029               	dw	ivt0x8_undefint shr (0+2)
  3711                           
  3712                           ; Vector 65 : TMR3G
  3713  00008A  0029               	dw	ivt0x8_undefint shr (0+2)
  3714                           
  3715                           ; Vector 66 : TMR4
  3716  00008C  0029               	dw	ivt0x8_undefint shr (0+2)
  3717                           
  3718                           ; Vector 67 : CCP2
  3719  00008E  0029               	dw	ivt0x8_undefint shr (0+2)
  3720                           
  3721                           ; Vector 68 : CWG2
  3722  000090  0029               	dw	ivt0x8_undefint shr (0+2)
  3723                           
  3724                           ; Vector 69 : CLC2
  3725  000092  0029               	dw	ivt0x8_undefint shr (0+2)
  3726                           
  3727                           ; Vector 70 : INT2
  3728  000094  0029               	dw	ivt0x8_undefint shr (0+2)
  3729                           
  3730                           ; Vector 71 : TMR5
  3731  000096  0029               	dw	ivt0x8_undefint shr (0+2)
  3732                           
  3733                           ; Vector 72 : TMR5G
  3734  000098  0029               	dw	ivt0x8_undefint shr (0+2)
  3735                           
  3736                           ; Vector 73 : TMR6
  3737  00009A  0029               	dw	ivt0x8_undefint shr (0+2)
  3738                           
  3739                           ; Vector 74 : CCP3
  3740  00009C  0029               	dw	ivt0x8_undefint shr (0+2)
  3741                           
  3742                           ; Vector 75 : CWG3
  3743  00009E  0029               	dw	ivt0x8_undefint shr (0+2)
  3744                           
  3745                           ; Vector 76 : CLC3
  3746  0000A0  0029               	dw	ivt0x8_undefint shr (0+2)
  3747                           
  3748                           ; Vector 77 : CCP4
  3749  0000A2  0029               	dw	ivt0x8_undefint shr (0+2)
  3750                           
  3751                           ; Vector 78 : CLC4
  3752  0000A4  0029               	dw	ivt0x8_undefint shr (0+2)
  3753  0000A6                     ivt0x8_undefint:
  3754                           	opt callstack 0
  3755  0000A6  00FF               	reset	
  3756  0000                     
  3757                           	psect	rparam
  3758  0000                     tosu	equ	0x3FFF
  3759                           tosh	equ	0x3FFE
  3760                           tosl	equ	0x3FFD
  3761                           stkptr	equ	0x3FFC
  3762                           pclatu	equ	0x3FFB
  3763                           pclath	equ	0x3FFA
  3764                           pcl	equ	0x3FF9
  3765                           tblptru	equ	0x3FF8
  3766                           tblptrh	equ	0x3FF7
  3767                           tblptrl	equ	0x3FF6
  3768                           tablat	equ	0x3FF5
  3769                           prodh	equ	0x3FF4
  3770                           prodl	equ	0x3FF3
  3771                           indf0	equ	0x3FEF
  3772                           postinc0	equ	0x3FEE
  3773                           postdec0	equ	0x3FED
  3774                           preinc0	equ	0x3FEC
  3775                           plusw0	equ	0x3FEB
  3776                           fsr0h	equ	0x3FEA
  3777                           fsr0l	equ	0x3FE9
  3778                           wreg	equ	0x3FE8
  3779                           indf1	equ	0x3FE7
  3780                           postinc1	equ	0x3FE6
  3781                           postdec1	equ	0x3FE5
  3782                           preinc1	equ	0x3FE4
  3783                           plusw1	equ	0x3FE3
  3784                           fsr1h	equ	0x3FE2
  3785                           fsr1l	equ	0x3FE1
  3786                           bsr	equ	0x3FE0
  3787                           indf2	equ	0x3FDF
  3788                           postinc2	equ	0x3FDE
  3789                           postdec2	equ	0x3FDD
  3790                           preinc2	equ	0x3FDC
  3791                           plusw2	equ	0x3FDB
  3792                           fsr2h	equ	0x3FDA
  3793                           fsr2l	equ	0x3FD9
  3794                           status	equ	0x3FD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         34
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     34      68
    BANK0           160      6       6
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sendCANmessage@message	PTR int  size(2) Largest target is 16
		 -> canRecInt@message(COMRAM[16]), 

    readI2C@conOK	PTR int  size(2) Largest target is 2
		 -> con_perimeter(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_readI2C

Critical Paths under _adcInt in COMRAM

    None.

Critical Paths under _canRecInt in COMRAM

    _canRecInt->_sendCANmessage

Critical Paths under _main in BANK0

    None.

Critical Paths under _adcInt in BANK0

    None.

Critical Paths under _canRecInt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _adcInt in BANK1

    None.

Critical Paths under _canRecInt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _adcInt in BANK2

    None.

Critical Paths under _canRecInt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _adcInt in BANK3

    None.

Critical Paths under _canRecInt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _adcInt in BANK4

    None.

Critical Paths under _canRecInt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _adcInt in BANK5

    None.

Critical Paths under _canRecInt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _adcInt in BANK6

    None.

Critical Paths under _canRecInt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _adcInt in BANK7

    None.

Critical Paths under _canRecInt in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    1845
                                              0 BANK0      6     6      0
                       _getDistance1
                       _getDistance2
                       _getDistance3
                       _getDistance4
                       _getDistance5
                            _initADC
                            _initCAN
                         _initHCSR04
                            _initI2C
                            _readADC
                            _readI2C
                           _wait10US
                            _wait2US
                     _waitForSensor1
                     _waitForSensor2
                     _waitForSensor3
                     _waitForSensor4
                     _waitForSensor5
 ---------------------------------------------------------------------------------
 (1) _waitForSensor5                                       6     4      2      68
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _waitForSensor4                                       6     4      2      68
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _waitForSensor3                                       6     4      2      68
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _waitForSensor2                                       6     4      2      68
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _waitForSensor1                                       6     4      2      68
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _wait2US                                              4     4      0      46
                                             26 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _wait10US                                             4     4      0      46
                                             26 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _readI2C                                              8     6      2     523
                                             26 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _readADC                                              4     2      2     242
                                             26 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _initI2C                                              2     2      0      23
                                             26 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initHCSR04                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initCAN                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getDistance5                                         6     4      2      99
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _getDistance4                                         6     4      2      99
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _getDistance3                                         6     4      2      99
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _getDistance2                                         6     4      2      99
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _getDistance1                                         6     4      2      99
                                             26 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _adcInt                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _canRecInt                                           18    18      0    2845
                                              8 COMRAM    18    18      0
                     _sendCANmessage
 ---------------------------------------------------------------------------------
 (3) _sendCANmessage                                       8     2      6    2294
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _getDistance1
   _getDistance2
   _getDistance3
   _getDistance4
   _getDistance5
   _initADC
   _initCAN
   _initHCSR04
   _initI2C
   _readADC
   _readI2C
   _wait10US
   _wait2US
   _waitForSensor1
   _waitForSensor2
   _waitForSensor3
   _waitForSensor4
   _waitForSensor5

 _adcInt (ROOT)

 _canRecInt (ROOT)
   _sendCANmessage

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      20        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      6       6       5        3.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     22      44       1       71.6%
BITSFR_9             0      0       0     200        0.0%
SFR_9                0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4A       3        0.0%
DATA                 0      0      4A      21        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Aug 08 23:29:58 2020

               __CFG_CP$OFF 000000                 __CFG_LVP$ON 000000                         l404 09BA  
                       l414 0C72                         l409 0C3C                         l283 04EE  
                       l275 04A8                         l364 0B52                         l437 0C14  
                       l374 0AEC                         l384 0A86                         l289 0536  
                       l394 0A20                         _GIE 01FE97                         wreg 003FE8  
             __CFG_BBEN$OFF 000000                __CFG_ZCD$OFF 000000                        l2412 0B0C  
                      l2500 07DE                        l2414 0B26                        l2254 070E  
                      l2406 0958                        l2430 08C4                        l2502 07F8  
                      l2520 09DA                        l2280 0756                        l2450 0AC0  
                      l2522 09F4                        l2610 0508                        l2442 08F2  
                      l2514 0826                        l2620 0546                        l2428 08AA  
                      l2630 0576                        l2622 054A                        l2550 07C0  
                      l2448 0AA6                        l2608 0504                        l2392 0910  
                      l2464 0844                        l2536 0778                        l2618 053C  
                      l2394 092A                        l2466 085E                        l2538 0792  
                      l2484 0A40                        l2556 0974                        l2572 0BFE  
                      l2486 0A5A                        l2558 098E                        l2478 088C  
                      l2718 018C                        l2662 00CE                        l2576 0C10  
                      l2594 04BE                        l2738 01D2                        l2596 04C2  
                      l2758 0218                        l2678 0100                        l2698 0146  
                      u1110 069A                        u1120 069C                        u1210 0B3A  
                      u1130 06D6                        u1300 0872                        u1150 0C60  
                      u1160 0C96                        u1240 08D8                        u1145 06D8  
                      u1330 0A6E                        u1180 093E                        u1420 07A6  
                      u1270 0AD4                        u1520 04D6                        u1360 080C  
                      u1450 09A2                        u1390 0A08                        u1550 051C  
                      u1580 055E               __CFG_FCMEN$ON 000000                        _main 00AC  
                      fsr2h 003FDA                        indf2 003FDF                        fsr2l 003FD9  
                      start 00A8               __CFG_CSWEN$ON 000000                ___param_bank 000000  
                     ?_main 0023               __CFG_WDTE$OFF 000000                       _T1CLK 003FB5  
            __CFG_DEBUG$OFF 000000                       i2l260 0488                       i2l271 041A  
                     i2l263 0486                       i2l264 02F0                       i2l265 0326  
                     i2l428 066E                       _TMR1H 003FB1                       _TMR1L 003FB0  
               readI2C@data 0040               __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000  
             __CFG_WRTD$OFF 000000             __end_of_initI2C 06FA             __end_of_initADC 0BEC  
           __end_of_initCAN 0764             __end_of_readI2C 059E             __end_of_readADC 0C2C  
        __CFG_MCLRE$EXTMCLR 000000             __end_of_wait2US 0C62        sendCANmessage@length 0027  
                     status 003FD8        __end_of_getDistance1 0B60        __end_of_getDistance2 0AFA  
      __end_of_getDistance3 0A94        __end_of_getDistance4 0A2E        __end_of_getDistance5 09C8  
         getDistance1@ticks 0041           getDistance2@ticks 0041           getDistance3@ticks 0041  
         getDistance4@ticks 0041           getDistance5@ticks 0041             __initialization 0C98  
              __end_of_main 02C4              __CFG_SAFEN$OFF 000000                      ??_main 0060  
            __CFG_PR1WAY$ON 000000               __activetblptr 000002              __CFG_MVECEN$ON 000000  
          ??_sendCANmessage 0029                initI2C@state 003D                      _ADRESH 003EF0  
                    _ADRESL 003EEF                      _RC3I2C 003A6A                      _RC4I2C 003A6B  
                    _RB2PPS 003A0A                      _RC3PPS 003A13                      _RC4PPS 003A14  
                    i2l2202 03F4                      i2l2212 0440              __CFG_WDTCCS$SC 000000  
                    i2l2170 02CA                      i2l2190 03A8                      i2l2182 0364  
                    i2l2174 0308                      i2l2184 0382                      i2l2178 0340  
                    i2l2196 03CE                      _RXB0D0 003F86                      _TXB0D0 0037E6  
                    _TXB0D1 0037E7                      _TXB0D2 0037E8                      _TXB0D3 0037E9  
                    _TXB0D4 0037EA                      _TXB0D5 0037EB                      _TXB0D6 0037EC  
                    _TXB0D7 0037ED              __CFG_XINST$OFF 000000                readI2C@conOK 003D  
                    _adcInt 0CBC                readI2C@tmpOK 0041              __CFG_STVREN$ON 000000  
                    clear_0 0C9E            __end_of_wait10US 0C98                   ??_initI2C 003D  
                 ??_initADC 003D                   ??_initCAN 003D                   ??_readI2C 003F  
                 ??_readADC 003F                   ??_wait2US 003D       sendCANmessage@message 0025  
                    tblptru 003FF8     __size_of_waitForSensor1 0066     __size_of_waitForSensor2 0066  
   __size_of_waitForSensor3 0066     __size_of_waitForSensor4 0066     __size_of_waitForSensor5 0066  
                __accesstop 0060     __end_of__initialization 0CB0               ___rparam_used 000001  
        __size_of_canRecInt 01CA              __pcstackCOMRAM 0023              ivt0x8_undefint 00A6  
              _ADCvalueLow0 001D                _ADCvalueLow1 0019       __size_of_getDistance1 0066  
     __size_of_getDistance2 0066       __size_of_getDistance3 0066       __size_of_getDistance4 0066  
     __size_of_getDistance5 0066             __CFG_IVT1WAY$ON 000000                     IVTBASEH 003FD6  
                   IVTBASEL 003FD5                     IVTBASEU 003FD7                     ?_adcInt 0023  
                   _I2C1CLK 003D7B                     _I2C1CNT 003D6C                     _I2C1ERR 003D76  
                   _I2C1PIR 003D79                     _I2C1RXB 003D6A                     _I2C1TXB 003D6B  
           __CFG_PPS1WAY$ON 000000                _getDistance1 0AFA                _getDistance2 0A94  
              _getDistance3 0A2E                _getDistance4 09C8                _getDistance5 0962  
       __CFG_PWRTS$PWRT_OFF 000000           __end_of_canRecInt 048E                     _OSCCON1 0039D9  
                   _PPSLOCK 003ABF                   _ADCLKbits 003EFF                  _initHCSR04 0B60  
                 _ADPCHbits 003EF1                   ?_wait10US 0023                   _ADREFbits 003EFD  
                   __Hparam 0000                     __Lparam 0000  __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
            _I2C1SDAPPSbits 003AE4             __size_of_adcInt 0002                     __pcinit 0C98  
                   __ramtop 0800                     __ptext0 00AC                     __ptext1 0764  
                   __ptext2 07CA                     __ptext3 0830                     __ptext4 0896  
                   __ptext5 08FC                     __ptext6 0C2C                     __ptext7 0C62  
                   __ptext8 048E                     __ptext9 0BEC              _I2C1SCLPPSbits 003AE3  
                   _initI2C 0674                     _initADC 0BA6                     _initCAN 06FA  
           __CFG_WRTAPP$OFF 000000                     _readI2C 048E                     _readADC 0BEC  
                 _T1CONbits 003FB2                 _I2C1ERRbits 003D76                     _wait2US 0C2C  
               _I2C1PIEbits 003D7A             __CFG_WRTSAF$OFF 000000              _waitForSensor1 08FC  
            _waitForSensor2 0896              _waitForSensor3 0830              _waitForSensor4 07CA  
            _waitForSensor5 0764                 _I2C1PIRbits 003D79        end_of_initialization 0CB0  
             __Lmediumconst 0000                  ??_wait10US 003D                     postdec2 003FDD  
                   postinc0 003FEE                     postinc2 003FDE       __CFG_WDTCPS$WDTCPS_31 000000  
                 _PORTAbits 003FCA                   _PORTBbits 003FCB                   _PORTCbits 003FCC  
            _sign_perimeter 0001      __end_of_waitForSensor1 0962      __end_of_waitForSensor2 08FC  
    __end_of_waitForSensor3 0896      __end_of_waitForSensor4 0830      __end_of_waitForSensor5 07CA  
                 _TRISAbits 003FC2                   _TRISBbits 003FC3                   _TRISCbits 003FC4  
          sendCANmessage@id 0023                 ?_initHCSR04 0023              __end_of_adcInt 0CBE  
                readI2C@reg 003F             ?_waitForSensor1 003D             ?_waitForSensor2 003D  
           ?_waitForSensor3 003D             ?_waitForSensor4 003D             ?_waitForSensor5 003D  
       start_initialization 0C98               _ADCvalueHigh0 001F               _ADCvalueHigh1 001B  
                ivt0x8_base 0008                 _CANSTATbits 003F8E     __size_of_sendCANmessage 00D6  
          __CFG_LPBOREN$OFF 000000                    ??_adcInt 0023         __size_of_initHCSR04 0046  
               __pbssCOMRAM 0001               __pcstackBANK0 0060                 _BRGCON1bits 003703  
                 _canRecInt 02C4           __size_of_wait10US 0036                    _I2C1ADB1 003D6E  
                  _I2C1CON0 003D73                    _I2C1CON1 003D74                    _I2C1CON2 003D75  
                 _distance1 0017                   _distance2 0015                   _distance3 0013  
                 _distance4 0011                   _distance5 000F                    ?_initI2C 0023  
                  ?_initADC 0023                    ?_initCAN 0023                    ?_readI2C 003D  
                  ?_readADC 003D      __CFG_BBSIZE$BBSIZE_512 000000                    ?_wait2US 0023  
                ?_canRecInt 0023                    _LATCbits 003FBC                   _perimeter 0003  
                  _PIE5bits 003995         __CFG_BORV$VBOR_2P45 000000               _I2C1STAT0bits 003D77  
             _I2C1STAT1bits 003D78                    _PIR5bits 0039A5                    _RXF0SIDH 0037A0  
                  _RXF1SIDH 0037A4                    _TXB0SIDH 0037E1                    _RXM0SIDH 0037B8  
                  _RXM1SIDH 0037BC                  _ADCON0bits 003EF8                   main@temp0 0062  
                 main@temp1 0064                 _INTCON0bits 003FD2                   readADC@ch 003D  
                _CANCONbits 003F8F                ??_initHCSR04 003D              _sendCANmessage 059E  
                  __Hrparam 0000             _valid_distance1 000D             _valid_distance2 000B  
           _valid_distance3 0009             _valid_distance4 0007             _valid_distance5 0005  
                  __Lrparam 0000          __CFG_BOREN$SBORDIS 000000              readI2C@counter 0043  
          ??_waitForSensor1 003F            ??_waitForSensor2 003F            ??_waitForSensor3 003F  
          ??_waitForSensor4 003F            ??_waitForSensor5 003F             waitForSensor1@i 0041  
           waitForSensor2@i 0041             waitForSensor3@i 0041             waitForSensor4@i 0041  
           waitForSensor5@i 0041                  _ANSELAbits 003A40                  _ANSELBbits 003A50  
                _ANSELCbits 003A60                   wait10US@i 003D          __end_of_initHCSR04 0BA6  
          __size_of_initI2C 0086            __size_of_initADC 0046            __size_of_initCAN 006A  
          __size_of_readI2C 0110            __size_of_readADC 0040                _RXF0SIDLbits 0037A1  
              _I2C1CON0bits 003D73                    __pivt0x8 0008                _RXF1SIDLbits 0037A5  
          __size_of_wait2US 0036                    __ptext10 0674                    __ptext11 0B60  
                  __ptext20 02C4                    __ptext12 06FA                    __ptext21 059E  
                  __ptext13 0BA6                    __ptext14 0962                    __ptext15 09C8  
                  __ptext16 0A2E                    __ptext17 0A94                    __ptext18 0AFA  
                  __ptext19 0CBC                 ??_canRecInt 002B      __end_of_sendCANmessage 0674  
             __size_of_main 0218                    _wait10US 0C62        __CFG_WDTCWS$WDTCWS_7 000000  
              _TXB0SIDLbits 0037E2                  _ODCONCbits 003A62               ?_getDistance1 003D  
             ?_getDistance2 003D               ?_getDistance3 003D               ?_getDistance4 003D  
             ?_getDistance5 003D                _RXM0SIDLbits 0037B9                 _RXB0CONbits 003F80  
               _RXB1CONbits 0037F0                _RXM1SIDLbits 0037BD                  _FVRCONbits 003EC1  
          canRecInt@message 002D                    intlevel2 0000               _con_perimeter 0021  
                  wait2US@i 003D             ?_sendCANmessage 0023                 _TXB0DLCbits 0037E5  
         __CFG_CLKOUTEN$OFF 000000                 _SLRCONCbits 003A63                 _TXB0CONbits 0037E0  
               _PPSLOCKbits 003ABF              ??_getDistance1 003F              ??_getDistance2 003F  
            ??_getDistance3 003F              ??_getDistance4 003F              ??_getDistance5 003F  
